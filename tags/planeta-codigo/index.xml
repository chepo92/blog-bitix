<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://picodotdev.github.io/blog-bitix/tags/planeta-codigo/</id>
    <title type="text">Blog Bitix</title>
    <subtitle>Recent content on Blog Bitix</subtitle>
    <updated>2018-06-23T22:30:00+02:00</updated>
    <author><name>pico.dev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix//assets/images/logotipos/hugo.png</icon>
    <logo>https://picodotdev.github.io/blog-bitix//assets/images/logotipos/hugo.png</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/06/decidido-a-comprar-un-intel-nuc-bean-canyon-entre-las-opciones-que-he-evaluado/</id>
        <title>Decidido a comprar un Intel NUC Bean Canyon entre las opciones que he evaluado</title>        
        <updated>2018-06-24T21:30:00+02:00</updated>
        <published>2018-06-23T22:30:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/06/decidido-a-comprar-un-intel-nuc-bean-canyon-entre-las-opciones-que-he-evaluado/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/intel.svg&#34; class=&#34;right &#34; width=&#34;300&#34; alt=&#34;Intel&#34; title=&#34;Intel&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;El ordenador portátil que tenía sigue siendo perfectamente útil, sin embargo, en algunos casos concretos de mi uso la cantidad de memoria que tenía se me estaba quedando corta y cuando me pasa esto suelo aprovechar si alguien de mi entorno necesita ordenador traspasarlo y yo comprarme otro nuevo.&lt;/p&gt;

&lt;p&gt;El ordenador que tenía era un &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2012/12/desempaquetado-sony-vaio-e-14p.html&#34;&gt;Sony VAIO de finales del 2012&lt;/a&gt; con un procesador &lt;a href=&#34;https://ark.intel.com/es-es/products/65700/Intel-Core-i3-3110M-Processor-3M-Cache-2_40-GHz&#34;&gt;Intel i3 3210M&lt;/a&gt; con gráfica integrada &lt;a href=&#34;https://www.notebookcheck.org/Intel-HD-Graphics-4000.81383.0.html&#34;&gt;HD 4000&lt;/a&gt;, 8 GiB de memoria, un disco duro de estado sólido Samsung 840 EVO de 256 GiB con interfaz SATA y una pantalla de resolución 1600x900. Durante todo este tiempo me ha funcionado a la perfección, incluso con su gráfica me fue suficiente para un entorno de escritorio &lt;a href=&#34;https://www.gnome.org/&#34;&gt;GNOME&lt;/a&gt; con &lt;a href=&#34;https://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;/&lt;a href=&#34;https://www.linux.com/&#34;&gt;Linux&lt;/a&gt; y he acabado muy contento con la marca &lt;a href=&#34;https://www.sony.es/&#34;&gt;Sony&lt;/a&gt; al contrario de mi anterior portátil &lt;a href=&#34;http://www.dell.es/&#34;&gt;Dell&lt;/a&gt; XPS 1530 de la que no pienso comprar nunca nada de esta marca, quizá tuve mala suerte pero el portátil Dell no fue barato, no acabé contento con la calidad del producto pasado el encantamiento inicial y al final acabó totalmente muerto sin ni siquiera encenderse.&lt;/p&gt;

&lt;p&gt;Con lo que desde hace unos meses he empezado a barajar &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/04/intentando-elegir-portatil-nuc-o-mini-itx-para-comprar-nuevo-equipo/&#34;&gt;opciones para comprar equipo&lt;/a&gt; con los requisitos que tengo de ser lo más pequeño posible, silencioso, con 32 GiB de memoria, procesador con mínimo 4 cores y 8 hilos, no necesito tarjeta gráfica dedicada ya que no jugaré a juegos o una integrada con bajar calidad de detalles me servirá a modo ocasional. También quería una pantalla externa de 25&amp;rdquo; o 27&amp;rdquo; con resolución de 2K para mayor comodidad y evitar problemas por estar con la cabeza medio agachada durante bastante tiempo. Habiendo pasado 5 años desde mi anterior portátil Sony quiero que el ordenador sea un salto significativo en lo que tenía por eso el requerimiento de los 4 cores, los 32 GiB de memoria y la pantalla 2K. La memoria a pesar del caro precio de la DDR4 en el momento de este artículo. El SSD es la mejor inversión para mejorar el rendimiento que uno puede hacer, más que el procesador. El SSD probablemente elija uno en formato M.2 con interfaz NVMe que tienen una tasa de transferencia 3 veces superior a los SSD con interfaz SATA que ya son rápidos, los NVMe son algo más caros pero no mucho más.&lt;/p&gt;

&lt;p&gt;He barajado varias opciones principalmente ordenadores en factor de forma pequeños como los &lt;a href=&#34;https://en.wikipedia.org/wiki/Next_Unit_of_Computing&#34;&gt;Intel NUC&lt;/a&gt;, &lt;a href=&#34;http://es.gigabyte.com/products/select/desktop_platform/Mini-PcBarebone&#34;&gt;Gigabyte Brix&lt;/a&gt;, &lt;a href=&#34;https://www.zotac.com/es/product/mini_pcs/overview&#34;&gt;Zotac&lt;/a&gt;, &lt;a href=&#34;https://www.msi.com/Desktops/#?tag=Pro-Series&#34;&gt;MSI Cubi&lt;/a&gt;, &lt;a href=&#34;https://slimbook.es/one-minipc-potente&#34;&gt;Slimbook ONE&lt;/a&gt;, &lt;a href=&#34;https://slimbook.es/pro-ultrabook-13-aluminio&#34;&gt;Slimbook PRO2&lt;/a&gt; o &lt;a href=&#34;https://www.amd.com/es/ryzen&#34;&gt;AMD Ryzen&lt;/a&gt; montando un &lt;a href=&#34;https://es.wikipedia.org/wiki/Mini-ITX&#34;&gt;mini-ITX&lt;/a&gt;. Ya estoy casi decidido a lo que compraré y no quiero esperar mucho más a tener equipo propio de cuando se comercialicen y aunque estoy aguantando con un Mac del trabajo comentando &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/03/tu-con-mac-yo-con-mi-gnu-linux/&#34;&gt;Tu con tu macOS yo con mi GNU/Linux&lt;/a&gt;. Será con mucha probabilidad un Intel NUC Bean Canyon que se lanzarán en la segunda mitad del 2018.&lt;/p&gt;

&lt;p&gt;A pesar de saber que todos los procesadores Intel de la última década está afectados por los &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/01/explicacion-del-fallo-de-seguridad-meltdown-y-spectre-en-los-microprocesadores-intel/&#34;&gt;importantes problemas de seguridad Meltdown y Spectre&lt;/a&gt; que se están mitigando por software, de momento no se ha descubierto una forma de aprovecharlos pero quizá en un futuro se pueda y afecte de forma importante al rendimiento para corregirlos si es que se puede. Pero es que el resto de opciones he ido descartando por otros motivos.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
        &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/329/meltdown.svg&#34; alt=&#34;Meltdown&#34; title=&#34;Meltdown&#34; width=&#34;200&#34; height=&#34;200&#34;/&gt;
        &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/329/spectre.svg&#34; alt=&#34;Spectre&#34; title=&#34;Spectre&#34; width=&#34;200&#34; height=&#34;200&#34;/&gt;
        &lt;figcaption&gt;Logotipos de Meltdown y Spectre&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;El precio que calculo tendrá el Intel NUC Bean Canyon con procesador &lt;a href=&#34;https://ark.intel.com/es-es/products/124967/Intel-Core-i5-8250U-Processor-6M-Cache-up-to-3_40-GHz&#34;&gt;Intel i5 8250U&lt;/a&gt; (4 núcleos, 8 hilos, 6 MiB cache) estará en el momento de su salida entre los 350 y 450€ sin incluir la memoria y el SSD, respecto al modelo con el &lt;a href=&#34;https://ark.intel.com/es-es/products/95442/Intel-Core-i3-7100U-Processor-3M-Cache-2_40-GHz&#34;&gt;Intel i3 7100U&lt;/a&gt; (2 núcleos, 4 hilos, 3 MiB cache) que cuesta unos 250€ se puede dudar si esos dos núcleos adicionales y 3 MiB de caché más en el procesador merecen la pena la diferencia de precio. En mi caso estoy estoy dispuesto a pagarlo queriendo tener algo significativamente con mejor rendimiento teórico que lo que tenía.&lt;/p&gt;

&lt;p&gt;He revisado algunos análisis de los NUC y me han gustado, en este por ejemplo se explica cómo instalar la memoria, el SSD, como es la BIOS/UEFI y sus opciones de configuración como por ejemplo el &lt;em&gt;ring&lt;/em&gt; que puede mostrar la actividad del SSD y se pueden personalizar los colores, también muestra el rendimiento en algunos juegos. Y en otro la gráfica HD 620 es suficiente para jugar a Diablo 3 a 30 fotogramas por segundo en un resolución de 1080p bajando detalles, esta gráfica integrada equivale a una dedicada NVIDIA 920 que no está mal para un jugador ocasional si no importa jugar bajando algunos detalles de calidad. En GNU/Linux es posible jugar a juegos destinados a Windows con &lt;a href=&#34;https://www.playonlinux.com/en/&#34;&gt;PlayOnLinux&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;media media-video&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe width=&#34;640&#34; height=&#34;360&#34; src=&#34;https://www.youtube.com/embed/GBCI3Xg3b9g&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;div class=&#34;media media-video&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe width=&#34;640&#34; height=&#34;360&#34; src=&#34;https://www.youtube.com/embed/su06vU8X1V8&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;El uso que le daré es el de programación, virtualización, contenedores &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;, navegación, ofimática, leer PDF, tal vez algún juego ocasional, quizá Diablo 3 si pudiese, y usando GNU/Linux con la distribución &lt;a href=&#34;https://www.archlinux.org/&#34;&gt;Arch Linux&lt;/a&gt;. En un futuro lo quiero como equipo servidor dedicado personal con por ejemplo &lt;a href=&#34;https://nextcloud.com/&#34;&gt;Nextcloud&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Los Gigabyte Brix ya hay algunos modelos con los Intel i5 8250U a un precio de unos 440€, sin embargo, no me gusta que no tienen luz indicador de actividad de SSD y creo que su BIOS/UEFI es en modo texto. La luz de actividad de SSD me parece importante para saber si en algún momento el ordenador se queda bloqueado o por algún tipo de problema lee, o peor escribe, constantemente al disco duro cuando no debería. Los Zotac están dotados de una buena cantidad de puertos USB, incluso algunos tiene dos conexiones de red pero son algo caros y la mayoría de sus modelos están orientados a &lt;em&gt;gamers&lt;/em&gt;, no son fáciles de encontrar ni siquiera en &lt;a href=&#34;https://amzn.to/2flFhHA&#34;&gt;Amazon&lt;/a&gt; ni en &lt;a href=&#34;https://www.pccomponentes.com/&#34;&gt;PC Componentes&lt;/a&gt; que es donde compraré finalmente el equipo. De MSI Cubi no hay muchos modelos y aún no he visto ninguno anunciado con un Intel de 4 núcleos. Los Slimbook ONE me gustaban pero los modelos con los Intel de 4 núcleos solo tienen una ranura de memoria, se les pueden instalar 32 GiB&amp;hellip; cuando haya módulos de memoria de 32 GiB, ahora me tendría que conformar con 16 GiB.&lt;/p&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07D8ZK6QB&amp;linkId=84f61ad5974ea5bb1b1c0d644818349a&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01N6SG8DP&amp;linkId=d2208cc6633acfc885c4f2f7ef94c7a0&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07CZ6GMRB&amp;linkId=6c7ae73f4dc54a1da316d1b5292ca18d&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B019FRBHZ0&amp;linkId=6353b999569a8b0acfdc24bb1a9e4532&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07CGGNX7S&amp;linkId=f2af5cb1f93ced34794cb7a11675b810&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;También he seguido los NUC con un Intel Core i3 7100U sin embargo tiene solo 2 cores y 4 hilos con 3 MiB de memoria será algo mejor que el Intel i3 3210M que tenía pero no me parece una mejora significativa habiendo pasado 5 años y a pesar de que el 7100U está fabricado a 14 nanómetros y el 3210M a 22 nanómetros, los NUC con &lt;a href=&#34;https://ark.intel.com/es/products/124968/Intel-Core-i7-8650U-Processor-8M-Cache-up-to-4_20-GHz&#34;&gt;Intel i7 8650U&lt;/a&gt; son más caros, sobre los 580€ y teniendo en cuenta que la memoria y SSD hay que comprarlos aparte. Los NUC más económicos sobre los 175€ con &lt;a href=&#34;https://ark.intel.com/es/products/128984/Intel-Pentium-Silver-Processor-J5005-4M-Cache-up-to-2_80-GHz&#34;&gt;Intel Pentium J5005&lt;/a&gt; solo admiten 8 gigas como máximo y me parece que están limitados artificialmente a ese tamaño máximo de memoria. En &lt;a href=&#34;https://es.aliexpress.com/&#34;&gt;Aliexpress&lt;/a&gt; hay productos similares a los NUC con procesador i5 8250U pero a ver quien se la juega a importar desde China por aduanas y con la incertidumbre de lo que llega y que tal funciona, también he estado mirando placas &lt;a href=&#34;https://www.arm.com/&#34;&gt;ARM&lt;/a&gt; aunque no con el objetivo que sea mi equipo principal, &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/03/7-plus-computadoras-baratas-del-tamano-de-una-tarjeta-de-credito-basadas-en-gnu-linux-y-arm/&#34;&gt;7+ computadoras baratas del tamaño de una tarjeta de crédito basadas en GNU/Linux y ARM&lt;/a&gt;, como la &lt;a href=&#34;https://www.pine64.org/?page_id=7147&#34;&gt;Rock64&lt;/a&gt; que tiene 4 gigas pero siguiendo su desarrollo y foros no son pocos los problemas que la gente crea en su repositorio de &lt;a href=&#34;https://github.com/ayufan-rock64/linux-build&#34;&gt;Github&lt;/a&gt; con lo que me da que pensar que la experiencia podría ser algo frustrante, la arquitectura x86/x64 es mucho más compatible, en ARM cada placa es un mundo aparte de que su rendimiento es mucho más limitado.&lt;/p&gt;

&lt;p&gt;Preferiría un microprocesador &lt;a href=&#34;https://www.amd.com/es&#34;&gt;AMD&lt;/a&gt; ya que solo están afectados por algunas variantes de &lt;em&gt;Spectre&lt;/em&gt;, pero AMD no tiene tanta diversidad de productos como tiene Intel, no tienen nada parecido a los Intel NUC y en portátiles prácticamente todos los modelos equipan un Intel, quizá cambia ahora algo con los Ryzen. Por rendimiento y precio posiblemente elegiría un &lt;a href=&#34;https://www.amd.com/es/products/apu/amd-ryzen-5-2400g&#34;&gt;AMD Ryzen 2400G&lt;/a&gt; pero de momento las placas con el &lt;em&gt;chipset&lt;/em&gt; B450 para sacarle el máximo rendimiento aún no están disponibles, en la generación 1xxx de los Ryzen no hay modelos con gráfica integrada, tendría que ser un mini-ITX y el equipo me lo tendría que montar yo, no es difícil pero si tuviese algún imprevisto o incompatibilidad sería un problema por tener que devolver piezas y buscar otras, además no estoy seguro del ruido que haría, lo quiero muy silencioso al menos en tareas ofimáticas, navegación por internet y cosas simples, no estoy seguro de que lo sea con el ventilador de la CPU y fuente de alimentación. Ocupa más que un NUC para mi importante si en un futuro le quiero dar uso como ordenador secundario, servidor personal o quisiera traspasarlo. Pero por 400€ se tiene un ordenador muy decente en plataforma AMD Ryzen a falta de memoria y SSD.&lt;/p&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B077BZRZVL&amp;linkId=a905704fcfef9ed2713a34d3ddb555fa&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B079D8FD28&amp;linkId=143ee2d24bf0649b2d0affddf13f24cb&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B073R8DB3G&amp;linkId=5f0cd76fff30430ed354ec67845802e8&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B015UDUAKG&amp;linkId=08b14b0134d00cc43b35b907b2815c0a&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B019NWTCEA&amp;linkId=21cd29a0ba90015364a242ae10b47284&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;La pantalla que estoy siguiendo es una 2K de &lt;a href=&#34;https://amzn.to/2ltsRhf&#34;&gt;BenQ PD2700Q&lt;/a&gt; en tamaño de 27”, 4K me parece excesiva resolución para ese tamaño de pantalla, a su máxima resolución en una 27&amp;rdquo; 4K las cosas ven muy pequeñas y tendría que escalarla a 2K, busco que sea IPS ya que los colores en este tipo de paneles se ven significativamente mejor que en un panel TN, uno al lado del otro la diferencia es clara. Apreciaré una mejora notable en la calidad de la pantalla de la que tenía en el portátil Sony. No es barata pero es algo que no necesitan renovarse tan a menudo como el ordenador seguramente pueda tener un uso durante una década si no presenta ningún problema de funcionamiento. Otros aspectos interesantes son ser regulable en altura y horizontalmente, colocable en posición vertical y puertos USB, HDMI y DisplayPort por otro lado una información en pantalla o OSD aceptable y de fácil configuración.&lt;/p&gt;

&lt;p&gt;Entre otras cosas están el teclado y ratón que me conformo con un modelo básico y barato como el &lt;a href=&#34;https://amzn.to/2yCcE2T&#34;&gt;Logitech MK120&lt;/a&gt; y una alfombrilla que cubra la mesa.&lt;/p&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01K2210GS&amp;linkId=1f32d07d228fd9c0eaaafcd1146b25d8&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00564GWEI&amp;linkId=e51cd8d969848df3bb23c36529afdc8e&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01HNYV65S&amp;linkId=76bdcf7d3ff1a90eff397bc913a911d7&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Cuando realmente compre el equipo publicaré varios artículos con el &lt;em&gt;unboxing&lt;/em&gt;, instalación, análisis, uso y opinión personal de varios de ellos.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnx-software.com/2017/09/20/intel-nuc-roadmap-2018-2019-gemini-lake-coffee-lake-and-kaby-lake-h/&#34;&gt;Intel NUC Roadmap 2018 – 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pvladov.com/2015/07/intel-hd-graphics-nvidia-and-amd-equivalents.html&#34;&gt;Intel HD Graphics - Nvidia and AMD Equivalents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pvladov.com/2014/10/games-playable-on-intel-hd-graphics.html&#34;&gt;Games Playable on Intel HD Graphics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://news.softpedia.com/news/How-to-Install-Diablo-3-on-Linux-273950.shtml&#34;&gt;How to Install Diablo 3 on Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pccomponentes.com/barebone-intel-nuc-nuc7i7dnke-intel-core-i7-8650u&#34;&gt;Intel NUC NUC7i7DNKE Intel Core i7-8650U&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pccomponentes.com/barebone-intel-nuc-nuc7pjyh2-intel-pentium-silver-j5005&#34;&gt;Intel NUC NUC7PJYH2 Intel Pentium Silver J5005&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="hardware"/>
            
                <category term="planeta-codigo"/>
            
                <category term="opinion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/</id>
        <title>Java Magazine, la publicación gratuita sobre Java</title>        
        <updated>2018-06-15T23:00:00+02:00</updated>
        <published>2018-06-15T23:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;La revista &lt;a href=&#34;http://www.oracle.com/technetwork/java/javamagazine/index.html&#34;&gt;Java Magazine&lt;/a&gt; es una publicación bimensual gratuita que contiene artículos técnicos sobre temas muy variados relacionados con Java. Las revistas pueden consultarse directamente en la web o de forma más cómoda descargándola a nuestro ordenador en formato de archivo PDF. También es posible suscribirse a una lista de distribución para recibir mediante un correo electrónico una notificación cuando se publique un nuevo número de la revista o estar atento y seguir al twitter de la revista &lt;a href=&#34;https://twitter.com/Oraclejavamag&#34;&gt;@Oraclejavamag&lt;/a&gt;. Su longitud ronda algo menos de 100 páginas por número.&lt;/p&gt;

&lt;p&gt;Estas son las portadas de la revista de los tres últimos años y medio, desde el 2015 hasta junio del 2018, en las que se incluye los principales temas tratados en cada revista. Durante este tiempo publicando por supuesto algún número dedicado a Java 9 y Java 10, Java EE 8, JSF, JavaMail, JAX-RS, Spring Boot, JVM, JUnit, IoT, HTTP/2, JavaFX, Gradle, Lombok, JCommander, Byte Buddy, Jsoup, WebSockets, JPA, CDI, Servlet 4.0, &lt;em&gt;testing&lt;/em&gt;, miroservicios y contenedores y muchos más temas.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
  
  
  
  
  
  

  
  
  

  
  
  



  
  
  
  
  
  

  
  
  

  
  
  



  
  
  
  
  
  

  
  
  

  
  
  











&lt;figure&gt;
    
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2018-may-jun_hu8f6912ebe574dbcab12ab76730e4905e_414441_2560x1440_fit_q90_box.jpg&#34; title=&#34;Java Magazine 2018 Mayo/Junio&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2018-may-jun_hu8f6912ebe574dbcab12ab76730e4905e_414441_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;149&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2018-mar-apr_huea7775c4b606101197eef2987bab8a3a_334824_2560x1440_fit_q90_box.jpg&#34; title=&#34;Java Magazine 2018 Marzo/Abril&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2018-mar-apr_huea7775c4b606101197eef2987bab8a3a_334824_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;149&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2018-jan-feb_hud4afc3cc5dd9806679f8540c787a6054_652978_2560x1440_fit_q90_box.jpg&#34; title=&#34;Java Magazine 2018 Enero/Febrero&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2018-jan-feb_hud4afc3cc5dd9806679f8540c787a6054_652978_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;149&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Java Magazine 2018&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamagazine.mozaicreader.com/MayJun2018&#34;&gt;Mayo/Junio 2018&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamagazine.mozaicreader.com/MarApr2018&#34;&gt;Marzo/Abril 2018&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamagazine.mozaicreader.com/JanFeb2018&#34;&gt;Enero/Febrero 2018&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
  
  
  
  
  
  

  
  
  

  
  
  



  
  
  
  
  
  

  
  
  

  
  
  



  
  
  
  
  
  

  
  
  

  
  
  











&lt;figure&gt;
    
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2017-nov-dec_hucf5b6bfaadfd0a1dc4d72c0b1f1ac0ab_247504_2560x1440_fit_q90_box.jpg&#34; title=&#34;Java Magazine 2017 Noviembre/Diciembre&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2017-nov-dec_hucf5b6bfaadfd0a1dc4d72c0b1f1ac0ab_247504_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;149&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2017-sep-oct_hu0db326f4bc42dfaaacb394e7e50458e0_301685_2560x1440_fit_q90_box.jpg&#34; title=&#34;Java Magazine 2017 Sepiembre/Octubre&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2017-sep-oct_hu0db326f4bc42dfaaacb394e7e50458e0_301685_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;149&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2017-jul-aug_hu6c0ecd3d396abced587402b7c9b7dce8_312313_2560x1440_fit_q90_box.jpg&#34; title=&#34;Java Magazine 2017&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2017-jul-aug_hu6c0ecd3d396abced587402b7c9b7dce8_312313_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;149&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;


    
  
  
  
  
  
  

  
  
  

  
  
  



  
  
  
  
  
  

  
  
  

  
  
  



  
  
  
  
  
  

  
  
  

  
  
  











&lt;figure&gt;
    
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2017-may-jun_hu245c6e8eae71f27e3f185b03a98191fa_633171_2560x1440_fit_q90_box.jpg&#34; title=&#34;Java Magazine 2017 Mayo/Junio&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2017-may-jun_hu245c6e8eae71f27e3f185b03a98191fa_633171_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;149&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2017-mar-apr_huada46b8748abb1b690a94444be323d1d_385322_2560x1440_fit_q90_box.jpg&#34; title=&#34;Java Magazine 2017 Marzo/Abril&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2017-mar-apr_huada46b8748abb1b690a94444be323d1d_385322_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;149&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2018-jan-feb_hud4afc3cc5dd9806679f8540c787a6054_652978_2560x1440_fit_q90_box.jpg&#34; title=&#34;Java Magazine 2017 Enero/Febrero&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2018-jan-feb_hud4afc3cc5dd9806679f8540c787a6054_652978_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;149&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Java Magazine 2017&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamagazine.mozaicreader.com/NovDec2017&#34;&gt;Noviembre/Diciembre 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamagazine.mozaicreader.com/SeptOct2017&#34;&gt;Septiembre/Octubre 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamagazine.mozaicreader.com/JulyAug2017&#34;&gt;Julio/Agosto 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamagazine.mozaicreader.com/MayJune2017&#34;&gt;Mayo/Junio 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamagazine.mozaicreader.com/MarApr2017&#34;&gt;Marzo/Abril 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamagazine.mozaicreader.com/JanFeb2017&#34;&gt;Enero/Febrero 2017&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
  
  
  
  
  
  

  
  
  

  
  
  



  
  
  
  
  
  

  
  
  

  
  
  



  
  
  
  
  
  

  
  
  

  
  
  











&lt;figure&gt;
    
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2016-nov-dec_hu579b3cbc8f11baebb2c9a10fec5e8c8a_549881_2560x1440_fit_q90_box.jpg&#34; title=&#34;Java Magazine 2016 Noviembre/Diciembre&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2016-nov-dec_hu579b3cbc8f11baebb2c9a10fec5e8c8a_549881_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;149&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2016-sep-oct_huaad1c651f33311264cd4c06969630804_649978_2560x1440_fit_q90_box.jpg&#34; title=&#34;Java Magazine 2016 Sepiembre/Octubre&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2016-sep-oct_huaad1c651f33311264cd4c06969630804_649978_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;149&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2016-jul-aug_hu5d37bf2717902766e29507c702a0b145_431302_2560x1440_fit_q90_box.jpg&#34; title=&#34;Java Magazine 2016&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2016-jul-aug_hu5d37bf2717902766e29507c702a0b145_431302_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;149&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;


    
  
  
  
  
  
  

  
  
  

  
  
  



  
  
  
  
  
  

  
  
  

  
  
  



  
  
  
  
  
  

  
  
  

  
  
  











&lt;figure&gt;
    
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2016-may-jun_huff9ac1f55f872544cae76a11b259dbaf_362527_2560x1440_fit_q90_box.jpg&#34; title=&#34;Java Magazine 2016 Mayo/Junio&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2016-may-jun_huff9ac1f55f872544cae76a11b259dbaf_362527_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;149&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2016-mar-apr_hu3e9bf33057361cfec2690f4b591d4913_500139_2560x1440_fit_q90_box.jpg&#34; title=&#34;Java Magazine 2016 Marzo/Abril&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2016-mar-apr_hu3e9bf33057361cfec2690f4b591d4913_500139_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;149&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2016-jan-feb_hu521fa2eb7e077ad52576f6027c997d54_352188_2560x1440_fit_q90_box.jpg&#34; title=&#34;Java Magazine 2016 Enero/Febrero&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2016-jan-feb_hu521fa2eb7e077ad52576f6027c997d54_352188_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;149&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Java Magazine 2016&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamagazine.mozaicreader.com/NovDec2016&#34;&gt;Noviembre/Diciembre 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamagazine.mozaicreader.com/SeptOct2016&#34;&gt;Septiembre/Octubre 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamagazine.mozaicreader.com/JulyAug2016&#34;&gt;Julio/Agosto 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamagazine.mozaicreader.com/MayJune2016&#34;&gt;Mayo/Junio 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamagazine.mozaicreader.com/MarApr2016&#34;&gt;Marzo/Abril 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamagazine.mozaicreader.com/JanFeb2016&#34;&gt;Enero/Febrero 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
  
  
  
  
  
  

  
  
  

  
  
  



  
  
  
  
  
  

  
  
  

  
  
  



  
  
  
  
  
  

  
  
  

  
  
  











&lt;figure&gt;
    
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2015-nov-dec_hufa2874961a9ad45e1e9a278f902677bf_406177_2560x1440_fit_q90_box.jpg&#34; title=&#34;Java Magazine 2015 Noviembre/Diciembre&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2015-nov-dec_hufa2874961a9ad45e1e9a278f902677bf_406177_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;149&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2015-sep-oct_hub68d9ff21ae4ba72db39e10c82e2e455_505013_2560x1440_fit_q90_box.jpg&#34; title=&#34;Java Magazine 2015 Sepiembre/Octubre&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2015-sep-oct_hub68d9ff21ae4ba72db39e10c82e2e455_505013_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;149&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2015-jul-aug_hub1f5495c5dafc4d9f5aad33fe2eb5cac_347127_2560x1440_fit_q90_box.jpg&#34; title=&#34;Java Magazine 2015&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2015-jul-aug_hub1f5495c5dafc4d9f5aad33fe2eb5cac_347127_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;149&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;


    
  
  
  
  
  
  

  
  
  

  
  
  



  
  
  
  
  
  

  
  
  

  
  
  



  
  
  
  
  
  

  
  
  

  
  
  











&lt;figure&gt;
    
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2015-may-jun_hub2c8708397aeda0d8f8978d82a1d1747_368967_2560x1440_fit_q90_box.jpg&#34; title=&#34;Java Magazine 2015 Mayo/Junio&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2015-may-jun_hub2c8708397aeda0d8f8978d82a1d1747_368967_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;149&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2015-mar-apr_hu3f41bf89d2c700131d7c5fe3e6c6d4a9_544697_2560x1440_fit_q90_box.jpg&#34; title=&#34;Java Magazine 2015 Marzo/Abril&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2015-mar-apr_hu3f41bf89d2c700131d7c5fe3e6c6d4a9_544697_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;149&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2015-jan-feb_hubd4eda21c37c41ef79fa281bd155898d_516510_2560x1440_fit_q90_box.jpg&#34; title=&#34;Java Magazine 2015 Enero/Febrero&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/images/java-magazine-2015-jan-feb_hubd4eda21c37c41ef79fa281bd155898d_516510_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;149&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Java Magazine 2015&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamagazine.mozaicreader.com/NovDec2015&#34;&gt;Noviembre/Diciembre 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamagazine.mozaicreader.com/SeptOct2015&#34;&gt;Septiembre/Octubre 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamagazine.mozaicreader.com/JulyAug2015&#34;&gt;Julio/Agosto 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamagazine.mozaicreader.com/MayJune2015&#34;&gt;Mayo/Junio 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamagazine.mozaicreader.com/MarApr2015&#34;&gt;Marzo/Abril 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamagazine.mozaicreader.com/JanFeb2015&#34;&gt;Enero/Febrero 2015&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La mayoría de artículos que incluyen suelen ser muy interesantes y de muy buena calidad de los que casi siempre se aprende algo, algunos artículos están escritos por personas con muy altos conocimientos sobre Java, algunos han sido galardonados como &lt;a href=&#34;https://en.wikipedia.org/wiki/Java_Champions&#34;&gt;Java Champion&lt;/a&gt;, y en algunos otros casos son los desarrolladores principales de algunas de la librerías más populares en el ecosistema Java.&lt;/p&gt;

&lt;p&gt;Si estás interesado en Java seguir esta revista y leer sus artículos es una buena recomendación.&lt;/p&gt;



        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/06/soporte-para-lanzar-eventos-desde-javascript-con-ajax-en-un-componente-de-apache-tapestry/</id>
        <title>Soporte para lanzar eventos desde JavaScript con Ajax en un componente de Apache Tapestry</title>        
        <updated>2018-06-09T08:00:00+02:00</updated>
        <published>2018-06-09T08:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/06/soporte-para-lanzar-eventos-desde-javascript-con-ajax-en-un-componente-de-apache-tapestry/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/apache-tapestry-5.svg&#34; class=&#34;right &#34; width=&#34;400&#34; alt=&#34;Apache Tapestry&#34; title=&#34;Apache Tapestry&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Para desarrollar aplicaciones web con el lenguaje de programación Java hay gran cantidad de &lt;em&gt;frameworks&lt;/em&gt; que proponen un marco de trabajo para proporcionar la mayor parte de la funcionalidad de infraestructura necesaria para una aplicación. La mayoría basados en acciones y unos pocos basados en componentes. Una aplicación web no solo consta de la parte del servidor y desde hace tiempo la parte de cliente ha cobrado gran importancia.&lt;/p&gt;

&lt;p&gt;Algunos &lt;em&gt;frameworks&lt;/em&gt; proporcionan cierto soporte para JavaScript y recursos CSS en otros es muy escaso o inexistente. En el caso del &lt;em&gt;framework&lt;/em&gt; &lt;a href=&#34;https://tapestry.apache.org/&#34;&gt;Apache Tapestry&lt;/a&gt; en la categoría de los basados en componentes proporciona un gran soporte no solo en la parte del servidor sino también para la parte cliente.&lt;/p&gt;

&lt;p&gt;Una de estas funcionalidades que proporciona Tapestry es poder lanzar eventos desde el cliente mediante una petición &lt;em&gt;Ajax&lt;/em&gt; para que sean procesados en el servidor y obtener la respuesta que se devuelva desde el servidor normalmente en formato &lt;em&gt;Json&lt;/em&gt;. Hay que definir un manejador de evento en el servidor siguiendo la convención &lt;em&gt;on[Event]&lt;/em&gt; y en caso de querer lanzar un evento desde el cliente anotándolo con &lt;a href=&#34;http://tapestry.apache.org/current/apidocs/index.html?org/apache/tapestry5/ComponentResources.html&#34;&gt;@PublishEvent&lt;/a&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/ce18702bf548f895a1eac4c86d7a135e.js?file=Event.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/ce18702bf548f895a1eac4c86d7a135e.js?file=Event.tml&#34;&gt;&lt;/script&gt;

&lt;p&gt;El uso del componente en una plantilla de una página.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/ce18702bf548f895a1eac4c86d7a135e.js?file=Index.tml&#34;&gt;&lt;/script&gt;

&lt;p&gt;En el código JavaScript asociado a una página o componente hay que hacer uso del módulo que ofrece el soporte para &lt;em&gt;Ajax&lt;/em&gt; y los eventos desde el cliente, con &lt;a href=&#34;http://requirejs.org/&#34;&gt;RequireJS&lt;/a&gt; se obtiene una referencia a él. Solo es necesario indicar como parámetro el nombre del evento a lanzar, los parámetros si los hubiese y los manejadores de respuesta, tanto en el caso de ser correcta que recibirá los datos devueltos en el servidor como incorrecta. En el archivo &lt;a href=&#34;https://git1-us-west.apache.org/repos/asf?p=tapestry-5.git;a=blob_plain;f=tapestry-core/src/main/coffeescript/META-INF/modules/t5/core/ajax.coffee;hb=85cc611fbad4a3574664b33ce9adf614b4f0fe07&#34;&gt;ajax.coffee&lt;/a&gt; están documentados todos los parámetros que posee la función &lt;em&gt;ajax&lt;/em&gt; del módulo &lt;em&gt;t5/core/ajax&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/ce18702bf548f895a1eac4c86d7a135e.js?file=event.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;En el primer elemento del HTML se añade un atributo &lt;em&gt;data-componenent-events&lt;/em&gt; que contiene la URL necesaria para cada evento que haya sido declarado como lanzable. A partir del elemento indicado en la opción &lt;em&gt;element&lt;/em&gt; se busca la URL en el atributo &lt;em&gt;data-componenent-events&lt;/em&gt; siguiendo un orden empezando por el propio elemento, en los previos al mismo nivel jerárquicamente empezando por el más cercano desde abajo hacia arriba, en los padres y finalmente en el elemento &lt;em&gt;body&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
  
  
  
  
  
  

  
  
  

  
  
  



  
  
  
  
  
  

  
  
  

  
  
  













&lt;figure&gt;
    
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/soporte-para-lanzar-eventos-desde-javascript-con-ajax-en-un-componente-de-apache-tapestry/images/event_hu8172c8a741f24521f7cd7f3616353770_847602_2560x1440_fit_box_2.png&#34; title=&#34;Petición Ajax del evento&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/soporte-para-lanzar-eventos-desde-javascript-con-ajax-en-un-componente-de-apache-tapestry/images/event_hu8172c8a741f24521f7cd7f3616353770_847602_300x200_fit_box_2.png&#34; width=&#34;300&#34; height=&#34;183&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/soporte-para-lanzar-eventos-desde-javascript-con-ajax-en-un-componente-de-apache-tapestry/images/data-component-events_hu8172c8a741f24521f7cd7f3616353770_837819_2560x1440_fit_box_2.png&#34; title=&#34;Atributo con la URL del evento&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/soporte-para-lanzar-eventos-desde-javascript-con-ajax-en-un-componente-de-apache-tapestry/images/data-component-events_hu8172c8a741f24521f7cd7f3616353770_837819_300x200_fit_box_2.png&#34; width=&#34;300&#34; height=&#34;183&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Petición Ajax y atributo con la URL del evento&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;Esta funcionalidad se incorporó en Apache Tapestry 5.2 donde hasta entonces era necesario construir la URL del evento en el servidor con &lt;a href=&#34;http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/ComponentResourcesCommon.html#createEventLink-java.lang.String-java.lang.Object...-&#34;&gt;ComponentResources.createEventLink()&lt;/a&gt; y enviarlo al componente haciendo uso de &lt;a href=&#34;http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/services/javascript/JavaScriptSupport.html&#34;&gt;JavaScriptSupport&lt;/a&gt; como se muestra en el componente &lt;em&gt;Ajax&lt;/em&gt; que no hace uso de esta funcionalidad de eventos.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/ce18702bf548f895a1eac4c86d7a135e.js?file=Ajax.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;Con este soporte es algo más fácil enviar eventos y realizar peticiones &lt;em&gt;Ajax&lt;/em&gt; desde el cliente para obtener datos.&lt;/p&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew run&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2014/12/portada-PugInTapestry-thumb.png&#34; alt=&#34;Portada libro: PlugIn Tapestry&#34; title=&#34;Portada libro: PlugIn Tapestry&#34; style=&#34;float: left; margin-right: 1.5em;&#34;&gt;
    &lt;h3&gt;Libro PlugIn Tapestry&lt;/h3&gt;
    &lt;p&gt;Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este &lt;i&gt;framework&lt;/i&gt; en el formato que prefieras, &lt;a href=&#34;http://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry&lt;/a&gt;, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.&lt;/p&gt;
    &lt;br style=&#34;clear: both;&#34;&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf&#34; class=&#34;btn btn-lg btn-success&#34;&gt;PDF&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.epub&#34; class=&#34;btn btn-lg btn-success&#34;&gt;EPUB&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.mobi&#34; class=&#34;btn btn-lg btn-success&#34;&gt;MOBI&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.zip&#34; class=&#34;btn btn-lg btn-success&#34;&gt;HTML&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry&#34; class=&#34;btn btn-lg btn-success&#34;&gt;Código fuente ejemplos&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tapestry.apache.org/ajax-and-zones.html&#34;&gt;Ajax and Zones&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git1-us-west.apache.org/repos/asf?p=tapestry-5.git;a=blob_plain;f=tapestry-core/src/main/coffeescript/META-INF/modules/t5/core/ajax.coffee;hb=85cc611fbad4a3574664b33ce9adf614b4f0fe07&#34;&gt;ajax.coffee&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="java"/>
            
                <category term="javascript"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="tapestry"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/06/actualizar-las-versiones-de-las-librerias-javascript-built-in-de-apache-tapestry/</id>
        <title>Actualizar las versiones de las librerías JavaScript built-in de Apache Tapestry</title>        
        <updated>2018-06-03T08:30:00+02:00</updated>
        <published>2018-06-03T08:30:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/06/actualizar-las-versiones-de-las-librerias-javascript-built-in-de-apache-tapestry/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/apache-tapestry-5.svg&#34; class=&#34;right &#34; width=&#34;400&#34; alt=&#34;Apache Tapestry&#34; title=&#34;Apache Tapestry&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;El &lt;em&gt;framework&lt;/em&gt; &lt;a href=&#34;https://tapestry.apache.org/&#34;&gt;Apache Tapestry&lt;/a&gt; para el desarrollo de aplicaciones web Java basado en componentes aparte de ser un &lt;em&gt;framework&lt;/em&gt; para el desarrollo de la capa de presentación del lado del servidor y lógica de negocio también ofrece soporte para el desarrollo de funcionalidad del lado del cliente. Incorpocopora de serie las librerías &lt;a href=&#34;http://requirejs.org/&#34;&gt;RequireJS&lt;/a&gt; para la gestión de módulos y dependencias de JavaScript, la popular &lt;a href=&#34;https://jquery.com/&#34;&gt;jQuery&lt;/a&gt; para la manipulación de elementos del HTML y &lt;a href=&#34;http://underscorejs.org/&#34;&gt;Underscore&lt;/a&gt; que añade algunas utilidades que no tiene el lenguaje JavaScript y &lt;a href=&#34;http://getbootstrap.com/&#34;&gt;Bootstrap&lt;/a&gt; para los estilos además de alguna otra librería JavaScript de menor relevancia que estas.&lt;/p&gt;

&lt;p&gt;Sin embargo, las versiones de las librerías de lado del cliente que incorpora de serie son antiguas. En la versión 5.4.3 de RequireJS se incorpora la versión 2.1.17, de jQuery la versión 1.12.1 y de Underscore la versión 1.8.3 cuando en el momento de publicar este artículo sus versiones más nuevas son 2.3.5, 3.3.1 y 1.9.1 respectivamente. Dado que de Apache Tapestry no se publican versiones frecuentemente el &lt;em&gt;framework&lt;/em&gt; no sigue el ritmo de actualizaciones más rápido de las librerías JavaScript. Pero pueden ser actualizadas sin mucho esfuerzo.&lt;/p&gt;

&lt;p&gt;Apache Tapestry es un &lt;em&gt;framework&lt;/em&gt; extremadamente personalizable, adaptable y extensible, prácticamente cualquier cosa interna de su funcionamiento puede ser modificada gracias a su propio gestor de dependencias o inversión de control. Las versiones de las librerías anteriores se definen en el archivo &lt;a href=&#34;https://git1-us-west.apache.org/repos/asf?p=tapestry-5.git;a=blob;f=tapestry-core/src/main/java/org/apache/tapestry5/modules/JavaScriptModule.java;h=68fcfc81546a49469cd153ea1e58026549718f61;hb=85cc611fbad4a3574664b33ce9adf614b4f0fe07&#34;&gt;JavaScriptModule.java&lt;/a&gt; del código fuente de Tapestry y haciendo una contribución en el contenedor de dependencias a la configuración del servicio JavaScriptStack se pueden modificar.&lt;/p&gt;

&lt;p&gt;Estas pocas líneas de código bastan para redefinir las versiones de las librerías.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/2e83d573fdfd72aeab75af4c08ab806b.js?file=AppModule.java&#34;&gt;&lt;/script&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
  
  
  
  
  
  

  
  
  

  
  
  



  
  
  
  
  
  

  
  
  

  
  
  













&lt;figure&gt;
    
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/actualizar-las-versiones-de-las-librerias-javascript-built-in-de-apache-tapestry/images/tapestry-jquery-1.12.1_hu01f0947cd6ab301045d65616944c75f9_914906_2560x1440_fit_box_2.png&#34; title=&#34;Antes de actualizar las librerías JavaScript&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/actualizar-las-versiones-de-las-librerias-javascript-built-in-de-apache-tapestry/images/tapestry-jquery-1.12.1_hu01f0947cd6ab301045d65616944c75f9_914906_300x200_fit_box_2.png&#34; width=&#34;300&#34; height=&#34;196&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/actualizar-las-versiones-de-las-librerias-javascript-built-in-de-apache-tapestry/images/tapestry-jquery-3.3.1_hu01f0947cd6ab301045d65616944c75f9_842696_2560x1440_fit_box_2.png&#34; title=&#34;Después de actualizar las librerías JavaScript&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/actualizar-las-versiones-de-las-librerias-javascript-built-in-de-apache-tapestry/images/tapestry-jquery-3.3.1_hu01f0947cd6ab301045d65616944c75f9_842696_300x200_fit_box_2.png&#34; width=&#34;300&#34; height=&#34;196&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Antes y después de actualizar las librerías JavaScript&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;Además, en este caso las nuevas versiones las he proporcionado &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/dependencias-sobre-librerias-de-lado-de-cliente-con-webjars-en-una-aplicacion-web-java/&#34;&gt;gestionando las dependencias de lado del cliente con &lt;em&gt;webjars&lt;/em&gt;&lt;/a&gt; que se incluyen como cualquier otra dependencia Java del proyecto. Esto permite saber qué dependencias de lado de cliente tiene el proyecto, obtener las dependencias de forma automática y actualizarlas de forma sencilla con la herramienta de construcción del proyecto como &lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Al usar una versión más reciente de las librerías es importante asegurarse y revisar que todas las funcionalidades necesarias son compatibles hacia atrás. Al hacer en el caso de jQuery una actualización a una versión mayor hay que probar y leer las notas de publicación de las versiones por si hubiera un problema de compatibilidad en las funcionalidades que requiere de ella el &lt;em&gt;framework&lt;/em&gt; Apache Tapestry.&lt;/p&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew run&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2014/12/portada-PugInTapestry-thumb.png&#34; alt=&#34;Portada libro: PlugIn Tapestry&#34; title=&#34;Portada libro: PlugIn Tapestry&#34; style=&#34;float: left; margin-right: 1.5em;&#34;&gt;
    &lt;h3&gt;Libro PlugIn Tapestry&lt;/h3&gt;
    &lt;p&gt;Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este &lt;i&gt;framework&lt;/i&gt; en el formato que prefieras, &lt;a href=&#34;http://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry&lt;/a&gt;, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.&lt;/p&gt;
    &lt;br style=&#34;clear: both;&#34;&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf&#34; class=&#34;btn btn-lg btn-success&#34;&gt;PDF&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.epub&#34; class=&#34;btn btn-lg btn-success&#34;&gt;EPUB&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.mobi&#34; class=&#34;btn btn-lg btn-success&#34;&gt;MOBI&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.zip&#34; class=&#34;btn btn-lg btn-success&#34;&gt;HTML&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry&#34; class=&#34;btn btn-lg btn-success&#34;&gt;Código fuente ejemplos&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git1-us-west.apache.org/repos/asf?p=tapestry-5.git;a=blob;f=tapestry-core/src/main/java/org/apache/tapestry5/modules/JavaScriptModule.java;h=68fcfc81546a49469cd153ea1e58026549718f61;hb=85cc611fbad4a3574664b33ce9adf614b4f0fe07&#34;&gt;JavaScriptModule.java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="tapestry"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/06/dependencias-sobre-librerias-de-lado-de-cliente-con-webjars-en-una-aplicacion-web-java/</id>
        <title>Dependencias sobre librerías de lado de cliente con Webjars en una aplicación web Java</title>        
        <updated>2018-06-01T21:00:00+02:00</updated>
        <published>2018-06-01T17:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/06/dependencias-sobre-librerias-de-lado-de-cliente-con-webjars-en-una-aplicacion-web-java/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/webjars.png&#34; class=&#34;right &#34; width=&#34;250&#34; alt=&#34;Webjars&#34; title=&#34;Webjars&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Una aplicación web se compone de código de lado de servidor, en el caso de utilizar el lenguaje de programación Java de código Java normalmente utilizando algún de los muchos &lt;em&gt;framework&lt;/em&gt; web, por otra parte se compone de código de lado de cliente con una gran variedad de librerías de JavaScript como &lt;a href=&#34;https://jquery.com/&#34;&gt;jQuery&lt;/a&gt;, &lt;a href=&#34;https://facebook.github.io/react/&#34;&gt;React&lt;/a&gt;, &lt;a href=&#34;http://underscorejs.org/&#34;&gt;Underscore&lt;/a&gt; o &lt;a href=&#34;http://getbootstrap.com/&#34;&gt;Bootstrap&lt;/a&gt; para los estilos. En las aplicaciones Java las librerías de lado de servidor se gestionan como dependencias del proyecto y con herramientas como &lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle&lt;/a&gt; se puede automatizar el descargar la librería de repositorios como &lt;a href=&#34;https://search.maven.org/&#34;&gt;Maven Central&lt;/a&gt; y la versión que se necesite así como hacer sencillo actualizar a una nueva. En el caso de las librerías de lado del cliente con &lt;a href=&#34;https://www.webjars.org/&#34;&gt;Webjars&lt;/a&gt; se consiguen los mismos beneficios.&lt;/p&gt;

&lt;p&gt;Los &lt;em&gt;webjars&lt;/em&gt; son librerías de extensión &lt;em&gt;jar&lt;/em&gt; con los recursos de lado del cliente empaquetados en ellos que en el momento de ser requeridos pueden ser devueltos como un recurso estático por la aplicación, incluyen los archivos JavaScript sin minimizar y minimizados, los archivos &lt;em&gt;map&lt;/em&gt; para depuración si minimizados están ofuscados, recursos de estilos CSS o imágenes. Se gestionan como cualquier otra dependencia del proyecto Java lo que proporciona las mismas ventajas de obtener las dependencias de forma automática y hace fácil actualizar a una nueva versión. Por si fuera poco es muy sencillo utilizar &lt;em&gt;webjars&lt;/em&gt;, para los &lt;em&gt;frameworks&lt;/em&gt; más populares se ofrece una pequeña guía de uso en la &lt;a href=&#34;https://www.webjars.org/documentation&#34;&gt;documentación&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Las librerías más populares de JavaScript o CSS están empaquetadas como &lt;em&gt;webjars&lt;/em&gt; en las diferentes versiones y han sido publicadas de forma que es posible añadir la dependencia en la versión concreta que necesite la aplicación. Dado que los &lt;em&gt;webjars&lt;/em&gt; se gestionan como una dependencia Java si estos a su vez tiene alguna dependencia sobre otra librería está se incluyen en el proyecto de forma transitiva. El contenido del &lt;em&gt;webjar&lt;/em&gt; para &lt;em&gt;jQuery&lt;/em&gt; es el siguiente.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/6a355258c390e165cebc46871ce54309.js?file=jquery-webjar.out&#34;&gt;&lt;/script&gt;

&lt;p&gt;En el caso del &lt;em&gt;framework&lt;/em&gt; web &lt;a href=&#34;https://tapestry.apache.org/&#34;&gt;Apache Tapestry&lt;/a&gt; basado en componentes para el desarrollo de aplicaciones web Java tan solo hay que incluir la dependencia en el proyecto y un poco de configuración en el módulo de la aplicación para el contenedor de dependencias como se indica en la &lt;a href=&#34;https://www.webjars.org/documentation#tapestry&#34;&gt;guía de uso&lt;/a&gt; con el objetivo que los recursos de los &lt;em&gt;webjars&lt;/em&gt; sean servidos.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/6a355258c390e165cebc46871ce54309.js?file=AppModule.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/6a355258c390e165cebc46871ce54309.js?file=build.gradle&#34;&gt;&lt;/script&gt;

&lt;p&gt;Inspeccionando el código fuente de la página devuelta se observa que en el caso de Tapestry la URL generada al solicitar en un &lt;em&gt;webjar&lt;/em&gt; es del estilo &lt;em&gt;https://localhost:8443/assets/webjars/z941c28a3/requirejs/2.3.5/require.js&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
  
  
  
  
  
  

  
  
  

  
  
  















&lt;figure&gt;
    
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/dependencias-sobre-librerias-de-lado-de-cliente-con-webjars-en-una-aplicacion-web-java/images/tapestry-webjars_hu48db32848ea69c233c28d50d292a5a09_470668_2560x1440_fit_box_2.png&#34; title=&#34;Apache Tapestry con Webjars&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/06/dependencias-sobre-librerias-de-lado-de-cliente-con-webjars-en-una-aplicacion-web-java/images/tapestry-webjars_hu48db32848ea69c233c28d50d292a5a09_470668_650x450_fit_box_2.png&#34; width=&#34;650&#34; height=&#34;392&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Apache Tapestry con Webjars&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;Los &lt;em&gt;webjars&lt;/em&gt; muy útiles para gestionar las librerías de lado cliente que hacen innecesario descargar manualmente las dependencias, automatizan la descarga, hacen muy sencillo actualizar a nuevas versiones y es muy fácil de usar al no requerir mucha confiración ni ser invasiva. Además, al estar como una dependencia en el archivo de construcción del proyecto queda indicado de forma explícita que el proyecto utiliza y necesita esa librería. Para mi son una herramienta imprescindible.&lt;/p&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew run&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2014/12/portada-PugInTapestry-thumb.png&#34; alt=&#34;Portada libro: PlugIn Tapestry&#34; title=&#34;Portada libro: PlugIn Tapestry&#34; style=&#34;float: left; margin-right: 1.5em;&#34;&gt;
    &lt;h3&gt;Libro PlugIn Tapestry&lt;/h3&gt;
    &lt;p&gt;Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este &lt;i&gt;framework&lt;/i&gt; en el formato que prefieras, &lt;a href=&#34;http://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry&lt;/a&gt;, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.&lt;/p&gt;
    &lt;br style=&#34;clear: both;&#34;&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf&#34; class=&#34;btn btn-lg btn-success&#34;&gt;PDF&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.epub&#34; class=&#34;btn btn-lg btn-success&#34;&gt;EPUB&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.mobi&#34; class=&#34;btn btn-lg btn-success&#34;&gt;MOBI&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.zip&#34; class=&#34;btn btn-lg btn-success&#34;&gt;HTML&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry&#34; class=&#34;btn btn-lg btn-success&#34;&gt;Código fuente ejemplos&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.baeldung.com/maven-webjars&#34;&gt;Introduction to WebJars&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="tapestry"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/05/empaquetar-una-aplicacion-java-en-un-archivo-jar-ejecutable-incluyendo-sus-dependencias/</id>
        <title>Empaquetar una aplicación Java en un archivo jar ejecutable incluyendo sus dependencias</title>        
        <updated>2018-05-26T18:15:00+02:00</updated>
        <published>2018-05-26T12:15:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/05/empaquetar-una-aplicacion-java-en-un-archivo-jar-ejecutable-incluyendo-sus-dependencias/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Las aplicaciones Java se distribuyen en uno o varios archivos &lt;em&gt;jar&lt;/em&gt;. Si queremos facilitar la distribución de la aplicación con un único archivo &lt;em&gt;jar&lt;/em&gt; existe la posibilidad de reempaquetar el &lt;em&gt;jar&lt;/em&gt; de la aplicación y sus dependencias en tiempo de ejecución en un nuevo archivo &lt;em&gt;jar&lt;/em&gt; que lo contenga todo, a este nuevo &lt;em&gt;jar&lt;/em&gt; se le conoce como &lt;em&gt;uberjar&lt;/em&gt; o &lt;em&gt;fatjar&lt;/em&gt;.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;La forma de distribuir el código compilado a &lt;em&gt;bytecode&lt;/em&gt; en Java es a través de archivos de extensión &lt;em&gt;jar&lt;/em&gt;. Los archivos &lt;em&gt;jar&lt;/em&gt; no son más que archivos comprimidos den formato &lt;em&gt;zip&lt;/em&gt;. Si se les cambia de extensión y se descomprimen se extrae su contenido seguramente con una buena cantidad de archivos de extensión &lt;em&gt;class&lt;/em&gt; que es la extensión para los archivos Java compilados a &lt;em&gt;bytecode&lt;/em&gt; y que la máquina virtual interpreta para su ejecución. Las librerías que use la aplicación también se deben distribuir junto a esta para que funcione, por lo que la aplicación se distribuirá en forma de una colección de archivos &lt;em&gt;jar&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Una aplicación distribuida en forma de múltiples archivos archivos &lt;em&gt;jar&lt;/em&gt; se ejecuta con una línea de comandos como la siguiente en la que el parámetro &lt;em&gt;-cp&lt;/em&gt; indica las ubicaciones donde se buscarán librerías &lt;em&gt;jar&lt;/em&gt; y archivos &lt;em&gt;class&lt;/em&gt; si se distribuyen de forma individual, el segundo parámetro indica la clase que contiene el método &lt;em&gt;main&lt;/em&gt; que inicia la aplicación. Previamente hay que compilar el proyecto con &lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle&lt;/a&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/9f599ab10340e025d87a14bdde97941b.js?file=gradlew-assemble.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;En este caso se trata de una aplicación que emite un arte en formato &lt;em&gt;ascii&lt;/em&gt; en la terminal donde para cada linea se usa un color diferente mediante la librería &lt;a href=&#34;https://github.com/fusesource/jansi&#34;&gt;Jansi&lt;/a&gt; que la aplicación tiene como dependencia.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/9f599ab10340e025d87a14bdde97941b.js?file=java-cp.sh&#34;&gt;&lt;/script&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
  
  
  
  
  
  

  
  
  

  
  
  















&lt;figure&gt;
    
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/05/empaquetar-una-aplicacion-java-en-un-archivo-jar-ejecutable-incluyendo-sus-dependencias/images/java-uberjar_hu4417091eb637a5f89cf2c0f6a4d596d3_73966_2560x1440_fit_box_2.png&#34; title=&#34;Aplicación de ejemplo&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/05/empaquetar-una-aplicacion-java-en-un-archivo-jar-ejecutable-incluyendo-sus-dependencias/images/java-uberjar_hu4417091eb637a5f89cf2c0f6a4d596d3_73966_650x450_fit_box_2.png&#34; width=&#34;650&#34; height=&#34;143&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Aplicación de ejemplo&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;Cuando la aplicación está contenida en un archivo &lt;em&gt;jar&lt;/em&gt; y se ejecuta con la opción &lt;em&gt;-jar&lt;/em&gt; se ignora el parámetro &lt;em&gt;-cp&lt;/em&gt; y no se indica la clase &lt;em&gt;main&lt;/em&gt; del punto de entrada de la aplicación. En el caso de las aplicaciones distribuidas en un archivo &lt;em&gt;jar&lt;/em&gt; tanto la clase &lt;em&gt;main&lt;/em&gt; como las dependencias se indican en un archivo de manifiesto incluido en el propio archivo &lt;em&gt;jar&lt;/em&gt;. El archivo se ubica en &lt;em&gt;META-INF/MANIFEST.MF&lt;/em&gt; dentro del &lt;em&gt;jar&lt;/em&gt;, es un archivo de texto donde se indican varias propiedades en forma de atributo y valor, una en cada linea. Un ejemplo de archivo de manifiesto sería el siguiente:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/9f599ab10340e025d87a14bdde97941b.js?file=MANIFEST.MF&#34;&gt;&lt;/script&gt;

&lt;p&gt;La propiedad &lt;em&gt;Manifest-Version&lt;/em&gt; y &lt;em&gt;Created-By&lt;/em&gt; son informativas de la versión del archivo de manifiesto y el autor de la librería &lt;em&gt;jar&lt;/em&gt;. La propiedad &lt;em&gt;Main-Class&lt;/em&gt; indica la clase &lt;em&gt;main&lt;/em&gt; de la librería o aplicación y la propiedad &lt;em&gt;Class-Path&lt;/em&gt; es una lista separada por espacios de librerías adicionales. Las propiedades &lt;em&gt;Main-Class&lt;/em&gt; y &lt;em&gt;Class-Path&lt;/em&gt; son los parámetros que indicamos como parámetros en el comando &lt;em&gt;java&lt;/em&gt; anterior. Con el archivo &lt;em&gt;jar&lt;/em&gt;, su manifiesto y las librerías la aplicación Java se inicia de forma un poco más sencilla que antes al no tener que indicar ni la clase &lt;em&gt;main&lt;/em&gt; ni el &lt;em&gt;classpath&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/9f599ab10340e025d87a14bdde97941b.js?file=java-jar.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Como en este caso, si Java no se encuentra la dependencia de Jansi y se produce la siguiente excepción que indica que no se ha encontrado una clase necesaria.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/9f599ab10340e025d87a14bdde97941b.js?file=Exception.out&#34;&gt;&lt;/script&gt;

&lt;p&gt;Sin embargo, para distribuir la aplicación aún hay que distribuir varios archivos &lt;em&gt;jar&lt;/em&gt;, el de la aplicación y los &lt;em&gt;jar&lt;/em&gt; de las librerías que necesite la aplicación. En este caso solo es un &lt;em&gt;jar&lt;/em&gt; adicional ya que la aplicación solo tiene una dependencia y esta transitivamente no tiene ninguna otra pero en una aplicación más compleja el número de dependencias puede llegar a la centena.&lt;/p&gt;

&lt;p&gt;Para hacer la distribución más sencilla hay una posibilidad que usan algunos programadores de Java que es reempaquetar todas las clases del &lt;em&gt;jar&lt;/em&gt; de la aplicación y de las librerías en un nuevo &lt;em&gt;jar&lt;/em&gt;, a esta opción de reempaquetar las clases se le conoce como &lt;em&gt;uberjar&lt;/em&gt; o &lt;em&gt;fatjar&lt;/em&gt;. En la herramienta de construcción Gradle existe un &lt;em&gt;plugin&lt;/em&gt; para realizar esta tarea de creación del &lt;em&gt;uberjar&lt;/em&gt; pero también se puede hacer definiendo una tarea sin necesidad del &lt;em&gt;plugin&lt;/em&gt;. El archivo de Gradle adaptado para producir un &lt;em&gt;uberjar&lt;/em&gt; de forma automatizada es el siguiente. La tarea importante en el caso del ejemplo es &lt;em&gt;uberJar&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/9f599ab10340e025d87a14bdde97941b.js?file=build.gradle&#34;&gt;&lt;/script&gt;

&lt;p&gt;Con el siguiente comando la ejecución de la aplicación empaquetada como &lt;em&gt;uberjar&lt;/em&gt; produce el mismo resultado. Con el &lt;em&gt;uberjar&lt;/em&gt; en el archivo de manifiesto no es necesario incluir el atributo &lt;em&gt;Class-Path&lt;/em&gt; ya que todas las clases necesarias tanto de la aplicación como de las dependencias ha sido empaquetadas en el &lt;em&gt;jar&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/9f599ab10340e025d87a14bdde97941b.js?file=java-jar-uberjar.sh&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/9f599ab10340e025d87a14bdde97941b.js?file=System.out&#34;&gt;&lt;/script&gt;

&lt;p&gt;Hay un &lt;a href=&#34;http://imperceptiblethoughts.com/shadow/&#34;&gt;&lt;em&gt;plugin&lt;/em&gt; de Gradle para generar &lt;em&gt;uberjars&lt;/em&gt;&lt;/a&gt; que ofrece varias opciones para filtrar los archivos que se incluyen en el &lt;em&gt;fatjar&lt;/em&gt;, fusionar los archivos de servicios que permiten extender funcionalidades y otras tareas para realizar generar el distribuible con &lt;em&gt;distShadowZip&lt;/em&gt; y &lt;em&gt;distShadowTar&lt;/em&gt;. &lt;a href=&#34;https://projects.spring.io/spring-boot/&#34;&gt;Spring Boot&lt;/a&gt; ofrece algo similar con la tarea &lt;em&gt;bootRepackage&lt;/em&gt; pero si no se trata de una aplicación que use Spring Boot lo anterior sirve para cualquier otra aplicación Java como sería el caso de una &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/10/introduccion-a-javafx-aplicaciones-de-escritorio-en-java/&#34;&gt;aplicación de escritorio que utiliza JavaFX&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Que la aplicación sea un único &lt;em&gt;jar&lt;/em&gt; tiene la ventaja que el distribuible es más sencillo y facilita desplegarlo en un entorno de producción, en el caso de usar &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; también es más adecuado un único archivo.&lt;/p&gt;

&lt;p&gt;Entre la documentación hay unas muy buenas &lt;a href=&#34;http://docs.oracle.com/javase/tutorial/index.html&#34;&gt;guías prácticas sobre Java&lt;/a&gt;, una de ellas sobre el &lt;a href=&#34;http://docs.oracle.com/javase/tutorial/deployment/jar/index.html&#34;&gt;empaqueado de apliaciones en archivos &lt;em&gt;jar&lt;/em&gt;&lt;/a&gt;. La información que se encuentra en estas guías y tutoriales es muy valiosa para cualquier programador que use el lenguaje Java.&lt;/p&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/JavaUberjar&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew assemble &amp;amp;&amp;amp; java -jar build/libs/JavaUberjar-uberjar.jar&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.baeldung.com/gradle-fat-jar&#34;&gt;Creating a Fat Jar in Gradle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://imperceptiblethoughts.com/shadow/&#34;&gt;Shadow Plugin User Guide &amp;amp; Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mkyong.com/gradle/gradle-create-a-jar-file-with-dependencies/&#34;&gt;Gradle – Create a Jar file with dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javacodegeeks.com/2012/11/packing-your-java-application-as-one-or-fat-jar.html&#34;&gt;Packing your Java application as one (or fat) JAR&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/05/generador-de-paginas-web-estaticas-y-bitacoras-con-hugo/</id>
        <title>Generador de páginas web estáticas y bitácoras Hugo</title>        
        <updated>2018-06-05T18:30:00+02:00</updated>
        <published>2018-05-25T18:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/05/generador-de-paginas-web-estaticas-y-bitacoras-con-hugo/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Hugo es un de las mejores herramientas en la categoría de generadores de páginas web estáticas, también puede utilizarse para generar bitácoras. Su fácil instalación, rapidez, personalización o su gran sistema de plantillas y taxonomía son varias de sus características destacadas. Con Hugo conseguí resolver varias de las necesidades que tenía para Blog Bitix, la gestión de enlaces internos y externos, personalización de diseño y procesado de imágenes.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/hugo.png&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Hugo&#34; title=&#34;Hugo&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;En diciembre del 2013 pase de usar &lt;a href=&#34;https://www.blogger.com/&#34;&gt;Blogger&lt;/a&gt; a usar &lt;a href=&#34;http://octopress.org/&#34;&gt;Ocotpress&lt;/a&gt; junto con &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; para el hospedaje. En mayo del 2015 modifiqué mi bitácora para usar en vez de &lt;a href=&#34;http://octopress.org/&#34;&gt;Octopress&lt;/a&gt; la herramienta equivalente &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;, ambas sirven para generar sitios web estáticos formados únicamente por HTML, CSS, imágenes, documentos y JavaScript. Tanto Octopress, &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt; como Hugo y otros como &lt;a href=&#34;http://docs.getpelican.com&#34;&gt;Pelican&lt;/a&gt; son similares, a partir de archivos normalmente en formato &lt;em&gt;markdown&lt;/em&gt; genera el HTML de la página web o bitácora junto con los recursos estáticos que necesite. Cada una de estas opciones son adecuadas para páginas de presencia en internet y bitácoras.&lt;/p&gt;

&lt;p&gt;Varían en el lenguaje de programación que emplean, Octopress usa &lt;a href=&#34;https://www.ruby-lang.org/es/&#34;&gt;Ruby&lt;/a&gt; y Hugo usa &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt;, y el formato de las plantillas que utilizan para personalizar la generación del contenido. La &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/03/guia-para-la-creacion-de-un-blog-con-octopress/&#34;&gt;migración desde Blogger a Octopress&lt;/a&gt; que hice en 2013 me supuso una gran mejora al editar los artículos. La edición de los artículos se puede hacer con cualquier editor de textos en la computadora local en vez de usar una editor en un navegador mucho más limitado y lento, además de editar el texto la gestión de las imágenes es mucho más simple al tratarse como simples archivos que basta colocar entre el código fuente de la bitácora que usará el generador para producir la página web o bitácora y no menos importante aprovechar la corrección ortográfica de las palabras que en mi caso hago con &lt;a href=&#34;https://www.vim.org/&#34;&gt;vim&lt;/a&gt;, no me imagino la gran cantidad de errores que tendré en los artículos de Blogger y no me habré dado cuenta a pesar de siempre leer un par de veces cada artículo antes de pubicarlo. El &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/05/nuevo-diseno-en-blog-bitix/&#34;&gt;cambio de Octopress a Hugo&lt;/a&gt; más tarde me permitió otros aspectos importantes a la hora de editar los artículos.&lt;/p&gt;

&lt;p&gt;La web está formada por un conjunto de páginas enlazadas, la gestión de los enlaces es un aspecto muy importante en una página web y en una bitácora es igual. Si una página a la que hacíamos referencia cambia de dirección todos los enlaces que tuviésemos quedarán rotos. Hay varias posibilidades para &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/12/como-buscar-los-enlaces-rotos-de-un-sitio-web/&#34;&gt;buscar enlaces rotos&lt;/a&gt;, encontrados y sustituirlos usando Blogger es complicado ya que hay que usar el lento y poco cómodo editor web, usando Octopress era más sencillo haciendo una búsqueda y reemplazo en los archivos de texto en formato &lt;em&gt;markdown&lt;/em&gt; con un buen editor de textos pero con Hugo me resulta mucho más sencillo por la forma en que he organizado el código fuente. Los enlaces comunes que utilizo en múltiples artículos los incluyo en un &lt;a href=&#34;https://github.com/picodotdev/blog-bitix/blob/master/layouts/shortcodes/links.html&#34;&gt;&lt;em&gt;shortcode&lt;/em&gt;&lt;/a&gt; y otro para los &lt;a href=&#34;https://github.com/picodotdev/blog-bitix/blob/master/layouts/shortcodes/postslinks.html&#34;&gt;propios artículos del blog&lt;/a&gt; y luego en la página o artículo hago referencia a ellos usando un identificador de forma que si un día cambia una página de dirección o una URL de algún artículo solo he de hacer la sustitución en un único lugar en esos &lt;em&gt;shortcodes&lt;/em&gt;. Con &lt;a href=&#34;https://disqus.com/&#34;&gt;Disqus&lt;/a&gt; externalizo los comentarios.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/09/gestionar-los-enlaces-de-una-bitacora-con-hugo/&#34;&gt;Gestionar los enlaces de una bitácora con Hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La gestión de las imágenes es otro aspecto que si no se organiza se acaba con un directorio sin ninguna organización donde es complicado saber que imágenes utiliza cada artículo. Los principales directorios que utilizo son dos uno para &lt;a href=&#34;https://github.com/picodotdev/blog-bitix/tree/master/static/assets/images/logotipos&#34;&gt;imágenes de logotipos&lt;/a&gt; y otro para las &lt;a href=&#34;https://github.com/picodotdev/blog-bitix/tree/master/static/assets/images/posts&#34;&gt;imágenes de cada artículo&lt;/a&gt; con una subcarpeta por año y otra con el identificador del artículo. Hasta hace poco usaba &lt;a href=&#34;https://www.imagemagick.org&#34;&gt;ImageMagick&lt;/a&gt; para producir las previsulizaciones de las imágenes y una reducción de las imágenes originales. Recientemente en Hugo se ha incorporado la funcionalidad de aplicar procesado a las imágenes con lo que es posible generar estas previsualizaciones y reducciones sin necesidad de perder las &lt;a href=&#34;https://github.com/picodotdev/blog-bitix/tree/master/content/post/2018/2018-05-04-los-plantones-de-roble/images&#34;&gt;imágenes originales&lt;/a&gt;, esto tiene la ventaja de que si un tiempo después hay que hacer algún cambio a un imagen se puede utilizar la original. También podido simplificar la forma de organizar las imágenes, ahora al lado del artículo &lt;em&gt;markdown&lt;/em&gt; en que se usan.&lt;/p&gt;

&lt;p&gt;Tanto la gestión de enlaces como de los recursos estáticos es algo que no podía hacer con Blogger y fue uno de los principales motivos para migrar a un generador estático de páginas web. Como todo son archivos estáticos lo único que hace falta es un servidor web, hay varias opciones de hospedaje bastante baratas al no necesitar un lenguaje de programación en el servidor como PHP ni una base de datos relacional. Yo utilizo GitHub Pages que es incluso sin coste. Usando algunas de las &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/11/3-formas-sencillas-de-monetizar-un-blog/&#34;&gt;varias formas para monetizar un blog&lt;/a&gt; escribiendo contenido interesante y de forma regular los ingresos por este medio cubren el coste del hospedaje y del dominio.&lt;/p&gt;

&lt;p&gt;Con Hugo personalicé completamente el diseño y estilos de de la bitácora pero &lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;Hugo dispone de múltiples temas&lt;/a&gt;. En la página de &lt;a href=&#34;https://gohugo.io/documentation/&#34;&gt;documentación de Hugo&lt;/a&gt; está el formato a usar en las plantillas, &lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34;&gt;&lt;em&gt;shortcodes&lt;/em&gt;&lt;/a&gt; y &lt;a href=&#34;https://gohugo.io/templates/partials/&#34;&gt;&lt;em&gt;partials&lt;/em&gt;&lt;/a&gt; así como las &lt;a href=&#34;https://gohugo.io/templates/variables/&#34;&gt;variables disponibles&lt;/a&gt; y &lt;a href=&#34;https://gohugo.io/templates/functions/&#34;&gt;funciones&lt;/a&gt; disponibles en las plantillas. Con la &lt;a href=&#34;https://gohugo.io/overview/quickstart/&#34;&gt;guía de inicio rápido&lt;/a&gt; es posible tener una página web en unos pocos minutos y la &lt;a href=&#34;https://gohugo.io/overview/source-directory/&#34;&gt;estructura básica de directorios&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Una de las características destacadas de Hugo es que es muy rápido, en unos pocos segundos es capaz de generar la página web completa a partir del código fuente de los archivos. Ya he escrito más de 300 artículos y tarda menos de 3 segundos en generar este blog. Otra que destaco es que solo se necesita un único binario con lo que se evita el infierno de dependencias que en alguna ocasión con Octopress me causó problemas. Usando el servidor web incorporado que posee es posible previsualizar en local el contenido de la página antes de publicarla.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2013/12/hola-nuevo-mundo/&#34;&gt;¡Hola nuevo mundo!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/05/nuevo-diseno-en-blog-bitix/&#34;&gt;Nuevo diseño en Blog Bitix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/09/gestionar-los-enlaces-de-una-bitacora-con-hugo/&#34;&gt;Gestionar los enlaces de una bitácora con Hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/05/recuperar-datos-eficientemente-en-graphql-usando-batching/</id>
        <title>Recuperar datos eficientemente en GraphQL usando batching</title>        
        <updated>2018-05-20T19:00:00+02:00</updated>
        <published>2018-05-20T19:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/05/recuperar-datos-eficientemente-en-graphql-usando-batching/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/graphql.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;GraphQL&#34; title=&#34;GraphQL&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Dada una consulta con los datos a recuperar &lt;a href=&#34;http://graphql.org/&#34;&gt;GraphQL&lt;/a&gt; hace una llamada al correspondiente &lt;em&gt;resolver&lt;/em&gt; o &lt;em&gt;data fecher&lt;/em&gt; para obtener el valor de cada propiedad. Cuando se tratan de propiedades en un &lt;em&gt;java bean&lt;/em&gt; esto no supone ningún problema en cuanto a rendimiento pero cuando obtener el valor de una propiedad es costoso la consulta resulta ineficiente.&lt;/p&gt;

&lt;p&gt;Por ejemplo, siguiendo el ejemplo que he utilizado en anteriores &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/graphql/&#34;&gt;artículos sobre GraphQL&lt;/a&gt; de una librería en la que hay un tipo para representar un libro con una propiedad con sus comentarios, con una consulta que permite recuperar los libros para cada uno de ellos se llama al &lt;em&gt;resolver&lt;/em&gt; que recupera los comentarios. En este ejemplo no ya que están los datos en memoria y no se usa una base de datos pero si recuperar los comentarios de cada libro supusiera una consulta SQL en una base de datos relacional (o tráfico de red en una base de datos NoSQL u otro servicio) y la lista de libros devuelta fuese grande cada vez que se realizará esta consulta el número de sentencias SQL a ejecutar sería grande y el tiempo de respuesta pobre y con una carga mayor para el servidor de base de datos.&lt;/p&gt;

&lt;p&gt;Para hacer eficientemente este caso en GraphQL existe la funcionalidad de &lt;em&gt;batching&lt;/em&gt; con la que un &lt;em&gt;resolver&lt;/em&gt; o &lt;em&gt;data fecher&lt;/em&gt; puede recuperar los comentarios de todos los libros en una misma petición. Para esto GraphQL proporciona al &lt;em&gt;resolver&lt;/em&gt; en vez de cada libro individual la lista de todos los libros para los cuales hay recuperar los comentarios.&lt;/p&gt;

&lt;p&gt;Esta es la teoría ya que en el momento de escribir este artículo en la &lt;a href=&#34;https://github.com/graphql-java/graphql-java-tools&#34;&gt;librería de utilidades que hace más sencillo usar GraphQL en Java&lt;/a&gt; se implementó una &lt;a href=&#34;https://github.com/graphql-java/graphql-java-tools/issues/12&#34;&gt;petición de mejora para añadir &lt;em&gt;batching&lt;/em&gt;&lt;/a&gt; a los &lt;em&gt;resolvers&lt;/em&gt;, en su momento se añadió la funcionalidad pero no de forma correcta como me di cuenta a escribir y probar el ejemplo de esta serie de artículos de modo que les creé esta &lt;a href=&#34;https://github.com/graphql-java/graphql-java-tools/issues/93&#34;&gt;petición para corregir el soporte de &lt;em&gt;batching&lt;/em&gt;&lt;/a&gt;. Tres días depués de haber creado la petición en GitHub alguien envío un &lt;em&gt;pull request&lt;/em&gt; pero no ha sido hasta después de casi seis meses que finalmente se ha aceptado, fusionado y publicado en la versión 5.1.0.&lt;/p&gt;

&lt;p&gt;La firma del método del &lt;em&gt;resolver&lt;/em&gt; para recuperar los comentarios de un libro sin usar &lt;em&gt;batching&lt;/em&gt; y usando &lt;em&gt;batching&lt;/em&gt; son los siguientes respectivamente. Estos al igual que cualquier otro método del &lt;em&gt;resolver&lt;/em&gt; puede recibir parámetros con los que implementar la funcionalidad que se desee, en este caso para limitar el número de resultados devueltos y para devolverlos a partir de uno  dado.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/fa91df2d0203a0e2137c461ff387719f.js?file=BookResolver.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;Con la lista completa de libros de la que hay que recuperar los comentarios ya sería posible lanzar una única consulta SQL a una base de datos relacional en vez de una por cada libro. El método que emplea &lt;em&gt;batching&lt;/em&gt; ha de estar anotado con la anotación &lt;em&gt;@Batched&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;La consulta de GraphQL a realizar para recuperar los tres primeros comentarios de cada libro y los resultados que devuelve son los siguientes. La consulta parece un tanto compleja porque la propiedad de los comentarios implementa paginación pero básicamente se recupera de cada libro su título y los comentarios.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/fa91df2d0203a0e2137c461ff387719f.js?file=curl.sh&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/fa91df2d0203a0e2137c461ff387719f.js?file=System.out&#34;&gt;&lt;/script&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/GraphQL&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradew run&lt;/code&gt;.
&lt;/p&gt;



        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/05/depurar-codigo-javascript-con-la-instruccion-debugger/</id>
        <title>Depurar código JavaScript con la instrucción debugger</title>        
        <updated>2018-05-19T12:00:00+02:00</updated>
        <published>2018-05-18T19:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/05/depurar-codigo-javascript-con-la-instruccion-debugger/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/javascript.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;JavaScript&#34; title=&#34;JavaScript&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Los navegadores web utilizan la palabra clave sentencia &lt;em&gt;debugger;&lt;/em&gt; como punto de ruptura para iniciar el depurado de un código JavaScript. En vez de poner el punto de ruptura desde el navegador utilizando la herrmienta de depuración para desarrolladores con esta instrucción se puede poner en el código fuente donde se desee, de esta forma se evita buscar entre los múltiples recursos que haya cargados en la página e ir a la línea en la que se desea iniciar la depuración poniendo un punto de ruptura.&lt;/p&gt;

&lt;p&gt;Suponiendo que se desea poner un punto de ruptura en un código JavaScript hay que editar el archivo JavaScript de código fuente e incluir la sentencia &lt;em&gt;debugger;&lt;/em&gt; como en el siguiente caso. Cuando el navegador ejecute esa sentencia iniciará, tiendo las herramientas de depuración abiertas, el depurador.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/f0b4d4eba1b8428724f2d2a63b0a496b.js?file=Debugger.html&#34;&gt;&lt;/script&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
  
  
  
  
  
  

  
  
  

  
  
  















&lt;figure&gt;
    
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/05/depurar-codigo-javascript-con-la-instruccion-debugger/images/javascript-debugger_hu846d34e90b5e643f744d4823c28f732f_278539_2560x1440_fit_box_2.png&#34; title=&#34;JavaScript Debugger&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/05/depurar-codigo-javascript-con-la-instruccion-debugger/images/javascript-debugger_hu846d34e90b5e643f744d4823c28f732f_278539_300x200_fit_box_2.png&#34; width=&#34;300&#34; height=&#34;175&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;JavaScript Debugger&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;Con la herramienta de depuración abierta se pueden poner expresiones de inspección, nuevos puntos de ruptura e ir paso a paso en la ejecución del código JavaScript. Esta sentencia para iniciar la depuración es lo mismo que añadir un punto de ruptura inspeccionando los recursos de JavaScript de la página pero quizá resulta más cómodo.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/debugger&#34;&gt;MDN debugger&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="javascript"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/05/gestion-de-errores-con-either-o-try-en-vez-de-con-codigo-de-error-null-pptional-checked-exception-o-unchecked-exception/</id>
        <title>Gestión de errores con Either o Try en vez de con código de error, null, Optional, checked exception o unchecked exception</title>        
        <updated>2018-05-11T20:00:00+02:00</updated>
        <published>2018-05-11T20:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/05/gestion-de-errores-con-either-o-try-en-vez-de-con-codigo-de-error-null-pptional-checked-exception-o-unchecked-exception/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;A lo largo del tiempo han surgido varias formas de gestionar las excepciones. En C hace muchos años eran con códigos de error, en Java se incorporaron en el lenguaje las excepciones &lt;em&gt;checked&lt;/em&gt; o &lt;em&gt;uncheked&lt;/em&gt; o la nueva clase Optional en Java cada una con sus ventajas y y algunas deficiencias. Más recientemente usando un tipo tal que &lt;em&gt;Either&lt;L,R&gt;&lt;/em&gt; son otra forma para el tratamiento de errores sobre las opciones anteriores.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Una parte importante para el correcto funcionamiento de un programa corresponde a la gestión de errores que pueden producirse en su ejecución. Si se trata de un programa que se comunica vía interfaz de red ha de estar preparado ante la situación que la conexión se pierda o se produzcan errores en la transmisión porque por ejemplo se ha desconectado el cable de red o la WiFi no es estable. Si se trata de un programa que guarda datos en el almacenamiento persistente también pueden producirse errores como que el archivo ya existe, el directorio no existe o el espacio del disco se ha agotado. Los posibles casos de error que pueden producirse en un programa son muchos y variados.&lt;/p&gt;

&lt;p&gt;En épocas más antiguas una forma de gestionar los errores era y sigue siendo con códigos de error donde la función o el código de salida de un programa retorna un 0 si no se ha producido ningún error o un número distinto de cero si se ha producido algún error, con un código de salida diferente por cada error. Dado que no hay obligación de gestionar adecuadamente el código de salida a veces no se hace con el consiguiente posible mal funcionamiento del programa. Otra forma de código de error es retornar un valor &lt;em&gt;null&lt;/em&gt; en un método o función pero que no tratado adecuadamente producirá una excepción de tipo &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/lang/NullPointerException.html&#34;&gt;NullPointerExcetion&lt;/a&gt;. Con la introducción de la clase &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/util/Optional.html&#34;&gt;Optional&lt;/a&gt; entre otras &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/&#34;&gt;novedades de Java 8&lt;/a&gt; los punteros nulos se gestionan más adecuadamente pero en los casos en los que se devuelve un puntero &lt;em&gt;null&lt;/em&gt; no se proporciona información de cuál ha sido la condición de error que se ha producido.&lt;/p&gt;

&lt;p&gt;Para obligar a gestionar adecuadamente las condiciones de error e informar de que posibles condiciones de error se pueden producir se incorporaron en algunos lenguajes las excepciones como en Java. Las excepciones &lt;em&gt;checked&lt;/em&gt;, aquellas que son declaradas y de obligado tratamiento, garantizan que sean tratadas de alguna forma pero algo molestas con las sentencias &lt;em&gt;try-catch-exception&lt;/em&gt;. Las excepciones &lt;em&gt;unchecked&lt;/em&gt;, aquellas que no es necesario declararlas y no de obligado tratamiento, son arriesgadas ya que al igual que los códigos de error no obliga a darles un tratamiento además de que no se declaran que excepciones es posible que sean lanzadas.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/06b00278af3fe06943f6892acedb4b13.js?file=Main.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/06b00278af3fe06943f6892acedb4b13.js?file=System.out&#34;&gt;&lt;/script&gt;

&lt;p&gt;En algunos lenguajes con capacidades funcionales se ha propuesto una nueva forma para la gestión de condiciones de error, en Java y con la librería &lt;a href=&#34;https://www.vavr.io/&#34;&gt;Vavr&lt;/a&gt; se proporciona la clase &lt;a href=&#34;http://static.javadoc.io/io.vavr/vavr/0.9.2/io/vavr/control/Either.html&#34;&gt;Either&lt;/a&gt; que es un tipo con la definición de tipo genérico &lt;em&gt;Either&amp;lt;L,R&amp;gt;&lt;/em&gt;. Que un método devuelva &lt;em&gt;Either&lt;BigDecmal, Exception&gt;&lt;/em&gt; indica que puede devolver en el caso del ejemplo un &lt;em&gt;Integer&lt;/em&gt; en el caso correcto o una excepción en el caso de error. Un potencial fallo de esta opción es que no hay obligación de usar un &lt;em&gt;try-catch&lt;/em&gt; pero si se quiere usar el valor devuelto en caso correcto se ha de tener en cuenta el potencial caso de que lo haya es valor derecho. La clase &lt;em&gt;Either&lt;/em&gt; proporciona métodos para tratar adecuadamente en caso de que esté presente el valor izquierdo o el valor derecho.&lt;/p&gt;

&lt;p&gt;La clase &lt;em&gt;Either&lt;/em&gt; tiene múltiples métodos para comprobar si el valor que tiene es un valor del tipo izquierdo, derecho, obtener el valor izquierdo, derecho y múltiples métodos que hereda de &lt;a href=&#34;http://static.javadoc.io/io.vavr/vavr/0.9.2/io/vavr/Value.html&#34;&gt;Value&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;En vez de retornar un &lt;em&gt;Either&lt;/em&gt; en un método usando Vavr se puede utilizar la clase &lt;a href=&#34;https://static.javadoc.io/io.vavr/vavr/0.9.2/io/vavr/control/Try.html&#34;&gt;Try&lt;/a&gt; como otra forma de gestionar las excepciones. Con &lt;em&gt;Try&lt;/em&gt; el método no es necesario que devuelva un &lt;em&gt;Either&lt;/em&gt; de modo que retorne el valor en el caso correcto y lance una exepción en caso de error. El &lt;em&gt;Try&lt;/em&gt; puede convertirse a un &lt;em&gt;Either&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/JavaException&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew run&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/10/las-excepciones-del-lenguaje-java/&#34;&gt;Las excepciones del lenguaje Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ashtonkemerling.com/blog/2017/01/26/java-without-if/&#34;&gt;Java Without If&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.vavr.io/vavr-docs/#_either&#34;&gt;Either Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/05/plantillas-con-etiquetas-no-balanceadas-en-apache-tapestry/</id>
        <title>Plantillas con etiquetas no balanceadas en Apache Tapestry</title>        
        <updated>2018-05-01T10:30:00+02:00</updated>
        <published>2018-05-01T10:30:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/05/plantillas-con-etiquetas-no-balanceadas-en-apache-tapestry/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Apache Tapestry es uno de los mejores &lt;em&gt;frameworks&lt;/em&gt; web para Java que he usado, sin embargo, también tiene algún incordio o curiosidad. Una de ellas es que las plantillas han de ser XML bien formado y en este caso que comento en el que necesitaríamos una plantilla con etiquetas desbalanceadas nos obliga a buscar una solución, esta es la que uso.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/apache-tapestry-5.svg&#34; class=&#34;right &#34; width=&#34;400&#34; alt=&#34;Apache Tapestry&#34; title=&#34;Apache Tapestry&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Las plantillas en &lt;a href=&#34;https://tapestry.apache.org/&#34;&gt;Apache Tapestry&lt;/a&gt; son XHTML, esto quere decir que al ser &lt;a href=&#34;http://es.wikipedia.org/wiki/Validaci%C3%B3n_XML#Documento_Bien_Formado&#34;&gt;archivos xml han de estar bien formados&lt;/a&gt; con sus etiquetas bien balanceadas y anidadas. Esto tiene la ventaja de que Tapestry nos avisará cuando se intente generar código HTML mal formado con el contenido de plantilla, una especie de compilación que si no es correcta no pasará desapercibida como en otros &lt;em&gt;frameworks&lt;/em&gt; y que puede generar otro tipo de errores. Sin embargo, también tiene una desventaja y es que si necesitamos generar una etiqueta de inicio dentro de un componente &lt;em&gt;if&lt;/em&gt; la plantilla no será válida.&lt;/p&gt;

&lt;p&gt;Supongamos que queremos generar un contenido a tres columnas de una serie de elementos, en cada tercer elemento de la fila tendremos que cerrar la fila anterior y abrir una nueva. El ejemplo de lo que no se puede hacer es el siguiente:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/72a843db91d1bc57442ed771f835adf0.js?file=template-1.tml&#34;&gt;&lt;/script&gt;

&lt;p&gt;En este ejemplo las etiquetas &lt;em&gt;div&lt;/em&gt; de apertura y cierre hacen que el XML de la plantilla no esté bien balanceado. No se si habrá otra forma mejor pero esta es el rodeo que uso para tener una plantilla bien balanceada y generar el contenido HTML necesario. En el código Java del componente creo un método que devuelve un mapa de trozos de HTML que no podría incluir en la propia plantilla, cada trozo de HTML tiene una clave asociada por la que identificarlo, en este caso &lt;em&gt;open&lt;/em&gt; y &lt;em&gt;close&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/72a843db91d1bc57442ed771f835adf0.js?file=Component.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;Usando estos métodos en la plantilla el código de la plantilla &lt;em&gt;tml&lt;/em&gt; ya bien formado quedaría de la siguiente manera, usando el componente &lt;a href=&#34;http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/OutputRaw.html&#34;&gt;OutputRaw&lt;/a&gt; se emite el trozo HTML de apertura o cierre:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/72a843db91d1bc57442ed771f835adf0.js?file=template-2.tml&#34;&gt;&lt;/script&gt;

&lt;p&gt;Esta pequeña «ñapa» que no es muy habitual en las plantillas pero que en algún caso puede ser necesario emplear es una forma de hacer las plantillas &lt;em&gt;tml&lt;/em&gt; bien formadas en circunstancias donde incluyéndolo en la plantilla no lo sería.&lt;/p&gt;

&lt;p&gt;Prefiero que Tapestry me valide que el XML de la plantilla esté bien formado evitando que se pudiera generar HTML con etiquetas no balanceadas y me obligue a hacer este rodeo que la posibilidad de generar HTML con etiquetas mal balanceadas que los navegadores aceptan pero que en algún caso podría provocar una desmaquetación, aunque en los casos que se aplique esta solución hay que tener especial cuidado ya que como no se realiza ninguna validación al emitir etiquetas de forma «cruda» el HTML generado podría estar mal balanceado.&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2014/12/portada-PugInTapestry-thumb.png&#34; alt=&#34;Portada libro: PlugIn Tapestry&#34; title=&#34;Portada libro: PlugIn Tapestry&#34; style=&#34;float: left; margin-right: 1.5em;&#34;&gt;
    &lt;h3&gt;Libro PlugIn Tapestry&lt;/h3&gt;
    &lt;p&gt;Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este &lt;i&gt;framework&lt;/i&gt; en el formato que prefieras, &lt;a href=&#34;http://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry&lt;/a&gt;, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.&lt;/p&gt;
    &lt;br style=&#34;clear: both;&#34;&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf&#34; class=&#34;btn btn-lg btn-success&#34;&gt;PDF&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.epub&#34; class=&#34;btn btn-lg btn-success&#34;&gt;EPUB&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.mobi&#34; class=&#34;btn btn-lg btn-success&#34;&gt;MOBI&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.zip&#34; class=&#34;btn btn-lg btn-success&#34;&gt;HTML&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry&#34; class=&#34;btn btn-lg btn-success&#34;&gt;Código fuente ejemplos&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;



        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="tapestry"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/04/personalizar-el-prompt-del-sistema-del-interprete-de-comandos-bash/</id>
        <title>Personalizar el prompt del sistema del intérprete de comandos Bash</title>        
        <updated>2018-04-29T21:30:00+02:00</updated>
        <published>2018-04-29T10:30:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/04/personalizar-el-prompt-del-sistema-del-interprete-de-comandos-bash/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/gnu.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;GNU&#34; title=&#34;GNU&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/linux.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Linux&#34; title=&#34;Linux&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;El &lt;em&gt;prompt&lt;/em&gt; de la terminal es el símbolo del sistema que precede al comando que introducimos en la terminal y por defecto indica el directorio de trabajo que utilizarán los comandos y el directorio que utilizarán las rutas relativas. El &lt;em&gt;prompt&lt;/em&gt; del intérprete de comandos &lt;em&gt;Bash&lt;/em&gt; se puede personalizar para por ejemplo modificar el color de su texto y la información que incluye con las preferencias del usuario.&lt;/p&gt;

&lt;p&gt;El &lt;em&gt;prompt&lt;/em&gt; se configura con la variable de entorno &lt;em&gt;PS1&lt;/em&gt; que en &lt;em&gt;Bash&lt;/em&gt; está en el directorio personal definido en el archivo &lt;em&gt;.bashrc&lt;/em&gt;. Los colores se especifican con una secuencia de caracteres y números que forman códigos de escape que son interpretados de forma especial, estas secuencias están mezclados con las secuencias de la información a mostrar. Como conocer las secuencias de caracteres con los códigos de escape ANSI para los colores y letras para la información es complicado de escribir o conocer al detalle en la web &lt;a href=&#34;https://www.kirsle.net/wizards/ps1.html&#34;&gt;Bash $PS1 Generator&lt;/a&gt; hay un asistente que facilita el crear un &lt;em&gt;prompt&lt;/em&gt; a nuestro gusto de forma sencilla y correcta.&lt;/p&gt;

&lt;p&gt;El siguiente es el que utilizo en mi sistema con colores, el nombre del usuario, el nombre sistema y el directorio de trabajo actual.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
  
  
  
  
  
  

  
  
  

  
  
  















&lt;figure&gt;
    
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/04/personalizar-el-prompt-del-sistema-del-interprete-de-comandos-bash/images/prompt-bash-personalizado_hu9d8ea0e92ec202a66f2573bf5c6472ac_8224_2560x1440_fit_box_2.png&#34; title=&#34;Prompt de la terminal personalizado&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/04/personalizar-el-prompt-del-sistema-del-interprete-de-comandos-bash/images/prompt-bash-personalizado_hu9d8ea0e92ec202a66f2573bf5c6472ac_8224_300x200_fit_box_2.png&#34; width=&#34;300&#34; height=&#34;161&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Prompt de la terminal personalizado&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;Según se edita el &lt;em&gt;prompt&lt;/em&gt; el asistente previsualiza como queda en la sección &lt;em&gt;Preview&lt;/em&gt;, una vez que el &lt;em&gt;prompt&lt;/em&gt; es el que deseamos en la sección &lt;em&gt;Result&lt;/em&gt; el asistente ofrece el contenido de la variable de entorno &lt;em&gt;PS1&lt;/em&gt; que hay que añadir o cambiar en el archivo &lt;em&gt;~/.bashrc&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/d7f2101c07e92766f124b0a12e84f09a.js?file=.bashrc&#34;&gt;&lt;/script&gt;

&lt;p&gt;Si quieres mostrar alguna información que sea el resultado de algún comando también se puede añadir al &lt;em&gt;prompt&lt;/em&gt;. Por ejemplo, supón que se desea añadir la hora del sistema al &lt;em&gt;prompt&lt;/em&gt; útil si se quiere a modo de registro para conocer posteriormente a que hora se lanzó un comando, la información de la hora entre otras posibles cosas relacionadas con la fecha la devuelve el comando &lt;em&gt;date&lt;/em&gt;. El siguiente &lt;em&gt;script&lt;/em&gt; de &lt;em&gt;Bash&lt;/em&gt; usando el comando &lt;em&gt;date&lt;/em&gt; proporciona la información de la hora a añadir en este caso.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/d7f2101c07e92766f124b0a12e84f09a.js?file=date.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Ahora hay que incluir esta información en el &lt;em&gt;prompt&lt;/em&gt; de la siguiente forma.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/d7f2101c07e92766f124b0a12e84f09a.js?file=.bashrc-date&#34;&gt;&lt;/script&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
  
  
  
  
  
  

  
  
  

  
  
  















&lt;figure&gt;
    
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/04/personalizar-el-prompt-del-sistema-del-interprete-de-comandos-bash/images/prompt-bash-date_hud4a1d03f3ab4a9cb27abe1f1606be98d_8996_2560x1440_fit_box_2.png&#34; title=&#34;Prompt de la terminal personalizado con el resultado de un comando&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/04/personalizar-el-prompt-del-sistema-del-interprete-de-comandos-bash/images/prompt-bash-date_hud4a1d03f3ab4a9cb27abe1f1606be98d_8996_300x200_fit_box_2.png&#34; width=&#34;300&#34; height=&#34;161&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Prompt de la terminal personalizado con el resultado de un comando&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;Otro caso habitual es añadir la rama de git del directorio actual de trabajo y si esta tiene cambios como comento en &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/04/personalizar-el-prompt-del-sistema-del-interprete-de-comandos-bash/&#34;&gt;Prompt de la terminal personalizado en carpetas de git con el intérprete Bash&lt;/a&gt;. El &lt;em&gt;script&lt;/em&gt; necesario que proporciona &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; es más complejo que el caso anterior pero con la misma finalidad, el &lt;em&gt;script&lt;/em&gt; está en &lt;a href=&#34;https://github.com/git/git/blob/master/contrib/completion/git-prompt.sh&#34;&gt;git-prompt.sh&lt;/a&gt; y requiere modificar la variable de entorno &lt;em&gt;PS1&lt;/em&gt; o bien &lt;em&gt;PROMPT_COMMAND&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
  
  
  
  
  
  

  
  
  

  
  
  















&lt;figure&gt;
    
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/04/personalizar-el-prompt-del-sistema-del-interprete-de-comandos-bash/images/git-bash_hu4332dbb3d900d0136c532c59777fc2b2_50870_2560x1440_fit_box_2.png&#34; title=&#34;Prompt de la terminal por defecto&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/04/personalizar-el-prompt-del-sistema-del-interprete-de-comandos-bash/images/git-bash_hu4332dbb3d900d0136c532c59777fc2b2_50870_300x200_fit_box_2.png&#34; width=&#34;300&#34; height=&#34;191&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Prompt de la terminal personalizado en carpeta de git&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/9200862/short-date-in-bash-ps1-prompt&#34;&gt;Short date in bash PS1 prompt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/04/la-clase-optional-de-java-para-evitar-la-excepcion-nullpointerexception/</id>
        <title>La clase Optional de Java para evitar la excepción NullPointerException</title>        
        <updated>2018-04-28T00:00:00+02:00</updated>
        <published>2018-04-28T00:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/04/la-clase-optional-de-java-para-evitar-la-excepcion-nullpointerexception/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Con la clase &lt;em&gt;Optional&lt;/em&gt; añadida en el JDK en la versión 8 del lenguaje Java se puede evitar una de las excepciones más comunes que se produce cuando se hace uso de una referencia nula a un objeto.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Una de las excepciones que más se producen en un programa hecho con el lenguaje Java es la conocida &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/lang/NullPointerException.html&#34;&gt;NullPointerExpcetion&lt;/a&gt; que ocurre cuando se hace uso de una variable que referencia a un objeto pero que el contenido de la variable es &lt;em&gt;null&lt;/em&gt;, sin valor o sin contener una referencia a un objeto de modo que la llamada al método no es posible. La excepción &lt;em&gt;NullPointerException&lt;/em&gt; extiende de &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/lang/RuntimeException.html&#34;&gt;RuntimeException&lt;/a&gt; por lo que es una &lt;em&gt;unchecked exception&lt;/em&gt; y por ello no es necesario capturarla o lanzarla, cuando se produce hay un error en el programa.&lt;/p&gt;

&lt;p&gt;Entre las &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/&#34;&gt;novedades que Java 8 incluyó en el lenguaje y JDK&lt;/a&gt; está la inclusión de la clase &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/util/Optional.html&#34;&gt;Optional&lt;/a&gt; con la que haciendo uso de ella se pueden evitar los &lt;em&gt;NullPointerException&lt;/em&gt;. Un objeto de tipo &lt;em&gt;Optional&lt;/em&gt; contiene o no una referencia a otro tipo de objeto. Por ejemplo, una variable de tipo &lt;em&gt;Optional&amp;lt;String&amp;gt;&lt;/em&gt; contiene una referencia a un objeto &lt;em&gt;Optional&lt;/em&gt; que a su vez contiene o no una referencia a una cadena &lt;em&gt;String&lt;/em&gt;. El uso de la variable &lt;em&gt;Optional&lt;/em&gt; no producirá un &lt;em&gt;NullPointerException&lt;/em&gt; y con sus métodos es posible saber si contiene o no una referencia al tipo usado en el genérico. Con el método &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/util/Optional.html#isPresent()&#34;&gt;isPresent()&lt;/a&gt; es posible saber si el &lt;em&gt;Optional&lt;/em&gt; contiene una referencia, con &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/util/Optional.html#orElse(T)&#34;&gt;orElse()&lt;/a&gt; y &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/util/Optional.html#orElseGet(java.util.function.Supplier)&#34;&gt;orElseGet()&lt;/a&gt; se obtiene la referencia que indiquemos en caso de que no tenga una referencia y con los métodos estáticos a modo de constructores &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/util/Optional.html#of(T)&#34;&gt;of()&lt;/a&gt; y &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/util/Optional.html#ofNullable(T)&#34;&gt;ofNullable()&lt;/a&gt; se obtiene respectivamente una instancia de &lt;em&gt;Optional&lt;/em&gt; con la referencia indicada que no puede ser nula o un &lt;em&gt;Optional&lt;/em&gt; que podría contener una referencia nula.&lt;/p&gt;

&lt;p&gt;Usar un objeto &lt;em&gt;Optional&lt;/em&gt; advierte al programador de que la referencia que contiene puede ser nula y usada correctamente evita los &lt;em&gt;NullPointerException&lt;/em&gt; aunque usarla indiscriminadamente hace del código más incómodo de escribir y leer, en variables locales es prescindible su uso pero útil en algunos valores de retorno o parámetros de métodos.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/9552591792afa8d6d44d11d25a380f6d.js?file=jshell.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Hay algunos métodos más en la clase &lt;em&gt;Optional&lt;/em&gt; con algunas funcionalidades adicionales que hace uso de las nuevas capacidades funcionales del lenguaje como convertir un &lt;em&gt;Optional&lt;/em&gt; a un &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/util/stream/Stream.html&#34;&gt;Stream&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/10/las-excepciones-del-lenguaje-java/&#34;&gt;Las excepciones del lenguaje Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/one-dollar-solution-to-avoid-null-pointer-exceptio&#34;&gt;The $1 Solution to Avoid the Null Pointer Exception&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/04/la-sentencia-try-with-resources-de-java/</id>
        <title>La sentencia try-with-resources de Java</title>        
        <updated>2018-04-21T14:30:00+02:00</updated>
        <published>2018-04-21T14:30:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/04/la-sentencia-try-with-resources-de-java/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Una de las novedades que incorporó Java 7 es la sentencia &lt;em&gt;try-with-resources&lt;/em&gt; con el objetivo de cerrar los recursos de forma automática en la sentencia &lt;em&gt;try-catch-finally&lt;/em&gt; y hacer más simple el código. Aquellas varaibles cuyas clases implementan la interfaz &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/lang/AutoCloseable.html&#34;&gt;AutoCloseable&lt;/a&gt; pueden declararse en el bloque de inicialización de la sentencia &lt;em&gt;try-with-resources&lt;/em&gt; y sus métodos &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/lang/AutoCloseable.html#close()&#34;&gt;close()&lt;/a&gt; serán llamados después del bloque &lt;em&gt;finally&lt;/em&gt; como si su código estuviese de forma explícita.&lt;/p&gt;

&lt;p&gt;Un ejemplo de código que lee una línea de un fichero usando la sentencia &lt;em&gt;try-with-resources&lt;/em&gt; es la siguiente de Java 7. Como se observa no es necesario llamar de forma explícita al método &lt;em&gt;close&lt;/em&gt; para liberar los recursos de la instancia de la clase &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/io/BufferedReader.html&#34;&gt;BufferedReader&lt;/a&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/9779dde2d563dcf7e8bb114f44966003.js?file=Java7.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;Anteriormente a Java 7 esto se debía hacer de la siguiente manera con unas pocas lineas más de código algo menos legibles.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/9779dde2d563dcf7e8bb114f44966003.js?file=Java6.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;El código es similar pero no es equivalente. Observesé que require declarar la variable &lt;em&gt;br&lt;/em&gt; fuera del ámbito de la sentencia &lt;em&gt;try-catch-finally&lt;/em&gt; donde se usa. Además, si se produce una excepción en el bloque &lt;em&gt;try&lt;/em&gt; y posteriormente en el bloque &lt;em&gt;finally&lt;/em&gt; en Java 6 la excepción del bloque &lt;em&gt;try&lt;/em&gt; se enmascara y la que se lanza es la del bloque &lt;em&gt;finally&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;La excepción que se lanza en el bloque &lt;em&gt;try&lt;/em&gt; y usando el método &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)&#34;&gt;Throwable.addSuppressed()&lt;/a&gt; que se añadió en la API en Java 7 junto con el método &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/lang/Throwable.html#getSuppressed()&#34;&gt;Throwable.getSuppressed()&lt;/a&gt; se obtienen las excepciones enmascaradas o suprimidas en la sentencia &lt;em&gt;try-with-resources&lt;/em&gt;. El orden de ejecución de los bloques de una sentencia &lt;em&gt;try-with-resources&lt;/em&gt; es el indicado en los números emitidos con el método &lt;em&gt;println&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/9779dde2d563dcf7e8bb114f44966003.js?file=Main.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/9779dde2d563dcf7e8bb114f44966003.js?file=System.out&#34;&gt;&lt;/script&gt;

&lt;p&gt;La mayoría de clases relacionadas con entrada y salida implementan la interfaz &lt;em&gt;AutoCloseable&lt;/em&gt; como las relacionadas con el sistema de ficheros y flujos de red como &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/io/InputStream.html&#34;&gt;InputStream&lt;/a&gt;, también las relacionadas con la conexión de base de datos mediante JDBC con &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/sql/Connection.html&#34;&gt;Connection&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html&#34;&gt;The try-with-resources Statement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tutorials.jenkov.com/java-exception-handling/try-with-resources.html&#34;&gt;Try-with-resources in Java 7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/a/27033358&#34;&gt;What is a suppressed exception?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/04/la-controversia-sobre-las-excepciones-checked-y-unchecked/</id>
        <title>La controversia sobre las excepciones checked y unchecked</title>        
        <updated>2018-04-20T17:00:00+02:00</updated>
        <published>2018-04-20T17:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/04/la-controversia-sobre-las-excepciones-checked-y-unchecked/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Las excepciones son una forma de gestionar las condiciones de error que se dan en los programas. En el lenguaje C se utiliza el valor de retorno de la función para determinar la condición de error que se ha producido, el problema es que comprobar el valor de retorno puede ignorarse y la gestión de errores está mezclada con la tarea del programa.&lt;/p&gt;

&lt;p&gt;El lenguaje Java utiliza un &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/10/las-excepciones-del-lenguaje-java/&#34;&gt;mecanismo de excepciones&lt;/a&gt;, las excepciones son objetos que se lanzan cuando se produce una condición de error. Todas las excepciones en Java heredan de &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/lang/Throwable.html&#34;&gt;Throwable&lt;/a&gt; subdividiéndose en &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/lang/Error.html&#34;&gt;Error&lt;/a&gt; y &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/lang/Exception.html&#34;&gt;Exception&lt;/a&gt;, las primeras son condiciones de error del sistema y las segundas condiciones de error del programa. A su vez las &lt;em&gt;Exception&lt;/em&gt; pueden ser &lt;em&gt;checked&lt;/em&gt; si heredan de esta y son aquellas que el compilador fuerza a que sean capturadas no pudiendo ignorarse, han de capturarse en una construcción &lt;em&gt;try catch&lt;/em&gt; o declarar que el método puede lanzar la excepción no capturada. Las excepciones &lt;em&gt;uncheked&lt;/em&gt; heredan de &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/lang/RuntimeException.html&#34;&gt;RuntimeException&lt;/a&gt; que heredan a su vez de &lt;em&gt;Exception&lt;/em&gt; pero tienen la particularidad de que no es necesario capturarlas ni declararlas como que se pueden lanzar debido a que se consideran condiciones de error en la programación como un acceso a un &lt;em&gt;array&lt;/em&gt; fuera de rango que produce un &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/lang/ArrayIndexOutOfBoundsException.html&#34;&gt;ArrayIndexOutOfBounds&lt;/a&gt;, el conocido &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/lang/NullPointerException.html&#34;&gt;NullPointerException&lt;/a&gt; cuando se utiliza una referencia nula, otro es &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/lang/ArithmeticException.html&#34;&gt;ArithmeticException&lt;/a&gt; que se produce al dividir por 0.&lt;/p&gt;

&lt;p&gt;Algunas ventajas de las excepciones son:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Separar el código que gestiona los errores del código con el caso principal del programa.&lt;/li&gt;
&lt;li&gt;Propagar errores hacia arriba en la pila de llamadas.&lt;/li&gt;
&lt;li&gt;Agrupar y diferenciar entre diferentes tipos de errores.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hay una cierta polémica sobre si las excepciones &lt;em&gt;checked&lt;/em&gt; son una buena idea. Entre los motivos que se alegan en contra de su uso están que cambiar la firma de un método añadiendo una nueva excepción como lanzable hace que el código que usase ese método podría ocasionar errores de compilación y que hace necesario el tratarla o declararla en la cadena de métodos hasta que sea tratada. Otro motivo es que a mayor nivel en la jerarquía de llamada en los métodos se necesitarán manejar una lista amplia de excepciones.&lt;/p&gt;

&lt;p&gt;En el lado contrario las excepciones se consideran que son buenas porque conocer las condiciones de error o excepción que puede lanzar el método forma parte del contrato del método y es necesario para realizar un correcto manejo de errores. Las excepciones &lt;em&gt;checked&lt;/em&gt; pueden parecer un incordio pero son necesarias para hacer un correcto manejo de errores y evitar que el programa falle por no tratar las condiciones de error de las que advertirían. Por otro lado no deberían silenciarse con un bloque &lt;em&gt;catch&lt;/em&gt; vacío sin una buena razón. En las excepciones &lt;em&gt;checked&lt;/em&gt; el compilador es capaz de advertir si alguna excepción no ha sido capturada o lanzada.&lt;/p&gt;

&lt;p&gt;Como regla general las excepciones &lt;em&gt;checked&lt;/em&gt; se usan cuando el programa es capaz de recuperarse del error y tratarlo adecuadamente, las &lt;em&gt;uncheked&lt;/em&gt; cuando se trata de un error de programación o no se puede hacer nada para recuperarse.&lt;/p&gt;

&lt;p&gt;En el siguiente código se observa como capturar, lanzar y declarar excepciones en las firmas de los métodos en Java en una construcción &lt;em&gt;try catch finally&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/c0fc9936712783e76b22088e5b8f2b2e.js?file=Bank.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/c0fc9936712783e76b22088e5b8f2b2e.js?file=Main.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;En el aparatado referncia incluyo unos buenos enlaces que amplian y detallan más apropiadamente la controversia sobre las excepciones &lt;em&gt;checked&lt;/em&gt; y &lt;em&gt;unchecked&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/tutorial/essential/exceptions/index.html&#34;&gt;Exceptions tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/tutorial/essential/exceptions/runtime.html&#34;&gt;Unchecked Exceptions — The Controversy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/tutorial/essential/exceptions/advantages.html&#34;&gt;Advantages of Exceptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/124143/why-are-exceptions-not-checked-in-net#126122&#34;&gt;Why are Exceptions not Checked in .NET?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.artima.com/intv/handcuffs.html&#34;&gt;The Trouble with Checked Exceptions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
</feed>

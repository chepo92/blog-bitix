<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://picodotdev.github.io/blog-bitix/tags/tapestry/</id>
    <title type="text">Blog Bitix</title>
    <subtitle>Recent content on Blog Bitix</subtitle>
    <updated>2017-12-30T09:30:00+01:00</updated>
    <author><name>pico.dev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix//assets/images/logotipos/hugo.png</icon>
    <logo>https://picodotdev.github.io/blog-bitix//assets/images/logotipos/hugo.png</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/12/hemeroteca-12/</id>
        <title>Hemeroteca #12</title>        
        <updated>2017-12-31T02:00:00+01:00</updated>
        <published>2017-12-30T09:30:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/12/hemeroteca-12/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;p&gt;Cuarto año de Blog Bitix y en febrero serán siete desde que empecé con &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es&#34;&gt;El blog del pico.dev&lt;/a&gt;. En los últimos seis meses he seguido publicando casi a dos artículos por semana y durante el 2017 ha sido casi siempre así, en este semestre han sido 48 artículos, que juntos con los 39 del primero son 87 durante el año 2017, mi mayor tasa de publicación en un año.&lt;/p&gt;

&lt;p&gt;En estas hemerotecas siempre repaso cual es la evolución de visitas e ingresos de AdSense que quizá a alguien más le resulte de interés. En Junio y Julio alcance unas 50K páginas vistas el mayor pico de visitas, aunque en meses posteriores han descendido, al principio lo achacaba a los meses vacacionales de verano pero luego se han mantenido no se si por alguna penalización de Google o algún artículo que recibía muchas visitas y haya descendido en su posicionamiento. En cualquier caso en los últimos meses del año las visitas han tenido una tendencia ascendente, de unas 40K páginas vistas y superior respecto a las de hace una año que comparándolas han sido de 25K en 2016 y de 38K en 2017 un crecimiento de un 85%. No está mal, si el año siguiente fuese igual me daría por muy satisfecho.&lt;/p&gt;

&lt;p&gt;En el apartado de ingresos por la publicidad AdSense, algunos artículos patrocinados y enlaces de afiliación también ha estado bien. En estos momentos por AdSense es raro el día que no recibo al menos un euro y algún día excepcional he recibido 8, otros algo menos de 2 y 3, mensualmente ya es habitual que esté en un rango de 30 y 45€. Al final el artículo que publiqué sobre los &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/02/cursos-de-formacion-de-keepcoding/&#34;&gt;cursos de formación de KeepCoding&lt;/a&gt; han merecido la pena como artículo patrocinado con la compra de dos usuario de tres cursos (aunque la mayoría de gente se registran a los cursos gratuitos), pero esto junto con los artículos patrocinados es más esporádico y por el momento poco habitual para mi.&lt;/p&gt;

&lt;p&gt;En alguna ocasión me han comentado que me donarían algo por los artículos que escribo, una posibilidad sería usar &lt;a href=&#34;https://www.patreon.com/&#34;&gt;Patreon&lt;/a&gt; o &lt;a href=&#34;https://www.paypal.com/&#34;&gt;PayPal&lt;/a&gt;, sin embargo, no me convence mucho la donación directa por ser demasiado generosa y he preferido añadir una &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/donacion/&#34;&gt;página con ciertos productos tecnológicos y &lt;em&gt;gamers&lt;/em&gt; seleccionados&lt;/a&gt; para que si alguien le gusta mis artículos, se acuerda y quiere donarme algo lo haga a través de estos enlaces de afiliación. Al que compra le cuesta lo mismo pero yo recibo una comisión. Esto me recuerda que debería hacer alguna nueva donación a proyectos de software libre y estoy pensando en &lt;a href=&#34;https://lineageos.org/&#34;&gt;Lineage OS&lt;/a&gt; y &lt;a href=&#34;https://www.replicant.us/&#34;&gt;Replicant&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Quien crea que es mucho que pruebe a crearse una bitácora, un canal en &lt;a href=&#34;https://www.youtube.com/&#34;&gt;YouTube&lt;/a&gt; o un &lt;em&gt;podcast&lt;/em&gt; y verá rápidamente que o se acierta en la temática y se es muy bueno creando contenido que genera interés o primero verá que han de pasar dos años y dedicar una ingente cantidad de horas a crear ese contenido para llegar a estas cifras que tampoco son altas, no en vano muchos de estos proyectos son abandonados al cabo de unos meses, por algo será.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/291/analytics-2017.png&#34; title=&#34;Analytics 2017 de Blog Bitix&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/291/analytics-2017-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/291/adsense-2017.png&#34; title=&#34;AdSense 2017 de Blog Bitix&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/291/adsense-2017-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Evolución visitas e ingresos de AdSense en 2017&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Pero por otra parte he recibido buenos comentarios sobre lo que escribo en Blog Bitix, por algunas personas vía &lt;a href=&#34;https://twitter.com/&#34;&gt;Twitter&lt;/a&gt; y otras en algún comentario que me anima a seguir escribiendo y compartiendo como hasta ahora lo que voy aprendiendo e investigando que algún día espero utilizar en algún trabajo antes de que me jubile o pruebe ser un jardinero o barrendero.&lt;/p&gt;

&lt;p&gt;Este semestre me propuse publicar una mayor cantidad de artículos relacionados con el lenguaje de programación Java con motivo de la pasada publicación de Java 9. Pero primero empecé con un par de artículos sobre &lt;em&gt;portlets&lt;/em&gt; y &lt;a href=&#34;http://tapestry.apache.org&#34;&gt;Apache Tapestry&lt;/a&gt; que en algún momento espero añadirlos en alguna sección del libro &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/08/actualizacion-del-libro-plugin-tapestry/&#34;&gt;PlugIn Tapestry&lt;/a&gt;. Por supuesto, varios artículos comentando las novedades más relevantes de Java 9 publicado en septiembre entre ellas la modularidad y otras no menos notables.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/07/introduccion-a-los-portales-y-ejemplo-de-portlet-con-liferay/&#34;&gt;Introducción a los portales y ejemplo de portlet con Liferay&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/07/portlets-con-el-framework-apache-tapestry-y-apache-pluto/&#34;&gt;Portlets con el framework Apache Tapestry y Apache Pluto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/07/iniciar-rapido-un-proyecto-de-java-con-gradle-o-de-spring-con-spring-initializr/&#34;&gt;Iniciar rápido un proyecto de Java con Gradle o de Spring con Spring Initializr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/07/iniciacion-a-la-programacion-concurrente-en-java/&#34;&gt;Iniciación a la programación concurrente en Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/07/4-formas-de-hacer-un-bucle-for-en-java/&#34;&gt;4 formas de hacer un bucle for en Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/07/ejecutar-varias-tareas-de-forma-concurrente-en-java/&#34;&gt;Ejecutar varias tareas de forma concurrente en Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/08/el-antipatron-de-inicializacion-de-variables-con-dobles-llaves-en-java/&#34;&gt;El antipatrón de inicialización de variables con dobles llaves en Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/08/cache-simple-de-datos-y-con-ehcache-en-java/&#34;&gt;Cache simple de datos y con Ehcache en Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/09/los-cuantificadores-greedy-reluctant-y-possessive-en-expresiones-regulares/&#34;&gt;Los cuantificadores greedy, reluctant y possessive en expresiones regulares&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/09/los-tipos-de-referencias-debiles-soft-weak-y-phantom-en-java/&#34;&gt;Los tipos de referencias débiles soft, weak y phantom en Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/09/la-herramienta-de-documentacion-javadoc-de-java/&#34;&gt;La herramienta de documentación Javadoc de Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/09/como-generar-la-documentacion-javadoc-con-gradle/&#34;&gt;Cómo generar la documentación Javadoc con Gradle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/09/crear-anotaciones-de-javadoc-personalizadas-con-taglets/&#34;&gt;Crear anotaciones de Javadoc personalizadas con taglets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/09/cambiar-y-personalizar-los-estilos-de-la-documentacion-javadoc/&#34;&gt;Cambiar y personalizar los estilos de la documentación Javadoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/09/novedades-y-nuevas-caracteristicas-de-java-9-los-modulos/&#34;&gt;Novedades y nuevas características de Java 9, los módulos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/09/novedades-de-java-9-mas-alla-de-la-modularidad/&#34;&gt;Novedades de Java 9, más allá de la modularidad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/09/jshell-la-herramienta-repl-incorporada-en-java-9/&#34;&gt;JShell la herramienta REPL incorporada en Java 9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/10/evitar-niveles-de-anidacion-de-sentencias-condicionales-con-guard-clauses/&#34;&gt;Evitar niveles de anidación de sentencias condicionales con guard clauses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/10/ejemplo-con-el-cliente-http-2-de-java/&#34;&gt;Ejemplo con el cliente HTTP/2 de Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/10/obtener-el-minimo-o-maximo-de-dos-una-lista-o-stream-de-valores-en-java/&#34;&gt;Obtener el mínimo o máximo de dos, una lista o stream de valores en Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/10/las-excepciones-del-lenguaje-java/&#34;&gt;Las excepciones del lenguaje Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/10/obtener-informacion-de-la-pila-de-las-excepciones/&#34;&gt;Obtener información de la pila de las excepciones&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/10/implementar-funcionalidades-comunes-en-java-con-la-libreria-lombok/&#34;&gt;Implementar funcionalidades comunes en Java con la librería Lombok&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/10/visualizar-datos-y-generar-graficas-en-java-con-jfreechart/&#34;&gt;Visualizar datos y generar gráficas en Java con JFreeChart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/11/ordenar-alfabeticamente-cadenas-con-la-clase-collator-en-java/&#34;&gt;Ordenar alfabéticamente cadenas con la clase Collator en Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/12/introduccion-a-la-programacion-funcional-con-java-y-la-libreria-vavr/&#34;&gt;Introducción a la programación funcional con Java y la librería Vavr&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Una serie de artículos sobre &lt;a href=&#34;http://graphql.org/&#34;&gt;GraphQL&lt;/a&gt; como alternativa a una API REST que tiene algunas ventajas. Aún me queda publicar uno de esta serie, en cuanto se acepte un &lt;em&gt;pull request&lt;/em&gt; a raíz de una petición que cree con &lt;a href=&#34;https://github.com/graphql-java/graphql-java-tools/issues/93&#34;&gt;un problema que me encontré&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/&#34;&gt;Ejemplo de GraphQL para una interfaz de un servicio con Spring Boot y Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/11/usar-un-resolver-para-recuperar-propiedades-en-graphql/&#34;&gt;Usar un resolver para recuperar propiedades en GraphQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/11/consultas-con-parametros-para-filtrar-datos-en-graphql/&#34;&gt;Consultas con parámetros para filtrar datos en GraphQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/11/paginacion-usando-cursores-en-graphql-y-java/&#34;&gt;Paginación usando cursores en GraphQL y Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/12/definir-nuevos-tipos-de-datos-escalares-en-graphql/&#34;&gt;Definir nuevos tipos de datos escalares en GraphQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/11/devolver-mensajes-de-error-descriptivos-en-graphql/&#34;&gt;Devolver mensajes de error descriptivos en GraphQL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;De los menos en este semestre están relacionados con el software libre. De &lt;a href=&#34;https://about.gitlab.com/&#34;&gt;GitLab&lt;/a&gt; tengo otro par de artículos por publicar para realizar integración continua y mostrando más en detalles su gestión de peticiones, wiki y páginas. Si estas navidades tienes algún momento para ver la televisión en uno de los siguientes artículos encontrarás varias ideas relacionadas con la tecnología.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/08/instalar-y-renovar-un-certificado-de-lets-encrypt-en-nginx/&#34;&gt;Instalar y renovar un certificado de Let&amp;rsquo;s Encrypt en Nginx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/&#34;&gt;El buscador que respeta tu privacidad, DuckDuckGo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/&#34;&gt;Películas sobre tecnología o informática, series, documentales, vídeos, libros, GNU/Linux y software libre&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/12/como-eliminar-metainformacion-de-las-fotos-en-gnu-linux/&#34;&gt;Como eliminar metainformación de las fotos en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/&#34;&gt;GitLab, la completa herramienta integrada para desarrollo de software&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;O de opinión.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/10/la-triste-realidad-de-java-versiones-antiguas/&#34;&gt;La triste realidad de Java, versiones antiguas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/10/consejos-para-empresas-y-gente-de-recursos-humanos-que-busquen-talento/&#34;&gt;Consejos para empresas y gente de recursos humanos que busquen talento&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/12/microsoft-does-not-care-if-you-use-windows-or-office-without-a-license/&#34;&gt;Microsoft does not care if you use Windows or Office without a license&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Algunos artículos de tema alternativos en la temática principal de este blog pero que también me gusta compartir, comentando el cambio que hice de compañía eléctrica a &lt;a href=&#34;https://www.holaluz.com/&#34;&gt;Holaluz&lt;/a&gt;, de caldera a termo eléctrico y la diferencia en la factura entre tener caldera y tener termo eléctrico. Un par de artículos de los robles que he plantado que espero prosperen, publicaré alguno más. También algún artículo de desempaquetado.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/07/desempaquetado-maletin-herramientas-mannesmann-y-bandejas-melamina-balvi/&#34;&gt;Desempaquetado maletín herramientas Mannesmann y bandejas melamina Balvi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/07/la-busqueda-de-ejemplares-de-roble-comun/&#34;&gt;La búsqueda de ejemplares de roble común&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/09/seleccion-de-semillas-de-roble-comun-y-metodos-de-germinacion/&#34;&gt;Selección de semillas de roble común y métodos de germinación&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/08/sustituir-caldera-de-gas-por-un-termo-electrico-fleck-duo-7-50/&#34;&gt;Sustituir caldera de gas por un termo eléctrico Fleck Duo 7 50&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/11/comparando-la-factura-entre-caldera-de-gas-y-termo-electrico/&#34;&gt;Comparando la factura entre caldera de gas y termo eléctrico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/11/me-cambio-a-la-electrica-holaluz/&#34;&gt;Me cambio a la eléctrica Holaluz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Una buena colección de libros técnicos que he leído durante el último trío de años y me han gustado junto con una selección de productos tecnológicos.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/08/37-buenos-libros-sobre-sobre-java-linux-devops-y-desarrollo-que-he-leido/&#34;&gt;37 buenos libros sobre sobre Java, Linux, DevOps y desarrollo que he leído&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/11/productos-tecnologicos-para-comprar-o-regalar/&#34;&gt;Productos tecnológicos para comprar o regalar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Espero seguir escribiendo como hasta ahora en el 2018 si el tiempo del que dispongo me lo permite y continuo con motivación. Por lo pronto son unos cuantos artículos que ya tengo escritos a falta de retocar en el momento que los publique. Puedes aprovechar para repasar esta lista y leer alguno si te lo perdiste, por supuesto si aún no lo has hecho, suscríbete con tu lector preferido al &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/index.xml&#34;&gt;&lt;em&gt;feed&lt;/em&gt; a Blog Bitix&lt;/a&gt;. Finalmente, ya solo me queda desearos con la siguiente imagen linuxera de &lt;a href=&#34;http://www.klowner.com/&#34;&gt;Klouner&lt;/a&gt;&amp;hellip; ¡Buen &lt;strike&gt;2016&lt;/strike&gt; 2018!&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/291/christmas-tux-2017.jpg&#34; title=&#34;¡Buen 2018!&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/291/christmas-tux-2017-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;¡Buen 2018!&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog"/>
            
                <category term="blog-stack"/>
            
                <category term="hemeroteca"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="tapestry"/>
            
                <category term="gnu-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/07/portlets-con-el-framework-apache-tapestry-y-apache-pluto/</id>
        <title>Portlets con el framework Apache Tapestry y Apache Pluto</title>        
        <updated>2017-07-08T13:30:00+02:00</updated>
        <published>2017-07-07T23:30:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/07/portlets-con-el-framework-apache-tapestry-y-apache-pluto/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Los portales ofrecen una solución para los casos de uso de integración de aplicaciones, edición de contenido a modo de CMS, agregación de blogs, foros, colaboración entre personas, red social entre otros. La pieza fundamental de un portal en Java es un &lt;em&gt;portlet&lt;/em&gt;. Desarrollar un &lt;em&gt;portlet&lt;/em&gt; usando la API directamente no es simple, algunos &lt;em&gt;frameworks&lt;/em&gt; que usaríamos para desarrollar aplicaciones y páginas web son usables para desarrollar &lt;em&gt;portlets&lt;/em&gt;, Apache Tapestry es uno de ellos como muestro con un ejemplo en este artículo.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/apache-tapestry-5.svg&#34; class=&#34;right&#34; width=&#34;400&#34; alt=&#34;Apache Tapestry&#34; title=&#34;Apache Tapestry&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/apache-pluto.png&#34; class=&#34;right&#34; width=&#34;300&#34; alt=&#34;Apache Pluto&#34; title=&#34;Apache Pluto&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right&#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;La API ofrecida de los &lt;em&gt;portlets&lt;/em&gt; se puede considerar de bajo nivel y para facilitar la tarea de su programación es posible emplear un &lt;em&gt;framework&lt;/em&gt; al igual que ocurre al programar una aplicación web con los &lt;em&gt;servlets&lt;/em&gt; utilizando el lenguaje Java. Aún así es importante conocer los conceptos subyacentes de los &lt;em&gt;portlets&lt;/em&gt; que están explicados de forma didáctica en el libro &lt;a href=&#34;https://amzn.to/2tzpbjL&#34;&gt;Portlets in Action&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Explicado como &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/07/introduccion-a-los-portales-y-ejemplo-de-portlet-con-liferay/&#34;&gt;crear un &lt;em&gt;portlet&lt;/em&gt; directamente con su API&lt;/a&gt; usaré el mismo ejemplo pero usando el &lt;em&gt;framework&lt;/em&gt; &lt;a href=&#34;http://tapestry.apache.org&#34;&gt;Apache Tapestry&lt;/a&gt; que también es usable para realizar aplicaciones web pero para el que existe un &lt;a href=&#34;https://github.com/got5/tapestry5-portlet&#34;&gt;módulo para desarrollar &lt;em&gt;portlets&lt;/em&gt;&lt;/a&gt; y una pequeña &lt;a href=&#34;http://got5.github.io/tapestry5-portlet/&#34;&gt;documentación&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.liferay.com/&#34;&gt;Liferay&lt;/a&gt; 7 debe usar algún mecanismo especial para cargar las clases no compatible con Tapestry por ello en este ejemplo usaré el contenedor de &lt;em&gt;portlets&lt;/em&gt; &lt;a href=&#34;https://portals.apache.org/pluto/&#34;&gt;Apache Pluto&lt;/a&gt;. Apache Pluto es la implementación de referencia para la API de los &lt;em&gt;portlets&lt;/em&gt;, inicia el servidor significativamente más rápido que Liferay aunque no incorpora tantos &lt;em&gt;portlets&lt;/em&gt; listos para usar.&lt;/p&gt;

&lt;p&gt;El libro &lt;a href=&#34;https://amzn.to/2tzpbjL&#34;&gt;Portlets in Action&lt;/a&gt; define portal de la siguiente manera traducida al español:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Un portal es una colección de miniaplicaciones web llamadas &lt;em&gt;portlets&lt;/em&gt;. Un portal soporta características como personalización, agregación de contenido o autenticación. Los &lt;em&gt;portlets&lt;/em&gt; actúan como aplicaciones web dentro del portal mostradas en ventanas donde cada ventana en una página del portal representa un &lt;em&gt;portlet&lt;/em&gt;. El portal agrega la información y proporciona una vista consolidada al usuario.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;El ejemplo consiste en un mensaje de saludo que incluye un nombre el cual se introduce con un formulario desde el mismo &lt;em&gt;portlet&lt;/em&gt;. Los &lt;em&gt;portlets&lt;/em&gt; usando Apache Tapestry son muy similares a una aplicación web, con lo que gran parte del conocimiento es el mismo, pero en los que están a disposición varios servicios adicionales de la API de los &lt;em&gt;portlets&lt;/em&gt; como &lt;a href=&#34;https://github.com/got5/tapestry5-portlet/blob/master/src/main/java/org/apache/tapestry5/portlet/services/PortletRequestGlobals.java&#34;&gt;PortletRequestGlobals&lt;/a&gt; donde están agregados varios objetos relativos las peticiones y respuestas como &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/PortletRequest.html&#34;&gt;PortletRequest&lt;/a&gt; para la petición con &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/ActionRequest.html&#34;&gt;ActionRequest&lt;/a&gt;, &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/EventRequest.html&#34;&gt;EventRequest&lt;/a&gt;,  &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/RenderRequest.html&#34;&gt;RenderRequest&lt;/a&gt; y &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/ResourceRequest.html&#34;&gt;ResourceRequest&lt;/a&gt;, y  &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/PortletResponse.html&#34;&gt;PortletResponse&lt;/a&gt; para la respuesta con &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/ActionResponse.html&#34;&gt;ActionResponse&lt;/a&gt;, &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/EventResponse.html&#34;&gt;EventResponse&lt;/a&gt;, &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/RenderResponse.html&#34;&gt;RenderResponse&lt;/a&gt;, &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/ResourceResponse.html&#34;&gt;ResourceResponse&lt;/a&gt;, &amp;hellip; y la amplia colección de componentes reusables de toda aplicación con uno específico para enlazar páginas en un &lt;em&gt;portlet&lt;/em&gt;, &lt;a href=&#34;https://github.com/got5/tapestry5-portlet/blob/master/src/main/java/org/apache/tapestry5/corelib/components/PortletPageLink.java&#34;&gt;PortletPageLink&lt;/a&gt;. Apache Tapestry permite abstraerse en gran medida de la API subyacente de los &lt;em&gt;portlets&lt;/em&gt; y las diferencias con una aplicación web no serán muy significativas. Todos los conceptos conocidos para desarrollar aplicaciones y páginas web sirven prácticamente en su totalidad para desarrollar &lt;em&gt;portlets&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Los &lt;a href=&#34;http://tapestry.apache.org/component-reference.html&#34;&gt;componentes usables&lt;/a&gt; en las plantillas de las páginas, salvo alguno adicional son los mismos que en una aplicación web. Unos 57 componentes listos para usar además de los propios y específicos de la aplicación.&lt;/p&gt;

&lt;p&gt;Al igual que en el &lt;em&gt;framework&lt;/em&gt; están incluidos múltiples componentes el contenedor de dependencias que tiene integrado Tapestry ofrece muchos servicios que es posible inyectar en las páginas y en componentes nuevos y propios, también desarrollar nuevos servicios que necesiten los &lt;em&gt;portlets&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Para hacer el ejemplo &lt;em&gt;Hola Mundo&lt;/em&gt; hay que definir dos páginas, una para mostrar el mensaje y otra para obtener un nombre, cada página se compone de una clase Java y una plantilla asociada que genera el HTML, ambos elementos son muy simples. El &lt;em&gt;portlet&lt;/em&gt; hará uso del mecanismo de preferencias proporcionado por el portal con la clase &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/PortletPreferences.html&#34;&gt;PorletPreferences&lt;/a&gt; y que se encarga de persistir en su propia base de datos para obtener y guardar valores en este caso el nombre usado en el mensaje. El &lt;em&gt;portlet&lt;/em&gt; usa un formulario que envía el nombre donde se utilizan los componentes &lt;a href=&#34;http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Form.html&#34;&gt;Form&lt;/a&gt;, &lt;a href=&#34;http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Label.html&#34;&gt;Label&lt;/a&gt; y &lt;a href=&#34;http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/TextField.html&#34;&gt;TextField&lt;/a&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/71e519379b23ab0c4a54d0aed927a3f3.js?file=Index.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/71e519379b23ab0c4a54d0aed927a3f3.js?file=Index.tml&#34;&gt;&lt;/script&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/71e519379b23ab0c4a54d0aed927a3f3.js?file=preferences-Index.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/71e519379b23ab0c4a54d0aed927a3f3.js?file=preferences-Index.tml&#34;&gt;&lt;/script&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/71e519379b23ab0c4a54d0aed927a3f3.js?file=AppPortletModule.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;El resto son varios archivos descriptores necesarios entre los que está el típico &lt;em&gt;web.xml&lt;/em&gt; de las aplicaciones web Java y el descriptor específico de los &lt;em&gt;portlets&lt;/em&gt; &lt;em&gt;portlet.xml&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/71e519379b23ab0c4a54d0aed927a3f3.js?file=portlet.xml&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/71e519379b23ab0c4a54d0aed927a3f3.js?file=web.xml&#34;&gt;&lt;/script&gt;

&lt;p&gt;Con Apache Tapestry están a nuestra disposición todas las facilidades de un &lt;em&gt;framework&lt;/em&gt; de más alto nivel que la API de los &lt;em&gt;portlets&lt;/em&gt;, con la API de los &lt;em&gt;portlets&lt;/em&gt; accesible si es necesaria, altamente productivo y con el que reutilizaremos en otros &lt;em&gt;portlets&lt;/em&gt; o proyectos los componentes desarrollados con una librería de componentes.&lt;/p&gt;

&lt;p&gt;Construido el &lt;em&gt;portlet&lt;/em&gt; con una tarea de &lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle&lt;/a&gt; el &lt;em&gt;portlet&lt;/em&gt; se despliega copiando el archivo &lt;em&gt;war&lt;/em&gt; al directorio de despliegue de los &lt;em&gt;portlets&lt;/em&gt; de Apache Pluto, en &lt;em&gt;webapps&lt;/em&gt;. Una vez desplegado accediendo a la página de administración se configuran los &lt;em&gt;portlets&lt;/em&gt; que incluye cada página. El usuario y contraseña para iniciar sesión en Apache Pluto es &lt;em&gt;pluto&lt;/em&gt; para el usuario y &lt;em&gt;pluto&lt;/em&gt; para la contraseña.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/244/pluto-admin.png&#34; title=&#34;Página de administración de portlets de Apache Pluto&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/244/pluto-admin-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/244/pluto-login.png&#34; title=&#34;Inicio de sesión de Apache Pluto&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/244/pluto-login-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Páginas de administración y sesión de Apache Pluto&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Insertado el &lt;em&gt;portlet&lt;/em&gt; en una página y accediendo a ella el &lt;em&gt;portlet&lt;/em&gt; muestra el mensaje que emite y seleccionando la opción &lt;em&gt;edit&lt;/em&gt; acceder a la página de preferencias acceder a la página que muestra el formulario y permite cambiar el mensaje. Este es el resultado del &lt;em&gt;portlet&lt;/em&gt; desplegado en Apache Pluto.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/244/tapestry-portlet.png&#34; title=&#34;Porlet con Apache Tapestry en Apache Pluto&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/244/tapestry-portlet-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/244/tapestry-portlet-preferences.png&#34; title=&#34;Página de preferencias del portlet&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/244/tapestry-portlet-preferences-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

    &lt;figure&gt;
  
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/244/tapestry-portlet-name.png&#34; title=&#34;Portlet usando un dato almacenado en las preferencias&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/244/tapestry-portlet-name-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Porlet con Apache Tapestry en Apache Pluto&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Para conocer más sobre los &lt;em&gt;portlets&lt;/em&gt; el libro &lt;a href=&#34;https://amzn.to/2tzpbjL&#34;&gt;Portlets in Action&lt;/a&gt; es una buena fuente de documentación.&lt;/p&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1935182544&amp;linkId=6d736075105602e7c318919a1c81609d&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Descargado y descomprimido el &lt;a href=&#34;https://portals.apache.org/pluto/download.html&#34;&gt;binario de Apache Pluto&lt;/a&gt; para inicia con el comando &lt;code&gt;startup.sh&lt;/code&gt;. Apache Pluto es en realidad un servidor &lt;a href=&#34;https://tomcat.apache.org/&#34;&gt;Apache Tomcat&lt;/a&gt; con las adiciones para proporcionarle la funcionalidad de portal en la dirección &lt;em&gt;http://localhost:8080/pluto&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/71e519379b23ab0c4a54d0aed927a3f3.js?file=build.gradle&#34;&gt;&lt;/script&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/TapestryPortlet&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./pluto-3.0.0/bin &amp;amp;&amp;amp; ./gradlew build&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2014/12/portada-PugInTapestry-thumb.png&#34; alt=&#34;Portada libro: PlugIn Tapestry&#34; title=&#34;Portada libro: PlugIn Tapestry&#34; style=&#34;float: left; margin-right: 1.5em;&#34;&gt;
    &lt;h3&gt;Libro PlugIn Tapestry&lt;/h3&gt;
    &lt;p&gt;Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este &lt;i&gt;framework&lt;/i&gt; en el formato que prefieras, &lt;a href=&#34;http://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry&lt;/a&gt;, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.&lt;/p&gt;
    &lt;br style=&#34;clear: both;&#34;&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf&#34; class=&#34;btn btn-lg btn-success&#34;&gt;PDF&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.epub&#34; class=&#34;btn btn-lg btn-success&#34;&gt;EPUB&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.mobi&#34; class=&#34;btn btn-lg btn-success&#34;&gt;MOBI&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.zip&#34; class=&#34;btn btn-lg btn-success&#34;&gt;HTML&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry&#34; class=&#34;btn btn-lg btn-success&#34;&gt;Código fuente ejemplos&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/got5/tapestry5-portlet&#34;&gt;Apache Tapestry Portlet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://got5.github.io/tapestry5-portlet/&#34;&gt;Documentación Apache Tapestry Portlet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="tapestry"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/06/hemeroteca-11/</id>
        <title>Hemeroteca #11</title>        
        <updated>2017-11-25T13:00:00+01:00</updated>
        <published>2017-06-24T10:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/06/hemeroteca-11/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;p&gt;Desde hace ya tiempo escribir y publicar en el blog es una de las cosas que realmente me gustan y me motivan a pesar de que el blog me requiere mucho tiempo de mi tiempo personal, cada artículo me exige entre 5 y 10 horas de dedicación durante el fin de semana y en mi tiempo libre. Es satisfactorio ver que cada semana y cada mes el número de visitas aumentan a un ritmo rozando los dos dígitos y que también se nota en los &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/donacion/&#34;&gt;ingresos por publicidad de AdSense que en parte dono&lt;/a&gt; a alguno de los proyectos de software libre que usó o me parecen interesante apoyarles económicamente aunque sea de forma pequeña.&lt;/p&gt;

&lt;p&gt;Aún no he llegado al punto de plantearme seriamente abandonar el blog y recuperar mi tiempo para leer, ver películas que ahora me descargo pero pocas veo, andar en bicicleta, pasear u otras cosas, a veces pienso que le dedico mucho tiempo al blog, antes escribía un artículo a la semana, ahora estoy publicando muchas dos artículos faltándome más tiempo para editar y publicar los artículos que para redactarlos. La fe de poder de usar en un trabajo muchas de las herramientas de escribo, que es uno de mis motivaciones de tener el blog, me mantiene escribiendo aunque la realidad es que llevo ya 3 lustros trabajando y en prácticamente la totalidad de proyectos la tecnología estaba ya decidida e impuesta.&lt;/p&gt;

&lt;p&gt;El número de visitas ha aumentado notablemente de unas 9K páginas vistas en enero de 2016 a unas 30K en enero de 2017 y ahora a finales de junio unas 60K. Solamente en estos seis primeros meses ya he duplicado el tráfico mayoritariamente proveniente del buscador Google. Los ingresos por AdSense también han aumentado notablemente de 15€ pasando a 50€ mensuales con los que ahora cada dos meses recibo una transferencia de Google en mi cuenta corriente lo que empieza a ser una cantidad respetable aunque no compense por ello solamente la dedicación que requiere.&lt;/p&gt;

&lt;p&gt;Más del 90% del tráfico que recibo proviene del buscador Google y el resto de tráfico directo o de referencia. Solo unos 5 artículos son los que reciben la mayor parte de las visitas y que intento aprovechar para que los usuarios accedan a otros artículos relacionados. El aumento de visitas se debe a que con el paso del tiempo habré posicionado mejor algunos artículos en Google y en menor medida a los nuevos que he publicado. A Google creo que le gustan los sitios que publican nuevo contenido con asiduidad y regularmente en primera instancia y en medida similar si es de calidad. De enero de 2014 a enero de 2016 el crecimiento parece plano pero también fue constante aunque simplemente se ve enmascarado por el de los últimos meses.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/242/analytics.png&#34; title=&#34;Analytics&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/242/analytics-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/242/adsense.png&#34; title=&#34;AdSense&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/242/adsense-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Evolución visitas e ingresos&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Analizando los ingresos y visitas de mi blog y divagando cual sería el tráfico que debería generar para vivir únicamente blog si con 60K páginas vistas obtengo 50€ en ingresos al mes, debería multiplicar por ¿30, 40? el tráfico de este momento para vivir del blog, pero siendo más modesto multiplicar por 5 o 10 ya serían unos ingresos muy notables y algo que parece alcanzable aunque no sea fácilmente, ¿cuantas visitas mensuales son esas para una web? ¿3,6M de páginas vistas al mes? ¿300K o 600K siendo más modesto?. Quizá si publicase en inglés la audiencia sería mayor, aún no se cual es el tráfico que poseen otras páginas hispanas personales de temática tecnológica, software libre o programación más conocidos para saber cual es el límite de visitas alcanzable en este nicho de temática ya que los blogs que sigo en pocos he visto esta misma exhivición impúdica de datos que incluyo aquí (si como blogger te sientes aludido ya tienes tema para un artículo ;). Medios como &lt;a href=&#34;https://www.xataka.com/&#34;&gt;Xataka&lt;/a&gt; o &lt;a href=&#34;https://www.genbeta.com/&#34;&gt;Genbeta&lt;/a&gt; por citar algunos tecnológicos muy conocidos profesionales, empresariales o de grupos editoriales con las vistas que tienen deben generar suficiente tráfico para que sus ingresos solo en publicidad costeen los gastos de los redactores, servidores, viajes, paguen algunos sueldos, etc.&lt;/p&gt;

&lt;p&gt;Cambiando de tema y yendo a la hemeroteca en la lista de artículos que he publicado en estos seis meses están los siguientes, en total 40 (incluido este) nuevos artículos únicos y fabricados artesanalmente a mano. Este semestre he hecho dos donaciones de 60€ y publicados otros tantos artículos comentando a que proyectos.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/01/articulo-3-de-yo-apoyo-al-software-libre/&#34;&gt;Artículo #3 de Yo apoyo al software libre&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/articulo-4-de-yo-apoyo-al-software-libre/&#34;&gt;Artículo #4 de Yo apoyo al software libre&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Este semestre he publicado una nueva serie sobre electrónica aprovechando que compre un kit con varios elementos electrónicos con los que jugar para la &lt;a href=&#34;https://www.raspberrypi.org/&#34;&gt;Raspberry Pi&lt;/a&gt; 3 que he usado en la 1, se ha compuesto de un total de 10 artículos y aún podría escribir alguno más pero lo dejaré para otro momento si recupero las ganas de cacharrear con el hardware otra vez.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/02/desempaquetado-del-kit-de-iniciacion-a-la-electronica-para-la-raspberry-pi/&#34;&gt;Desempaquetado del kit de iniciación a la electrónica para la Raspberry Pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-hello-world-con-java-en-la-raspberry-pi/&#34;&gt;Ejemplo Hello World con Java en la Raspberry Pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-encender-y-apagar-diodo-led-con-la-raspberry-pi-en-java/&#34;&gt;Ejemplo encender y apagar diodo LED con la Raspberry Pi en Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/03/controlar-un-display-lcd-1602-para-mostrar-texto-con-la-raspberry-pi-y-java/&#34;&gt;Controlar un display LCD 1602 para mostrar texto con la Raspberry Pi y Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-de-jni-usar-codigo-en-c-desde-java/&#34;&gt;Ejemplo de JNI, usar código en C desde Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/03/obtener-la-temperatura-y-humedad-con-el-sensor-dht11-la-raspberry-pi-c-y-java/&#34;&gt;Obtener la temperatura y humedad con el sensor DHT11, la Raspberry Pi, C y Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/04/como-usar-un-diodo-led-un-pulsador-y-un-zumbador-con-la-raspberry-pi-y-java/&#34;&gt;Cómo usar un diodo LED, un pulsador y un zumbador con la Raspberry Pi y Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/04/ejemplo-sensor-de-golpes-y-detector-movimiento-en-la-raspberry-pi-con-java/&#34;&gt;Ejemplo sensor de golpes y detector de movimiento en la Raspberry Pi con Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/controlar-un-servomotor-con-la-raspberry-pi-y-java/&#34;&gt;Controlar un servomotor con la Raspberry Pi y Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/luces-navidenas-con-la-raspberry-pi-y-java/&#34;&gt;Luces navideñas con la Raspberry Pi y Java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La otra serie de varios artículos publicados durante otras tantas semanas ha sido sobre &lt;a href=&#34;https://docs.docker.com/swarm/&#34;&gt;Docker Swarm&lt;/a&gt; continuando y completando un poco más la serie sobre &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; para crear &lt;em&gt;clusters&lt;/em&gt; de nodos con la tecnología de la se se está hablando mucho y está transformando el estado del arte para el despliegue, ejecución y distribución de servicios.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/03/introduccion-y-ejemplo-de-cluster-de-contenedores-con-docker-swarm/&#34;&gt;Introducción y ejemplo de cluster de contenedores con Docker Swarm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/04/iniciar-un-stack-de-servicios-en-un-cluster-de-docker-swarm/&#34;&gt;Iniciar un stack de servicios en un cluster de Docker Swarm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/04/escalar-y-actualizar-un-servicio-de-un-cluster-de-docker-swarm/&#34;&gt;Escalar y actualizar un servicio de un cluster de Docker Swarm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/&#34;&gt;Contenedores en Docker Swarm con volúmenes de datos persistentes usando REX-Ray y VirtualBox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/04/informacion-sensible-en-contenedores-con-docker-secrets/&#34;&gt;Información sensible en los contenedores con Docker Secrets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/04/imagenes-de-docker-con-alpine-linux/&#34;&gt;Imágenes de Docker con Alpine Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Entre otros artículos que he publicado está un &lt;em&gt;script&lt;/em&gt; para instalar &lt;a href=&#34;https://www.archlinux.org/&#34;&gt;Arch Linux&lt;/a&gt; de forma desatendida, automatizada y personalizable. Dado que Arch Linux no posee un instalador y hay que introducir los comandos directamente en la terminal para realizar la instalación después de leer una buena cantidad de documentación de la estupenda &lt;a href=&#34;https://wiki.archlinux.org/&#34;&gt;wiki de Arch Linux&lt;/a&gt;, este &lt;em&gt;script&lt;/em&gt; sirve para instalar Arch Linux de forma sencilla o como consulta de los comandos a ejecutar paso a paso para instalar esta distribución.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/01/script-de-instalacion-de-arch-linux-desatendido-automatizado-y-personalizable/&#34;&gt;Script de instalación de Arch Linux desatendido, automatizado y personalizable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;También he publicado algún que otro artículo de opinión de dos noticias relevantes que se han producido en este periodo de tiempo, como son el ataque del &lt;em&gt;ransomware&lt;/em&gt; WannaCry y que afectó a algunas empresas y organizaciones y relacionado con este tema me preguntaba si las distribuciones GNU/Linux son más seguras que Windows. También daba mi opinión sobre el el anuncio de Shuttleworth de abandonar la convergencia con el servidor gráfico Mir y el entorno de escritorio Unity. Y un último sobre la diferencia de trato para bien de &lt;a href=&#34;https://www.pepephone.com/&#34;&gt;Pepephone&lt;/a&gt; con lo que es habitual en otras empresas de telecomunicaciones para mal.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/01/distribuciones-gnu-linux-mas-seguras-que-windows/&#34;&gt;Distribuciones GNU/Linux, ¿más seguras que Windows?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/sobre-el-anuncio-de-shuttleworth-de-abandonar-unity-y-mir-y-volver-a-gnome-en-ubuntu/&#34;&gt;Sobre el anuncio de Shuttleworth de abandonar Unity y Mir y volver a GNOME en Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/sobre-el-ataque-de-ransomware-que-ha-sufrido-telefonica-y-otras-empresas/&#34;&gt;Sobre el ataque de ransomware que ha sufrido Telefonica y otras empresas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/06/asi-trata-pepephone-a-sus-clientes/&#34;&gt;Así trata Pepephone a sus clientes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dos artículos para usuarios sin muchos conocimientos de como instalar &lt;a href=&#34;https://www.microsoft.com/es-es/windows/&#34;&gt;Windows&lt;/a&gt; o la distribución &lt;a href=&#34;https://www.ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt; de &lt;a href=&#34;https://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;/&lt;a href=&#34;https://www.linux.com/&#34;&gt;Linux&lt;/a&gt;. Explicando paso a paso y detalladamente con capturas de pantalla cuales son los pasos para realizar la instalación desde cero.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/descargar-e-instalar-windows-10-paso-a-paso-desde-cero/&#34;&gt;Descargar e instalar Windows 10 paso a paso desde cero&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/descargar-e-instalar-la-distribucion-ubuntu-de-gnu-linux-paso-a-paso-desde-cero/&#34;&gt;Descargar e instalar la distribución Ubuntu de GNU/Linux paso a paso desde cero&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Un par de artículos patrocinados de los cuales uno ha sido otra forma de ingreso.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/02/cursos-de-formacion-de-keepcoding/&#34;&gt;Cursos de formación de KeepCoding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/02/servidores-cloud-vps-de-cloudingio-para-hospedar-blogs-y-paginas-web/&#34;&gt;Servidores Cloud VPS de Clouding.io para hospedar blogs y páginas web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;También he publicado un par de artículos en inglés traducción de otros que publique en español como experimento para comprobar que tal se indexan en Google y si alguno de ellos atrae visitas a mi blog.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/04/windows-10-and-office-2016-as-easy-to-use-without-license-as-always/&#34;&gt;Windows 10 and Office 2016 as easy to use without license as always&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/04/3-office-alternative-options-to-microsoft-office/&#34;&gt;3 office alternative options to Microsoft Office&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Habiendo publicado dos series con una buena cantidad de artículos este semestre he publicado pocos artículos de programación. A destacar de estos últimos ha sido el resumen como en años anteriores de la conferencia &lt;a href=&#34;http://bilbostack.com/&#34;&gt;BilboStack&lt;/a&gt; celebrada en febrero de las presentaciones a las que asistí. Varios artículos sobre diferentes tipos de bases de datos relacionales, de documentos y de clave valor representadas por &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt;, &lt;a href=&#34;https://www.mongodb.com/&#34;&gt;MongoDB&lt;/a&gt; y &lt;a href=&#34;https://redis.io/&#34;&gt;Redis&lt;/a&gt;. También como realizar autenticación mutua entre cliente y servidor con certificados ya sea con el programa &lt;em&gt;curl&lt;/em&gt;, una aplicación en la plataforma Java o con un navegador web.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/01/registro-y-descubrimiento-de-servicios-con-spring-cloud-y-consul/&#34;&gt;Registro y descubrimiento de servicios con Spring Cloud y Consul&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/02/conferencia-bilbostack-2017/&#34;&gt;Conferencia BilboStack 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/02/como-crear-un-servicio-de-systemd-para-una-aplicacion-con-spring-boot/&#34;&gt;Cómo crear un servicio de systemd para una aplicación con Spring Boot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/02/ejemplo-de-rabbitmq-con-java-para-enviar-y-recibir-mensajes/&#34;&gt;Ejemplo de RabbitMQ con Java para enviar y recibir mensajes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-relacional-postgresql/&#34;&gt;Introducción a la base de datos relacional PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-nosql-mongodb/&#34;&gt;Introducción a la base de datos NoSQL MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/06/usar-la-base-de-datos-nosql-mongodb-con-java/&#34;&gt;Usar la base de datos NoSQL MongoDB con Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/06/introduccion-a-la-base-de-datos-nosql-redis/&#34;&gt;Introducción a la base de datos NoSQL Redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/06/autenticacion-mutua-de-cliente-y-servidor-con-certificados/&#34;&gt;Autenticación mutua de cliente y servidor con certificados&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para acabar publique un artículo de un cargador de pilas recargables, un paquete de pilas de la marca blanca de Amazon y un reloj con un pequeño análisis y múltiples fotos.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/03/desempaquetado-de-cargador-de-pilas-recargables-pilas-recargables-aa-y-reloj-despertador/&#34;&gt;Desempaquetado de cargador de pilas recargables, pilas recargables AA y reloj despertador&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Que disfrutéis leyendo algunos de los artículos que publiqué y aprovechar para suscribiros con vuestro lector de &lt;em&gt;feeds&lt;/em&gt; preferido a Blog Bitix para no perderos ninguno de los que publique en el siguiente semestre que posiblemente verse bastante sobre Java.&lt;/p&gt;



        </content>
        
            
                <category term="blog"/>
            
                <category term="blog-stack"/>
            
                <category term="hemeroteca"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="tapestry"/>
            
                <category term="gnu-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/12/hemeroteca-10/</id>
        <title>Hemeroteca #10</title>        
        <updated>2016-12-24T12:00:00+01:00</updated>
        <published>2016-12-24T12:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/12/hemeroteca-10/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Echando un vistazo a estos seis últimos meses han sido buenos, en número de artículos que he escrito y publicado como en el aumento de número de páginas vistas mensuales con respecto a inicios de 2016 y en similar proporción los ingresos mensuales por publicidad AdSense. De esta forma el esfuerzo en tiempo que supone escribir los artículos me es recompensado de alguna forma.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;p&gt;Otros seis meses acumulados de vida, ya son poco menos de 7 años desde que tengo un blog y 3 desde que empecé a escribir en Blog Bitix. A pesar de la gran cantidad de tiempo que me requiere escribir y publicar artículos, tanto como entre 3 y 10 horas de dedicación por artículo, es una de las cosas que más me alegro de haber empezado en el año 2010. Lo que aprendo con cada artículo de las cosas que me motivan y compartirlo por si a alguien más le resultan interesantes me resulta muy satisfactorio.&lt;/p&gt;

&lt;p&gt;En estos seis meses en vez de publicar un solo artículo por semana he estado publicando dos artículos y algunas semanas incluso 3. El número de páginas vistas mensuales han aumentado hasta el punto de multiplicar por cuatro las páginas vistas que tenía a inicios de año siendo ahora unas 26K/mes. Y no son muchas, otros blogs personales tienen muchas más, dos o tres veces más. La mala noticia es que un porcentaje importante de las visitas provienen de unos pocos artículos bien posicionados en Google. En cualquier caso en una proporción similar que han aumentado las páginas vistas han aumentado los ingresos por publicidad de &lt;a href=&#34;https://www.google.com/adsense/&#34;&gt;Google AdSense&lt;/a&gt; que incluyo en el blog, e incluso los últimos meses los ingresos han sido de alrededor de 20€ y 25€, con lo que podré hacer más &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/donacion/&#34;&gt;donaciones al software libre&lt;/a&gt; y más frecuentemente. En definitiva este ha sido un buen año en este aspecto, si el siguiente fuera similar sería estupendo.&lt;/p&gt;

&lt;p&gt;A pesar de la gran mejora en número de visitas mensuales durante este año cuesta un horror hacer crecer al blog y escribir y publicar al ritmo que lo he estado haciendo durante estos últimos meses. Hay que tener un poco de intuición y algo de suerte para acertar con artículos que se posicionen bien en los buscadores si lo que queremos es aumentar las visitas.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/202/analytics-2016.png&#34; title=&#34;Analytics 2016 de Blog Bitix&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/202/analytics-2016-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/202/adsense-2016.png&#34; title=&#34;AdSense 2016 de Blog Bitix&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/202/adsense-2016-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Evolución visitas e ingresos de AdSense en 2016&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Una de las cosas que me estoy arrepintiendo ahora es no de tener dominio propio, no lo hice porque con &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; me ofrecía el hospedaje gratis y sin complicaciones. Ahora me plantearía hospedar el blog en una máquina de &lt;a href=&#34;https://www.linode.com/&#34;&gt;Linode&lt;/a&gt;, &lt;a href=&#34;https://www.digitalocean.com/&#34;&gt;Digital Ocean&lt;/a&gt; o en la reciente competencia de estos con &lt;a href=&#34;https://amazonlightsail.com/&#34;&gt;Amazon Lightsail&lt;/a&gt;. Mas que por necesidad por practicar con &lt;a href=&#34;https://www.ansible.com/&#34;&gt;Ansible&lt;/a&gt; e implementar en el blog HTTPS/2 o usar &lt;a href=&#34;https://letsencrypt.org/&#34;&gt;Let&amp;rsquo;s encrypt&lt;/a&gt; asi como aprender sobre esos servicios en la nube. La migración es posible pero posiblemente no perfecta.&lt;/p&gt;

&lt;p&gt;Durante este periodo de tiempo he realizado algunos cambios a nivel de diseño en el blog como el buscador de contenido con &lt;a href=&#34;https://duckduckgo.com/&#34;&gt;DuckDuckGo&lt;/a&gt;, he quitado del panel lateral los artículos recientes, he creado una nueva página por si alguna organización quisiera contactarme por publicidad e incluido un mensaje para aquellos que tengan un bloqueador de anuncios. Para tratar de monetizar algo más el blog también he estado considerando en inscribirme en páginas como &lt;a href=&#34;https://www.publisuites.com/&#34;&gt;Publisuites&lt;/a&gt; o &lt;a href=&#34;https://coobis.com/&#34;&gt;Coobis&lt;/a&gt; para escribir artículos patrocinados esporádicamente y siempre con artículos escritos por mi, con mi opinión y de la forma más honesta que pueda. Finalmente, me decidí por Publisuites pero aún no he recibido ninguna proposición de artículo patrocinado.&lt;/p&gt;

&lt;p&gt;Esta es la recapitulación de artículos que he escrito durante estos seis últimos meses organizados por temática empezando por unos pocos artículos más de la &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/web/&#34;&gt;serie web&lt;/a&gt;, algunos sobre &lt;a href=&#34;https://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;/&lt;a href=&#34;https://www.linux.com/&#34;&gt;Linux&lt;/a&gt; con varios artículos sobre juegos y otro sobre varias de las distribuciones más importantes y usadas, otros cuantos sobre programación relacionados con el lenguaje Java, por supuesto y de los que más gratificantes me resultan aunque no sean muy visitados relacionados de alguna forma con &lt;a href=&#34;http://tapestry.apache.org&#34;&gt;Apache Tapestry&lt;/a&gt; o algunos de opinión como repaso a las motivaciones que me llevaron a elegir a &lt;a href=&#34;http://www.pepephone.com/&#34;&gt;Pepephone&lt;/a&gt; como proveedor de internet y otro de opinión sobre el rápido avance de la tecnología. En total han sido 47 artículos cuando en otros periodos de tiempo solo hubiese publicado unos 26.&lt;/p&gt;

&lt;p&gt;He añadido a la serie de artículos sobre desarrollo web varios interesantes que forman parte de lo esencial a conocer.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/como-optimizar-un-sitio-web-con-compresion-gzip-en-nginx-y-apache-httpd/&#34;&gt;Cómo optimizar un sitio web con compresión GZIP en Nginx y Apache HTTPD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/configurar-nginx-como-balanceador-de-carga/&#34;&gt;Configurar Nginx como balanceador de carga&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/como-crear-un-proxy-inverso-entre-el-servidor-web-nginx-y-un-servidor-de-aplicaciones-java/&#34;&gt;Cómo crear un proxy inverso entre el servidor web Nginx y un servidor de aplicaciones Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/las-cabeceras-de-cache-del-protocolo-http/&#34;&gt;Las cabeceras de cache del protocolo HTTP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/configurar-nginx-para-cachear-respuestas-del-servidor-de-aplicaciones/&#34;&gt;Configurar Nginx para cachear respuestas del servidor de aplicaciones&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/como-y-por-que-redirigir-trafico-web-del-dominio-raiz-al-subdominio-www/&#34;&gt;Cómo y por que redirigir tráfico web del dominio raíz al subdominio www (o viceversa)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La sección de artículos sobre GNU/Linux destaca la &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/juegos/&#34;&gt;serie sobre juegos&lt;/a&gt; en el sistema del pingüino. He empezado a usar por obligación en el trabajo macOS que me ha servido como excusa para escribir un par de artículos sobre el sistema operativo de Apple.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/comandos-basicos-de-gnu-linux/&#34;&gt;Comandos básicos de GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/guia-basica-del-interprete-de-comandos-bash/&#34;&gt;Guía básica del intérprete de comandos Bash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-ajedrez-en-gnu-linux-con-gnome/&#34;&gt;Jugar al ajedrez en GNU/Linux con GNOME&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/como-crear-vistas-previas-de-imagenes-con-imagemagick/&#34;&gt;Cómo crear vistas previas de imágenes con ImageMagick&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-clasico-de-estrategia-de-tablero-go-en-gnu-linux/&#34;&gt;Jugar al clásico de estrategia de tablero Go en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/&#34;&gt;Juegos incluidos en el entorno de escritorio GNOME&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/&#34;&gt;Jugar a videojuegos clásicos y míticos de arcade con Mame en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/descargar-paquetes-a-actualizar-sin-instalarlos-en-arch-linux/&#34;&gt;Descargar paquetes a actualizar sin instalarlos en Arch Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/&#34;&gt;22+ buenos juegos en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/&#34;&gt;Varios juegos de culto con ScummVM en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/como-configurar-una-impresora-hp-en-red-en-arch-linux/&#34;&gt;Cómo configurar una impresora HP en red en Arch Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/09/localizacion-de-un-comando-y-paquete-propietario-de-un-archivo-en-gnu-linux/&#34;&gt;Localización de un comando y paquete propietario de un archivo en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/&#34;&gt;Cómo instalar y probar macOS con VirtualBox en Windows o GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/elegir-una-distribucion-gnu-linux-segun-el-usuario-uso-o-equipo/&#34;&gt;Elegir una distribución GNU/Linux según el usuario, uso o equipo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/11/guardar-contrasenas-de-forma-segura-con-keepassx/&#34;&gt;Guardar contraseñas de forma segura con KeePassX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;He escrito otros cuantos artículos de programación en algunos casos relacionados de alguna forma con &lt;a href=&#34;http://tapestry.apache.org&#34;&gt;Apache Tapestry&lt;/a&gt;, Java y JavaScript.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/no-un-tag-jsp-o-un-tag-de-grails-no-es-equivalente-a-un-componente-de-tapestry/&#34;&gt;No, un tag JSP o un tag de Grails no es equivalente a un componente de Tapestry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/por-que-guardar-las-fechas-en-utc-en-la-base-de-datos/&#34;&gt;Por qué guardar las fechas en UTC en la base de datos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/09/ejemplo-de-api-rest-en-java-con-jax-rs-y-spring-boot/&#34;&gt;Ejemplo de API REST en Java con JAX-RS y Spring Boot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/09/monitorizar-con-eventos-de-google-analytics-una-pagina-web/&#34;&gt;Monitorizar con eventos de Google Analytics una página web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/&#34;&gt;Autenticación con OAuth y Keycloak en un servicio REST con JAX-RS y Spring Boot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/cliente-de-un-servicio-rest-autenticado-con-oauth2-en-java/&#34;&gt;Cliente de un servicio REST autenticado con OAuth en Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/generacion-de-codigo-en-tiempo-de-ejecucion-con-byte-buddy/&#34;&gt;Generación de código en tiempo de ejecución con Byte Buddy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/&#34;&gt;Integrar autenticación OAuth con Keycloak, Shiro, Apache Tapestry y Spring Boot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/componente-select-de-apache-tapestry-con-funcionalidades-adicionales-usando-bootstrap-select/&#34;&gt;Componente select de Apache Tapestry con funcionalidades adicionales usando bootstrap-select&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/componente-select-multiple-en-apache-tapestry/&#34;&gt;Componente select múltiple en Apache Tapestry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/anadir-botones-selectores-de-opciones-a-select-multiple-de-bootsrap-select/&#34;&gt;Añadir botones selectores de opciones a select múltiple de bootsrap-select&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/11/historico-de-datos-auditoria-y-diferencias-entre-objetos-con-javers-en-java/&#34;&gt;Histórico de datos, auditoría y diferencias entre objetos con Javers en Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/11/usar-una-imagen-de-fondo-aleatoria-al-cargar-una-pagina-web/&#34;&gt;Usar una imagen de fondo aleatoria al cargar una página web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/12/introduccion-al-javascript-de-ecmascript-6/&#34;&gt;Introducción al JavaScript de ECMAScript 6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/12/como-implementar-correctamente-y-por-que-los-metodos-equals-y-hashcode-de-los-objetos-java/&#34;&gt;Cómo implementar correctamente y por qué los métodos equals y hashCode de los objetos Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/12/transpiling-de-ecmascript-6-a-5-uglify-y-eslint-con-gulp/&#34;&gt;Transpiling de ECMAScript 6 a 5, Uglify y ESLint con Gulp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En la categoría de artículos de opinion junto con otros de teḿatica variada han sido los siguientes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/eligiendo-proveedor-de-internet-finalmente-pepephone/&#34;&gt;Eligiendo proveedor de internet, finalmente Pepephone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/sobre-los-infimos-impuestos-que-paga-apple/&#34;&gt;Sobre los ínfimos impuestos que paga Apple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/09/articulo-2-de-yo-apoyo-al-software-libre/&#34;&gt;Artículo #2 de Yo apoyo al software libre&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/09/gestionar-los-enlaces-de-una-bitacora-con-hugo/&#34;&gt;Gestionar los enlaces de una bitácora con Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/sobre-el-rapido-avance-de-la-tecnologia/&#34;&gt;Sobre el rápido avance de la tecnología&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/11/3-formas-sencillas-de-monetizar-un-blog/&#34;&gt;3 formas sencillas de monetizar un blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/11/mi-primer-mac-yo-usuario-de-gnu-linux/&#34;&gt;Mi primer Mac, yo usuario de GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/11/instalar-programas-con-homebrew-en-macos/&#34;&gt;Instalar programas con Homebrew en macOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/11/desempaquetado-bombillas-led-de-philips/&#34;&gt;Desempaquetado bombillas LED de PHILIPS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/12/la-fabrica-de-blog-bitix/&#34;&gt;La fábrica de Blog Bitix&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;¡Felices fiestas! ¡A por el 2017!&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/202/christmas-tux-2016.jpg&#34; title=&#34;¡Felices fiestas y buen 2017!&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/202/christmas-tux-2016-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;¡Felices fiestas y buen 2017!&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog"/>
            
                <category term="blog-stack"/>
            
                <category term="hemeroteca"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="tapestry"/>
            
                <category term="gnu-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/10/anadir-botones-selectores-de-opciones-a-select-multiple-de-bootsrap-select/</id>
        <title>Añadir botones selectores de opciones a select múltiple de bootsrap-select</title>        
        <updated>2016-10-26T14:30:00+02:00</updated>
        <published>2016-10-25T15:30:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/10/anadir-botones-selectores-de-opciones-a-select-multiple-de-bootsrap-select/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/apache-tapestry-5.svg&#34; class=&#34;right&#34; width=&#34;400&#34; alt=&#34;Apache Tapestry&#34; title=&#34;Apache Tapestry&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.png&#34; class=&#34;right&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;La librería &lt;a href=&#34;https://silviomoreto.github.io/bootstrap-select/&#34;&gt;bootstrap-select&lt;/a&gt; nos permite crear elementos &lt;em&gt;select&lt;/em&gt; enriquecidos con más funcionalidades que las propias ofrecidas por el navegador para seleccionar una única opción o para seleccionar múltiples opciones. Usando esta librería y añadiendo algunos atributos a las etiquetas HTML &lt;em&gt;select&lt;/em&gt;, &lt;em&gt;optgroup&lt;/em&gt; y &lt;em&gt;option&lt;/em&gt; añadirá varias funcionalidades interesantes como comento en &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/componente-select-de-apache-tapestry-con-funcionalidades-adicionales-usando-bootstrap-select/&#34;&gt;Componente select de Apache Tapestry con funcionalidades adicionales usando bootstrap-select&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Una de las opciones que añade es poniendo en la etiqueta &lt;em&gt;select&lt;/em&gt; el atributo &lt;em&gt;data-actions-box&lt;/em&gt; son dos botones para seleccionar todas las opciones o para deseleccionar todas las opciones.&lt;/p&gt;

&lt;p&gt;Este es el aspecto de un elemento de selección con los botones de seleccionar todas las opciones y ninguna que son muy útiles para el usuario evitándose seleccionar una a una cada una de las opciones.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/189/multiselect-todos.png&#34; title=&#34;Multiselect con opciones Todos y Ninguno&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/189/multiselect-todos-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/189/multiselect.png&#34; title=&#34;Opciones seleccionadas de Multiselect&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/189/multiselect-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;MultiSelect con opciones Todos y Ninguno&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;A pesar de todas las opciones adicionales que añade &lt;em&gt;bootstrap-select&lt;/em&gt; incluidas los botones de seleccionar todas las opciones y ninguna aún quizá queramos personalizar más el comportamiento, por ejemplo, permitir seleccionar con botones adicionales un grupo de opciones relacionadas. Supongamos que tenemos un componente de selección múltiple de países y queremos seleccionar los países de Europa, América o Asia además de las opciones que &lt;em&gt;bootstrap-select&lt;/em&gt; de todos y ninguno.&lt;/p&gt;

&lt;p&gt;Un atributo que usa &lt;em&gt;bootstrap-select&lt;/em&gt; para la opción de filtrado es el atributo &lt;em&gt;data-tokens&lt;/em&gt;, si el valor introducido en el filtro coincide con este atributo la opción se muestra y en las que no coincide se oculta. Para no añadir más atributos usaré este atributo para asociar a la opción a los grupos que pertenecen o los &lt;em&gt;tokens&lt;/em&gt; que tiene asociados. Dada una serie de &lt;em&gt;tokens&lt;/em&gt; para los que queremos botón de filtrado en el atributo &lt;em&gt;data-tokens-selectors&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Este sería un ejemplo de código JavaScript junto con el uso del componente de Tapestry en la aplicación que podríamos emplear para añadir al elemento selector este comportamiento de selección de grupos de opciones que básicamente añade de forma dinámica un pequeño trozo de HTML similar al que el componente utiliza para mostrar los botones de todos y ninguno. Cuando se haga clic en un botón de selección con el evento &lt;em&gt;loaded.bs.select&lt;/em&gt; se buscan las opciones que contiene el &lt;em&gt;token&lt;/em&gt; asociado al botón y se seleccionan teniendo en cuenta también las opciones que estén deshabilitadas. Además, cuando todas las opciones de un botón selector están seleccionadas queda como pulsado como indicativo, lógica que se realiza en el evento &lt;em&gt;change&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/97ab5029147f0bf58bb741775af69e1a.js?file=Index.tml&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/97ab5029147f0bf58bb741775af69e1a.js?file=multiselect.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/97ab5029147f0bf58bb741775af69e1a.js?file=Index.html&#34;&gt;&lt;/script&gt;

&lt;p&gt;Y este sería el aspecto de componente en el navegador.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/189/multiselect-europa.png&#34; title=&#34;Multiselect con opciones Europa&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/189/multiselect-europa-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/189/multiselect-asia.png&#34; title=&#34;Multiselect con opciones Asia&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/189/multiselect-asia-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;MultiSelect con opciones Europa, America y Asia&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Si usásemos el &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/componente-select-multiple-en-apache-tapestry/&#34;&gt;componente de selección múltiple con Apache Tapetstry y bootstrap-select&lt;/a&gt; sería el propio componente &lt;em&gt;MultiSelect&lt;/em&gt; el que se encargaría de incluir el JavaScript en la página cuando en ella se usase lo que nos evita incluir el JavaScript de forma global en la aplicación y en todas las páginas cuando realmente no se usa.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/97ab5029147f0bf58bb741775af69e1a.js?file=MultiSelect.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew run&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2014/12/portada-PugInTapestry-thumb.png&#34; alt=&#34;Portada libro: PlugIn Tapestry&#34; title=&#34;Portada libro: PlugIn Tapestry&#34; style=&#34;float: left; margin-right: 1.5em;&#34;&gt;
    &lt;h3&gt;Libro PlugIn Tapestry&lt;/h3&gt;
    &lt;p&gt;Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este &lt;i&gt;framework&lt;/i&gt; en el formato que prefieras, &lt;a href=&#34;http://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry&lt;/a&gt;, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.&lt;/p&gt;
    &lt;br style=&#34;clear: both;&#34;&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf&#34; class=&#34;btn btn-lg btn-success&#34;&gt;PDF&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.epub&#34; class=&#34;btn btn-lg btn-success&#34;&gt;EPUB&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.mobi&#34; class=&#34;btn btn-lg btn-success&#34;&gt;MOBI&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.zip&#34; class=&#34;btn btn-lg btn-success&#34;&gt;HTML&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry&#34; class=&#34;btn btn-lg btn-success&#34;&gt;Código fuente ejemplos&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="java"/>
            
                <category term="javascript"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="tapestry"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/10/componente-select-multiple-en-apache-tapestry/</id>
        <title>Componente select múltiple en Apache Tapestry</title>        
        <updated>2016-10-25T13:45:00+02:00</updated>
        <published>2016-10-25T13:45:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-multiple-en-apache-tapestry/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/apache-tapestry-5.svg&#34; class=&#34;right&#34; width=&#34;400&#34; alt=&#34;Apache Tapestry&#34; title=&#34;Apache Tapestry&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.png&#34; class=&#34;right&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;El &lt;em&gt;framework&lt;/em&gt; basado en componentes Apache Tapestry incorpora una amplia &lt;a href=&#34;http://tapestry.apache.org/component-reference.html&#34;&gt;colección de componentes&lt;/a&gt; que nos bastarán en la mayoría de casos que necesitemos. Para los casos en que deseemos un componente con un comportamiento específico podemos construir uno completamente nuevo basado en otros existentes incluyendo los propios nuestros, de una librería o incluidos en Tapestry.&lt;/p&gt;

&lt;p&gt;En Tapestry hay múltiples componentes con los que construir formularios para que el usuario pueda introducir datos, ser enviados por el navegador y procesados en el servidor. Hay componentes de formulario desde &lt;em&gt;checkboxes&lt;/em&gt;, &lt;em&gt;radios&lt;/em&gt;, &lt;em&gt;select&lt;/em&gt;, &lt;em&gt;inputs&lt;/em&gt;, &amp;hellip; con soporte para &lt;abbr title=&#34;HyperText Markup Language&#34;&gt;HTML&lt;/abbr&gt; 5.&lt;/p&gt;

&lt;p&gt;Observando en detalle la lista de componentes ofrecidos nos daremos cuenta de que está un componente &lt;a href=&#34;https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Select.html&#34;&gt;Select&lt;/a&gt; pero que solo se puede utilizar para que el usuario seleccione una única opción, sin embargo, en el estándar de HTML los campos de selección pueden utilizarse para seleccionar múltiples opciones. Como se no ofrece un componente &lt;em&gt;select&lt;/em&gt; para seleccionar múltiples opciones a la vez si lo necesitamos deberemos implementar uno que nos ofrezca esta funcionalidad. Con el codigo fuente de Tapestry la tarea es mucho más sencilla y prácticamente es copiar y pegar, el código completo del componente &lt;em&gt;MultiSelect&lt;/em&gt; será lo que muestre a continuación.&lt;/p&gt;

&lt;p&gt;Todo componente de formulario en este &lt;em&gt;framework&lt;/em&gt; hereda de &lt;a href=&#34;https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/base/AbstractField.html&#34;&gt;AbstracField&lt;/a&gt; en el que básicamente deberemos proporcionar una implementación del método &lt;a href=&#34;https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/base/AbstractField.html#processSubmission(java.lang.String)&#34;&gt;processSubmission()&lt;/a&gt; donde procesaremos los datos recibidos en este caso con un método equivalente al tradicional en Java EE &lt;a href=&#34;https://docs.oracle.com/javaee/7/api/javax/servlet/ServletRequest.html#getParameterValues-java.lang.String-&#34;&gt;ServletRequest.getParameterValues&lt;/a&gt;. La otra parte que deberemos implementar es la generación de etiquetas HTML del componente en el método de ciclo de vida &lt;em&gt;beginRender()&lt;/em&gt; que en gran parte nos servirá lo implementado en el código fuente del componente &lt;em&gt;Select&lt;/em&gt; de Tapestry pero incluyendo el atributo &lt;em&gt;multiple&lt;/em&gt; que requiere HTML para los &lt;em&gt;selects&lt;/em&gt; de múltiples opciones.&lt;/p&gt;

&lt;p&gt;Esta sería una implementación de un componente &lt;em&gt;select&lt;/em&gt; múltiple. La mayor diferencia entre el componente &lt;em&gt;Select&lt;/em&gt; y este &lt;em&gt;MultiSelect&lt;/em&gt; está en la propiedad &lt;em&gt;value&lt;/em&gt; que en el primero es de tipo &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html&#34;&gt;Object&lt;/a&gt; donde se guardará el dato seleccionado y &lt;em&gt;selected&lt;/em&gt; en el segundo que es un &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/List.html&#34;&gt;List&lt;/a&gt; de objetos donde se guardarán los datos seleccionados.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/880b9471c7f6ded2212fd5418c34a94a.js?file=MultiSelect.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;Esta implementación del componente no necesita de una plantilla &lt;em&gt;tml&lt;/em&gt; sino que todo el HTML se generará desde el código Java. El componente soporta parámetros informales como indicamos con la anotación &lt;a href=&#34;https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/annotations/SupportsInformalParameters.html&#34;&gt;@SupportsInformalParameters&lt;/a&gt; que son parámetros que se añadirán a la etiqueta &lt;em&gt;select&lt;/em&gt; incluidos tal cual se indican en su uso que por ejemplo podemos utilizar para variar el número de opciones visibles, personalizar los textos y otras funcionalidades de &lt;a href=&#34;https://silviomoreto.github.io/bootstrap-select/&#34;&gt;bootstrap-select&lt;/a&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/880b9471c7f6ded2212fd5418c34a94a.js?file=Index.tml&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/880b9471c7f6ded2212fd5418c34a94a.js?file=Index.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;El código HTML generado por el componente es el siguiente:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/880b9471c7f6ded2212fd5418c34a94a.js?file=Index.html&#34;&gt;&lt;/script&gt;

&lt;p&gt;Este sería el aspecto del &lt;em&gt;select&lt;/em&gt; múltiple con sus botones para seleccionar todas las opciones y deseleccionar todas, además de personalizados los textos y una pequeña flecha en el desplegable hacia el componente &lt;em&gt;select&lt;/em&gt;, todo esto configurado principalmente a través de atributos &lt;em&gt;data&lt;/em&gt; y clases &lt;abbr title=&#34;Cascading Stylesheets&#34;&gt;CSS&lt;/abbr&gt;.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/188/multiselect.png&#34; title=&#34;Aspecto del componente select mútiple&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/188/multiselect-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/188/multiselect-2.png&#34; title=&#34;Vista con opciones seleccionadas enviadas al servidor&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/188/multiselect-2-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Componente MultiSelect con bootstrap-select&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Si queremos seleccionar múltiples opciones usando &lt;em&gt;checkboxes&lt;/em&gt; Tapestry ofrece el componente &lt;a href=&#34;https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Checklist.html&#34;&gt;Checklist&lt;/a&gt; y usando &lt;em&gt;selects&lt;/em&gt; otra opción es el componente &lt;a href=&#34;https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Palette.html&#34;&gt;Palette&lt;/a&gt; pero seguramente no sea lo que deseamos.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/188/checklist.png&#34; title=&#34;Componente Checklist de Tapestry&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/188/checklist-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/188/palette.png&#34; title=&#34;Componente Palette de Tapestry&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/188/palette-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Componentes Checklist y Palette&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;En un artículo anterior comenté como &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/componente-select-de-apache-tapestry-con-funcionalidades-adicionales-usando-bootstrap-select/&#34;&gt;adaptar el componente &lt;em&gt;Select&lt;/em&gt; y este &lt;em&gt;MultiSelect&lt;/em&gt; para añadirle funcionalidades de la librería bootstrap-select&lt;/a&gt; como cuadro de búsqueda, búsqueda por palabras clave, divisores, etc que consiste en añadir a las etiquetas HTML &lt;em&gt;select&lt;/em&gt;, &lt;em&gt;optiongrp&lt;/em&gt; y &lt;em&gt;option&lt;/em&gt; ciertos atributos con sus correspondientes valores con una combinación de parámetros informales y personalización de la clase &lt;a href=&#34;https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/SelectModel.html&#34;&gt;SelectModel&lt;/a&gt;. En el siguiente artículo comentaré como &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/anadir-botones-selectores-de-opciones-a-select-multiple-de-bootsrap-select/&#34;&gt;añadir botones selectores de opciones&lt;/a&gt; además de los que incorpora &lt;em&gt;bootstrap-select&lt;/em&gt; de Todos y Ninguno.&lt;/p&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew run&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2014/12/portada-PugInTapestry-thumb.png&#34; alt=&#34;Portada libro: PlugIn Tapestry&#34; title=&#34;Portada libro: PlugIn Tapestry&#34; style=&#34;float: left; margin-right: 1.5em;&#34;&gt;
    &lt;h3&gt;Libro PlugIn Tapestry&lt;/h3&gt;
    &lt;p&gt;Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este &lt;i&gt;framework&lt;/i&gt; en el formato que prefieras, &lt;a href=&#34;http://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry&lt;/a&gt;, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.&lt;/p&gt;
    &lt;br style=&#34;clear: both;&#34;&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf&#34; class=&#34;btn btn-lg btn-success&#34;&gt;PDF&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.epub&#34; class=&#34;btn btn-lg btn-success&#34;&gt;EPUB&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.mobi&#34; class=&#34;btn btn-lg btn-success&#34;&gt;MOBI&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.zip&#34; class=&#34;btn btn-lg btn-success&#34;&gt;HTML&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry&#34; class=&#34;btn btn-lg btn-success&#34;&gt;Código fuente ejemplos&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Select.html&#34;&gt;Select&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://silviomoreto.github.io/bootstrap-select/&#34;&gt;Bootstrap Select&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="java"/>
            
                <category term="javascript"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="tapestry"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/10/componente-select-de-apache-tapestry-con-funcionalidades-adicionales-usando-bootstrap-select/</id>
        <title>Componente select de Apache Tapestry con funcionalidades adicionales usando bootstrap-select</title>        
        <updated>2016-10-25T12:30:00+02:00</updated>
        <published>2016-10-15T13:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-de-apache-tapestry-con-funcionalidades-adicionales-usando-bootstrap-select/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/apache-tapestry-5.svg&#34; class=&#34;right&#34; width=&#34;400&#34; alt=&#34;Apache Tapestry&#34; title=&#34;Apache Tapestry&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.png&#34; class=&#34;right&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;El selector de opciones implementado en los navegadores es muy simple pudiendo seleccionar un elemento de una lista, mostrar los elementos agrupados por categorías o seleccionar múltiples elementos pero mostrándolos en formato de una lista en vez de como un desplegable. &lt;a href=&#34;https://silviomoreto.github.io/bootstrap-select/&#34;&gt;bootstrap-select&lt;/a&gt; es una librería que utiliza los estilos de &lt;a href=&#34;http://getbootstrap.com/&#34;&gt;Bootstrap&lt;/a&gt; y que añade algunas funcionalidades más a los componentes de selección de opciones de los formularios de una página web.&lt;/p&gt;

&lt;p&gt;Algunas de estas funcionalidades adicionales está explicadas más detalladamente en los &lt;a href=&#34;https://silviomoreto.github.io/bootstrap-select/examples/&#34;&gt;ejemplos&lt;/a&gt;, que son:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cuadro de búsqueda&lt;/li&gt;
&lt;li&gt;Búsqueda por palabras clave&lt;/li&gt;
&lt;li&gt;Limitar el número de opciones seleccionables&lt;/li&gt;
&lt;li&gt;Texto personalizado de opción no seleccionada&lt;/li&gt;
&lt;li&gt;Texto personalizado de opción seleccionada (distinto al texto de la opción)&lt;/li&gt;
&lt;li&gt;Texto de opciones seleccionadas personalizado&lt;/li&gt;
&lt;li&gt;Estilos personalizados&lt;/li&gt;
&lt;li&gt;Marca en la opción seleccionada&lt;/li&gt;
&lt;li&gt;Flecha hacia el campo del formulario en el desplegable&lt;/li&gt;
&lt;li&gt;Estilos  personalizados en opciones individuales&lt;/li&gt;
&lt;li&gt;Anchuras personalizables&lt;/li&gt;
&lt;li&gt;Iconos en las opciones&lt;/li&gt;
&lt;li&gt;Contenido personalizado en las opciones&lt;/li&gt;
&lt;li&gt;Subtextos&lt;/li&gt;
&lt;li&gt;Tamaño de menú personalizado&lt;/li&gt;
&lt;li&gt;Opciones de selección y deselección&lt;/li&gt;
&lt;li&gt;Divisores&lt;/li&gt;
&lt;li&gt;Cabecera&lt;/li&gt;
&lt;li&gt;Posición desplegable&lt;/li&gt;
&lt;li&gt;Deshabilitar &lt;em&gt;select&lt;/em&gt;, opción o grupo de opciones&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Todas estas capacidades de personalización se consiguen bien añadiendo atributos a las etiquetas &lt;abbr title=&#34;HyperText Markup Language&#34;&gt;HTML&lt;/abbr&gt; &lt;em&gt;select&lt;/em&gt; o a las etiquetas &lt;em&gt;option&lt;/em&gt; y &lt;em&gt;optgroup&lt;/em&gt; con lo que usar el componente &lt;em&gt;bootstrap-select&lt;/em&gt; consiste básicamente generar el marcado HTML adecuado. Con JavaScript se puede construir el componente donde podemos indicar las mismas &lt;a href=&#34;https://silviomoreto.github.io/bootstrap-select/options/&#34;&gt;opciones adicionales&lt;/a&gt; que con los atributos &lt;em&gt;data-&lt;/em&gt;, también tiene &lt;a href=&#34;https://silviomoreto.github.io/bootstrap-select/methods/&#34;&gt;métodos&lt;/a&gt; para manipular su comportamiento de forma programática como por ejemplo recibir eventos cuando cambia la selección.&lt;/p&gt;

&lt;p&gt;Usando &lt;a href=&#34;http://tapestry.apache.org&#34;&gt;Apache Tapestry&lt;/a&gt; con su concepto de parámetros informales añadiremos las atributos necesarios en la etiqueta &lt;em&gt;select&lt;/em&gt; y con el modelo de datos proporcionado en &lt;a href=&#34;https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/SelectModel.html&#34;&gt;SelectModel&lt;/a&gt;, &lt;a href=&#34;https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/OptionGroupModel.html&#34;&gt;OptionGroupModel&lt;/a&gt; y &lt;a href=&#34;https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/OptionModel.html&#34;&gt;OptionModel&lt;/a&gt; podremos proporcionar los atributos adicionales para las etiquetas de los &lt;em&gt;option&lt;/em&gt; y &lt;em&gt;optgroup&lt;/em&gt;. El modelo de datos de una etiqueta &lt;em&gt;select&lt;/em&gt; es una lista de opciones y grupos de opciones, cada opción tiene una etiqueta que se le mostrará al usuario, si está habilitada o no, el valor que se enviará al servidor cuando esté seleccionada y un mapa de atributos a añadir en la etiqueta de la opción.&lt;/p&gt;

&lt;p&gt;Este sería el código para crear una instancia de &lt;em&gt;SelectModel&lt;/em&gt; para un componente &lt;a href=&#34;https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Select.html&#34;&gt;Select&lt;/a&gt; de Tapestry para un ficticio selector de país. En el ejemplo en vez de usar un mapa vacío con &lt;em&gt;Collections.EMPTY_MAP&lt;/em&gt; se podría sustituir por un mapa con atributos que se añadirían a la opción para usar alguna otra funcionalidad de &lt;em&gt;bootstrap-select&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/128dcbc596aeeb6f40d89d95542925ce.js?file=Index.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/128dcbc596aeeb6f40d89d95542925ce.js?file=Index.tml&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/128dcbc596aeeb6f40d89d95542925ce.js?file=AppOptionGroupModel.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/128dcbc596aeeb6f40d89d95542925ce.js?file=AppOptionModel.java&#34;&gt;&lt;/script&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/187/select-1.png&#34; title=&#34;Componente selector con bootstrap-select&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/187/select-1-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/187/select-2.png&#34; title=&#34;&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/187/select-2-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Componente selector con bootstrap-select&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Al ser enviado el formulario que contiene el &lt;em&gt;select&lt;/em&gt; el valor seleccionado los tendremos en la propiedad que hayamos indicado en el parámetro &lt;em&gt;value&lt;/em&gt; del componente &lt;em&gt;Select&lt;/em&gt;, este caso en la propiedad &lt;em&gt;pais&lt;/em&gt; de la clase &lt;em&gt;Index&lt;/em&gt; que representa la página.&lt;/p&gt;

&lt;p&gt;En la clase &lt;em&gt;PlugInStack&lt;/em&gt; hay que especificar los recursos CSS y de JavaScript necesarios para usar &lt;em&gt;bootstrap-select&lt;/em&gt;, además de iniciarlizar los selectores con JavaScript.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/128dcbc596aeeb6f40d89d95542925ce.js?file=PlugInStack.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/128dcbc596aeeb6f40d89d95542925ce.js?file=index.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;En el artículo &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/componente-select-multiple-en-apache-tapestry/&#34;&gt;Componente select múltiple en Apache Tapestry&lt;/a&gt; explico como crear un &lt;em&gt;select&lt;/em&gt; múltiple que por defecto no incluye Tapestry pero el estandar HTML soporta y en algún caso nos será necesario y en &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/anadir-botones-selectores-de-opciones-a-select-multiple-de-bootsrap-select/&#34;&gt;añadir botones selectores de opciones&lt;/a&gt; como incluir selectores adicionales además de Todos y Ninguno.&lt;/p&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew run&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2014/12/portada-PugInTapestry-thumb.png&#34; alt=&#34;Portada libro: PlugIn Tapestry&#34; title=&#34;Portada libro: PlugIn Tapestry&#34; style=&#34;float: left; margin-right: 1.5em;&#34;&gt;
    &lt;h3&gt;Libro PlugIn Tapestry&lt;/h3&gt;
    &lt;p&gt;Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este &lt;i&gt;framework&lt;/i&gt; en el formato que prefieras, &lt;a href=&#34;http://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry&lt;/a&gt;, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.&lt;/p&gt;
    &lt;br style=&#34;clear: both;&#34;&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf&#34; class=&#34;btn btn-lg btn-success&#34;&gt;PDF&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.epub&#34; class=&#34;btn btn-lg btn-success&#34;&gt;EPUB&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.mobi&#34; class=&#34;btn btn-lg btn-success&#34;&gt;MOBI&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.zip&#34; class=&#34;btn btn-lg btn-success&#34;&gt;HTML&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry&#34; class=&#34;btn btn-lg btn-success&#34;&gt;Código fuente ejemplos&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://silviomoreto.github.io/bootstrap-select/&#34;&gt;Bootstrap Select&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://silviomoreto.github.io/bootstrap-select/examples/&#34;&gt;Bootstrap Select Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://silviomoreto.github.io/bootstrap-select/methods/&#34;&gt;Bootstrap Select Methods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="java"/>
            
                <category term="javascript"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="tapestry"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/no-un-tag-jsp-o-un-tag-de-grails-no-es-equivalente-a-un-componente-de-tapestry/</id>
        <title>No, un tag JSP o un tag de Grails no es equivalente a un componente de Tapestry</title>        
        <updated>2016-07-25T12:00:00+02:00</updated>
        <published>2016-07-25T12:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/07/no-un-tag-jsp-o-un-tag-de-grails-no-es-equivalente-a-un-componente-de-tapestry/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Alguna vez que he dado una presentación sobre Apache Tapestry después de la misma me comentaron que eso mismo que explicaba se podía hacer con el &lt;em&gt;framework&lt;/em&gt; que esa persona usaba. En un proyecto la tecnología no es es lo más importante pero es una herramienta que puede facilitar en gran medida el desarrollo. Respecto a los componentes de Tapestry alguien puede pensar que son iguales a los &lt;em&gt;tag&lt;/em&gt; que existen en las tecnologías de presentación como JSP o Grails. En este artículo comentaré algunas diferencias importantes que los hace más y muy interesantes junto con otras características de &lt;em&gt;framework&lt;/em&gt;.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/apache-tapestry-5.svg&#34; class=&#34;right&#34; width=&#34;400&#34; alt=&#34;Apache Tapestry&#34; title=&#34;Apache Tapestry&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.png&#34; class=&#34;right&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Viendo el panel &lt;a href=&#34;https://es.wikipedia.org/wiki/Kanban_(desarrollo)&#34;&gt;Kanban&lt;/a&gt; de la herramienta de peticiones &lt;a href=&#34;https://www.atlassian.com/software/jira&#34;&gt;JIRA&lt;/a&gt; que usamos para registrar y priorizar las siguiente tareas en la empresa que trabajo hay unas cuantas que consisten en dado un listado de compras poder realizar operaciones sobre múltiples filas sin salir de la pantalla del listado. La necesidad es evitar que los usuarios de la aplicación hagan las acciones de forma individual de forma repetitiva, evitarles esto harán que sean más productivos y podrán desarrollar su trabajo mejor y más rápido. Así de sencillo, aparentemente.&lt;/p&gt;

&lt;p&gt;Esta necesidad que en la realidad será implementada con &lt;a href=&#34;https://grails.org/&#34;&gt;Grails&lt;/a&gt; quería compararla con una implementación equivalente usando &lt;a href=&#34;http://tapestry.apache.org&#34;&gt;Apache Tapestry&lt;/a&gt; porque como en muchas otras necesidades intuyo que con Tapestry implementarlas es significativamente más sencillo y con un resultado de implementación como en este caso con el que quedo más a gusto.&lt;/p&gt;

&lt;h3 id=&#34;la-necesidad&#34;&gt;La necesidad&lt;/h3&gt;

&lt;p&gt;Definiendo más la necesidad hasta ahora cada fila del listado tiene un conjunto de botones para realizar acciones individuales y ahora se quiere al final del listado otro conjunto de botones para realizar acciones sobre las compras que se seleccionen de forma múltiple. Para seleccionar las compras se usará un &lt;em&gt;checkbox&lt;/em&gt; colocado al inicio de cada fila. Para algunas acciones el usuario ha de introducir información adicional cosa que hará con un diálogo modal que ya existe pero que hasta ahora solo permitía hacer la acción de forma individual. Las mismas acciones se realizarán en varias páginas de la aplicación (después de la acción se deberá volver a la página en la que se estaba), solo se podrán hacer las acciones múltiples si en todas las compras seleccionadas es posible realizar esa acción y el contenido de los diálogos solicitando información adicional podrán depender de las compras seleccionadas. Las acciones en el ejemplo serán habilitar o deshabilitar. Determinar las acciones posibles de una compra es compleja y saber si una acción es posible no depende solo de información en la propia compra sino de otras entidades del sistema, en el ejemplo no será así pero se tendrá en cuenta en la implementación.&lt;/p&gt;

&lt;p&gt;Esta sería una imagen del prototipo de los botones para hacer acciones múltiples, seleccionar compras y el diálogo modal para introducir información adicional.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/164/listado.png&#34; title=&#34;Listado de productos&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/164/listado-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/164/modal.png&#34; title=&#34;Modal solicitando información adicional&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/164/modal-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Listado y modal de la necesidad expuesta&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;En la necesidad real las filas son compras pero en el ejemplo usaré la entidad &lt;em&gt;Product&lt;/em&gt;. Las acciones en el ejemplo serán habilitar para la que no será necesaria información adicional, la otra acción será deshabilitar para la que se necesitará introducir una razón con un modal.&lt;/p&gt;

&lt;h3 id=&#34;las-posibilidades&#34;&gt;Las posibilidades&lt;/h3&gt;

&lt;p&gt;Para implementar técnicamente el que solo se puedan hacer las acciones múltiples según los productos seleccionadas se habilitarán o deshabilitarán los botones con JavaScript sin peticiones AJAX adicionales al servidor para ello toda la información necesaria deberá estar en el cliente. En este caso bastará habilitar o deshabilitar cada botón según si esa acción es posible en todas los productos seleccionadas pero eso podría no bastar ya que se podría requerir que productos fuesen del mismo vendedor. En el ejemplo con un atributo en un elemento HTML de la fila que contenga las acciones posibles separadas por comas bastará. De esta forma no habrá que hacer consultas adicionales al servidor mediante peticiones AJAX en cada nueva selección.&lt;/p&gt;

&lt;p&gt;Sin embargo, como el contenido de los diálogos depende del producto o productos seleccionadas se hará una petición AJAX para obtener su contenido. De esta forma el contenido de los diálogos no tendrá que estar precargado (el número de acciones podría ser una decena) en el cliente ni generarlo con JavaScript en cliente que sería algo más complicado que usar la propia tecnología para generar contenido que está presente en el servidor y posiblemente más propenso a errores por usar JavaScript.&lt;/p&gt;

&lt;h3 id=&#34;la-implementación-con-apache-tapestry&#34;&gt;La implementación con Apache Tapestry&lt;/h3&gt;

&lt;p&gt;Definida la necesidad y unas pocas notas voy a poner el código de como con Apache Tapestry implementar la solución. La página del listado será la siguiente. En el &lt;em&gt;checkbox&lt;/em&gt; de selección se añade el atributo &lt;em&gt;data-product-actions&lt;/em&gt; con las acciones posibles que se obtienen del servicio &lt;em&gt;AppService&lt;/em&gt; con el método &lt;em&gt;getAvaliableActions&lt;/em&gt;. El componente de Tapestry &lt;em&gt;actions&lt;/em&gt; generará el código de los botones tanto para los individuales en su uso &lt;em&gt;&amp;lt;t:actions&amp;gt;&lt;/em&gt; con el parámetro &lt;em&gt;product&lt;/em&gt; como múltiples en su uso con el parámetro &lt;em&gt;type&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/11715e0799339d0335a30ce30a17ee58.js?file=Index.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/11715e0799339d0335a30ce30a17ee58.js?file=Index.tml&#34;&gt;&lt;/script&gt;

&lt;p&gt;El código para mostrar las acciones con botones para un determinado producto o para los productos es el siguiente. El mismo componente se encargará de realizar en el servidor la acción habilitar que no necesita modal. Con un poco de &lt;a href=&#34;https://es.wikipedia.org/wiki/JavaScript&#34;&gt;JavaScript&lt;/a&gt;, &lt;a href=&#34;https://jquery.com/&#34;&gt;jQuery&lt;/a&gt; y &lt;a href=&#34;http://underscorejs.org/&#34;&gt;Underscore&lt;/a&gt; se habilitarán o deshabilitarán los botones y se mostrará el diálogo para la acción deshabilitar.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/11715e0799339d0335a30ce30a17ee58.js?file=Actions.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/11715e0799339d0335a30ce30a17ee58.js?file=Actions.tml&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/11715e0799339d0335a30ce30a17ee58.js?file=actions.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;El código del modal para deshabilitar sería el siguiente. En el método &lt;em&gt;show&lt;/em&gt; recibe los &lt;em&gt;ids&lt;/em&gt; de los productos a deshabilitar y recupera del servidor el contenido de diálogo con una petición AJAX. El componente del modal se encargará de hacer el deshabilitado de los productos y la recarga de la página si finaliza correctamente o de mostar los errores de validación que se produzcan si no se ha introducido el motivo.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/11715e0799339d0335a30ce30a17ee58.js?file=DisableProductsModal.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/11715e0799339d0335a30ce30a17ee58.js?file=DisableProductsModal.tml&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/11715e0799339d0335a30ce30a17ee58.js?file=modals.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/TapestryMultipleActions&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew run&lt;/code&gt;.
&lt;/p&gt;

&lt;h3 id=&#34;algunas-diferencias-con-servlets-jsp-y-grails&#34;&gt;Algunas diferencias con Servlets/JSP y Grails&lt;/h3&gt;

&lt;p&gt;La tecnología de presentación de páginas web Java con &lt;em&gt;Java Server Pages&lt;/em&gt; o JSP permiten encapsular con un &lt;em&gt;tag&lt;/em&gt; la generación de un trozo de HTML no en el propio JSP sino en ese &lt;em&gt;tag&lt;/em&gt; que en código Java pudiendo incluir la llamada a un JSP. Los &lt;em&gt;tags&lt;/em&gt; y librerías de &lt;em&gt;tags&lt;/em&gt; son una forma de reutilizar esas partes de generación de código en el mismo proyecto y entre proyectos. Los &lt;em&gt;tags&lt;/em&gt; además son una forma de abstraernos del funcionamiento interno del &lt;em&gt;tag&lt;/em&gt; haciendo que solo necesitemos conocer sus parámetros.&lt;/p&gt;

&lt;p&gt;Si usamos JSP usar librerías de &lt;em&gt;tags&lt;/em&gt; es una buena idea, sin embargo, tiene algunas limitaciones como que requieren un archivo descriptor en formato XML que las defina y aunque pudiendo saber que parámetros definen y cuáles son requeridos no define el tipo de los parámetros que requiere. Los archivos XML en la época actual han caído en desuso porque son propensos a errores, errores que no son detectados hasta tiempo de ejecución, de los peores tipos de errores. Por otro lado, que los &lt;em&gt;tags&lt;/em&gt; no especifiquen el tipo de parámetro que requiere cada uno hace que debamos inspeccionar el código fuente del &lt;em&gt;tag&lt;/em&gt; con lo que la ventaja de abstraerse del funcionamiento no es del todo completa. Si por algún cambio el tipo de parámetro cambia hay que adaptar todos los usos del &lt;em&gt;tag&lt;/em&gt;, si alguno no se hace nuevamente se producirán errores en tiempo de ejecución.&lt;/p&gt;

&lt;p&gt;Grails usa GSP, una tecnología de presentación similar a los JSP. También dispone de &lt;em&gt;tags&lt;/em&gt; que no requieren definir los &lt;em&gt;tags&lt;/em&gt; en un archivo XML simplificando su uso pero que igualmente adolecen de algunos problemas como los JSP. Por un lado, los &lt;em&gt;tags&lt;/em&gt; de Grails no disponen un mecanismo para hacer requerido un determinado parámetro con lo que deberemos incluir la comprobación con código nosotros, tampoco define el tipo de parámetros que requiere. También aunque hacer más simple su desarrollo al no tener un descriptor XML como en los &lt;em&gt;tag&lt;/em&gt; JSP hace que haya que inspeccionar el código fuente para saber qué parámetros tiene, si son requeridos y cuál es el tipo del parámetro. Todo esto hace que puedan producirse errores en tiempo de ejecución y errores que no son producidos hasta que se ejercita el &lt;em&gt;tag&lt;/em&gt; con un mal uso o un uso desactualizado al igual que usando los &lt;em&gt;tag&lt;/em&gt; JSP.&lt;/p&gt;

&lt;p&gt;En Apache Tapestry todo son componentes, las páginas también son componentes con la característica de que no están embebidos en otro componente. Un componente de Apache Tapestry sería similar a un &lt;em&gt;tag&lt;/em&gt; de JSP o un &lt;em&gt;tag&lt;/em&gt; de Grails, con ciertas similitudes pero no iguales en aspectos importantes. De pronto, un componente de Tapestry define los parámetros que necesita y si son requeridos pero también define el tipo del parámetro. Como se aprecia en las páginas de documentación de los &lt;a href=&#34;http://tapestry.apache.org/component-reference.html&#34;&gt;componentes integrados de serie en Apache Tapestry&lt;/a&gt; se puede conocer esta información sin necesidad de conocer el código fuente del componente, documentación que podemos generar para los componentes que nosotros desarrollemos. Los parámetros, si son requeridos y sus tipos forman el contrato del componente y es lo único que deberemos conocer para usarlos, su funcionamiento interno nos es irrelevante que incluye el código JavaScript que necesite, podría que CSS y literales internacionalizados.&lt;/p&gt;

&lt;p&gt;Pero esas no son las únicas diferencias con los &lt;em&gt;tags&lt;/em&gt; de JSP o de Grails y es que estas son solo tecnologías de presentación, la V del &lt;a href=&#34;https://es.wikipedia.org/wiki/Modelo%E2%80%93vista%E2%80%93controlador&#34;&gt;patrón MVC&lt;/a&gt;. Los componentes de Tapestry aparte de encapsular la lógica de presentación también pueden encapsular lógica de controlador, en el conocido patrón MVC además de V pueden ser C con lo que encapsulan aún más funcionalidad. La lógica de presentación y controlador en los JSP y Grails está separada pero ambas lógicas no son independientes, están relacionadas, en Tapestry está encapsulada en el mismo componente.&lt;/p&gt;

&lt;p&gt;Los componentes de Tapestry usan el &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/07/modelo-push-contra-modelo-pull-en-frameworks-web/&#34;&gt;modelo pull en vez del modelo push&lt;/a&gt; haciendo innecesario construir un objeto &lt;em&gt;Map&lt;/em&gt; que pasar a la vista, haciendo que sea la plantilla la que solicite al controlador los datos que necesita y haciendo que el controlador no sepa que datos necesita la vista. El controlador solo deberá tener las propiedades y métodos que necesite la vista. Dado que en las plantillas &lt;em&gt;tml&lt;/em&gt; de la vista no se pueden incluir expresiones complejas hace que no contengan lógica que estará en el controlador asociado que es código Java donde tendremos la ayuda del compilador para detectar errores.&lt;/p&gt;

&lt;p&gt;Para volver a la misma página en &lt;a href=&#34;https://spring.io/&#34;&gt;Spring MVC&lt;/a&gt;, &lt;a href=&#34;https://struts.apache.org/&#34;&gt;Struts&lt;/a&gt; o &lt;a href=&#34;https://grails.org/&#34;&gt;Grails&lt;/a&gt; posiblemente deberíamos recibir además información para retornar a la misma página en la que estabamos cosa que es innecesaria en Tapestry por su &lt;a href=&#34;http://tapestry.apache.org/page-navigation.html&#34;&gt;concepto de contexto de activación de página&lt;/a&gt; y el patrón &lt;em&gt;Redirect-After-Post&lt;/em&gt; hará que al recargar la página por código con &lt;code&gt;window.localtion.reload();&lt;/code&gt; después de una petición POST el navegador no muestre un diálogo modal informando al usuario de que se reenviarán datos.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/164/dialogo-recargar.png&#34; title=&#34;Diálogo recargar después de petición POST en Firefox&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/164/dialogo-recargar-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Diálogo recargar después de petición POST en Firefox&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://facebook.github.io/react/&#34;&gt;React&lt;/a&gt; y &lt;a href=&#34;https://www.polymer-project.org/1.0/&#34;&gt;Polymer&lt;/a&gt; son tecnologías de cliente en algunos aspectos similares a los componentes de Apache Tapestry pero con la diferencia de que unos son para el navegador del cliente y otros para el servidor, nada nos impide en la misma aplicación usar en el cliente React y Polymer y en el servidor Apache Tapestry. Nótese en el código del caso anterior que Tapestry ofrece integración con JavaScript de un modo que no existe ni en Spring MVC, Struts o Grails e incorpora de serie &lt;a href=&#34;http://requirejs.org/&#34;&gt;RequireJS&lt;/a&gt;, Undercore y jQuery, un componente de Tapestry puede requerir la cargar de un recurso de JavaScript y desde el componente es posible pasar datos al JavaScript usando el servicio &lt;a href=&#34;http://tapestry.apache.org/5.4/apidocs/org/apache/tapestry5/services/javascript/JavaScriptSupport.html&#34;&gt;JavaScriptSupport&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Esto es solo un pequeño ejemplo de las posibilidades de Apache Tapestry me dejo muchas otras como los eventos, &lt;em&gt;translators&lt;/em&gt;, &lt;em&gt;encoders&lt;/em&gt;, &lt;em&gt;coerces&lt;/em&gt;, librerías de componentes, &lt;em&gt;inversion of control&lt;/em&gt;, AJAX, validaciones de formularios, &amp;hellip; En un proyecto las herrramientas no son lo más importante pero &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/06/el-lenguaje-de-programacion-framework-y-librerias-importan/&#34;&gt;el lenguaje de programación, &lt;em&gt;framework&lt;/em&gt; y librerías importan&lt;/a&gt;, hay &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/05/10-razones-para-seguir-usando-java/&#34;&gt;10 razones para seguir usando Java&lt;/a&gt; y varios &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2011/08/motivos-para-elegir-apache-tapestry.html&#34;&gt;motivos para elegir Apache Tapestry&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;finalizando&#34;&gt;Finalizando&lt;/h3&gt;

&lt;p&gt;Lamentablemente hasta el momento no he tenido una oportunidad laboral de comprobar y demostrar que como en este ejemplo pero basado en una necesidad real que con Tapestry la implementación de la solución es más sencilla, menos propensa a errores y que la productividad no está relacionado con escribir unas pocas líneas de código menos con un lenguaje menos verboso o dejar de escribir puntos y comas al final de las líneas, más aún con las &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/&#34;&gt;novedades de Java 8&lt;/a&gt;. Quizá un día llegue esa oportunidad :|.&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2014/12/portada-PugInTapestry-thumb.png&#34; alt=&#34;Portada libro: PlugIn Tapestry&#34; title=&#34;Portada libro: PlugIn Tapestry&#34; style=&#34;float: left; margin-right: 1.5em;&#34;&gt;
    &lt;h3&gt;Libro PlugIn Tapestry&lt;/h3&gt;
    &lt;p&gt;Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este &lt;i&gt;framework&lt;/i&gt; en el formato que prefieras, &lt;a href=&#34;http://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry&lt;/a&gt;, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.&lt;/p&gt;
    &lt;br style=&#34;clear: both;&#34;&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf&#34; class=&#34;btn btn-lg btn-success&#34;&gt;PDF&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.epub&#34; class=&#34;btn btn-lg btn-success&#34;&gt;EPUB&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.mobi&#34; class=&#34;btn btn-lg btn-success&#34;&gt;MOBI&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.zip&#34; class=&#34;btn btn-lg btn-success&#34;&gt;HTML&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry&#34; class=&#34;btn btn-lg btn-success&#34;&gt;Código fuente ejemplos&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="java"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="tapestry"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/hemeroteca-9/</id>
        <title>Hemeroteca #9</title>        
        <updated>2016-07-02T12:00:00+02:00</updated>
        <published>2016-07-01T13:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/07/hemeroteca-9/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;6 meses más y 35 nuevos artículos escritos sobre temas de programación, java, software libre y opinión. No son muchos artículos pero tampoco son artículos breves sobre noticias efímeras, en cada artículo trato de compartir no solo información sino conocimiento en los que además suelo incluir el código completo de un ejemplo totalmente funcional.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;p&gt;Como cada seis meses en Blog Bitix hago una recopilación de los artículos que he publicado durante este tiempo, comento sobre que he escrito y comparto cómo ha evolucionado esta bitácora. Durante estas 26 primeras semanas del año he escrito 35 nuevos artículos siguiendo mi ritmo de publicación no muy prolífico pero muy constante al ritmo de uno por semana, algunas publicando dos artículos casi siempre durante el fin de semana.&lt;/p&gt;

&lt;p&gt;Los temas de los artículos han sido los habituales programación, GNU/Linux, Java, JavaScript, unos pocos de opinión y algún desempaquetado de producto que he comprado y he usado.&lt;/p&gt;

&lt;p&gt;En la categoría de programación están los siguientes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/01/introduccion-y-ejemplo-basico-sobre-vertx/&#34;&gt;Introducción y ejemplo básico sobre Vert.x&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/01/aplicacion-web-con-spark-framework-y-java/&#34;&gt;Aplicación web con Spark &lt;em&gt;framework&lt;/em&gt; y Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/02/introduccion-al-protocolo-http-2/&#34;&gt;Introducción al protocolo HTTP/2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/02/configurar-http-2-en-nginx-apache-httpd-wildfly-o-jetty/&#34;&gt;Configurar HTTP/2 en nginx, Apache HTTPD, WildFly o Jetty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/03/introduccion-y-nuevas-caracteristicas-de-java-ee-7/&#34;&gt;Introducción y nuevas características de Java EE 7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/03/como-ejecutar-un-proceso-del-sistema-con-java/&#34;&gt;Cómo ejecutar un proceso del sistema con Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/03/como-firmar-correos-electronicos-con-gpg-y-javamail/&#34;&gt;Cómo firmar correos electrónicos con GPG y JavaMail&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/04/aplicacion-de-ejemplo-usando-varias-especificaciones-de-java-ee-7/&#34;&gt;Aplicación de ejemplo usando varias especificaciones de Java EE 7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/04/usar-twitter-desde-java-con-twitter4j/&#34;&gt;Usar Twitter desde Java con twitter4j&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/04/el-componente-grid-de-apache-tapestry/&#34;&gt;El componente Grid de Apache Tapestry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/05/extraer-elementos-de-una-cadena-con-una-expresion-regular/&#34;&gt;Extraer elementos de una cadena con una expresión regular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/05/que-es-el-concepto-de-heap-pollution-en-java/&#34;&gt;Qué es el concepto de Heap Pollution en Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/05/la-clase-threadlocal-de-java-y-usos-practicos/&#34;&gt;La clase ThreadLocal de Java y usos prácticos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/05/incluir-informacion-de-la-version-en-el-artefacto-distribuible-con-gradle/&#34;&gt;Incluir información de la versión en el artefacto distribuible con Gradle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/05/ejemplo-sencillo-de-como-crear-un-excel-en-java-con-apache-poi/&#34;&gt;Ejemplo sencillo de como crear un excel en Java con Apache POI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/06/ofrecer-contenido-personalizado-al-usuario-basado-en-su-ubicacion/&#34;&gt;Ofrecer contenido personalizado al usuario basado en su ubicación&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/06/moment-js-libreria-javascript-para-fechas/&#34;&gt;Moment.js, librería JavaScript para fechas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/06/como-redirigir-peticiones-de-http-a-https-en-nginx-apache-tomcat-jetty-y-wildfly/&#34;&gt;Cómo redirigir peticiones de HTTP a HTTPS en Nginx, Apache, Tomcat, Jetty y WildFly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En la categoría de GNU/Linux y software libre están los siguientes artículos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/02/como-recuperar-archivos-eliminados-o-de-una-unidad-corrupta-en-gnu-linux/&#34;&gt;Cómo recuperar archivos eliminados o de una unidad corrupta en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/02/cifrar-unidad-usb-completamente-con-dm-crypt-y-luks-en-gnu-linux/&#34;&gt;Cifrar unidad USB completamente con dm-crypt y LUKS en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/02/cifrar-archivos-con-encfs-en-gnu-linux/&#34;&gt;Cifrar archivos con EncFS en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/03/como-eliminar-de-forma-segura-archivos-con-wipe-y-dd-en-gnu-linux/&#34;&gt;Cómo eliminar de forma segura archivos con wipe y dd en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/03/cambiar-el-formato-de-archivos-de-musica-o-audio-en-gnu-linux/&#34;&gt;Cambiar el formato de archivos de música o audio en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/04/cambiar-el-formato-de-archivos-de-video-o-peliculas-en-gnu-linux/&#34;&gt;Cambiar el formato de archivos de vídeo o películas en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/05/3-opciones-ofimaticas-alternativas-a-microsoft-office/&#34;&gt;3 opciones ofimáticas alternativas a Microsoft Office&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/05/como-realizar-copias-de-seguridad-en-windows-con-freefilesync/&#34;&gt;Cómo realizar copias de seguridad en Windows con FreeFileSync&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/06/atajos-de-teclado-basicos-de-la-terminal-en-gnu-linux/&#34;&gt;Atajos de teclado básicos de la terminal en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/06/combinacion-de-teclas-para-copiar-y-pegar-en-la-terminal/&#34;&gt;Combinación de teclas para copiar y pegar en la terminal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Un trío de artículos de opinión:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/01/windows-10-y-office-2016-tan-faciles-de-usar-sin-licencia-como-siempre/&#34;&gt;Windows 10 y Office 2016 tan fáciles de usar sin licencia como siempre&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/06/la-siguiente-disrupcion-tecnologica-la-convergencia/&#34;&gt;La siguiente disrupción tecnológica, la convergencia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/06/el-lenguaje-de-programacion-framework-y-librerias-importan/&#34;&gt;El lenguaje de programación, &lt;em&gt;framework&lt;/em&gt; y librerías importan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finalmente, un desempaquetado de una aspiradora que compré, un resumen de las presentaciones a las que asistí de la conferencia BilboStack y el sexto aniversario desde que empecé la bitácora:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/01/desempaquetado-y-analisis-de-aspiradora-dyson-dc37c-advanced-allergy/&#34;&gt;Desempaquetado y análisis de aspiradora Dyson DC37c Advanced Allergy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/01/conferencia-bilbostack-2016/&#34;&gt;Conferencia BilboStack 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/02/6o-aniversario-del-blog/&#34;&gt;6º aniversario del blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Acabo de empezar dos series de artículos una &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/terminal/&#34;&gt;serie sobre la terminal de GNU/Linux&lt;/a&gt; y completando con otros cuantos artículos otra serie sobre varios temas de &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/web/&#34;&gt;servidores y desarrollo web&lt;/a&gt; que aún tengo pendiente de continuar con algunos más. Además y aunque no he escrito ningún artículo hablando sobre ellos publiqué una nueva actualización del &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;libro PlugIn Tapestry&lt;/a&gt; con nuevo contenido y otro tanto revisado y actualizado.&lt;/p&gt;

&lt;p&gt;Con algunos artículos he quedado bastante satisfecho como en los que he hablado de Microsoft Windows y Microsoft Office pero también varios sobre Java, Java EE y HTTP/2. Sin embargo, algo que no falla es escribir algo de JavaScript y recibir unos cuantos &lt;em&gt;retweets&lt;/em&gt; y favoritos cuando lo publico en Twitter aunque tenga la sensación de no ser lo de lo mejor que haya escrito parece que es lo que más llama la atención posiblemente ya que la mayoría de la gente lo usa de una u otra forma. Por otro lado tengo la sensación de que escribo para Google ya que recibo pocos comentarios seguramente por la forma en la que escribo ya que no suelo personalizar los artículos poniendo información personal o intercalando algunos chistes, más bien me centro en el aspecto técnico del que estoy escribiendo pero tampoco pasa nada, compartir el poco o más conocimiento que tengo y otro que voy aprendiendo ya es suficiente recompensa para mi si además veo que cuanto más tiempo pasa el número de visitas crecen algo me mantiene con motivación para seguir escribiendo y publicando contenido.&lt;/p&gt;

&lt;p&gt;En cuanto a como han evolucionado las visitas siempre es motivante ver que con el nuevo contenido añadido y poco a poco las visitas y número de páginas vistas aumentan algo, en cualquier caso siguen siendo pocas con las que seguramente tengan otras bitácoras de temática similar pero también seguramente más que otros cuantas. De casi aproximadamente 7000 sesiones al mes que tenía en enero ahora en junio Analytics me contabiliza unas 11000, en el mismo periodo de tiempo he pasado de 9000 páginas vistas a casi 13500. La mayor parte de esta mejora ha sido por unos pocos artículos que se habrán posicionado bien en los primeros meses del año en el buscador Google fuente de la que provienen la mayor parte de las visitas.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/154/analytics.png&#34; title=&#34;Evolución de sesiones mensuales en Blog Bitix&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/154/analytics-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Evolución de sesiones mensuales en Blog Bitix&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Durante este tiempo en la bitácora he realizado algunos cambios haciendo el tamaño de letra más pequeña de las secciones de referencia y series de artículos así como en las series de artículos numerar los artículos. He añadido publicidad a nivel de página para los dispositivos móviles soportados que desde no hace mucho ofrece Google AdSense. He añadido un buscador con la tecnología de Google para buscar contenido en Blog Bitix y he minimizado el HTML con la intención de que la cantidad de datos descargados al acceder al &lt;em&gt;blog&lt;/em&gt; sean unos cuantos kilobytes menos. También he añadido un mensaje para aquellos usuarios que usen AdBlock y lo tengan activado instándolos a considerar que lo desactiven en Blog Bitix ya que la publicidad que incluyo en el &lt;em&gt;blog&lt;/em&gt; es amable y poco intrusiva.&lt;/p&gt;

&lt;p&gt;Con la publicidad que incluyo y los enlaces de afiliación para Amazon de mayoritariamente libros haré alguna nueva donación a algún proyecto de software libre que use o me resulte de interés. Con las enlaces de Amazon recibí una nueva transferencia de unos 25€ y con la publicidad de AdSense estoy a punto de recibir la correspondiente transferencia de aproximadamente 70€ al superar el límite mínimo, cuando la reciba me plantearé hacer la o las donaciones. No serán muy elevadas pero con ellas espero contribuir y devolver algo al software libre que uso a diario tanto de forma personal como en el trabajo. La primera donación que hice fue &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/12/yo-apoyo-al-software-libre-tu-tambien/&#34;&gt;comprando una par de camisetas a la FSFE&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Tengo muchos artículos escritos pero pendientes de publicar y muchas ideas de artículos que me permitirían seguir escribiendo a mi ritmo de publicación durante más de un año o dos sin ocurrírseme ninguna nueva idea de artículo aunque algunas ideas que he apuntado más tarde las deseche. Más que tiempo para escribir me falta tiempo para editar y publicar los artículos, compaginarlo con el trabajo me absorbe gran parte del tiempo libre que me queda.&lt;/p&gt;

&lt;p&gt;Y por mi esto ha sido todo durante estos seis meses pasados. ¡A por los siguientes 6 meses con nuevos artículos!&lt;/p&gt;



        </content>
        
            
                <category term="blog"/>
            
                <category term="blog-stack"/>
            
                <category term="hemeroteca"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="tapestry"/>
            
                <category term="gnu-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/04/el-componente-grid-de-apache-tapestry/</id>
        <title>El componente Grid de Apache Tapestry</title>        
        <updated>2016-04-30T12:00:00+02:00</updated>
        <published>2016-04-30T12:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/04/el-componente-grid-de-apache-tapestry/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;En la mayoría de aplicaciones no solo es habitual sino algo muy usado el mostrar listados de elementos de forma tabular con paginación y columnas ordenables. En estos listados el complejo componente internamente &lt;em&gt;Grid&lt;/em&gt; de Apache Tapestry pero a la vez muy sencillo de usar puede marcar una diferencia significativa en el número de líneas de código necesarias a escribir, la flexibilidad, funcionalidad ofrecida, la productividad al hacer la implementación o modificarla comparándolo con lo necesario en otros &lt;em&gt;frameworks&lt;/em&gt; web en los que no hay nada comparable de serie.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/apache-tapestry-5.svg&#34; class=&#34;right&#34; alt=&#34;Apache Tapstry&#34; title=&#34;Apache Tapstry&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;http://tapestry.apache.org&#34;&gt;Apache Tapestry&lt;/a&gt; es uno de los muchos &lt;em&gt;frameworks&lt;/em&gt; disponibles en Java para el desarrollo de aplicaciones y páginas web. A diferencia de la mayoría se basa en componentes y proporciona una larga lista de ellos listos para usar de serie, pero también se pueden crear componentes nuevos basados en los propios de Tapestry o los que desarrollemos nosotros muy fácilmente. Los componentes son piezas reusables de código que se pueden reutilizar bien directamente o para formar nuevos componentes y es uno de los motivos por los que en Tapestry se consigue una alta productividad además de otros beneficios como la encapsulación.&lt;/p&gt;

&lt;p&gt;Uno de los componentes más complejos pero al mismo tiempo muy simple de usar ofrecidos por el &lt;em&gt;framework&lt;/em&gt; es el &lt;a href=&#34;http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Grid.html&#34;&gt;componente Grid&lt;/a&gt;. El componente &lt;em&gt;Grid&lt;/em&gt; muestra en una tabla un listado de datos ofreciendo las funcionalidades de paginación, ordenación, personalización de columnas, filtrado de columnas, personalización en caso de estar vacío y algunas cosas más. Lo único que debemos tener en cuenta para aprovechar al máximo el componente &lt;em&gt;Grid&lt;/em&gt; son los parámetros que declara en su documentación su funcionamiento interno nos es irrelevante, será de los componentes más complejos y no por ello no es más difícil de utilizar basta decir que solo tiene un parámetro requerido y que es lo único imprescindible que es la lista de datos a mostrar.&lt;/p&gt;

&lt;p&gt;Aunque el componente tiene un buen número de parámetros para personalizar según queramos su comportamiento basta que hagamos uso únicamente del parámetro &lt;em&gt;source&lt;/em&gt; que es la fuente de datos del &lt;em&gt;Grid&lt;/em&gt;, puede ser un objeto de tipo &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html&#34;&gt;Collection&lt;/a&gt; o un &lt;a href=&#34;http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/grid/GridDataSource.html&#34;&gt;GridDataSource&lt;/a&gt; que proporciona métodos para hacer la paginación y ordenación eficientemente recuperando de la base de datos o fuente de datos únicamente los registros a mostrar realizando paginación.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/cddb3bbca6ad09c4d602b7b252ef0e35.js?file=ProductoAdmin.tml&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/cddb3bbca6ad09c4d602b7b252ef0e35.js?file=ProductoAdmin.java&#34;&gt;&lt;/script&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/139/grid.png&#34; title=&#34;Componente Grid de Tapestry&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/139/grid-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Componente Grid de Tapestry&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;source&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Con los parámetros &lt;em&gt;include&lt;/em&gt; y &lt;em&gt;exclude&lt;/em&gt; podemos determinar que propiedades de los objetos o &lt;em&gt;beans&lt;/em&gt; de la fuente de datos se incluyen en el Grid, con el parámetro &lt;em&gt;add&lt;/em&gt; podemos añadir nuevas columnas y personalizarlas con los datos que necesitemos como sería el caso de añadir una columna con un &lt;a href=&#34;http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Checkbox.html&#34;&gt;Checkbox&lt;/a&gt; por fila para realizar una selección múltiple o de una columna con botones para realizar acciones. Para ambas cosas en el cuerpo del componente_Grid_definimos subcomponentes con la siguiente nomenclatura &lt;em&gt;&amp;lt;p:[nombreColumna]Cell&amp;gt;&lt;/em&gt;, en en ejemplo usando &lt;em&gt;&amp;lt;p:nombreCell&amp;gt;&lt;/em&gt; y &lt;em&gt;&amp;lt;p:actionCell&amp;gt;&lt;/em&gt;. Las celdas de las columnas por defecto hacen un &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--&#34;&gt;toString()&lt;/a&gt; de la propiedad del &lt;em&gt;bean&lt;/em&gt; de la fila a mostrar, si queremos cambiar este comportamiento como en la columna nombre definimos la etiqueta &lt;em&gt;&amp;lt;p:nombreCell&amp;gt;&lt;/em&gt; y dentro incluimos el contenido que deseemos que puede contener otros componentes en este caso el nombre con un enlace.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;include&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;exclude&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;add&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&amp;lt;p:[nombreColumna]Cell&amp;gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Con el parámetro &lt;em&gt;rowsPerPage&lt;/em&gt; podemos cambiar el número de filas por página del &lt;em&gt;Grid&lt;/em&gt;, en el ejemplo son 2 pero puede ser la cifra que deseemos y tampoco tiene por que ser una constante, el número de filas a mostrar puede provenir de una expresión y cambiar según alguna lógica. Los parámetros &lt;em&gt;columnIndex&lt;/em&gt;, &lt;em&gt;rowIndex&lt;/em&gt; y &lt;em&gt;row&lt;/em&gt; nos proporcionan información del índice de la columna actual, índice de la fila actual y el objeto actual de la fila respectivamente que podemos usar al personalizar las celdas del &lt;em&gt;Grid&lt;/em&gt;. Son parámetros de salida que el &lt;em&gt;Grid&lt;/em&gt; se encarga de proporcionarnos según procesa las filas y celdas, en base a ellos podremos implementar alguna funcionalidad.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;rowsPerPage&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;columnIndex&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;rowIndex&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;row&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Los parámetros informales (denominados así para aquellos que le pasamos al &lt;em&gt;Grid&lt;/em&gt; que no están declarados explícitamente en su interfaz o contrato y que no proporcionan alguna funcionalidad) son incluidos en la etiqueta &lt;em&gt;table&lt;/em&gt; del &lt;abbr title=&#34;HyperText Markup Language&#34;&gt;HTML&lt;/abbr&gt; que genera el &lt;em&gt;Grid&lt;/em&gt;. Igualmente el parámetro informal &lt;em&gt;class&lt;/em&gt; se incluye tal cual se indica en el atributo en &lt;em&gt;class&lt;/em&gt; de la tabla para personalizar los estilos y usando el parámetro &lt;em&gt;rowClass&lt;/em&gt; se incluye en cada fila en su etiqueta &lt;em&gt;tr&lt;/em&gt; de HTML. Además de estas clases que podemos el componente añade algunas clases más a ciertas filas: &lt;em&gt;t-first&lt;/em&gt; para la primera fila, &lt;em&gt;t-last&lt;/em&gt; para la última, &lt;em&gt;t-sort-column-ascending&lt;/em&gt; y &lt;em&gt;t-sort-column-descending&lt;/em&gt; para las columnas que estén ordenadas ascendentemente y descendentemente de forma que con &lt;abbr title=&#34;&#34;&gt;CSS&lt;/abbr&gt; tengamos la posibilidad de cambiar sus estilos.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;class&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;rowClass&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Con el parámetro &lt;em&gt;empty&lt;/em&gt; definimos un componente &lt;a href=&#34;http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/Block.html&#34;&gt;Block&lt;/a&gt; que se usará cuando el &lt;em&gt;Grid&lt;/em&gt; no tenga filas que mostrar, lo que es útil para mostrar un mensaje indicando que la tabla no tiene filas como cuando no hay elementos.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/139/grid-sin-elementos.png&#34; title=&#34;Mensaje de un Grid sin elementos&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/139/grid-sin-elementos-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Mensaje de un Grid sin elementos&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;empty&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Con &lt;em&gt;pagerPosition&lt;/em&gt; indicaremos si queremos la barra de paginación situada encima de la tabla, abajo, en ambas posiciones o no queremos.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;pagerPosition&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Por si fuera poco con el parámetro &lt;em&gt;inPlace&lt;/em&gt; podemos hacer que la paginación y ordenación funcione usando &lt;abbr title=&#34;Asynchronous JavaScript And XML&#34;&gt;AJAX&lt;/abbr&gt; de modo que no se recargue toda la página en cada pulsación de un enlace. No será necesario que añadamos nada de JavaScript, el componente se encargará de hacer la petición AJAX y con el resultado que sea devuelto actualizar la tabla.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;inPlace&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finalmente, comentaré el parámetro &lt;em&gt;encoder&lt;/em&gt; con el que podemos hacer que el componente &lt;em&gt;Grid&lt;/em&gt; funcione cuando se usa dentro de un componente &lt;em&gt;Form&lt;/em&gt;. La clase &lt;a href=&#34;http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/ValueEncoder.html&#34;&gt;ValueEncoder&lt;/a&gt; transforma un objeto a un &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/lang/String.html&#34;&gt;String&lt;/a&gt; que lo identifique en el cliente y a partir del identificador del cliente los transforme al objeto cuando se envíe de nuevo al servidor. Podemos indicar el &lt;em&gt;ValueEncoder&lt;/em&gt; en cada &lt;em&gt;Grid&lt;/em&gt; o definirlo como una configuración del contenedor &lt;abbr title=&#34;Inversion of Control&#34;&gt;IoC&lt;/abbr&gt;.&lt;/p&gt;

&lt;p&gt;Hay algún parámetro más como &lt;em&gt;sortModel&lt;/em&gt; y &lt;em&gt;paginationModel&lt;/em&gt; para mantener la información de ordenación y paginación pero los anteriores son los que más habitualmente usaremos y probablemente con &lt;em&gt;source&lt;/em&gt;, &lt;em&gt;include&lt;/em&gt;, &lt;em&gt;exclude&lt;/em&gt; y &lt;em&gt;add&lt;/em&gt; tengamos suficiente para muchos casos.&lt;/p&gt;

&lt;p&gt;Es sorprendentemente lo sencillo que es usar el componente &lt;em&gt;Grid&lt;/em&gt; para toda la funcionalidad que proporciona. En ciertos casos este componente por si solo puede reducir drásticamente la cantidad de código necesario a escribir en las plantillas que producen HTML y aumentar notablemente la productividad al crear o modificar páginas con listados de elementos. En el artículo &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2013/06/mantenimiento-crud-en-apache-tapestry.html&#34;&gt;Mantenimiento CRUD en Apache Tapestry&lt;/a&gt; comento como conseguir un &lt;abbr title=&#34;Create, Read, Update and Delete&#34;&gt;CRUD&lt;/abbr&gt; completo usando el componente &lt;em&gt;Grid&lt;/em&gt; entre otras cosas.&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2014/12/portada-PugInTapestry-thumb.png&#34; alt=&#34;Portada libro: PlugIn Tapestry&#34; title=&#34;Portada libro: PlugIn Tapestry&#34; style=&#34;float: left; margin-right: 1.5em;&#34;&gt;
    &lt;h3&gt;Libro PlugIn Tapestry&lt;/h3&gt;
    &lt;p&gt;Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este &lt;i&gt;framework&lt;/i&gt; en el formato que prefieras, &lt;a href=&#34;http://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry&lt;/a&gt;, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.&lt;/p&gt;
    &lt;br style=&#34;clear: both;&#34;&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf&#34; class=&#34;btn btn-lg btn-success&#34;&gt;PDF&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.epub&#34; class=&#34;btn btn-lg btn-success&#34;&gt;EPUB&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.mobi&#34; class=&#34;btn btn-lg btn-success&#34;&gt;MOBI&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.zip&#34; class=&#34;btn btn-lg btn-success&#34;&gt;HTML&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry&#34; class=&#34;btn btn-lg btn-success&#34;&gt;Código fuente ejemplos&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2013/06/mantenimiento-crud-en-apache-tapestry.html&#34;&gt;Mantenimiento CRUD en Apache Tapestry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/tags/tapestry/&#34;&gt;Artículos sobre Tapestry en Blog Bitix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/search/label/tapestry&#34;&gt;Artículos sobre Tapestry en El blog de pico.dev&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="tapestry"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/01/hemeroteca-8/</id>
        <title>Hemeroteca #8</title>        
        <updated>2016-01-04T22:00:00+01:00</updated>
        <published>2016-01-02T13:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/01/hemeroteca-8/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Seis meses más de artículos la mayoría sobre programación en Java tratando algunas de las nuevas tendencias de programación con las posibilidades de la plataforma de la JVM. Unos pocos artículos más continuando la serie sobre Docker y uno de opinión sobre las licencias de Microsoft.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;p&gt;El 2015 pasó, a mi muy rápido. En cuanto a la bitácora toca recapitular cuáles han sido los artículos que he escrito, de que temas principales he hablado, un poco cómo han evolucionado las visitas y que tengo preparado para publicar durante los siguientes meses ya de 2016.&lt;/p&gt;

&lt;p&gt;Muchos de los artículos que he escrito han estado relacionados con la programación en la plataforma Java, en los que destacaría prácticamente todos empezando por los relacionados con &lt;a href=&#34;https://projects.spring.io/spring-boot/&#34;&gt;Spring Boot&lt;/a&gt;, &lt;a href=&#34;https://cloud.spring.io/spring-cloud-config/&#34;&gt;Spring Cloud Config&lt;/a&gt; y &lt;a href=&#34;https://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#production-ready&#34;&gt;Spring Boot Actuator&lt;/a&gt; que forman parte del actual de la tendencia a la hora de desarrollar aplicaciones en Java pero también otros cuantos relacionados con &lt;a href=&#34;https://www.jooq.org/&#34;&gt;jOOQ&lt;/a&gt; que ya es una alternativa a &lt;a href=&#34;http://hibernate.org/&#34;&gt;Hibernate&lt;/a&gt; y su uso probablemente se extienda y aumente, también otro artículo sobre &lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle&lt;/a&gt; que ya es la herramienta de automatización de construcción ampliamente usada.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/10/aplicacion-java-autocontenida-con-spring-boot/&#34;&gt;Aplicación Java autocontenida con Spring Boot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/10/multiples-esquemas-o-bases-de-datos-con-jooq-y-spring-en-java/&#34;&gt;Múltiples esquemas o bases de datos con jOOQ y Spring en Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/11/obtener-datos-de-multiples-tablas-con-jooq/&#34;&gt;Obtener datos de múltiples tablas con jOOQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/11/validar-objetos-con-spring-validation-ejemplo-registros-de-jooq/&#34;&gt;Validar objetos con Spring Validation, ejemplo registros de jOOQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/11/configuracion-de-una-aplicacion-en-diferentes-entornos-con-spring-cloud-config/&#34;&gt;Configuración de una aplicación en diferentes entornos con Spring Cloud Config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/12/informacion-y-metricas-de-la-aplicacion-con-spring-boot-actuator/&#34;&gt;Información y métricas de la aplicación con Spring Boot Actuator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/09/ejemplo-de-multiproyecto-con-gradle/&#34;&gt;Ejemplo de multiproyecto con Gradle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Un par de artículos comentando la nueva forma de construir aplicaciones de escritorio tradicionales en Java con &lt;a href=&#34;http://docs.oracle.com/javase/8/javafx/api/overview-summary.html&#34;&gt;JavaFX&lt;/a&gt;. También algunos artículos más sobre patrones de diseño con ejemplos en código bastante ilustrativos de sus conceptos y posibles usos. O Java para tareas de &lt;em&gt;scripting&lt;/em&gt; con la misma facilidad de un lenguaje interpretado o dinámico pero con las ventajas de un lenguaje compilado.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/10/introduccion-a-javafx-aplicaciones-de-escritorio-en-java/&#34;&gt;Introducción a JavaFX, aplicaciones de escritorio en Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/10/javafx-scene-builder-editor-para-crear-archivos-fxml/&#34;&gt;JavaFX Scene Builder, editor para crear archivos FXML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/11/java-para-tareas-de-scripting/&#34;&gt;Java para tareas de «scripting»&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/09/ejemplo-del-patron-de-diseno-builder/&#34;&gt;Ejemplo del patrón de diseño Builder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/10/como-crear-clases-factoria-sin-usar-if-else/&#34;&gt;Cómo crear clases factoría sin usar if-else&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/10/el-patron-de-diseno-observer-y-una-forma-de-implementarlo-en-java/&#34;&gt;El patrón de diseño Observer y una forma de implementarlo en Java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Otros artículos sobre Java de varios temas independientes sobre herramientas como &lt;a href=&#34;https://github.com/wro4j/wro4j/&#34;&gt;wro4j&lt;/a&gt;, cómo trabajar con importes, ratios y divisas en las aplicaciones Java que lo necesiten o una forma incorporada en el propio JDK para hacer las aplicaciones extensibles.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/08/implementacion-de-maquina-de-estados-finita-fsm-con-java-8/&#34;&gt;Implementación de máquina de estados finita (FSM) con Java 8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/09/aplicacion-java-extensible-con-la-clase-serviceloader/&#34;&gt;Aplicación Java extensible con la clase ServiceLoader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/09/ejemplo-practico-de-serviceloader-con-serviceprovider-de-java-money/&#34;&gt;Ejemplo práctico de ServiceLoader con ServiceProvider de Java Money&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/07/como-trabajar-con-importes-ratios-y-divisas-en-java/&#34;&gt;Cómo trabajar con importes, ratios y divisas en Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/09/generar-recursos-estaticos-con-wro4j/&#34;&gt;Generar recursos estáticos con wro4j&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Un par de artículos de opinión, uno con motivo del lanzamiento de &lt;a href=&#34;https://www.microsoft.com/es-es/windows/&#34;&gt;Windows&lt;/a&gt; 10 que se produjo en julio del 2015 y otro comentando las similitudes que tienen un par de librerías &lt;a href=&#34;https://es.wikipedia.org/wiki/JavaScript&#34;&gt;JavaScript&lt;/a&gt; (&lt;a href=&#34;https://facebook.github.io/react/&#34;&gt;React&lt;/a&gt; y &lt;a href=&#34;https://www.polymer-project.org/1.0/&#34;&gt;Polymer&lt;/a&gt;) de las que mucha gente está hablando con el &lt;em&gt;framework&lt;/em&gt; &lt;a href=&#34;http://tapestry.apache.org&#34;&gt;Apache Tapestry&lt;/a&gt; para desarrollo de aplicaciones y páginas web en Java.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/07/a-microsoft-no-le-importa-que-uses-windows-u-office-sin-licencia/&#34;&gt;A Microsoft no le importa que uses Windows u Office sin licencia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/10/similitudes-entre-react-y-polymer-con-apache-tapestry/&#34;&gt;Similitudes entre React y Polymer con Apache Tapestry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/10/caracteristicas-de-los-lenguajes-de-programacion/&#34;&gt;Características de los lenguajes de programación&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Y otro artículo un poco fuera de tema sobre una compra que hice por internet comentando mi experiencia pero en la que comento algunos consejos para los vendedores y para los compradores.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/11/comprando-por-internet-unos-estores-en-cortinadecor/&#34;&gt;Comprando por internet, unos estores en CortinaDecor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lo más cercano que escrito de &lt;a href=&#34;https://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;/&lt;a href=&#34;https://www.linux.com/&#34;&gt;Linux&lt;/a&gt; ha sido otra serie de artículos sobre &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; continuación de otros anteriores.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/07/aplicaciones-multicontenedor-con-docker-compose/&#34;&gt;Aplicaciones multicontenedor con Docker Compose&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/07/crear-y-usar-un-repositorio-en-docker-hub/&#34;&gt;Crear y usar un repositorio en Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/07/usar-docker-con-docker-machine-en-linux-windows-o-mac/&#34;&gt;Usar docker con Docker Machine en Linux, Windows o Mac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/07/cambiar-la-ruta-raiz-del-entorno-de-docker/&#34;&gt;Cambiar la ruta raíz del entorno de Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Los últimos artículos del año, no por ello menos interesantes. Finalmente se publicó la versión 5.4 de Apache Tapestry que ya era usable desde su estado beta con numerosas mejoras en la parte cliente de las aplicaciones. También cumplí mi propósito de hacer una donación a algún proyecto de software libre cuando recibiese la trasferencia por la publicidad AdSense, fue a la &lt;a href=&#34;https://fsfe.org/index.en.html&#34;&gt;FSFE&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/12/monitorizar-estado-de-sitios-web-con-uptime-robot/&#34;&gt;Monitorizar estado de sitios web con Uptime Robot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/12/como-buscar-los-enlaces-rotos-de-un-sitio-web/&#34;&gt;Cómo buscar los enlaces rotos de un sitio web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/12/publicado-apache-tapestry-5-4/&#34;&gt;Publicado Apache Tapestry 5.4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/12/yo-apoyo-al-software-libre-tu-tambien/&#34;&gt;Yo apoyo al software libre, tú también&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En otro orden de cosas he seguido haciendo algunos cambios en Blog Bitix como que pueda ser accedido por el protocolo seguro &lt;abbr title=&#34;Hypertext Transfer Protocol Secure&#34;&gt;HTTPS&lt;/abbr&gt; sin que el navegador informe de ningún tipo de advertencia de seguridad, este blog se genera con el generador estático &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; y está alojado en &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; de modo que solo hay ficheros estáticos HTML, CSS y JavaScript pero que permite mayor privacidad y más seguridad. Si yo en una bitácora como esta que solo es contenido estático y algo de JavaScript me preocupo por la seguridad y privacidad de los usuarios me resulta sorprendente que páginas de comercio electrónico que recopilan información personal y datos de tarjetas de crédito o cuantas bancarias mucho más susceptibles de ser atacadas no lo hagan de forma completa y no solo en las áreas de la cuenta del usuario y la página de compra, más ahora que Google lo tiene en cuenta para el &lt;a href=&#34;https://en.wikipedia.org/wiki/Search_engine_optimization&#34;&gt;&lt;abbr title=&#34;Search Engine Optimization&#34;&gt;SEO&lt;/abbr&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;También he empezado a incluir en los artículos vídeos de texto con &lt;a href=&#34;https://asciinema.org/&#34;&gt;Asciinema&lt;/a&gt; que creo hacen que los ejemplos sean mucho más ilustrativos mostrando la salida real de los comandos de los cuales además se puede copiar y pegar texto.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/09/grabar-y-compartir-video-de-la-terminal-con-asciinema/&#34;&gt;Grabar y compartir vídeo de la terminal con Asciinema&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Durante este segundo semestre de 2015 he publicado varios artículos entre semana con lo que al final la media ha sido algo mayor de uno por semana. Para el 2016 ya tengo escritos una buena cantidad de artículos suficientes para seguir publicando al ritmo de un artículo por semana durante unos cuantos meses, por supuesto sobre Java pero alguno también sobre GNU/Linux. Uno de ellos espero que sea el de la conferencia &lt;a href=&#34;http://bilbostack.com/&#34;&gt;BilboStack&lt;/a&gt; 2016 que se celebrará a finales de enero para la que escribiré un &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/01/conferencia-bilbostack-2015/&#34;&gt;artículo similar al que hice el año pasado&lt;/a&gt; resumiendo las charlas a las que asista. También estoy en proceso de realizar una nueva actualización del &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;libro PlugIn Tapestry&lt;/a&gt; en el que incorporaré mucho del contenido que he escrito desde su última publicación.&lt;/p&gt;

&lt;p&gt;El blog ha seguido creciendo un poco en cuanto a visitas a base de un esfuerzo tremendo tratando de escribir y publicar artículos con cierta calidad, los ingresos por publicidad AdSense siguen siendo prácticamente los mismos, entre 6 y 11€ al mes, como el alojamiento y el dominio me es gratuito es suficiente para hacer alguna &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/12/yo-apoyo-al-software-libre-tu-tambien/&#34;&gt;donación a un proyecto relacionado con el software libre&lt;/a&gt; por lo que tú visitando este blog en cierta forma también podrás sentirte contribuidor del software libre ya uses productos &lt;a href=&#34;https://www.microsoft.com/&#34;&gt;Microsoft&lt;/a&gt; o &lt;a href=&#34;https://www.apple.com/&#34;&gt;Apple&lt;/a&gt;. Una de las cosas que dicen para aumentar visitas es casi más importante la cantidad que la calidad pero no puedo dedicar más tiempo a escribir así que opto por que lo que escriba no esté ya en varios otros cientos de sitios para alguien con el mismo interés le resulte aprovechable, además trato de que los artículos incluyan un ejemplo funcional con su código fuente completo que se pueda probar de manera simple descargándolo.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/118/analytics-2015.png&#34; title=&#34;Analytics 2015 de Blog Bitix&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/118/analytics-2015-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Analytics 2015 de Blog Bitix&lt;/figcaption&gt;
&lt;/figure&gt;

    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/118/adsense-2015.png&#34; title=&#34;AdSense 2015 de Blog Bitix&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2016/118/adsense-2015-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;AdSense 2015 de Blog Bitix&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Ya solo me queda decir&amp;hellip; ¡gracias por leer, compartir y comentar esta bitácora!, no recibo muchos comentarios pero algunos como &lt;a href=&#34;https://twitter.com/josetesan/status/669434170221928449&#34;&gt;este&lt;/a&gt; me anima a seguir escribiendo y compartiendo, ¡que os vaya bien el 2016!.&lt;/p&gt;



        </content>
        
            
                <category term="blog"/>
            
                <category term="blog-stack"/>
            
                <category term="hemeroteca"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="tapestry"/>
            
                <category term="gnu-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/12/publicado-apache-tapestry-5-4/</id>
        <title>Publicado Apache Tapestry 5.4</title>        
        <updated>2015-12-24T16:00:00+02:00</updated>
        <published>2015-12-24T16:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2015/12/publicado-apache-tapestry-5-4/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/apache-tapestry-5.svg&#34; class=&#34;right&#34; width=&#34;400&#34; alt=&#34;Apache Tapestry&#34; title=&#34;Apache Tapestry&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Después 38 betas (han sido tantas porque era barato hacerlas) y una única candidata a publicación, 4 años desde la anterior versión mayor (5.3) y varias versiones menores de esta, la versión final de &lt;a href=&#34;http://tapestry.apache.org&#34;&gt;Apache Tapestry&lt;/a&gt; 5.4 ha sido publicada. Esta nueva versión incorpora más de 300 correcciones de errores, casi 200 mejoras y varias novedades destacadas  centradas en la integración con JavaScript siguiendo la evolución actual de las aplicaciones web con un peso mayor en el lado del cliente. De esta manera el JavaScript se basa en el uso de &lt;a href=&#34;http://requirejs.org/&#34;&gt;RequireJS&lt;/a&gt; proporcionando a las aplicaciones todas las bondades que los módulos proporcionan como organizar mejor el JavaScript de las aplicaciones, no polucionar el ámbito global evitando conflictos entre librerías y carga de dependencias de forma dinámica. También se proporciona soporte &lt;em&gt;built-in&lt;/em&gt; para &lt;a href=&#34;http://coffeescript.org/&#34;&gt;CofeeScript&lt;/a&gt; y &lt;a href=&#34;http://lesscss.org/&#34;&gt;LESS&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Añadida una capa de abstracción sobre la librería JavaScript usada, esto permite usar &lt;a href=&#34;https://jquery.com/&#34;&gt;jQuery&lt;/a&gt; en vez de &lt;a href=&#34;http://prototypejs.org/&#34;&gt;Prototype&lt;/a&gt; o cualquier otra del presente o que surja en el futuro.&lt;/li&gt;
&lt;li&gt;En un redespliegue solo los &lt;em&gt;assets&lt;/em&gt; modificados se volverán a descargar. Junto con el &lt;em&gt;checksum&lt;/em&gt; del &lt;em&gt;asset&lt;/em&gt; generado a partir del contenido del recurso e incluido en su URL, también se añade soporte para &lt;a href=&#34;https://en.wikipedia.org/wiki/HTTP_ETag&#34;&gt;E-tag&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Soporte a CoffeeScript, LESS, minificación de JavaScript y CSS.&lt;/li&gt;
&lt;li&gt;Mejoras en componentes (&lt;a href=&#34;http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Tree.html&#34;&gt;Tree&lt;/a&gt;, &lt;a href=&#34;http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Grid.html&#34;&gt;Grid&lt;/a&gt;, &lt;a href=&#34;http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Palette.html&#34;&gt;Palette&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Mejor soporte para JavaScript con  RequireJS y &lt;abbr title=&#34;Asynchronous Module Definition&#34;&gt;AMD&lt;/abbr&gt;.&lt;/li&gt;
&lt;li&gt;Componente &lt;a href=&#34;http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/mixins/Autocomplete.html&#34;&gt;Autocomplete&lt;/a&gt; basado en &lt;a href=&#34;https://twitter.github.io/typeahead.js/&#34;&gt;Typeahead&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Mejoras en el informe de excepciones y la consola de depuración.&lt;/li&gt;
&lt;li&gt;Se incorpora &lt;a href=&#34;http://getbootstrap.com/&#34;&gt;Bootstrap&lt;/a&gt; 3 como &lt;em&gt;framework&lt;/em&gt; para los estilos y se adaptan los componentes a las nuevas etiquetas y estilos.&lt;/li&gt;
&lt;li&gt;Nueva página &lt;em&gt;Dashboard&lt;/em&gt; que sustituye a las anteriores páginas &lt;em&gt;PageCatalog&lt;/em&gt;, &lt;em&gt;ServiceStatus&lt;/em&gt; e &lt;em&gt;Hibernate
Statistics&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Inclusión de &lt;a href=&#34;http://momentjs.com/&#34;&gt;Moment.js&lt;/a&gt; y nuevos componentes &lt;a href=&#34;http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/LocalDate.html&#34;&gt;LocalDate&lt;/a&gt; y &lt;a href=&#34;http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/TimeInterval.html&#34;&gt;TimeInterval&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Mejoras de rendimiento y multitud de correcciones de errores.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Y muchas cosas más listadas en las &lt;a href=&#34;http://tapestry.apache.org/release-notes-54.html&#34;&gt;notas de publicación&lt;/a&gt; en las que se incluyen las peticiones resueltas. Muchas centradas en el lado cliente de las aplicaciones web y otras cuantas que perfeccionan funcionalidades ya existentes.&lt;/p&gt;

&lt;p&gt;Si quieres conocer en detalle Tapestry puedes descargar el &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;libro PlugIn Tapestry&lt;/a&gt; que publique hace un tiempo y que tengo pendiente de actualizar con el nuevo contenido que he escrito en el &lt;em&gt;blog&lt;/em&gt; desde su última publicación con algunas de estas novedades y otras cosas adicionales.&lt;/p&gt;

&lt;p&gt;Esta nueva versión es un buena oportunidad para conocer este &lt;em&gt;framework&lt;/em&gt; orientado a componentes con el objetivo de crear aplicaciones web rápidas, dinámicas, robustas y altamente escalables en la plataforma Java con gran productividad y reutilización de código durante el desarrollo. Al basarse en componentes es distinto de los muchos basados en acciones similares en esencia a uno de los pioneros como &lt;a href=&#34;https://struts.apache.org/&#34;&gt;Struts&lt;/a&gt; que podemos encontrar en la plataforma Java como &lt;a href=&#34;https://spring.io/&#34;&gt;Spring MVC&lt;/a&gt;, &lt;a href=&#34;https://grails.org/&#34;&gt;Grails&lt;/a&gt; y &lt;a href=&#34;https://www.playframework.com/&#34;&gt;Play!&lt;/a&gt; y también de los muchos otros en los que la principal diferencia es el lenguaje como &lt;a href=&#34;https://www.djangoproject.com/&#34;&gt;Django&lt;/a&gt; (&lt;a href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt;), &lt;a href=&#34;http://symfony.com/&#34;&gt;Symfony&lt;/a&gt; (&lt;a href=&#34;https://secure.php.net/&#34;&gt;PHP&lt;/a&gt;), &lt;a href=&#34;http://www.microsoft.com/net&#34;&gt;.NET MVC&lt;/a&gt; (&lt;a href=&#34;http://www.microsoft.com/net&#34;&gt;C#&lt;/a&gt;) o &lt;a href=&#34;http://rubyonrails.org/&#34;&gt;Ruby On Rails&lt;/a&gt; (&lt;a href=&#34;https://www.ruby-lang.org/es/&#34;&gt;Ruby&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;En la &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/tags/tapestry/&#34;&gt;etiqueta Tapestry&lt;/a&gt; puedes consultar los últimos artículos que he publicado sobre este &lt;em&gt;framework&lt;/em&gt; en Blog Bitix y en la aplicación &lt;a href=&#34;http://jumpstart.doublenegative.com.au/jumpstart7/&#34;&gt;JumpStart&lt;/a&gt; hay multitud de ejemplos funcionales junto con su código fuente.&lt;/p&gt;

&lt;p&gt;Buen regalo para acabar el año 2015, ¡feliz navidad!.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2015/116/christmastux2015.jpg&#34; alt=&#34;ChristmasTux 2015&#34; title=&#34;ChristmasTux 2015&#34;&gt;
&lt;/div&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2014/12/portada-PugInTapestry-thumb.png&#34; alt=&#34;Portada libro: PlugIn Tapestry&#34; title=&#34;Portada libro: PlugIn Tapestry&#34; style=&#34;float: left; margin-right: 1.5em;&#34;&gt;
    &lt;h3&gt;Libro PlugIn Tapestry&lt;/h3&gt;
    &lt;p&gt;Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este &lt;i&gt;framework&lt;/i&gt; en el formato que prefieras, &lt;a href=&#34;http://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry&lt;/a&gt;, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.&lt;/p&gt;
    &lt;br style=&#34;clear: both;&#34;&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf&#34; class=&#34;btn btn-lg btn-success&#34;&gt;PDF&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.epub&#34; class=&#34;btn btn-lg btn-success&#34;&gt;EPUB&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.mobi&#34; class=&#34;btn btn-lg btn-success&#34;&gt;MOBI&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.zip&#34; class=&#34;btn btn-lg btn-success&#34;&gt;HTML&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry&#34; class=&#34;btn btn-lg btn-success&#34;&gt;Código fuente ejemplos&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="tapestry"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/10/similitudes-entre-react-y-polymer-con-apache-tapestry/</id>
        <title>Similitudes entre React y Polymer con Apache Tapestry</title>        
        <updated>2015-10-06T18:00:00+02:00</updated>
        <published>2015-10-06T18:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2015/10/similitudes-entre-react-y-polymer-con-apache-tapestry/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;React y Polymer son dos librerías JavaScript para construir interfaces complejas en el lado cliente basadas en componentes. Los componentes son interesantes porque hace que el código sea reutilizable, fácil de entender y más fácil de modificar sin introducir errores entre otras cosas. Aunque en el desarrollo web en el lado del servidor la mayoría de los &lt;em&gt;frameworks&lt;/em&gt; se basan en acciones también hay algunos que se basan en componentes, uno de ellos Apache Tapestry para la plataforma Java. Si de React y Polymer se está hablando bastante bien y forman parte del actual estado del arte JavaScript, si la gente conociese y usase Tapestry que tiene varias similitudes con ellos creo que también les facilitaría el desarrollo de aplicaciones web pequeñas o grandes, simples o complejas en la parte del servidor.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/apache-tapestry-5.svg&#34; class=&#34;right&#34; width=&#34;400&#34; alt=&#34;Apache Tapestry&#34; title=&#34;Apache Tapestry&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;La librería JavaScript &lt;a href=&#34;https://facebook.github.io/react/&#34;&gt;ReactJS&lt;/a&gt; es una de las que más se está hablando para bien y utilizando para construir aplicaciones complejas en el navegador. Personalmente después de haberla probado en el &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react/&#34;&gt;ejemplo lista de tareas con React y Backbone&lt;/a&gt; me ha parecido que está muy bien. Otra de las librerías que suele mencionarse y que en un futuro puede emplearse mucho más es &lt;a href=&#34;https://www.polymer-project.org/1.0/&#34;&gt;Polymer&lt;/a&gt;. ¿Cuál es el éxito de estas librerías?&lt;/p&gt;

&lt;p&gt;Uno de los motivos en mi opinión es que ambas se basan en un concepto de componente, en React un componente encapsula su estado o propiedades y eventos que maneja junto con la plantilla para generar las etiquetas de su interfaz gráfica, Polymer va un poco más allá y además de estado, eventos y plantilla encapsula los estilos &lt;abbr title=&#34;Cascading Style Sheets&#34;&gt;CSS&lt;/abbr&gt;. Pero estas librerías que sirven para crear interfaces en el lado del cliente basadas en componentes y que se están viendo como algo bueno, en el lado del servidor la mayoría de los &lt;em&gt;frameworks&lt;/em&gt; se basan en acciones, sin embargo, también hay algunos basados en componentes, uno de ellos es &lt;a href=&#34;http://tapestry.apache.org&#34;&gt;Apache Tapestry&lt;/a&gt; en la plataforma Java.&lt;/p&gt;

&lt;p&gt;El concepto de componente de estos &lt;em&gt;frameworks&lt;/em&gt; JavaScript o el utilizado en Tapestry no es nuevo quizá tiene otro nombre y es similar a lo que en los lenguajes de programación orientados a objetos conocemos como clases o tipos y en alguna asignatura también podemos haber aprendido como &lt;abbr title=&#34;Tipo Abstracto de Datos&#34;&gt;TAD&lt;/abbr&gt;. Básicamente cualquiera de ellos trata de agrupar en una entidad los datos (propiedades) y las funciones que los manejan (métodos) haciendo que el estado sea siempre válido manipulable solo a través de su interfaz, proporcionan una abstracción para que baste conocer la interfaz y no su funcionamiento interno. Y esto es bueno, ya que hace que sean muy fácil de usar, de reutilizar componentes ya probados, menor acoplamiento, que además redunda en un mantenimiento más sencillo y productividad, además, se pueden construir componentes complejos a partir de componentes más sencillos. El éxito de los extendidos &lt;a href=&#34;https://en.wikipedia.org/wiki/Object-oriented_programming&#34;&gt;lenguajes orientados a objetos&lt;/a&gt; se debe en gran medida a estos importantes conceptos.&lt;/p&gt;

&lt;p&gt;Un componente React y otro de Polymer tienen el siguiente aspecto en código.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/f7e6a08f94ae9f203cc2.js?file=react.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/f7e6a08f94ae9f203cc2.js?file=polymer.html&#34;&gt;&lt;/script&gt;

&lt;p&gt;Uno de los &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2011/08/motivos-para-elegir-apache-tapestry.html&#34;&gt;motivos que comentaba para elegir Tapestry&lt;/a&gt; era precisamente este de componente. En Tapestry un componente está formado por una clase Java que contiene la lógica del componente tanto para obtener los datos que necesite la plantilla como para manejar los eventos que se produzcan en el navegador como clics o envío de formularios con datos, también puede tener asociada una plantilla que generará el &lt;abbr title=&#34;HyperText Markup Language&#34;&gt;HTML&lt;/abbr&gt; que se enviará al navegador web del cliente y que usará la clase Java para &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/07/modelo-push-contra-modelo-pull-en-frameworks-web/&#34;&gt;obtener los datos que necesite de forma &lt;em&gt;pull&lt;/em&gt; en vez de &lt;em&gt;push&lt;/em&gt;&lt;/a&gt; (el modelo &lt;em&gt;push&lt;/em&gt; es el habitual en los &lt;em&gt;frameworks&lt;/em&gt; basados en acciones), puede necesitar algunos archivos JavaScript para añadir algún comportamiento en el cliente y finalmente archivos de estilos CSS. El componente define los archivos JavaScript y de estilos que necesita y Tapestry se encarga de incluirlos en la página cuando se genera. Solo se incluyen los necesarios según los componentes que se hayan usado para generar la página, no haciendo falta incluir archivos de forma global.&lt;/p&gt;

&lt;p&gt;Para usar un componente en Tapestry basta con conocer sus parámetros y los eventos que puede lanzar, estos forman su interfaz que nos abstraen de su funcionamiento interno. Por supuesto su pueden crear componentes más complejos a partir de otros más simples como si de piezas lego se tratase.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/f7e6a08f94ae9f203cc2.js?file=NumeroProductos.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/f7e6a08f94ae9f203cc2.js?file=NumeroProductos.tml&#34;&gt;&lt;/script&gt;

&lt;p&gt;Según lo que comenta la gente parece bastante entusiasmada cuando prueban React o Polymer y considero que si les gusta el concepto de componentes en el lado del cliente creo que también les gustaría el concepto de componentes en el servidor que proporciona Apache Tapestry (entre otras muchas cosas que proporciona) si lo conociesen y probasen. Y son herramientas totalmente compatibles porque perfectamente se puede usar Tapestry en el lado del servidor y React o Polymer en el lado del cliente.&lt;/p&gt;

&lt;p&gt;Hace meses escribí un &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;libro sobre Apache Tapestry&lt;/a&gt; que puedes descargar completo y gratuitamente para conocer más detalles sobre este &lt;em&gt;framework&lt;/em&gt; para la plataforma Java. Si aún necesitas conocer más también escribí un artículo comentando muchas de las &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2011/08/motivos-para-elegir-apache-tapestry.html&#34;&gt;varias características más destacables de Tapestry&lt;/a&gt;. Por supuesto puedes consultar más &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/tags/tapestry/&#34;&gt;artículos etiquetados como tapestry&lt;/a&gt; en esta bitácora y en &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/search/label/tapestry&#34;&gt;El blog de pico.dev&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2014/12/portada-PugInTapestry-thumb.png&#34; alt=&#34;Portada libro: PlugIn Tapestry&#34; title=&#34;Portada libro: PlugIn Tapestry&#34; style=&#34;float: left; margin-right: 1.5em;&#34;&gt;
    &lt;h3&gt;Libro PlugIn Tapestry&lt;/h3&gt;
    &lt;p&gt;Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este &lt;i&gt;framework&lt;/i&gt; en el formato que prefieras, &lt;a href=&#34;http://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry&lt;/a&gt;, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.&lt;/p&gt;
    &lt;br style=&#34;clear: both;&#34;&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf&#34; class=&#34;btn btn-lg btn-success&#34;&gt;PDF&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.epub&#34; class=&#34;btn btn-lg btn-success&#34;&gt;EPUB&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.mobi&#34; class=&#34;btn btn-lg btn-success&#34;&gt;MOBI&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.zip&#34; class=&#34;btn btn-lg btn-success&#34;&gt;HTML&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry&#34; class=&#34;btn btn-lg btn-success&#34;&gt;Código fuente ejemplos&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react/&#34;&gt;Ejemplo lista de tareas con React y Backbone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://platzi.com/blog/web-components-polymer/&#34;&gt;Aprende a crear Web Components con Polymer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="java"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="tapestry"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/09/ejemplo-de-multiproyecto-con-gradle/</id>
        <title>Ejemplo de multiproyecto con Gradle</title>        
        <updated>2015-11-10T19:00:00+01:00</updated>
        <published>2015-09-15T19:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2015/09/ejemplo-de-multiproyecto-con-gradle/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;En un proyecto grande podemos tener necesidad de dividir el monolito al menos en varios módulos y yendo un paso más lejos en microservicios. La herramienta de construcción que usemos deberá de facilitarnos automatizar la tarea de construcción del código fuente de cada módulo individual, de todos a la vez o de los microservicios si tienen alguna dependencia compartida. En el artículo y ejemplo explicaré cómo usando Gradle podemos dividir el proyecto en varios módulos. No deja de ser un ejemplo pero es bastante completo y está formado por dos aplicaciones web, una librería de componentes y otra librería con el modelo de persistencia, usa Spring, jOOQ, Tapestry, PostgreSQL, Docker, Liquibase, &amp;hellip;&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right&#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/gradle.svg&#34; class=&#34;right&#34; width=&#34;200&#34; alt=&#34;Gradle&#34; title=&#34;Gradle&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Cuando una aplicación o proyecto crece en algún momento podemos tener necesidad de partir el monolito en varios módulos más pequeños y más manejables. Las arquitecturas basadas en microservicios proponen en vez de tener una aplicación grande que contenga toda la funcionalidad dividirla en varios servicios manejables, pequeños y lo más independientes posible. En el libro &lt;a href=&#34;http://www.amazon.es/gp/product/1491950358/ref=as_li_ss_tl?ie=UTF8&amp;camp=3626&amp;creative=24822&amp;creativeASIN=1491950358&amp;linkCode=as2&amp;tag=blobit-21&#34;&gt;Building Microservices&lt;/a&gt;&lt;img src=&#34;https://ir-es.amazon-adsystem.com/e/ir?t=blobit-21&amp;l=as2&amp;o=30&amp;a=1491950358&#34; width=&#34;1&#34; height=&#34;1&#34; border=&#34;0&#34; alt=&#34;&#34; style=&#34;border:none !important; margin:0px !important;&#34; /&gt; explican muy bien la idea y conceptos de los microservicios. La división de una aplicación implica tener un repositorio de código fuente para cada proyecto, probablemente algunos proyectos dependan de otros y haya alguno que sea utilizado por varios como uno de utilidades. Aunque diría que en los microservicios se prefiere en cierta medida duplicar código que compartir para que cada proyecto tenga un ciclo de vida independiente, esto permite desplegarlos individualmente, aún así podemos aceptar compartir cierto código de utilidades o componentes, necesitando que unos proyectos dependan de otros.&lt;/p&gt;

&lt;p&gt;Tener varios proyectos con dependencias entre ellos exige de la herramienta de construcción que esto sea posible y sencillo. En este artículo comentaré como crear un proyecto compuesto de varios componentes con &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2012/03/herramienta-de-construccion-gradle.html&#34;&gt;la herramienta de construcción Gradle&lt;/a&gt;. El ejemplo consistirá en dos aplicaciones web basadas en el &lt;em&gt;framework&lt;/em&gt; web &lt;a href=&#34;http://tapestry.apache.org&#34;&gt;Apache Tapestry&lt;/a&gt;, una será la que vea el público (&lt;em&gt;web&lt;/em&gt;) y otra de administración (&lt;em&gt;back&lt;/em&gt;), estas dos aplicaciones compartirán una librería de componentes de Tapestry comunes como un &lt;em&gt;layout&lt;/em&gt; (&lt;em&gt;library&lt;/em&gt;), la cabecera y pie de las páginas de cada proyecto web, finalmente existirá una librería con métodos o servicios de utilidad comunes y el modelo de datos a persistir en una base de datos relacional usada tanto en las aplicaciones web como por la librería de componentes (&lt;em&gt;core&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Necesitaremos 4 proyectos para los módulos y 5 proyectos Gradle, uno para cada módulo y otro que los englobe a todos. La estructura de directorios y archivos relativos a Gradle será la siguiente:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/633316d67575461a0f29.js?file=estructura.txt&#34;&gt;&lt;/script&gt;

&lt;p&gt;En el archivo &lt;em&gt;build.gradle&lt;/em&gt; global podemos incluir las cosas comunes a todos los proyectos como dependencias o &lt;em&gt;plugins&lt;/em&gt;, en el archivo &lt;em&gt;settings.gradle&lt;/em&gt; definimos de que componentes está formado el proyecto. Las cosas comunes a todos los proyectos será el uso del &lt;em&gt;plugin java&lt;/em&gt; y &lt;a href=&#34;https://eclipse.org&#34;&gt;&lt;em&gt;eclipse&lt;/em&gt;&lt;/a&gt;, el repositorio de dependencias de &lt;em&gt;mavenCentral&lt;/em&gt;, algunas dependencias y una tarea para instalar el &lt;em&gt;wrapper&lt;/em&gt; de Gradle que nos servirá para usarlo sin necesidad de instalar nada (se descargarán sus binarios automáticamente).&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/633316d67575461a0f29.js?file=build.gradle&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/633316d67575461a0f29.js?file=settings.gradle&#34;&gt;&lt;/script&gt;

&lt;p&gt;Podemos ver los módulos (o proyectos como los llama Gradle) de los que se compone la aplicación y las tareas que podemos ejecutar con:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/633316d67575461a0f29.js?file=gradle-info.sh&#34;&gt;&lt;/script&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
        &lt;script type=&#34;text/javascript&#34; src=&#34;https://asciinema.org/a/26292.js&#34; id=&#34;asciicast-26292&#34; async&gt;&lt;/script&gt;
        &lt;noscript&gt;&lt;a href=&#34;https://asciinema.org/a/26292&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/26292.png&#34; width=&#34;734&#34;/&gt;&lt;/a&gt;&lt;/noscript&gt;
        
        &lt;figcaption&gt;Comandos básicos de Gradle&lt;/figcaption&gt;
        
    &lt;/figure&gt;
&lt;/div&gt;

En los proyectos web incluiremos como dependencias las propias de Apache Tapestry, el proyecto _library_ y _core_, también aplicaremos el _plugin_ de [Tomcat][tomcat] para poder iniciar los proyectos con Gradle configurándolos para que cada uno se inicie en un puerto distinto 8080/8443 para web y 9080/9443 para back.

&lt;script src=&#34;//gist.github.com/picodotdev/633316d67575461a0f29.js?file=build-web.gradle&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/633316d67575461a0f29.js?file=build-back.gradle&#34;&gt;&lt;/script&gt;

&lt;p&gt;En el proyecto &lt;em&gt;library&lt;/em&gt; incluiremos los componentes que podemos reutilizar en cualquiera de los proyectos, será una librería de componentes de Apache Tapestry. Esta librería de componentes no es más que un archivo jar, cada proyecto que necesite utilizarlos basta con que lo incluya como una dependencia.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/633316d67575461a0f29.js?file=build-library.gradle&#34;&gt;&lt;/script&gt;

&lt;p&gt;En el último proyecto &lt;em&gt;core&lt;/em&gt; incluiremos una clase de utilidad con los típicos métodos estáticos, incluiremos un &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/blob/master/MultiprojectGradle/core/src/main/java/io/github/picodotdev/gradle/core/services/ItemDAOImpl.java&#34;&gt;servicio que nos facilitará la persistencia&lt;/a&gt; y una &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/blob/master/MultiprojectGradle/core/src/main/java/io/github/picodotdev/gradle/core/models/tables/records/ItemRecord.java&#34;&gt;clase de modelo a persistir&lt;/a&gt; en una base de datos &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt; generada con &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/05/alternativa-a-hibernate-u-orm-y-ejemplo-de-jooq/&#34;&gt;jOOQ como alternativa a Hibernate&lt;/a&gt;, añadiendo o eliminando instancias persistidas son visualizadas desde el proyecto &lt;em&gt;web&lt;/em&gt; y &lt;em&gt;back&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/633316d67575461a0f29.js?file=build-core.gradle&#34;&gt;&lt;/script&gt;

&lt;p&gt;Para arrancar los proyectos web deberemos inicializar la base de datos. Con &lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;docker-compose&lt;/a&gt; y el &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/blob/master/MultiprojectGradle/core/misc/postgres/docker-compose.yml&#34;&gt;archivo descriptor de Docker&lt;/a&gt;) iniciamos el contenedor de &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; con la base de datos PostgreSQL. La base de datos deberemos crearla manualmente pero el esquema donde se guardarán los datos los crearemos con &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2013/05/modificar-la-base-de-datos-con-liquibase.html&#34;&gt;Liquibase que nos permite hacer modificaciones a una BBDD&lt;/a&gt;, deberemos tenerlo instalado y su comando incluido en el &lt;em&gt;PATH&lt;/em&gt; del sistema para este ejemplo.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/633316d67575461a0f29.js?file=database.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Una vez tenemos en cada directorio los archivos &lt;em&gt;build.gradle&lt;/em&gt; y el resto de archivos que necesite cada proyecto (archivos .java, .tml, &amp;hellip;) podemos construir los módulos a la vez o de forma individual. Podemos iniciar los proyectos web y acceder a ellos con el navegador con:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/633316d67575461a0f29.js?file=back-run.sh&#34;&gt;&lt;/script&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
        &lt;script type=&#34;text/javascript&#34; src=&#34;https://asciinema.org/a/26293.js&#34; id=&#34;asciicast-26293&#34; async&gt;&lt;/script&gt;
        &lt;noscript&gt;&lt;a href=&#34;https://asciinema.org/a/26293&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/26293.png&#34; width=&#34;734&#34;/&gt;&lt;/a&gt;&lt;/noscript&gt;
        
        &lt;figcaption&gt;Iniciando aplicación backoffice&lt;/figcaption&gt;
        
    &lt;/figure&gt;
&lt;/div&gt;

Creando un producto desde la consola de PostgreSQL y refrescando la página en el proyecto de _web_ o _back_ veremos que se visualizan sus datos.

&lt;script src=&#34;//gist.github.com/picodotdev/633316d67575461a0f29.js?file=insert.sql&#34;&gt;&lt;/script&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2015/96/back.png&#34; title=&#34;Backoffice&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2015/96/back.png&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Aplicación backoffice&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/MultiprojectGradle&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes verlo y descargarlo desde su repositorio de GitHub.&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2014/12/portada-PugInTapestry-thumb.png&#34; alt=&#34;Portada libro: PlugIn Tapestry&#34; title=&#34;Portada libro: PlugIn Tapestry&#34; style=&#34;float: left; margin-right: 1.5em;&#34;&gt;
    &lt;h3&gt;Libro PlugIn Tapestry&lt;/h3&gt;
    &lt;p&gt;Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este &lt;i&gt;framework&lt;/i&gt; en el formato que prefieras, &lt;a href=&#34;http://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry&lt;/a&gt;, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.&lt;/p&gt;
    &lt;br style=&#34;clear: both;&#34;&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf&#34; class=&#34;btn btn-lg btn-success&#34;&gt;PDF&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.epub&#34; class=&#34;btn btn-lg btn-success&#34;&gt;EPUB&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.mobi&#34; class=&#34;btn btn-lg btn-success&#34;&gt;MOBI&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.zip&#34; class=&#34;btn btn-lg btn-success&#34;&gt;HTML&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry&#34; class=&#34;btn btn-lg btn-success&#34;&gt;Código fuente ejemplos&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2012/03/herramienta-de-construccion-gradle.html&#34;&gt;Herramienta de construcción Gradle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2012/04/usar-gradle-mediante-gradle-wrapper.html&#34;&gt;Usar Gradle mediante Gradle wrapper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/05/incluir-informacion-de-la-version-en-el-artefacto-distribuible-con-gradle/&#34;&gt;Incluir información de la versión en el artefacto distribuible con Gradle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;Libro PlugIn Tapestry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamexico.org/blogs/windoctor/gradle_multiproyectos_java&#34;&gt;Gradle: Multiproyectos Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=eP0NBHkAwwU&#34;&gt;Gradle: Múltiples Proyectos en Java - P1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=fkzPB3IgrB8&#34;&gt;Gradle: Múltiples Proyectos en Java - P2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-ITQ7_94iMM&#34;&gt;Gradle: Múltiples Proyectos en Java - P3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="tapestry"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/06/hemeroteca-7/</id>
        <title>Hemeroteca #7</title>        
        <updated>2015-06-27T22:00:00+02:00</updated>
        <published>2015-06-27T10:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2015/06/hemeroteca-7/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Pasado un nuevo semestre he escrito principalmente sobre temas de programación, Java y poco sobre Linux o software libre. Incluyo aquí el listado completo de los artículos que he escrito.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;p&gt;Otros seis meses que han pasado y estos especialmente para mi muy rápido. Como suelo hacer cada este periodo de tiempo recopilo en un artículo &lt;em&gt;Hemeroteca&lt;/em&gt; los artículos que he publicado al ritmo que mantengo de uno por semana. Este ya es el séptimo contando los de &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es&#34;&gt;El blog de pico.dev&lt;/a&gt; y de &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/&#34;&gt;Blog Bitix&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Como resumen de estas 26 semanas he publicado 27 artículos destacando que he cambiado de herramienta con la que mantengo la bitácora pasando de usar &lt;a href=&#34;http://octopress.org/&#34;&gt;Octopress&lt;/a&gt; a &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; que me ha permitido cambiar el diseño completamente personalizándolo enteramente a mi gusto y agregar algunas nuevas funcionalidades como un mejor previsualizador de imágenes, resúmenes al inicio de los artículos, o un nuevo menú con las categorías principales de las que escribo. De lo que más he escrito ha sido sobre programación y como no pueden faltar en este &lt;em&gt;blog&lt;/em&gt; algún artículo sobre &lt;a href=&#34;http://tapestry.apache.org&#34;&gt;Apache Tapestry&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;De los artículos que he escrito destacaré los siguientes, son con los que más a gusto he quedado después de escribirlos y me parece que merecen una lectura, por orden cronológico:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/01/conferencia-bilbostack-2015/&#34;&gt;Conferencia BilboStack 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/01/internacionalizacion-i18n-en-javascript/&#34;&gt;Internacionalización (i18n) en Javascript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/02/5o-aniversario-del-blog/&#34;&gt;5º aniversario del blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/02/listener-de-eventos-de-hibernate-con-servicios-de-spring/&#34;&gt;Listener de eventos de Hibernate con servicios de Spring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/03/datos-de-sesion-externalizados-con-spring-session/&#34;&gt;Datos de sesión externalizados con Spring Session&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/03/aplicacion-web-java-autocontenida-con-tomcat-embedded/&#34;&gt;Aplicación web Java autocontenida con Tomcat Embedded&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/03/productividad-y-errores-de-compilacion-con-apache-tapestry/&#34;&gt;Productividad y errores de compilación con Apache Tapestry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/04/guardar-contrasenas-usando-salted-password-hashing-y-otras-formas-correctas/&#34;&gt;Guardar contraseñas usando «Salted Password Hashing» y otras formas correctas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/04/nueva-visita-a-5-plus-opciones-de-hosting-para-aplicaciones/&#34;&gt;Nueva visita a 5+ opciones de «hosting» para aplicaciones&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/04/certificado-ssl-de-empresa-wildcard-y-de-validacion-extendida/&#34;&gt;Certificado SSL de empresa wildcard y de validación extendida&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/05/programacion-de-juegos-y-3d-en-java-con-jmonkeyengine/&#34;&gt;Programación de juegos y 3D en Java con jMonkeyEngine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/05/nuevo-diseno-en-blog-bitix/&#34;&gt;Nuevo diseño en Blog Bitix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/05/10-razones-para-seguir-usando-java/&#34;&gt;10 razones para seguir usando Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/05/alternativa-a-hibernate-u-orm-y-ejemplo-de-jooq/&#34;&gt;Alternativa a Hibernate u ORM y ejemplo de jOOQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/06/nueva-visita-a-herramientas-para-un-proyecto-java/&#34;&gt;Nueva visita a herramientas para un proyecto Java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;El resto de artículos son los siguientes, también interesantes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/&#34;&gt;Instalar y usar plugin ágil en Redmine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/&#34;&gt;Introducción e inicio a Drupal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/01/como-hacer-un-substring-de-una-cadena-html/&#34;&gt;Como hacer un substring de una cadena HTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/01/convertir-fechas-y-husos-horarios-en-java/&#34;&gt;Fechas y usos horarios en Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/02/como-hacer-un-downgrade-de-un-paquete-en-arch-linux/&#34;&gt;Cómo hacer un «downgrade» de un paquete en Arch Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/02/la-palabra-clave-assert-de-java-y-un-ejemplo/&#34;&gt;La palabra clave assert de Java y un ejemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/02/ejemplo-de-listener-de-eventos-de-hibernate/&#34;&gt;Ejemplo de listener de eventos de Hibernate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/03/introduccion-y-ejemplo-de-api-rpc-con-apache-thrift/&#34;&gt;Introducción y ejemplo de API RPC con Apache Thrift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/04/evitar-iniciar-varias-veces-la-maquina-virtual-java-para-procesos-cortos/&#34;&gt;Evitar iniciar varias veces la máquina virtual Java para procesos cortos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/04/escribir-en-varios-writer-a-la-vez/&#34;&gt;Escribir en varios writer a la vez&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/05/patron-multiples-vistas-de-un-mismo-dato-en-tapestry/&#34;&gt;Patrón múltiples vistas de un mismo dato en Tapestry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/06/servicio-para-obtener-ratios-de-conversion-entre-divisas/&#34;&gt;Servicio para obtener ratios de conversión entre divisas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cada mes sigo aumentando ligeramente o manteniendo el número de visitas del mes anterior, la mayoría procedentes del buscador Google. En enero andaba en unas 1125 sesiones y 1400 páginas vistas semanales, hoy en unas 1450 sesiones y 2000 páginas vistas, siguen siendo pocas comparadas con algunos otras bitácoras de temática similar. De vez en cuando tengo algún nuevo seguidor en twitter y son pocos los comentarios que recibo probablemente esté haciendo algo que podría hacer mejor. Los artículos que publico suelen ser para un público de nivel medio y uno a la semana, &lt;a href=&#34;http://www.marketingguerrilla.es&#34;&gt;recomiendan escribir artículos de un nivel básico&lt;/a&gt; y probablemente si siguiese esta recomendación recibiría más visitas o más comentarios pero me suele gustar escribir de algo que incluso yo aprenda algo y que no esté ya en un millardo de sitios y sea medianamente fácil de encontrar con una búsqueda sencilla, aunque igual me planteo de vez en cuando seguir esta recomendación.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2015/86/analytics.png&#34; title=&#34;Visitas semanales de Blog Bitix&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2015/86/analytics-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Evolución de sesiones semanales en Blog Bitix&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Sigo teniendo pendiente de publicar unos cuantos nuevos artículos que continúen la &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/docker/&#34;&gt;serie sobre Docker&lt;/a&gt; que ya publiqué, también tengo más artículos preparados sobre programación con Java y bastantes ideas ya listadas para seguir escribiendo. Pero si te interesa un determinado tema y quisieras que explicase o hablase de algo relacionado con lo que suelo escribir añade un comentario y trataré de ver si me es posible, ¡comenta, pregunta lo que quieras o hazme la recomendación que estés pensando!.&lt;/p&gt;

&lt;p&gt;Para finalizar agradecer a varios usuarios de twitter que aunque no conozco suelen compartir muchos de los artículos que escribo y me ayudan enormemente a hacer que el contenido de Blog Bitix llegue a más personas. &lt;a href=&#34;https://twitter.com/jbravo&#34;&gt;Joaquin Bravo&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/Statick_ds&#34;&gt;Diego Saavedra&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/Mr_Prometheus&#34;&gt;Camilo Bernal&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/pereyrada&#34;&gt;A. Daniel Pereyra&lt;/a&gt; y otros en la &lt;a href=&#34;https://twitter.com/search?q=%22Blog%20Bitix%22&amp;amp;src=typd&#34;&gt;linea de tiempo de Blog Bitix&lt;/a&gt;, ¡gracias!.&lt;/p&gt;



        </content>
        
            
                <category term="blog"/>
            
                <category term="blog-stack"/>
            
                <category term="hemeroteca"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="tapestry"/>
            
                <category term="gnu-linux"/>
            
        
    </entry>
    
</feed>
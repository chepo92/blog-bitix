<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://picodotdev.github.io/blog-bitix/index.xml</id>
    <title type="text">Blog Bitix</title>
    <subtitle>Recent content on Blog Bitix</subtitle>
    <updated>2017-02-05T00:00:00+01:00</updated>
    <author><name>pico.dev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix//assets/images/custom/logotipos/hugo.png</icon>
    <logo>https://picodotdev.github.io/blog-bitix//assets/images/custom/logotipos/hugo.png</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/02/conferencia-bilbostack-2017/</id>
        <title>Conferencia BilboStack 2017</title>        
        <updated>2017-02-06T22:00:00+01:00</updated>
        <published>2017-02-05T00:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/02/conferencia-bilbostack-2017/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;p&gt;Cuando me inscribí en la &lt;a href=&#34;http://bilbostack.com/&#34;&gt;BilboStack&lt;/a&gt; para reservar entrada no me llamaron mucho la atención las presentaciones del programa pero ya a una semana de decidir a cuales iba a ir definitivamente he tenido dificultades para elegir y en varios casos me hubiese gustado ir a las de los dos &lt;em&gt;tracks&lt;/em&gt;. Como años anteriores la BilboStack se ha celebrado en Bilbao en el mismo emplazamiento de la &lt;a href=&#34;http://www.deusto.es&#34;&gt;Universidad de Deusto&lt;/a&gt; pero volviendo como en años precedentes al edificio de las ingenierías. Otro cambio ha sido que este año fueron cuatro presentaciones por &lt;em&gt;track&lt;/em&gt; cuando en años anteriores fueron cinco.&lt;/p&gt;

&lt;p&gt;El número de asistentes ha sido numeroso quedando algo de sitio libre en el &lt;em&gt;track 2&lt;/em&gt; que era un aula pero en la sala de conferencias del &lt;em&gt;track 1&lt;/em&gt; aunque tiene cómodas butacas salvo por su estrechez el sitio libre era inexsitente de modo que en algunas presentaciones ha habido algunos asistentes que han debido estar de pie.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/208/bilbostack-2017.jpg&#34; title=&#34;BilboStack 2017&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/208/bilbostack-2017.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;BilboStack 2017&lt;/figcaption&gt;
&lt;/figure&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/208/universidad-de-deusto-1.jpg&#34; title=&#34;Universidad de Deusto&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/208/universidad-de-deusto-1-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/208/universidad-de-deusto-2.jpg&#34; title=&#34;Universidad de Deusto&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/208/universidad-de-deusto-2-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Universidad de Deusto&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Este era el programa completo con su horario, temas muy distintos y variados como Xamarin, &lt;em&gt;internet of things&lt;/em&gt;, el siempre presente JavaScript con Angular y Node, Lean Analytics y DDD entre algunos otros de la siguiente agenda:&lt;/p&gt;

&lt;table&gt;
    &lt;thead&gt;
        &lt;th width=&#34;140px&#34;&gt;Hora&lt;/th&gt;
        &lt;th&gt;Track 1&lt;/th&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;09:30-10:20&lt;/td&gt;
            &lt;td&gt;Xamarin.Forms en el mundo real™ : Verdades y Mitos &lt;em&gt;por Josué Yeray &lt;/em&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;10:30-11:20&lt;/td&gt;
            &lt;td&gt;Una visión de Angular 2 y TypeScript &lt;em&gt;por Hugo Biarge&lt;/em&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;11:20-11:50&lt;/td&gt;
            &lt;td&gt;Café&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;11:50-12:40&lt;/td&gt;
            &lt;td&gt;Java ha muerto! Larga vida a Java (moderno) &lt;em&gt;por Catalina Oyaneder&lt;/em&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;12:50-13:40&lt;/td&gt;
            &lt;td&gt;Domain-Driven Design, uniendo negocio con el software &lt;em&gt;por Gorka Laucirica y Beñat Espiña&lt;/em&gt;&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
    &lt;thead&gt;
        &lt;th width=&#34;140px&#34;&gt;Hora&lt;/th&gt;
        &lt;th&gt;Track 2&lt;/th&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;09:30-10:20&lt;/td&gt;
            &lt;td&gt;Invisible o desaparece... &lt;em&gt;por Isabel Cabezas y Juliet Moreiro&lt;/em&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;10:30-11:20&lt;/td&gt;
            &lt;td&gt;Érase una vez... el Design System &lt;em&gt;por Naiara Abaroa&lt;/em&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;11:20-11:50&lt;/td&gt;
            &lt;td&gt;Café&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;11:50-12:40&lt;/td&gt;
            &lt;td&gt;Agile for scrummies &lt;em&gt;por Jorge Uriarte&lt;/em&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;12:50-13:40&lt;/td&gt;
            &lt;td&gt;Lean Analytics, mi faro de cabecera &lt;em&gt;por Carlos Iglesias&lt;/em&gt;&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/208/track-1.jpg&#34; title=&#34;Track 1&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/208/track-1-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/208/track-2.jpg&#34; title=&#34;Track 2&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/208/track-2-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Agenda&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Al igual que en ediciones previas hago un pequeño resumen de las presentaciones a las que asistí. Los resúmenes no le hace justicia a las grandes ponencias que fueron en realidad pero espero haber captado y transmitir aquí escuetamente las ideas básicas que se expusieron. Y con este es el tercer resumen consecutivo que escribo de la BilboStack, los anteriores (y posteriores que si tengo oportunidad espero escribir) de esta serie de artículos están al final de este artículo.&lt;/p&gt;

&lt;h3 id=&#34;invisible-o-desaparece-em-por-isabel-cabezas-y-juliet-moreiro-em&#34;&gt;Invisible o desaparece&amp;hellip; &lt;em&gt;por Isabel Cabezas y Juliet Moreiro&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;El &lt;abbr title=&#34;Internet of Things&#34;&gt;IoT&lt;/abbr&gt; o esos pequeños dispositivos que tienen conexión a internet están surgiendo como una forma de ayudarnos en algunas situaciones cotidianas como cambiar la ruta cuando hay un accidente para no llegar a un atasco o encender la calefacción antes de llegar a casa o antes de levantarnos, espejos que proporcionan información como notificaciones o el tiempo o un centro comercial que te posiciona y ofrece ofertas según la localización en la que estas y tus hábitos de consumo. Aparatos como &lt;a href=&#34;https://www.microsoft.com/cognitive-services/en-us/&#34;&gt;Amazon Echo&lt;/a&gt; son asistentes a través de los cuales mediante comandos de voz podemos realizar acciones como pedir comida a domicilio.&lt;/p&gt;

&lt;p&gt;Estos aparatos conectados a internet nos ofrecen una nuevo área posibilidades. Muestra de ellos es la demostración presentada que consistía en base a los mensajes escritos en &lt;a href=&#34;https://twitter.com/&#34;&gt;Twitter&lt;/a&gt; iluminar una lámpara &lt;a href=&#34;https://www.amazon.com/PLAYBULB-Candle-Bluetooth-Flameless-Android/dp/B00O4LHNNS/&#34;&gt;PLAYBULB&lt;/a&gt; con color verde si eran positivos, rojo si eran negativos y azul si eran neutros haciendo uso de &lt;a href=&#34;https://www.microsoft.com/cognitive-services/en-us/&#34;&gt;Microsoft Cognitive Services&lt;/a&gt; y de &lt;a href=&#34;https://www.microsoft.com/cognitive-services/en-us/apis&#34;&gt;algunas de sus APIs&lt;/a&gt; para evaluar el sentido de los mensajes. Por ejemplo el mensaje &lt;em&gt;BilboStak is an awesome event!&lt;/em&gt; se evaluará como positivo y sumará a la media para que la lampara cambie a color verde.&lt;/p&gt;

&lt;p&gt;El &lt;em&gt;hardware&lt;/em&gt; era la propia lámpara y una placa de computación &lt;a href=&#34;https://software.intel.com/es-es/iot/hardware/edison&#34;&gt;Intel Edison&lt;/a&gt; junto con un servicio en la nube de Azure pero perfectamente podría ser una &lt;a href=&#34;http://www.raspberrypi.org/&#34;&gt;Raspberry Pi&lt;/a&gt; u otra de las numerosas pequeñas placas que están surgiendo en este nuevo mercado. El &lt;a href=&#34;https://github.com/isabelcabezasm/notwificador&#34;&gt;código fuente del ejemplo&lt;/a&gt; está compartido en un repositorio de GitHub.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://es.slideshare.net/isabelcabezas/bilbostack-17-invisible-o-desaparece&#34;&gt;Presentación&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/208/invisible-o-desaparece.jpg&#34; title=&#34;Invisible o desaparece...&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/208/invisible-o-desaparece-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;érase-una-vez-el-design-system-em-por-naiara-abaroa-em&#34;&gt;Érase una vez&amp;hellip; el Design System &lt;em&gt;por Naiara Abaroa&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;El diseño de una página es una parte importante de la misma, no considerarlo así seguramente nos encontremos con problemas.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Requiere de un conocimiento específico para hacerlo bien y esta es la habilidad que posee un &lt;em&gt;front-designer&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Falta de arquitectura de CSS a pesar de que existen herramientas como Sass o less se sigue produciendo código espagueti.&lt;/li&gt;
&lt;li&gt;Hay duplicidades y está poco estructurado.&lt;/li&gt;
&lt;li&gt;Falta de coherencia en la tipografía, color, &amp;hellip;&lt;/li&gt;
&lt;li&gt;Problemas de especifidad al no considerar la evaluación en cascada y el orden de precedencia de &lt;em&gt;inline&lt;/em&gt;, &lt;em&gt;id&lt;/em&gt;, clases y elementos con lo que se ha de usar el denostado &lt;em&gt;!important&lt;/em&gt; como último recurso.&lt;/li&gt;
&lt;li&gt;Mezcla de varias convenciones, en el nombrado de elementos.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;La solución es el &lt;em&gt;Design System&lt;/em&gt; consiguiendo primero claridad, segundo eficiencia y finalmente «belleza». Siguiendo el &lt;a href=&#34;http://atomicdesign.bradfrost.com/chapter-2/&#34;&gt;Atomic Design&lt;/a&gt; se consigue una mayor reutilización y facilidad de mantenimiento combinándolo con herramientas como &lt;a href=&#34;https://www.sketchapp.com/&#34;&gt;Sketch&lt;/a&gt; para el desarrollo de &lt;em&gt;mockups&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Algunos recursos de diseño e implementaciones conocidas de &lt;em&gt;Design Systems&lt;/em&gt; son:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://material.io/&#34;&gt;Material Design&lt;/a&gt; y su &lt;a href=&#34;https://material.io/guidelines/material-design/introduction.html&#34;&gt;guía&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.lightningdesignsystem.com/&#34;&gt;Lightning Design System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://getbootstrap.com/&#34;&gt;Bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://foundation.zurb.com/&#34;&gt;Foundation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Y el propio que ha comenzado a desarrollar Naiara, &lt;a href=&#34;https://github.com/nabaroa/nakDS&#34;&gt;nakDS&lt;/a&gt; que ha compartido en su GitHub&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nabaroa.github.io/erase-una-vez-el-design-system/#/&#34;&gt;Presentación&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/208/design-system.jpg&#34; title=&#34;Érase una vez... el Design System&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/208/design-system-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;agile-for-scrummies-em-por-jorge-uriarte-em&#34;&gt;Agile for scrummies &lt;em&gt;por Jorge Uriarte&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;La situación respecto a las metodologías de desarrollo ha cambiado, hace 10 años había resistencia al cambio ahora se aplica pero tampoco resuelve mágicamente los problemas del desarrollo de todos los casos donde se usa.&lt;/p&gt;

&lt;p&gt;Algunas esencias de &lt;em&gt;scrum&lt;/em&gt; que permanecerán son:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;En el producto: no detallar en exceso el &lt;em&gt;backlog&lt;/em&gt; ya que cambiará.&lt;/li&gt;
&lt;li&gt;En las historias: siendo completas, entregables individualmente y según el valor que aportan.&lt;/li&gt;
&lt;li&gt;En los equipos: siendo estos autoorganizados, multidisciplinares, alineados, dueños del proceso y autónomos.&lt;/li&gt;
&lt;li&gt;En las entregas: serán incrementales y continuas.&lt;/li&gt;
&lt;li&gt;En el proceso: no estará sacralizado y cambiará con el fin de mejorar al igual que tratan de conseguir las retrospectivas.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Un sistema ágil es una aproximación a la incertidumbre. Incertidumbre que siempre está presente en los desarrollos de software al tratar de responder preguntas como ¿que hay que hacer? ¿cuanto tiempo se tardará? ¿que tecnología se usará?. Para evitar los problemas que genera la incertidumbre un &lt;em&gt;work in progress&lt;/em&gt; o WIP pequeño es un buen arma. Lo terminado elimina incertidumbres, se considera que es lo menos que se puede hacer ahora que de el máximo valor. Una consecuencia es que en el flujo de desarrollo habrá menos cosas pero pasando más rápido. Esto se resume en título del libro &lt;a href=&#34;http://amzn.to/2kB2fw9&#34;&gt;Stop starting, start finishing&lt;/a&gt; y que tiene la siguiente reseña.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This booklet tells the story of Justin - a project manager who achieved remarkable results with his team by doing very simple things! This guide covers the core concepts of Kanban for knowledge work, and shows how limiting your amount of work-in-progress can lead to getting things done better and faster.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0985305169&amp;linkId=3fb69c8c67a77d17456e3a5fca1ce831&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;La combinación de un WIP pequeño junto con un sistema &lt;em&gt;pull&lt;/em&gt; en el que no se construye lo no necesario, no se prueba lo que no se puede entregar, no se desarrolla lo que no se puede probar y no se especifica lo no se puede desarrollar produce una reducción de tiempos de entrega, hay mayor predictibilidad y elimina rehacer trabajo.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://es.slideshare.net/Gailen/agile-forscrummiesbilbaostack&#34;&gt;Presentación&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/208/agile-for-scrummies.jpg&#34; title=&#34;Agile for scrummies&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/208/agile-for-scrummies-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;domain-driven-design-uniendo-negocio-con-el-software-em-por-gorka-laucirica-y-beñat-espiña-em&#34;&gt;Domain-Driven Design, uniendo negocio con el software &lt;em&gt;por Gorka Laucirica y Beñat Espiña&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;El &lt;em&gt;Domain-Driven Design&lt;/em&gt; o DDD se centra en el dominio de la aplicación, la lógica de negocio y lo que quiere el negocio de la aplicación.&lt;/p&gt;

&lt;p&gt;Los modelos anémicos con &lt;em&gt;getters&lt;/em&gt; y &lt;em&gt;setters&lt;/em&gt; se consideran un antipatrón y hace que la lógica esté dispersa. En el patrón MVC los controladores pueden contener múltiples responsabilidades generando duplicidad de código. Aplicar los principios &lt;a href=&#34;https://en.wikipedia.org/wiki/SOLID_(object-oriented_design)&#34;&gt;SOLID&lt;/a&gt; generan código limpio y una &lt;a href=&#34;http://alistair.cockburn.us/Hexagonal+architecture&#34;&gt;arquitectura hexagonal&lt;/a&gt; ayuda a no crear en la aplicación una dependencia con el &lt;em&gt;framework&lt;/em&gt; posibilitando usar por ejemplo Symfony como herramienta y no como base.&lt;/p&gt;

&lt;p&gt;DDD se divide en patrones estratégicos (&lt;em&gt;bounded context&lt;/em&gt;) que no tienen código y tácticos (&lt;em&gt;entities&lt;/em&gt;, agregados, eventos de dominio, factorías, repositorios) que si tienen código. Hay un servicio para cada caso de uso de la aplicación. Para cosas simples junto con su curva de aprendizaje esto seguramente será demasiado complejo pero en los casos en los que haya lógica de negocio, equipos medianos/grandes si será útil.&lt;/p&gt;

&lt;p&gt;Un ejemplo de aplicación donde han aplicado DDD es &lt;a href=&#34;https://github.com/kreta/kreta&#34;&gt;Kreta&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;Libro &lt;a href=&#34;https://leanpub.com/ddd-in-php&#34;&gt;Domain-Driven Design in PHP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/208/domain-driven-design.jpg&#34; title=&#34;Domain-Driven Design, uniendo negocio con el software&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/208/domain-driven-design-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;hr&gt;

&lt;p&gt;Nuevamente gracias la dedicación de los organizadores por crear otra edición de este gran pequeño evento anual, los ponentes que altruistamente colaboran compartiendo su conocimiento y a la Universidad de Deusto por acoger un año más uno de los mejores eventos para desarrolladores de Bilbao y alrededores.&lt;/p&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/02/cursos-de-formacion-de-keepcoding/</id>
        <title>Cursos de formación de KeepCoding</title>        
        <updated>2017-02-03T23:00:00+01:00</updated>
        <published>2017-02-03T23:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/02/cursos-de-formacion-de-keepcoding/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/keepcoding.png&#34; class=&#34;right&#34; alt=&#34;KeepCoding&#34; title=&#34;KeepCoding&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;En internet hay cantidad de recursos disponibles para aprender de prácticamente cualquier cosas que queramos. También con libros técnicos como los &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/12/8-plus-libros-para-mejorar-como-programadores/&#34;&gt;8 libros que recomiendo para mejorar como programadores&lt;/a&gt; de los que es posible aprender de forma profunda sobre un tema en concreto. Estando suscritos a blogs como este también se pueden apreciar ciertos detalles sobre un tema o obtener una pequeña introducción con en ocasiones un ejemplo de código funcional.&lt;/p&gt;

&lt;p&gt;Sin embargo, algunos recursos de los que se encuentran disponibles en internet no están bien estructurados y de forma didáctica para aprender, los libros requieren de bastante atención y de una buena cantidad de tiempo además no tienen un tutor al que preguntar, los blogs como el mío son muy específicos en el tema de los artículos o introductorios sin cubrir tampoco un tema de forma completa y profunda. Asistir a conferencias también es una buena forma de obtener una introducción sobre el tema que se trate, en algunas sus entradas son gratuitas y otras tienen un coste de algunos cientos de euros a los que hay que sumar el transporte y alojamiento si son de varios días y en ocasiones no coinciden en fechas en las que podamos asistir.&lt;/p&gt;

&lt;p&gt;Hay webs en las que se ofrecen cursos de formación a distancia que podemos completar según nuestro tiempo disponible y aprender a nuestro ritmo. Además cuentan con tutores a los que hacer preguntas para resolver las dudas. Una de ellas es &lt;a href=&#34;http://keepcoding.es/?affcode=897_eznkgvrg&#34;&gt;KeepCoding&lt;/a&gt; que ofrece varios cursos con un temario bastante completo y de varias decenas de horas de formación. Algunos cursos de los que en este momento tienen disponibles son sobre varias de las tecnologías más demandadas actualmente y conocerlas son un buen punto a incluir en el &lt;em&gt;curriculum vitae&lt;/em&gt;. Algunos cursos de los que ofrecen que posiblemente en el futuro amplíen son los siguientes de los que puedes consultar su temario:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://keepcoding.es/p/intruduccion-javascript-node-js-express-mongodb-gratis/?affcode=897_eznkgvrg&#34;&gt;Introducción a JavaScript y Node.js&lt;/a&gt; (gratuito)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://keepcoding.es/p/git-github-sourcetree-agbotraining/?product_id=12902&amp;amp;coupon_code=PICO-DEV&amp;amp;affcode=897_eznkgvrg&#34;&gt;Curso git, GitHub &amp;amp; SourceTree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://keepcoding.es/p/fundamentos-android-online/?product_id=6517&amp;amp;coupon_code=PICO-DEV&amp;amp;affcode=897_eznkgvrg&#34;&gt;Aprende Android ¡Desarrollando una App Completa!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://keepcoding.es/p/megacurso-ios/?affcode=897_eznkgvrg&#34;&gt;Megacurso iOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://keepcoding.es/p/fundamentos-ios-online/?affcode=897_eznkgvrg&#34;&gt;Programación iOS para iPhone y iPad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://keepcoding.es/p/programacion-ios-avanzada/?affcode=897_eznkgvrg&#34;&gt;Programación iOS Avanzada&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://keepcoding.es/p/python-django-y-rest/?affcode=897_eznkgvrg&#34;&gt;Python, Django y REST&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://keepcoding.es/p/curso-fundamentos-de-swift-3/?affcode=897_eznkgvrg&#34;&gt;Curso Fundamentos de Swift 3.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://keepcoding.es/p/curso-javascript-node-js-express-mongodb-completo/?affcode=897_eznkgvrg&#34;&gt;JavaScript + Node.js + Express + MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://keepcoding.es/p/ruby-on-rails/?affcode=897_eznkgvrg&#34;&gt;Aprende Ruby on Rails y servicios REST&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Los cursos constan de varias horas lectivas con vídeos explicativos narrados en español como si un profesor estuviese dándonos una clase magistral que podrás revisar siempre que desees. Cada vídeo del curso no suele exceder de diez minutos siendo la mayoría de entre tres minutos y cinco minutos de forma que podamos visionarlos según el tiempo y momento que tengamos disponible. Creada la cuenta en KeepCoding e inscritos a un curso podremos ver nuestro progreso del mismo.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/207/keepcoding-course.png&#34; title=&#34;Curso online de KeepCoding&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/207/keepcoding-course-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Curso online de KeepCoding&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Algunos cursos de que ofrece KeepCoding son gratuitos y puedes inscribirte en ellos libremente para conocer la metodología de los cursos. Los cursos de pago tienen un precio de entre 100€ y 300€, precio no muy diferente de los cursos presenciales. Si la empresa en la que trabajas tiene interés en formar a sus empleados (y debería) posiblemente también esté interesada en costear el curso si el trabajo que desarrollas coincide con la temática de los cursos, este puede ser el caso de los &lt;a href=&#34;http://keepcoding.es/p/fundamentos-android-online/?product_id=6517&amp;amp;coupon_code=PICO-DEV&amp;amp;affcode=897_eznkgvrg&#34;&gt;Aprende Android ¡Desarrollando una App Completa!&lt;/a&gt;, del &lt;a href=&#34;http://keepcoding.es/p/git-github-sourcetree-agbotraining/?product_id=12902&amp;amp;coupon_code=PICO-DEV&amp;amp;affcode=897_eznkgvrg&#34;&gt;Curso git, GitHub &amp;amp; SourceTree&lt;/a&gt;, del &lt;a href=&#34;http://keepcoding.es/p/megacurso-ios/?affcode=897_eznkgvrg&#34;&gt;Megacurso iOS&lt;/a&gt; o de &lt;a href=&#34;http://keepcoding.es/p/python-django-y-rest/?affcode=897_eznkgvrg&#34;&gt;Python, Django y REST&lt;/a&gt;. También a nivel personal es una buena opción de formación para optar a puestos de trabajo de nuestro interés y demandados en el mercado laboral. El pago se puede hacer mediante tarjeta de crédito y tienen un derecho de desistimiento de 72 horas según las &lt;a href=&#34;http://keepcoding.es/p/condiciones-generales-contratacion/?affcode=897_eznkgvrg&#34;&gt;Condiciones Generales de Contratación de KeepCoding&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A modo de promoción KeepCoding te ofrece dos cupones con un importante &lt;strong&gt;descuento de casi el 75%&lt;/strong&gt; sobre el precio original en los cursos de &lt;a href=&#34;http://keepcoding.es/p/fundamentos-android-online/?product_id=6517&amp;amp;coupon_code=PICO-DEV&amp;amp;affcode=897_eznkgvrg&#34;&gt;Aprende Android ¡Desarrollando una App Completa!&lt;/a&gt; y &lt;a href=&#34;http://keepcoding.es/p/git-github-sourcetree-agbotraining/?product_id=12902&amp;amp;coupon_code=PICO-DEV&amp;amp;affcode=897_eznkgvrg&#34;&gt;curso git, GitHub &amp;amp; SourceTree&lt;/a&gt; con lo que se quedan en unos modestos y asequibles &lt;strong&gt;79€ + IVA usando los enlaces de afiliación&lt;/strong&gt; que incluyo en este artículo.&lt;/p&gt;

&lt;p&gt;Si quieres aprender reservate una hora o dos al día para dedicarle al curso que desees, de modo que tengas ese tiempo para completarlo y puedas empezarlos, acabarlos y que te resulten provechosos.&lt;/p&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="programacion"/>
            
                <category term="promocion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/01/registro-y-descubrimiento-de-servicios-con-spring-cloud-y-consul/</id>
        <title>Registro y descubrimiento de servicios con Spring Cloud y Consul</title>        
        <updated>2017-01-28T11:00:00+01:00</updated>
        <published>2017-01-28T11:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/01/registro-y-descubrimiento-de-servicios-con-spring-cloud-y-consul/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Tradicionalmente el conectar un servicio con sus servicios dependientes se ha realizado por configuración, normalmente mediante un nombre de dominio y su puerto. Esta configuración estática es suficiente para unos pocos servicios y que no varían durante su funcionamiento. Con el advenimiento de los microservicios con su estado y número cambiantes en el tiempo han surgido varias herramientas para en vez de usar configuración usar descubrimiento. Una de estas herramientas Consul para la que Spring Cloud proporciona integración.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/spring.png&#34; class=&#34;right&#34; alt=&#34;Spring&#34; title=&#34;Spring&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/java.png&#34; class=&#34;right&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;En una aplicación con una arquitectura de microservicios esta se compone de múltiples partes cambiantes. Los microservicios pueden aparecer, desaparecer, variar en número o cambiar de ubicación, la aplicación debe ser tolerante a esos cambios y seguir proporcionando su servicio. Por tanto, la configuración de red de los servicios no se puede realizar usando direcciones &lt;abbr title=&#34;Internet Protocol&#34;&gt;IP&lt;/abbr&gt; ya que no se conocen las que utilizarán los microservicios y usar nombres de dominio de &lt;abbr title=&#34;Domain Name System&#34;&gt;DNS&lt;/abbr&gt; puede no ser viable ya que los cambios tardan en propagarse. Conocer el nombre de &lt;em&gt;host&lt;/em&gt; y puerto reales de los microservicios es proporcionado por la funcionalidad de descubrimiento de servicios o &lt;em&gt;service discovery&lt;/em&gt; que proporcionan algunos servicios como &lt;a href=&#34;https://github.com/Netflix/eureka&#34;&gt;Eureka&lt;/a&gt;, &lt;a href=&#34;https://www.consul.io/&#34;&gt;Consul&lt;/a&gt; o &lt;a href=&#34;https://zookeeper.apache.org/&#34;&gt;Apache Zookeper&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;En este artículo explicaré como usar la parte de descubrimiento de servicios de Consul usando una aplicación con &lt;a href=&#34;http://projects.spring.io/spring-boot/&#34;&gt;Spring Boot&lt;/a&gt; y  con &lt;a href=&#34;http://projects.spring.io/spring-cloud/&#34;&gt;Spring Cloud&lt;/a&gt;. Spring Cloud proporciona varias cosas comunes para aplicaciones basadas en microservicios. Si aún no conoces las herramientas en las que se basará el ejemplo puedes consultar los siguientes artículos específicos como introducción:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2012/03/herramienta-de-construccion-gradle.html&#34;&gt;Herramienta de construcción Gradle &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/09/ejemplo-de-multiproyecto-con-gradle/&#34;&gt;Ejemplo de multiproyecto con Gradle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/10/aplicacion-java-autocontenida-con-spring-boot/&#34;&gt;Aplicación Java autocontenida con Spring Boot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/11/configuracion-de-una-aplicacion-en-diferentes-entornos-con-spring-cloud-config/&#34;&gt;Configuración de una aplicación en diferentes entornos con Spring Cloud Config&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Consul además de descubrimiento de servicios proporciona otras funcionalidades como detección de fallos o caídas para prevenir enviar peticiones a máquinas fuera de servicio y almacenamiento básico clave/valor para configuración dinámica o activación de características. Dispone de una aplicación web en la que podemos ver el estado de los servicios, una &lt;a href=&#34;https://www.consul.io/docs/agent/http.html&#34;&gt;API REST&lt;/a&gt; con la que comunicarse con Consul en una aplicación o en cada microservicio y un servidor de nombres &lt;abbr&gt;DNS&lt;/abbr&gt;, podemos usar cualquiera de las dos interfaces de consulta, la basada en la &lt;abbr&gt;API&lt;/abbr&gt; &lt;abbr&gt;REST&lt;/abbr&gt; o la basada en DNS para obtener las direcciones IP con la ubicación de los servicios.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/206/consul.png&#34; alt=&#34;Consul&#34; title=&#34;Consul&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Instalar Consul es muy sencillo basta con &lt;a href=&#34;https://www.consul.io/downloads.html&#34;&gt;descargar un binario&lt;/a&gt; y descargar la interfaz web si queremos tener el &lt;em&gt;dashboard&lt;/em&gt; con la información del servicio. Descargados y descomprimidos Consul se inicia con el siguiente comando. Podemos acceder al panel &lt;em&gt;dashboard&lt;/em&gt; con la dirección &lt;a href=&#34;http://localhost:8500&#34;&gt;http://localhost:8500&lt;/a&gt; con un navegador web. Inicialmente en el panel de servicios solo se encuentra el propio de Consul cuando aún no se ha registrado ningún servicio, aplicación o microservicio.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/69ebe9c83419447cdcfc4692988938a2.js?file=consul.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Una aplicación que use Spring Boot y que quiera hacer pública su disponibilidad en Consul basta con que use la anotación &lt;code&gt;@EnableDiscoveryClient&lt;/code&gt; en la clase de inicio de la aplicación junto con las dependencias adecuadas. Con la declaración de esta anotación y la dependencia &lt;em&gt;spring-cloud-starter-consul-all&lt;/em&gt; Spring se comunicará con Consul a través de la API REST para registrar cuando se inicie la aplicación, su nombre, nombre de máquina y puerto en el que estará disponible.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/69ebe9c83419447cdcfc4692988938a2.js?file=Main.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;Spring Cloud proporciona además un servicio que podemos usar para conocer los servicios registrados en Consul, con la clase &lt;em&gt;DiscoveryClient&lt;/em&gt; podemos conocer los nombres de los servicios, su nombre de máquina y puerto desde una aplicación Java. En el método &lt;em&gt;run&lt;/em&gt; de la clase &lt;em&gt;Main&lt;/em&gt; se usa en este ejemplo para imprimir en la salida el listado de servicios registrados en Consul. Uno de esos servicios esta aplicación de ejemplo, ya que se registra en Consul cuando se inicia.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/206/consul-services.png&#34; title=&#34;Servicios registrados en Consul&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/206/consul-services-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Servicios registrados en Consul&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Consul para conocer que los servicios siguen en funcionamiento hace una petición &lt;abbr&gt;HTTP&lt;/abbr&gt; cada ciertos segundos a una ruta de la aplicación, Spring Boot proporciona una dependencia, &lt;em&gt;spring-boot-starter-actuator&lt;/em&gt;, que usada provee del &lt;em&gt;endpoint /health&lt;/em&gt; para que Consul monitorice el estado del servicio.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/69ebe9c83419447cdcfc4692988938a2.js?file=build.gradle&#34;&gt;&lt;/script&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/206/service-health.png&#34; title=&#34;Endpoint de estado de servicio&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/206/service-health-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Endpoint de estado de servicio&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Esta es la salida en la consola listando los servicios disponibles, siendo uno de ellos esta aplicación.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/69ebe9c83419447cdcfc4692988938a2.js?file=System.out&#34;&gt;&lt;/script&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloudConsul&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./consul/consul.sh y ./gradlew run&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://projects.spring.io/spring-cloud/&#34;&gt;Spring Cloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cloud.spring.io/spring-cloud-consul/&#34;&gt;Spring Cloud Consul&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/01/distribuciones-gnu-linux-mas-seguras-que-windows/</id>
        <title>Distribuciones GNU/Linux, ¿más seguras que Windows?</title>        
        <updated>2017-01-21T20:00:00+01:00</updated>
        <published>2017-01-21T10:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/01/distribuciones-gnu-linux-mas-seguras-que-windows/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Los sistemas GNU/Linux pueden ser igual de seguros o inseguros que los sistemas Windows. Sin embargo, en ambas plataformas hay algunas diferencias que explican por que los sistemas Windows tienen peor fama y por que los sistemas GNU/Linux se consideran más seguros que Windows.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/linux.png&#34; class=&#34;right&#34; alt=&#34;Linux&#34; title=&#34;Linux&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/gnu.png&#34; class=&#34;right&#34; alt=&#34;GNU&#34; title=&#34;GNU&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Habitualmente se comenta que los sistemas con alguna distribución &lt;a href=&#34;http://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;/&lt;a href=&#34;http://www.linux.com/&#34;&gt;Linux&lt;/a&gt; son más seguros que los sistemas &lt;a href=&#34;http://www.microsoft.com/es-es/windows/&#34;&gt;Windows&lt;/a&gt;. Probablemente bien configurados y debidamente actualizados ambas opciones sean muy seguras. Sin embargo, desde el punto de vista de un usuario es común que Windows se vea infectado con virus o &lt;em&gt;malware&lt;/em&gt; aún con un antivirus instalado.&lt;/p&gt;

&lt;p&gt;Las razones de que Windows se vea más amenazado son varias, una es que es una plataforma con una cuota de uso enorme por tanto muy atractiva de atacar. Otra es que instalar programas o software en las distribuciones GNU/Linux se realiza en su mayor parte desde los repositorios oficiales, es decir, de una fuente confiable. En Windows hay que buscar la página oficial del programa y en los resultados de Google no siempre es la primera opción si se busca por «windows reproductor de vídeo», «windows programa para descargar películas» o segundas o terceras opciones es software dudoso. Esas páginas no oficiales de los programas pueden realmente hospedar programas con virus. Quizá ahora que &lt;a href=&#34;http://www.microsoft.com/&#34;&gt;Microsoft&lt;/a&gt; ha añadido en sus últimas versiones de Windows &lt;a href=&#34;https://www.microsoft.com/en-us/windows/windows-10-apps&#34;&gt;una tienda de aplicaciones&lt;/a&gt; se podrán instalar desde ella con más garantías de forma similar a lo que desde hace mucho tiempo en GNU/Linux son los repositorios de paquetes.&lt;/p&gt;

&lt;p&gt;Otro motivo es que &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/01/windows-10-y-office-2016-tan-faciles-de-usar-sin-licencia-como-siempre/&#34;&gt;muchos usuarios de Windows y Office los usan sin licencia&lt;/a&gt; y no hay mayor problema ya que incluso Microsoft ofrece la descarga de la &lt;a href=&#34;https://www.microsoft.com/es-es/software-download/windows10ISO&#34;&gt;imagen ISO de Windows 10&lt;/a&gt; desde su propia página pero para realizar la activación sin la correspondiente licencia hay que usar un programa que puede contener un virus y en un buen caso obligar a reinstalar Windows para deshacerse de él, un peor caso es que el virus no muestre síntomas de su presencia y pase desapercibido pero recolectando datos (contraseñas, fotos, documentos, &amp;hellip;) del usuario sin que este lo sepa. La lista de programas que los usuarios de Windows usan sin licencia es mucho más extensa &lt;a href=&#34;http://www.adobe.com/es/products/photoshop.html&#34;&gt;Photoshop&lt;/a&gt;, &lt;a href=&#34;https://www.adobe.com/es/products/illustrator.html&#34;&gt;Illustrator&lt;/a&gt;, &lt;a href=&#34;https://www.adobe.com/es/products/indesign.html&#34;&gt;InDesign&lt;/a&gt;, &lt;a href=&#34;https://www.adobe.com/es/products/premiere.html&#34;&gt;Premiere Pro&lt;/a&gt;, &lt;a href=&#34;https://www.adobe.com/es/products/aftereffects.html&#34;&gt;After Effects&lt;/a&gt;, &lt;a href=&#34;https://www.adobe.com/es/products/photoshop-lightroom.html&#34;&gt;Lightroom&lt;/a&gt;, &lt;a href=&#34;https://acrobat.adobe.com/es/es/acrobat.html&#34;&gt;Acrobat&lt;/a&gt;, &lt;a href=&#34;https://www.adobe.com/es/creativecloud/catalog/desktop.html&#34;&gt;otro software de Adobe&lt;/a&gt;, &lt;a href=&#34;http://www.autodesk.es/products/autocad/overview&#34;&gt;AutoCAD&lt;/a&gt;, &lt;a href=&#34;http://www.winzip.com/win/es/index.htm&#34;&gt;Winzip&lt;/a&gt;, &amp;hellip; que igualmente al &lt;em&gt;crackearlos&lt;/em&gt; para usarlos después de su periodo de prueba, con la que la seguridad de los sistemas Windows se ve comprometida. Para cada uno de estos programas hay otros &lt;a href=&#34;http://alternativeto.net/&#34;&gt;alternativos con licencias de software libre&lt;/a&gt; mejores o las suficientes funciones para la mayoría de usuarios. Los juegos también son muy pirateados y los &lt;em&gt;cracks&lt;/em&gt; usados también pueden contener funciones maliciosas y es otra fuente de entrada para comprometer la seguridad.&lt;/p&gt;

&lt;p&gt;Con la cuota de uso que tiene Windows serán muchos usuarios con muchos conocimientos que lo usan pero es mayor el número de sus usuarios que tienen pocos conocimientos informáticos y que a la mayoría les vino con el ordenador preinstalado con &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2011/05/impuesto-windows.html&#34;&gt;el impuesto Windows&lt;/a&gt; con lo que la seguridad de los sistemas Windows queda inutilizada. Algunas páginas de reputación dudosa muestran mensajes o correos electrónicos fraudulentos contienen &lt;em&gt;banners&lt;/em&gt; advirtiendo que se debe descargar y ejecutar un programa, un usuario con conocimientos simplemente los ignoraría pero algunos usuarios sin conocimientos pueden hacerles caso. E incluso los usuarios con conocimientos si no usan el software con su licencia y usan activadores pueden comprometer la seguridad de sus sistemas.&lt;/p&gt;

&lt;p&gt;Descargar y ejecutar un programa en GNU/Linux de una fuente externa a los repositorios oficiales igualmente puede comprometer la seguridad pero dado que todo el software normalmente se encuentra en los repositorios no suele haber necesidad. Sin embargo, también hay que tener precauciones de &lt;em&gt;scritps&lt;/em&gt; como estos dos que pueden destruir de forma catastrófica un sistema GNU/Linux.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ADVERTENCIA: no los ejecutes!&lt;/strong&gt;. El primero elimina todos los archivos del sistema y el segundo por mucho que parezcan unos extraños inocentes emoticonos crea procesos hasta que agota los recursos del sistema. Un usuario de GNU/Linux precavido y con conocimientos antes revisaría el contenido de cualquier &lt;em&gt;script&lt;/em&gt; o binario ejecutable y no ejecutaría nada en caso de duda.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/dde4ffdff673e05692c2714fc2ca40ba.js?file=nuke.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Dicho lo cual, tanto GNU/Linux y Windows tendrán un nivel de seguridad no tan diferente bien configurados pero el hecho de que los primeros normalmente se basan en software libre, usan repositorios de software confiables, se mantienen siempre actualizados y más rápidamente (al no suponer un coste en nuevas licencias de Windows ni tiene una fecha de expiración del soporte como Windows XP, Vista o Windows 7), se evitan usar activadores, el código fuente está disponible para cualquiera que quiera verlo, la seguridad es auditable y si contuviese alguna función maliciosa podría ser descubierta con mayor facilidad, junto con que los usuarios de GNU/Linux tienen de media más conocimientos que los usuarios Windows, es una plataforma minoritaria en cuota de uso, más fragmentada en diferentes distribuciones y por tanto menos atractiva para atacar hace que GNU/Linux a nivel de usuario tenga menos problemas de seguridad.&lt;/p&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="microsoft"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/01/script-de-instalacion-de-arch-linux-desatendido-automatizado-y-personalizable/</id>
        <title>Script de instalación de Arch Linux desatendido, automatizado y personalizable</title>        
        <updated>2017-01-13T00:00:00+01:00</updated>
        <published>2017-01-13T00:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/01/script-de-instalacion-de-arch-linux-desatendido-automatizado-y-personalizable/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Arch Linux es una de las distribuciones más personalizables de GNU/Linux pero cuya instalación requiere leer una buena cantidad de documentación para saber que comandos ejecutar en el &lt;em&gt;prompt&lt;/em&gt; del sistema en el que te deja se medio de instalación. Algunos usuarios eligen una distribución como Antergos, KaOS o Manjaro con un instalalador gráfico y guiado simplemente por el hecho de no enfrentarse al instalador de Arch Linux. Ejecutar un comando y esperar a que termine para introducir otro es lento y requiere de atención.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/archlinux.png&#34; class=&#34;right&#34; alt=&#34;Arch Linux&#34; title=&#34;Arch Linux&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/linux.png&#34; class=&#34;right&#34; alt=&#34;Linux&#34; title=&#34;Linux&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/gnu.png&#34; class=&#34;right&#34; alt=&#34;GNU&#34; title=&#34;GNU&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Hace tiempo que instalar una distribución &lt;a href=&#34;http://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;/&lt;a href=&#34;http://www.linux.com/&#34;&gt;Linux&lt;/a&gt; no tiene más dificultad que instalar un sistema operativo como &lt;a href=&#34;http://www.microsoft.com/es-es/windows/&#34;&gt;Windows&lt;/a&gt;, que consiste en descargar la imagen ISO del CD o DVD, grabarla en un CD, DVD o memoria USB e iniciar el sistema con el medio. Las &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/elegir-una-distribucion-gnu-linux-segun-el-usuario-uso-o-equipo/&#34;&gt;distribuciones aconsejadas para usuarios que provienen de Windows o macOS&lt;/a&gt; o no tiene muchos conocimientos informáticos poseen instaladores gráficos o basados en texto y guiados en varios pasos hasta completar la instalación en menos de una hora. Distribuciones como &lt;a href=&#34;http://www.ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt;, &lt;a href=&#34;https://elementary.io/es/&#34;&gt;elementary OS&lt;/a&gt; o &lt;a href=&#34;http://www.linuxmint.com/&#34;&gt;Linux Mint&lt;/a&gt; hacen que la instalación no requiera muchos conocimientos y sea completada con éxito por cualquier usuario.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/204/debian-installer-text.png&#34; title=&#34;Instalador de Debian en modo texto&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/204/debian-installer-text-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/204/debian-installer-graphics.png&#34; title=&#34;Instalador de Debian en modo gráfico&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/204/debian-installer-graphics-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Instalación guíada de Debian basada en texto y gráfica&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Otras distribuciones basadas en principios diferentes y usuarios a los que está destinadas con otras necesidades o preferencias puede que requieran algo más de conocimientos a cambio de realizar configuraciones más avanzadas como el particionado del disco, cifrado del disco o software que se instala. Algunas distribuciones como &lt;a href=&#34;https://www.archlinux.org/&#34;&gt;Arch Linux&lt;/a&gt; incluso no proporcionan ningún instalador.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It is targeted at the proficient GNU/Linux user, or anyone with a do-it-yourself attitude who is willing to read the documentation, and solve their own problems.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;En Arch Linux con su &lt;a href=&#34;https://wiki.archlinux.org/index.php/Arch_Linux&#34;&gt;forma de hacer las cosas&lt;/a&gt; deja al usuario el poder de personalizar el sistema completamente a sus necesidades y preferencias únicamente limitado por su determinación de conseguirlo. Solo proporciona &lt;a href=&#34;https://www.archlinux.org/download/&#34;&gt;el medio con el que iniciar la instalación&lt;/a&gt; que comienza con una terminal y un &lt;em&gt;prompt&lt;/em&gt; del sistema, una &lt;a href=&#34;https://wiki.archlinux.org/index.php/Installation_guide&#34;&gt;guía de instalación&lt;/a&gt; junto con las &lt;a href=&#34;https://wiki.archlinux.org/index.php/General_recommendations&#34;&gt;recomendaciones generales&lt;/a&gt; y &lt;a href=&#34;https://wiki.archlinux.org/&#34;&gt;una de las mejores fuentes de información en GNU/Linux&lt;/a&gt; además de completa de cada aspecto que necesitemos en la instalación. Después de haber leído las páginas relevantes de la wiki de Arch Linux, seguramente más de una y dos veces, hasta comprenderla en su mayor parte se empieza a realizar la receta que contenga los comandos necesarios hasta completar la instalación.&lt;/p&gt;

&lt;p&gt;En multitud de blogs y vídeos de YouTube hay guías que contienen los comandos y las explicaciones necesarias. Cualquier usuario de Arch Linux con un blog seguramente ha publicado un artículo con su guía de instalación (sí, &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/&#34;&gt;yo también publiqué la mía&lt;/a&gt;). Un usuario que quiera instalar Arch Linux debe leer varios de esos artículos además de la guía oficial de instalación. Según la filosofía de Arch Linux este proceso de aprendizaje se considera necesario y permite una mayor compresión del sistema. Pero saber los comandos que hay que introducir para realizar la instalación de Arch Linux no evita tener que teclearlos uno de tras de otro y esperar a que termine el anterior para introducir el siguiente. Tampoco todas las personas tienen el tiempo para realizarlo. Varias &lt;a href=&#34;https://wiki.archlinux.org/index.php/Arch-based_distributions&#34;&gt;distribuciones derivadas de Arch Linux&lt;/a&gt; como &lt;a href=&#34;https://antergos.com/&#34;&gt;Antergos&lt;/a&gt;, &lt;a href=&#34;https://kaosx.us/&#34;&gt;KaOS&lt;/a&gt; o &lt;a href=&#34;https://manjaro.org/&#34;&gt;Manjaro&lt;/a&gt; ofrecen los instaladores gráficos y guiados más amigables que atraen a algunos usuarios buscando usar Arch Linux pero no pasar por su poco amigable proceso de instalación. Por fortuna al ser una distribución &lt;em&gt;rolling release&lt;/em&gt; (en constante actualización) solo hay que hacer una única instalación por equipo en principio durante toda su vida de uso. Pero incluso para los usuarios de Arch Linux realizar una segunda instalación en un nuevo equipo es cansina.&lt;/p&gt;

&lt;p&gt;Hace unos meses conocí &lt;a href=&#34;https://arch-anywhere.org/&#34;&gt;arch-anywhere&lt;/a&gt; que básicamente es un &lt;em&gt;script&lt;/em&gt; de bash, con un instalador guiado y basado en texto que hace menos laboriosa la instalación de Arch Linux de forma similar a las existentes en otras distribuciones más amigables. Sin embargo, hay un dos cosas que no me convencen de &lt;em&gt;arch-anywhere&lt;/em&gt;, una es que no es desatendido requiriendo contestar a varias preguntas de forma interactiva, esperar a que termine ejecute algún comando según la contestación anterior y contestar a la siguiente pregunta. Por lo demás, ofrece un buen nivel de personalización cubriendo las necesidades más comunes de los usuarios como personalizar el particionado, elegir el sistema de archivos, si se quiere LVM, cifrado, el entorno de escritorio (GNOME, KDE, XFCE, &amp;hellip;), kernel, cargador de arranque (GRUB) y programas a instalar. Otra cosa que no me convence es que usa una imagen ISO propia y no la original de Arch Linux.&lt;/p&gt;

&lt;p&gt;Basándome en &lt;em&gt;arch-anywhere&lt;/em&gt; y dedicando un poco de tiempo he creado un &lt;em&gt;script&lt;/em&gt; en bash para instalar Arch Linux de forma automatizada, desatendida y personalizable hasta cierto punto aunque siendo útil para los casos de configuraciones más comunes. Algunas de las funcionalidades que soporta son:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;BIOS con &lt;a href=&#34;https://wiki.archlinux.org/index.php/Partitioning&#34;&gt;particionado&lt;/a&gt; GPT&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/Unified_Extensible_Firmware_Interface&#34;&gt;UEFI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/LVM&#34;&gt;LVM&lt;/a&gt; y no LVM&lt;/li&gt;
&lt;li&gt;Partición &lt;em&gt;root&lt;/em&gt; &lt;a href=&#34;https://wiki.archlinux.org/index.php/Dm-crypt/Encrypting_an_entire_system&#34;&gt;cifrada&lt;/a&gt; y sin cifrar&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/File_systems&#34;&gt;Sistemas de archivos&lt;/a&gt; ext4, btrfs (sin swap) o xfs&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/Swap&#34;&gt;swap&lt;/a&gt; con archivo&lt;/li&gt;
&lt;li&gt;Instalación con &lt;a href=&#34;https://wiki.archlinux.org/index.php/Wireless_network_configuration&#34;&gt;red WIFI&lt;/a&gt; WPA&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/Solid_State_Drives&#34;&gt;Soporte TRIM&lt;/a&gt; para discos SSD&lt;/li&gt;
&lt;li&gt;Utilidades como invitado de &lt;a href=&#34;https://wiki.archlinux.org/index.php/VirtualBox&#34;&gt;VirtualBox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/Microcode&#34;&gt;Microcódigo&lt;/a&gt; para procesadores Intel&lt;/li&gt;
&lt;li&gt;Creación de usuario&lt;/li&gt;
&lt;li&gt;Instalación de &lt;a href=&#34;https://wiki.archlinux.org/index.php/AUR_helpers&#34;&gt;yaourt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Instalación de paquetes&lt;/li&gt;
&lt;li&gt;Instalación de entorno de escritorio (&lt;a href=&#34;https://wiki.archlinux.org/index.php/GNOME&#34;&gt;GNOME&lt;/a&gt;, &lt;a href=&#34;https://wiki.archlinux.org/index.php/KDE&#34;&gt;KDE&lt;/a&gt;, &lt;a href=&#34;https://wiki.archlinux.org/index.php/Xfce&#34;&gt;Xfce&lt;/a&gt;, &lt;a href=&#34;https://wiki.archlinux.org/index.php/MATE&#34;&gt;Mate&lt;/a&gt;, &lt;a href=&#34;https://wiki.archlinux.org/index.php/Cinnamon&#34;&gt;Cinnamon&lt;/a&gt;, &lt;a href=&#34;https://wiki.archlinux.org/index.php/LXDE&#34;&gt;LXDE&lt;/a&gt;) y gestor de sesiones (&lt;a href=&#34;https://wiki.archlinux.org/index.php/GDM&#34;&gt;gdm&lt;/a&gt;, &lt;a href=&#34;https://wiki.archlinux.org/index.php/SDDM&#34;&gt;sddm&lt;/a&gt;, &lt;a href=&#34;https://wiki.archlinux.org/index.php/LightDM&#34;&gt;lightdm&lt;/a&gt;, &lt;a href=&#34;https://wiki.archlinux.org/index.php/LXDM&#34;&gt;lxdm&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Instalación base sin entorno de escritorio&lt;/li&gt;
&lt;li&gt;Instalación de &lt;a href=&#34;https://wiki.archlinux.org/index.php/Kernels&#34;&gt;kernels&lt;/a&gt; adicionales (linux-lts, linux-grsec, linux-zen)&lt;/li&gt;
&lt;li&gt;Instalación de controlador gráfico (intel, nvidia, amd)&lt;/li&gt;
&lt;li&gt;Cargador de arranque con &lt;a href=&#34;https://wiki.archlinux.org/index.php/GRUB&#34;&gt;GRUB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La forma aconsejada de instalar Arch Linux es aprendiendo cuales son los comandos a ejecutar y que hace cada uno de ellos, primero lee la guía oficial de instalación de Arch Linux y comprende que hacen los comandos del &lt;em&gt;script&lt;/em&gt;. Este &lt;em&gt;script&lt;/em&gt; no es oficial y por ello en el &lt;a href=&#34;https://foros.archlinux-es.org/&#34;&gt;foro de Arch Linux en español&lt;/a&gt; o &lt;a href=&#34;https://bbs.archlinux.org/&#34;&gt;en inglés&lt;/a&gt; no podrán darte soporte aunque yo en los comentarios de este artículo te ayudaré si preguntas. Ten en cuenta que de momento solo lo he probado en &lt;a href=&#34;http://virtualbox.org/&#34;&gt;VirtualBox&lt;/a&gt; no en un sistema real y que este &lt;em&gt;script&lt;/em&gt; elimina toda la información del dispositivo de instalación. Si lo pruebas deja un comentario al final de artículo.&lt;/p&gt;

&lt;p&gt;Iniciado el instalador de la imagen ISO de Arch Linux, hay que descargar el &lt;em&gt;script&lt;/em&gt;, editar algunas variables de entorno y darle permisos de ejecución. Los comandos y variables a editar según el sistema a instalar son los siguientes:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/536d786ca788113b1b088957d001d294.js?file=alis-install.sh&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/536d786ca788113b1b088957d001d294.js?file=alis.conf&#34;&gt;&lt;/script&gt;

&lt;p&gt;El código del instalador no es muy complicado y mucho más sencillo que el &lt;a href=&#34;https://github.com/deadhead420/arch-linux-anywhere/blob/master/arch-installer.sh&#34;&gt;código de arch-anywhere&lt;/a&gt; al no estar mezclado con los mensajes interactivos que hacen preguntas y esperan respuestas. Los comandos que he recopilado de la receta son los que ejecutaríamos uno detrás de otro con únicamente el medio de instalación de Arch Linux. La función &lt;em&gt;main&lt;/em&gt; contiene los pasos en los que consiste la instalación, desde el paticionado y cifrado del disco hasta el reinicio una vez completada la instalación, el resto de las funciones los comandos de ese paso de la instalación.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/536d786ca788113b1b088957d001d294.js?file=alis.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Estas son algunas capturas de pantalla con diferentes entornos de escritorio que he probado con VirtualBox.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/204/archlinux-gnome.jpg&#34; title=&#34;GNOME&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/204/archlinux-gnome-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/204/archlinux-kde.jpg&#34; title=&#34;KDE&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/204/archlinux-kde-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Entornos de escritorio GNOME y KDE&lt;/figcaption&gt;
&lt;/figure&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/204/archlinux-xfce.jpg&#34; title=&#34;XFCE&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/204/archlinux-xfce-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/204/archlinux-cinnamon.jpg&#34; title=&#34;Cinnamon&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/204/archlinux-cinnamon-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Entornos de escritorio Xfce y Cinnamon&lt;/figcaption&gt;
&lt;/figure&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/204/archlinux-lxde.jpg&#34; title=&#34;LXDE&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/204/archlinux-lxde-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/204/archlinux-mate.jpg&#34; title=&#34;Mate&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/204/archlinux-mate-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Entornos de escritorio LXDE y Mate&lt;/figcaption&gt;
&lt;/figure&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/204/archlinux-root-password.png&#34; title=&#34;Solicitud de contraseña para descifrar partición root&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/204/archlinux-root-password-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Solicitud de contraseña para descifrar partición root&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/alis/tree/master/&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;.
&lt;/p&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/01/articulo-3-de-yo-apoyo-al-software-libre/</id>
        <title>Artículo #3 de Yo apoyo al software libre</title>        
        <updated>2017-01-06T22:00:00+01:00</updated>
        <published>2017-01-06T12:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/01/articulo-3-de-yo-apoyo-al-software-libre/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;p&gt;Los últimos meses me han sido bastante buenos en cuanto a los ingresos por la publicidad &lt;a href=&#34;https://www.google.com/adsense/&#34;&gt;AdSense&lt;/a&gt; y los enlaces de afiliado de &lt;a href=&#34;http://amzn.to/2flFhHA&#34;&gt;Amazon&lt;/a&gt; que incluyo en el blog con el objetivo de monetizarlo un poco. Desde luego esos pequeños ingresos no compensan la enorme cantidad de tiempo que requiere escribir un artículo, y no es solo escribirlo sino también editarlo, crear el ejemplo de código si el artículo es sobre programación, sacar las capturas de pantalla e investigar la materia de la que habla el artículo. Otra forma de monetizar el blog que estoy evaluando es escribir artículos patrocinados con la plataforma &lt;a href=&#34;https://www.publisuites.com/&#34;&gt;Publisuites&lt;/a&gt;, sin embargo, aún no he recibido ninguna propuesta ya que quizá haya puesto el precio demasiado alto pero escribir un artículo cuesta unas horas de trabajo.&lt;/p&gt;

&lt;p&gt;Por la publicidad de AdSense he notado un significativo aumento de ingresos duante los últimos meses del 2016 superando los 20€ mensuales cuando hasta no hace mucho la cifra estaba en unos 10€. En proporción al aumento de número de visitas que ha experimentado este blog en 2016 como comento en el artículo &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/12/hemeroteca-10/&#34;&gt;Heroteca #10&lt;/a&gt; donde hago un repaso de ese año. Esto ha hecho que en poco menos de cinco meses Google me haya hecho otra transferencia por importe de unos 75€. Por los enlaces de afiliado también he recibido otro ingreso por parte de Amazon de unos 35€.&lt;/p&gt;

&lt;p&gt;Como me he propuesto en anteriores veces que he recibido algún ingreso por el blog he hecho unas pequeñas donaciones a algunos proyectos de software libre. En anteriores ocasiones han sido a la &lt;a href=&#34;https://fsfe.org/index.en.html&#34;&gt;FSFE&lt;/a&gt;, &lt;a href=&#34;https://www.mozilla.org/&#34;&gt;Mozilla&lt;/a&gt;, &lt;a href=&#34;https://es.wikipedia.org/wiki/Wikipedia:Portada&#34;&gt;Wikipedia&lt;/a&gt; y ahora los proyectos que he elegido a los que hacer una donación han sido &lt;a href=&#34;https://elementary.io/es/&#34;&gt;Elementary OS&lt;/a&gt;, &lt;a href=&#34;http://www.libreoffice.org/&#34;&gt;LibreOffice&lt;/a&gt; (The Document Foundation) y &lt;a href=&#34;http://archlinuxarm.org/&#34;&gt;Arch Linux ARM&lt;/a&gt;. Aunque muchos usuarios hagan donaciones la viabilidad de estos proyectos no deberían depender de ellas ya que seguro que no cubren los gastos en los que incurran estos proyectos. Algunos de estos gastos son los servidores para prestar el servicio y páginas web, conferencias a las que asisten sus desarroladores y los viajes de estos, seguro que hay unos cuantos más.&lt;/p&gt;

&lt;h3 id=&#34;elementary-os&#34;&gt;Elementary OS&lt;/h3&gt;

&lt;p&gt;Aunque la distribución &lt;a href=&#34;http://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;/&lt;a href=&#34;http://www.linux.com/&#34;&gt;Linux&lt;/a&gt; que uso es &lt;a href=&#34;https://www.archlinux.org/&#34;&gt;Arch Linux&lt;/a&gt; he elegido donar a Elementary OS porque me parece una distribución interesante por ofrecer algo distinto a las otras muchas distribuciones que existen y no tienen algo diferenciador. Elementary tiene un diseño, estética y usabilidad de interfaz muy cuidada. Arch Linux es la distribución &lt;em&gt;rolling release&lt;/em&gt; que se mantiene siempre actualizada y con una gran &lt;a href=&#34;https://wiki.archlinux.org/&#34;&gt;documentación en forma de wiki&lt;/a&gt;. Las versiones LTS de &lt;a href=&#34;http://www.ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt; ofrecen soporte durante un periodo largo de tiempo pero cuya interfaz Unity no convence a muchos. &lt;a href=&#34;https://www.debian.org/&#34;&gt;Debian&lt;/a&gt;, &lt;a href=&#34;http://www.opensuse.org/es/&#34;&gt;openSUSE&lt;/a&gt; y &lt;a href=&#34;https://fedoraproject.org/&#34;&gt;Fedora&lt;/a&gt; son otras de las distribuciones grandes y junto con &lt;a href=&#34;http://www.linuxmint.com/&#34;&gt;Linux Mint&lt;/a&gt; también a tener en cuenta para los usuarios que quieren dar el cambio a Linux. Pero para un recién llegado a GNU/Linux o que simplemente quiere un sistema para trabajar en mi opinión Elementary OS o Linux Mint o una versión LTS de Ubuntu si nos convence su interfaz Unity sea lo recomendable por lo que usar en un primer momento, desde luego no Arch Linux y posiblemente tampoco Debian, openSUSE o Fedora. Espero que Elementary siga desarrollandose y no sea una de las muchas distribuciones que al cabo de unos años es abandonada por falta de interés de sus desarrolladores, falta de éxito o ingresos.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/elementary.png&#34; alt=&#34;Elementary OS&#34; title=&#34;Elementary OS&#34;/&gt;
&lt;/div&gt;

&lt;h3 id=&#34;libre-office&#34;&gt;Libre Office&lt;/h3&gt;

&lt;p&gt;LibreOffice es el proyecto ofimático que se postula como una de las mejores alternativas ofimáticas a &lt;a href=&#34;https://products.office.com/es-es/home&#34;&gt;Microsoft Office&lt;/a&gt;. Su interfaz, en mi opinión, está saturada de opciones en menús donde es difícil encontrar la funcionalidad que uno necesita siendo parecida a versiones antiguas de Microsoft Office. Sin embargo, en GNU/Linux no hay muchas alternativas ofimáticas tan completas de software libre. Otra alternativa es &lt;a href=&#34;https://www.wps.com/&#34;&gt;WPS Office&lt;/a&gt; con una interfaz mas cuidada y parecida a Microsoft Office con su interfaz de caja de herramientas &lt;em&gt;ribbon&lt;/em&gt; donde es más fácil encontrar las opciones en vez de interminables menús y diálogos de configuración. En LibreOffice me parece tan importante añadir nuevas funcionalidades como mejorar las existentes pero me gustaría que la interfaz fuese mejor, más parecida a la de Microsoft Office si fuese necesario. Parece que están dando los &lt;a href=&#34;https://es.blog.documentfoundation.org/evolucionando-mas-alla-de-las-restricciones-de-las-barras-de-herramientas/&#34;&gt;primeros pasos en LibreOffice para evolucionar la barra de herramientas&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/libreoffice.png&#34; alt=&#34;LibreOffice&#34; title=&#34;LibreOffice&#34;/&gt;
&lt;/div&gt;

&lt;h3 id=&#34;arch-linux-arm&#34;&gt;Arch Linux ARM&lt;/h3&gt;

&lt;p&gt;El tercer proyecto al que he donado ha sido a Arch Linux ARM ya que lo uso en la &lt;a href=&#34;http://www.raspberrypi.org/&#34;&gt;Raspberry Pi&lt;/a&gt; con la que hago la descarga de imágenes de alguna distribución que quiera probar, series, películas y libros mediante P2P. Solo tiene 256MiB de memoria y una CPU de un único núcleo pero son más que suficientes para en una noche descargar cualquier contenido que necesite.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/archlinux.png&#34; alt=&#34;Arch Linux&#34; title=&#34;Arch Linux&#34;/&gt;
&lt;/div&gt;

&lt;h3 id=&#34;comprobantes-de-las-donaciones&#34;&gt;Comprobantes de las donaciones&lt;/h3&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/203/donacion-elementary.png&#34; title=&#34;Donación Elementary OS&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/203/donacion-elementary-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Donación Elementary OS&lt;/figcaption&gt;
&lt;/figure&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/203/donacion-thedocumentfoundation.png&#34; title=&#34;Donación The Document Foundation&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/203/donacion-thedocumentfoundation-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Donación The Document Foundation&lt;/figcaption&gt;
&lt;/figure&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/203/donacion-archlinuxarm.png&#34; title=&#34;Donación Arch Linux ARM&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/203/donacion-archlinuxarm-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Donación Arch Linux ARM&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Otros proyectos que me planteo hacer una donación en el futuro son a algún proyecto relacionado con las &lt;a href=&#34;https://es.wikipedia.org/wiki/Berkeley_Software_Distribution&#34;&gt;distribuciones BSD&lt;/a&gt;, &lt;a href=&#34;http://gnome.org/&#34;&gt;GNOME&lt;/a&gt; o el &lt;a href=&#34;http://www.videolan.org/vlc/&#34;&gt;reproductor VLC&lt;/a&gt;. Desde luego no es mucho ni todo lo que recibo como ingresos por la publicidad, sin embargo, espero que ayude a que estos grandes proyectos de software libre sigan mejorando y yo como usuario junto con otros muchos de algunos de ellos disfrutándolos en la totalidad de ellos sin coste alguno en licencias de software.&lt;/p&gt;

&lt;p&gt;Hay muchas formas de colaborar con el software libre, donar dinero solo es una de ellas.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.gnu.org/&#34;&gt;Yo apoyo al software libre&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Estas son las donaciones que he realizado hasta el momento:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;b&gt;FSFE&lt;/b&gt; 40€&lt;/li&gt;
    &lt;li&gt;&lt;b&gt;Wikipedia&lt;/b&gt; 10€, &lt;b&gt;Firefox&lt;/b&gt; 10€&lt;/li&gt;
    &lt;li&gt;&lt;b&gt;Elementary OS&lt;/b&gt; 10€, &lt;b&gt;Libre Office&lt;/b&gt; 10€, &lt;b&gt;Arch Linux ARM&lt;/b&gt; 10 €&lt;/li&gt;
&lt;/ul&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/12/hemeroteca-10/</id>
        <title>Hemeroteca #10</title>        
        <updated>2016-12-24T12:00:00+01:00</updated>
        <published>2016-12-24T12:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/12/hemeroteca-10/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Echando un vistazo a estos seis últimos meses han sido buenos, en número de artículos que he escrito y publicado como en el aumento de número de páginas vistas mensuales con respecto a inicios de 2016 y en similar proporción los ingresos mensuales por publicidad AdSense. De esta forma el esfuerzo en tiempo que supone escribir los artículos me es recompensado de alguna forma.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;p&gt;Otros seis meses acumulados de vida, ya son poco menos de 7 años desde que tengo un blog y 3 desde que empecé a escribir en Blog Bitix. A pesar de la gran cantidad de tiempo que me requiere escribir y publicar artículos, tanto como entre 3 y 10 horas de dedicación por artículo, es una de las cosas que más me alegro de haber empezado en el año 2010. Lo que aprendo con cada artículo de las cosas que me motivan y compartirlo por si a alguien más le resultan interesantes me resulta muy satisfactorio.&lt;/p&gt;

&lt;p&gt;En estos seis meses en vez de publicar un solo artículo por semana he estado publicando dos artículos y algunas semanas incluso 3. El número de páginas vistas mensuales han aumentado hasta el punto de multiplicar por cuatro las páginas vistas que tenía a inicios de año siendo ahora unas 26K/mes. Y no son muchas, otros blogs personales tienen muchas más, dos o tres veces más. La mala noticia es que un porcentaje importante de las visitas provienen de unos pocos artículos bien posicionados en Google. En cualquier caso en una proporción similar que han aumentado las páginas vistas han aumentado los ingresos por publicidad de &lt;a href=&#34;https://www.google.com/adsense/&#34;&gt;Google AdSense&lt;/a&gt; que incluyo en el blog, e incluso los últimos meses los ingresos han sido de alrededor de 20€ y 25€, con lo que podré hacer más &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/donacion/&#34;&gt;donaciones al software libre&lt;/a&gt; y más frecuentemente. En definitiva este ha sido un buen año en este aspecto, si el siguiente fuera similar sería estupendo.&lt;/p&gt;

&lt;p&gt;A pesar de la gran mejora en número de visitas mensuales durante este año cuesta un horror hacer crecer al blog y escribir y publicar al ritmo que lo he estado haciendo durante estos últimos meses. Hay que tener un poco de intuición y algo de suerte para acertar con artículos que se posicionen bien en los buscadores si lo que queremos es aumentar las visitas.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/202/analytics-2016.png&#34; title=&#34;Analytics 2016 de Blog Bitix&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/202/analytics-2016-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/202/adsense-2016.png&#34; title=&#34;AdSense 2016 de Blog Bitix&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/202/adsense-2016-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Evolución visitas e ingresos de AdSense en 2016&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Una de las cosas que me estoy arrepintiendo ahora es no de tener dominio propio, no lo hice porque con &lt;a href=&#34;http://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; me ofrecía el hospedaje gratis y sin complicaciones. Ahora me plantearía hospedar el blog en una máquina de &lt;a href=&#34;https://www.linode.com/&#34;&gt;Linode&lt;/a&gt;, &lt;a href=&#34;https://www.digitalocean.com/&#34;&gt;Digital Ocean&lt;/a&gt; o en la reciente competencia de estos con &lt;a href=&#34;https://amazonlightsail.com/&#34;&gt;Amazon Lightsail&lt;/a&gt;. Mas que por necesidad por practicar con &lt;a href=&#34;http://www.ansible.com&#34;&gt;Ansible&lt;/a&gt; e implementar en el blog HTTPS/2 o usar &lt;a href=&#34;https://letsencrypt.org/&#34;&gt;Let&amp;rsquo;s encrypt&lt;/a&gt; asi como aprender sobre esos servicios en la nube. La migración es posible pero posiblemente no perfecta.&lt;/p&gt;

&lt;p&gt;Durante este periodo de tiempo he realizado algunos cambios a nivel de diseño en el blog como el buscador de contenido con &lt;a href=&#34;https://duckduckgo.com/&#34;&gt;DuckDuckGo&lt;/a&gt;, he quitado del panel lateral los artículos recientes, he creado una nueva página por si alguna organización quisiera contactarme por publicidad e incluido un mensaje para aquellos que tengan un bloqueador de anuncios. Para tratar de monetizar algo más el blog también he estado considerando en inscribirme en páginas como &lt;a href=&#34;https://www.publisuites.com/&#34;&gt;Publisuites&lt;/a&gt; o &lt;a href=&#34;http://coobis.com/&#34;&gt;Coobis&lt;/a&gt; para escribir artículos patrocinados esporádicamente y siempre con artículos escritos por mi, con mi opinión y de la forma más honesta que pueda. Finalmente, me decidí por Publisuites pero aún no he recibido ninguna proposición de artículo patrocinado.&lt;/p&gt;

&lt;p&gt;Esta es la recapitulación de artículos que he escrito durante estos seis últimos meses organizados por temática empezando por unos pocos artículos más de la &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/web/&#34;&gt;serie web&lt;/a&gt;, algunos sobre &lt;a href=&#34;http://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;/&lt;a href=&#34;http://www.linux.com/&#34;&gt;Linux&lt;/a&gt; con varios artículos sobre juegos y otro sobre varias de las distribuciones más importantes y usadas, otros cuantos sobre programación relacionados con el lenguaje Java, por supuesto y de los que más gratificantes me resultan aunque no sean muy visitados relacionados de alguna forma con &lt;a href=&#34;http://tapestry.apache.org&#34;&gt;Apache Tapestry&lt;/a&gt; o algunos de opinión como repaso a las motivaciones que me llevaron a elegir a &lt;a href=&#34;http://www.pepephone.com/&#34;&gt;Pepephone&lt;/a&gt; como proveedor de internet y otro de opinión sobre el rápido avance de la tecnología. En total han sido 47 artículos cuando en otros periodos de tiempo solo hubiese publicado unos 26.&lt;/p&gt;

&lt;p&gt;He añadido a la serie de artículos sobre desarrollo web varios interesantes que forman parte de lo esencial a conocer.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/como-optimizar-un-sitio-web-con-compresion-gzip-en-nginx-y-apache-httpd/&#34;&gt;Cómo optimizar un sitio web con compresión GZIP en Nginx y Apache HTTPD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/configurar-nginx-como-balanceador-de-carga/&#34;&gt;Configurar Nginx como balanceador de carga&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/como-crear-un-proxy-inverso-entre-el-servidor-web-nginx-y-un-servidor-de-aplicaciones-java/&#34;&gt;Cómo crear un proxy inverso entre el servidor web Nginx y un servidor de aplicaciones Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/las-cabeceras-de-cache-del-protocolo-http/&#34;&gt;Las cabeceras de cache del protocolo HTTP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/configurar-nginx-para-cachear-respuestas-del-servidor-de-aplicaciones/&#34;&gt;Configurar Nginx para cachear respuestas del servidor de aplicaciones&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/como-y-por-que-redirigir-trafico-web-del-dominio-raiz-al-subdominio-www/&#34;&gt;Cómo y por que redirigir tráfico web del dominio raíz al subdominio www (o viceversa)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La sección de artículos sobre GNU/Linux destaca la &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/juegos/&#34;&gt;serie sobre juegos&lt;/a&gt; en el sistema del pingüino. He empezado a usar por obligación en el trabajo macOS que me ha servido como excusa para escribir un par de artículos sobre el sistema operativo de Apple.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/comandos-basicos-de-gnu-linux/&#34;&gt;Comandos básicos de GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/guia-basica-del-interprete-de-comandos-bash/&#34;&gt;Guía básica del intérprete de comandos Bash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-ajedrez-en-gnu-linux-con-gnome/&#34;&gt;Jugar al ajedrez en GNU/Linux con GNOME&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/como-crear-vistas-previas-de-imagenes-con-imagemagick/&#34;&gt;Cómo crear vistas previas de imágenes con ImageMagick&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-clasico-de-estrategia-de-tablero-go-en-gnu-linux/&#34;&gt;Jugar al clásico de estrategia de tablero Go en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/&#34;&gt;Juegos incluidos en el entorno de escritorio GNOME&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/&#34;&gt;Jugar a videojuegos clásicos y míticos de arcade con Mame en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/descargar-paquetes-a-actualizar-sin-instalarlos-en-arch-linux/&#34;&gt;Descargar paquetes a actualizar sin instalarlos en Arch Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/&#34;&gt;22+ buenos juegos en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/&#34;&gt;Varios juegos de culto con ScummVM en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/como-configurar-una-impresora-hp-en-red-en-arch-linux/&#34;&gt;Cómo configurar una impresora HP en red en Arch Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/09/localizacion-de-un-comando-y-paquete-propietario-de-un-archivo-en-gnu-linux/&#34;&gt;Localización de un comando y paquete propietario de un archivo en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/&#34;&gt;Cómo instalar y probar macOS con VirtualBox en Windows o GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/elegir-una-distribucion-gnu-linux-segun-el-usuario-uso-o-equipo/&#34;&gt;Elegir una distribución GNU/Linux según el usuario, uso o equipo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/11/guardar-contrasenas-de-forma-segura-con-keepassx/&#34;&gt;Guardar contraseñas de forma segura con KeePassX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;He escrito otros cuantos artículos de programación en algunos casos relacionados de alguna forma con &lt;a href=&#34;http://tapestry.apache.org&#34;&gt;Apache Tapestry&lt;/a&gt;, Java y JavaScript.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/no-un-tag-jsp-o-un-tag-de-grails-no-es-equivalente-a-un-componente-de-tapestry/&#34;&gt;No, un tag JSP o un tag de Grails no es equivalente a un componente de Tapestry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/por-que-guardar-las-fechas-en-utc-en-la-base-de-datos/&#34;&gt;Por qué guardar las fechas en UTC en la base de datos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/09/ejemplo-de-api-rest-en-java-con-jax-rs-y-spring-boot/&#34;&gt;Ejemplo de API REST en Java con JAX-RS y Spring Boot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/09/monitorizar-con-eventos-de-google-analytics-una-pagina-web/&#34;&gt;Monitorizar con eventos de Google Analytics una página web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/&#34;&gt;Autenticación con OAuth y Keycloak en un servicio REST con JAX-RS y Spring Boot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/cliente-de-un-servicio-rest-autenticado-con-oauth2-en-java/&#34;&gt;Cliente de un servicio REST autenticado con OAuth en Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/generacion-de-codigo-en-tiempo-de-ejecucion-con-byte-buddy/&#34;&gt;Generación de código en tiempo de ejecución con Byte Buddy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/&#34;&gt;Integrar autenticación OAuth con Keycloak, Shiro, Apache Tapestry y Spring Boot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/componente-select-de-apache-tapestry-con-funcionalidades-adicionales-usando-bootstrap-select/&#34;&gt;Componente select de Apache Tapestry con funcionalidades adicionales usando bootstrap-select&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/componente-select-multiple-en-apache-tapestry/&#34;&gt;Componente select múltiple en Apache Tapestry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/anadir-botones-selectores-de-opciones-a-select-multiple-de-bootsrap-select/&#34;&gt;Añadir botones selectores de opciones a select múltiple de bootsrap-select&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/11/historico-de-datos-auditoria-y-diferencias-entre-objetos-con-javers-en-java/&#34;&gt;Histórico de datos, auditoría y diferencias entre objetos con Javers en Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/11/usar-una-imagen-de-fondo-aleatoria-al-cargar-una-pagina-web/&#34;&gt;Usar una imagen de fondo aleatoria al cargar una página web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/12/introduccion-al-javascript-de-ecmascript-6/&#34;&gt;Introducción al JavaScript de ECMAScript 6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/12/como-implementar-correctamente-y-por-que-los-metodos-equals-y-hashcode-de-los-objetos-java/&#34;&gt;Cómo implementar correctamente y por qué los métodos equals y hashCode de los objetos Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/12/transpiling-de-ecmascript-6-a-5-uglify-y-eslint-con-gulp/&#34;&gt;Transpiling de ECMAScript 6 a 5, Uglify y ESLint con Gulp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En la categoría de artículos de opinion junto con otros de teḿatica variada han sido los siguientes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/eligiendo-proveedor-de-internet-finalmente-pepephone/&#34;&gt;Eligiendo proveedor de internet, finalmente Pepephone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/sobre-los-infimos-impuestos-que-paga-apple/&#34;&gt;Sobre los ínfimos impuestos que paga Apple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/09/articulo-2-de-yo-apoyo-al-software-libre/&#34;&gt;Artículo #2 de Yo apoyo al software libre&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/09/gestionar-los-enlaces-de-una-bitacora-con-hugo/&#34;&gt;Gestionar los enlaces de una bitácora con Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/sobre-el-rapido-avance-de-la-tecnologia/&#34;&gt;Sobre el rápido avance de la tecnología&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/11/3-formas-sencillas-de-monetizar-un-blog/&#34;&gt;3 formas sencillas de monetizar un blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/11/mi-primer-mac-yo-usuario-de-gnu-linux/&#34;&gt;Mi primer Mac, yo usuario de GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/11/instalar-programas-con-homebrew-en-macos/&#34;&gt;Instalar programas con Homebrew en macOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/11/desempaquetado-bombillas-led-de-philips/&#34;&gt;Desempaquetado bombillas LED de PHILIPS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/12/la-fabrica-de-blog-bitix/&#34;&gt;La fábrica de Blog Bitix&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;¡Felices fiestas! ¡A por el 2017!&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/202/christmas-tux-2016.jpg&#34; title=&#34;¡Felices fiestas y buen 2017!&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/202/christmas-tux-2016-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;¡Felices fiestas y buen 2017!&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;



        </content>
        
            
                <category term="blog"/>
            
                <category term="blog-stack"/>
            
                <category term="hemeroteca"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="tapestry"/>
            
                <category term="gnu-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/12/la-fabrica-de-blog-bitix/</id>
        <title>La fábrica de Blog Bitix</title>        
        <updated>2016-12-17T23:30:00+01:00</updated>
        <published>2016-12-17T11:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/12/la-fabrica-de-blog-bitix/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Los artículos y log blogs personales no se escriben solos, cada artículo está fabricado artesanalmente letra a letra por alguna persona en algún lugar. Hace unos meses Victorhck inició una cadena de artículos que algunos blogueros han continuado donde compartían el lugar donde crean sus artículos.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;p&gt;A iniciativa de &lt;a href=&#34;https://victorhckinthefreeworld.com&#34;&gt;Victorhck en su blog&lt;/a&gt; se inició hace ya unos meses una cadena con un artículo para que los blogueros sobre software libre y GNU/Linux escribiesen un artículo para mostrar ese lugar donde se escriben, editan y publican los artículos y el lugar de trabajo en una aleación seguramente con diversión. Hace unos días ví en &lt;a href=&#34;https://twitter.com/&#34;&gt;Twitter&lt;/a&gt; que en &lt;a href=&#34;https://jvare.com&#34;&gt;Jvare Blog&lt;/a&gt; y unos días más tarde en &lt;a href=&#34;http://totaki.com/poesiabinaria/&#34;&gt;Poesía Binaria&lt;/a&gt; aparecían otros. Así que esta semana me he decidido a publicar el mío.&lt;/p&gt;

&lt;p&gt;Aunque en buena parte mi blog no es solo de software libre y GNU/Linux de vez en cuando escribo algún artículo sobre estos temas, tampoco es un blog de solo programación más bien es una mezcla de ambas cosas, algo no muy definido. Me pareció curioso conocer un poco el lugar de trabajo que hay detrás de cada blog.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/201/1.jpg&#34; title=&#34;Escritorio&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/201/1-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/201/2.jpg&#34; title=&#34;Escritorio&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/201/2-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;El lugar donde escribo los borradores de artículo, edito, publico los artículos y programo los ejemplos así como lee libros técnicos no es muy sofisticado. Aunque no solo se hace en esa mesa, muchas ideas me surgen en el trabajo o de vuelta a casa que voy recopilando y escribiendo sobre ellas cuando les llega su turno. A la derecha de la mesa tengo una ventana por la que dispongo de luz natural que siempre se agradece aunque la mayor parte las paso a las noches.&lt;/p&gt;

&lt;p&gt;En cuanto a lo que está en la mesa se compone básicamente de un portátil Sony VAIO del que publique su &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2012/12/desempaquetado-sony-vaio-e-14p.html&#34;&gt;desempaquetado en El blog de pico.dev&lt;/a&gt; siendo un procesador Intel Ivy Bridge 3210M, tarjeta gráfica integrada Intel HD 4000, con 8 GiB de memoria y un &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/03/desempaquetado-y-analisis-samsung-840-evo-ssd-250-gb/&#34;&gt;disco duro SSD Samsung 840 EVO de 250 GiB&lt;/a&gt; que le puse posteriormente sustituyendo un disco mecánico que ahora me sirve para hacer copias de seguridad. Aunque el portátil no genera mucho calor al no jugar a juegos lo tengo en una base refrigeradora Zalman que conservo de un portátil Dell anterior del que no quiero acordarme mucho por los pocos años que duró. Junto a ellos un ratón con cable nada especial y la alfombrilla que me regalaron &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2011/07/un-dia-en-la-euskal-encounter-19.html&#34;&gt;la única vez que fuí a la Euskal Encounter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;En un futuro si tuviese que cambiar de equipo probablemente elegiría un &lt;a href=&#34;https://slimbook.es/&#34;&gt;Slimbook One&lt;/a&gt; ya que aunque tengo portátil no lo muevo de sitio. Pero eso está lejos todavía, el equipo que tengo es más que suficiente para lo que necesito.&lt;/p&gt;

&lt;p&gt;La mesa y la silla son de &lt;a href=&#34;http://www.ofiprix.com/&#34;&gt;Ofiprix&lt;/a&gt;, la mesa aunque es bastante grande echo de menos que sea regulable en altura, gran parte está llena de cables, por una parte la regleta de 8 enchufes con protección de picos de tensiones, el &lt;em&gt;router&lt;/em&gt; WIFI del &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/eligiendo-proveedor-de-internet-finalmente-pepephone/&#34;&gt;proveedor de internet Pepephone&lt;/a&gt; que al ser ADSL solo me alcanza los 9 MiB de bajada y 1 MiB de subida pero que es más que suficiente para mis necesidades incluso para descargas de libros, series y películas mediante P2P vía torrent. No tengo ninguna estantería con libros técnicos ya que la mayoría los tengo en PDF que además no me ocupan lugar, no tengo ese querer coleccionar los libros en formato físico ya que los leo una vez bastante cómodamente en la pantalla del portátil donde además puedo probar cosas y consultar algo en internet al mismo tiempo, una vez leídos ya no les doy más uso salvo algún repaso. El único libro técnico físico que tengo es &lt;a href=&#34;http://amzn.to/2hQe8Nw&#34;&gt;Linux. Guia Para Administradores De Redes&lt;/a&gt; que compré cuando aún no tenía banda ancha.&lt;/p&gt;

&lt;p&gt;Por otro lado se ve una &lt;a href=&#34;http://www.raspberrypi.org/&#34;&gt;Raspberry Pi&lt;/a&gt; de los primeros modelos, la 1 y la versión B, con únicamente 256 MiB de memoria más que suficiente para realizar descargas a la máxima velocidad que permite mi conexión a internet, no hay nada que le eche que en una noche no sea capaz de descargar. Por supuesto, en mi caso usando la distribución &lt;a href=&#34;http://archlinuxarm.org/&#34;&gt;Arch Linux ARM&lt;/a&gt; en ella y con un disco externo de 120 GiB que &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/01/iniciar-la-raspberry-pi-desde-un-disco-o-memoria-usb/&#34;&gt;utilizo como disco duro desde el que arrancarla vía USB&lt;/a&gt; que es mucho más rápido que la tarjeta SD, seguro que tiene más de un lustro y estará más cerca de la década aún así aguanta y me presta gran utilidad.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/201/3.jpg&#34; title=&#34;Regleta enchufes y router ADSL&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/201/3-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/201/4.jpg&#34; title=&#34;Altavoces, Raspberry Pi, Tux y amigos de papel&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/201/4-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;También se ven ahí unos altavoces con &lt;em&gt;subwoofer&lt;/em&gt; que utilizo para escuchar mi propia música o alguna radio de &lt;a href=&#34;https://www.jamendo.com/&#34;&gt;Jamendo&lt;/a&gt;, los tengo arrinconados en una esquina para que ocupen muy poco espacio en la mesa sobre todo los cables. Junto a los altavoces tengo a &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/tux.pdf&#34;&gt;Tux hecho con papel&lt;/a&gt; al igual que un &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/arch-linux-cheat-cube.zip&#34;&gt;cubo cheatsheet&lt;/a&gt; y un dodecaedro con el &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/arch-linux-calendar-2012.zip&#34;&gt;calendario del año 2012&lt;/a&gt; que no he ido actualizando, muy &lt;em&gt;archeros&lt;/em&gt; ellos que decoran un poco la mesa. Y unos bidones de agua que a veces utilizo.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/201/tux.png&#34; title=&#34;Arch Linux calendar&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/201/tux-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/201/arch-linux-calendar-2012.png&#34; title=&#34;&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/201/arch-linux-calendar-2012-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/201/arch-linux-cheat-cube.png&#34; title=&#34;Arch Linux cheat cube&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/201/arch-linux-cheat-cube-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Tengo un par de discos duros externos USB que utilizo para hacer copias de seguridad &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/02/cifrar-unidad-usb-completamente-con-dm-crypt-y-luks-en-gnu-linux/&#34;&gt;cifrados con LUKS y dm-crypt&lt;/a&gt;, uno de ellos era el original de 500 GiB del portátil que sustituí por el SSD.&lt;/p&gt;

&lt;p&gt;Finalmente, en cuanto a software uso &lt;a href=&#34;https://www.archlinux.org/&#34;&gt;Arch Linux&lt;/a&gt; instalado en el 2014 que actualizo cada unas dos semanas, &lt;a href=&#34;http://gnome.org/&#34;&gt;GNOME&lt;/a&gt; muy poco retocado prácticamente solo el fondo del escritorio que cambio cada mes con una nueva imagen de &lt;a href=&#34;https://unsplash.com/&#34;&gt;Unsplash&lt;/a&gt;, &lt;a href=&#34;https://atom.io/&#34;&gt;Atom&lt;/a&gt; para editar los artículos y &lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; para generar el blog estático entre otra buena cantidad de software libre para tareas específicas.&lt;/p&gt;

&lt;p&gt;Y en este pequeño rincón de mi casa es donde paso una buena cantidad de horas y a pesar de ser muchas me sigue divirtiendo seguir aprendiendo y compartiendo. Los otros artículos de la cadena publicados por otros compañeros blogueros son los siguientes puestos en orden cronológico donde se comprueba que detrás de cada blog y artículo hay una persona que dedica parte de su tiempo a crear y compartir contenido.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://victorhckinthefreeworld.com/2016/06/10/el-sitio-donde-este-blog-se-crea-a-veces/&#34;&gt;Victorhck in the free world - El sitio donde este blog se crea (a veces)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ochobitshacenunbyte.com/2016/06/10/fabrica-suenos-2016/&#34;&gt;ochobitshacenunbyte - Mi fábrica de sueños 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://lasombradelhelicoptero.com/mi-escritorio-no-virtual/&#34;&gt;La sombra del helicóptero - Mi escritorio no virtual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elpinguinotolkiano.wordpress.com/2016/09/19/espacio-de-trabajo-primera-parte/&#34;&gt;El pingüino tolkiano - Espacio de trabajo, primera parte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jvare.com/2016/12/04/lugar-donde-se-hace-este-blog-tambien/&#34;&gt;Jvare blog - El lugar donde se hace este blog, también&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://totaki.com/poesiabinaria/2016/12/el-lugar-donde-se-hace-este-blog/&#34;&gt;Poesía Binaria - El lugar donde se hace este blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;



        </content>
        
            
                <category term="blog"/>
            
                <category term="blog-stack"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/12/transpiling-de-ecmascript-6-a-5-uglify-y-eslint-con-gulp/</id>
        <title>Transpiling de ECMAScript 6 a 5, Uglify y ESLint con Gulp</title>        
        <updated>2016-12-11T01:35:00+01:00</updated>
        <published>2016-12-09T12:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/12/transpiling-de-ecmascript-6-a-5-uglify-y-eslint-con-gulp/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/javascript.png&#34; class=&#34;right&#34; alt=&#34;JavaScript&#34; title=&#34;JavaScript&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Este artículo es una combinación de varias cosas que forman el actual estado del arte en JavaScript. &lt;a href=&#34;http://gulpjs.com/&#34;&gt;Gulp&lt;/a&gt; como ejecutor de tareas, traducción o &lt;em&gt;transpiling&lt;/em&gt; de ECMAScript 6 a ECMAcript 5 con &lt;a href=&#34;https://babeljs.io/&#34;&gt;Babel&lt;/a&gt;, &lt;a href=&#34;https://www.npmjs.com/package/uglify-js&#34;&gt;Uglify&lt;/a&gt; como minificador y ofuscador de código y &lt;a href=&#34;https://eslint.org/&#34;&gt;ESLint&lt;/a&gt; como verificador del código.&lt;/p&gt;

&lt;p&gt;Dos de los navegadores web más importantes como &lt;a href=&#34;https://www.google.es/chrome/browser/desktop/&#34;&gt;Chrome&lt;/a&gt; y &lt;a href=&#34;https://www.mozilla.org/es-ES/firefox/new/&#34;&gt;Firefox&lt;/a&gt; ya soportan gran parte de la especificación de ECMAScript 6 que añade nuevas funcionalidades al lenguaje JavaScript que comento en &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/12/introduccion-al-javascript-de-ecmascript-6/&#34;&gt;Introducción al JavaScript de ECMAScript 6&lt;/a&gt;. Sin embargo, hasta que prácticamente toda la totalidad de dispositivos soporten ECMAScript 6, formada por la diversidad actual de dispositivos en las que se incluyen los dispositivos móviles es necesario traducir el código JavaScript a la especificación ECMAScript 5. Haciendo esta traducción podemos usar ES6 y al mismo tiempo soportar todos los dispositivos. Hacer &lt;em&gt;transpiling&lt;/em&gt; es necesario si el código será accedido desde internet de forma pública para cualquiera y queremos usar las nuevas características de ECMAScript 6. Si se tratase de una aplicación en un entorno controlado de uso interno en el que se usasen los navegadores que soporten ES6 el &lt;em&gt;transpiling&lt;/em&gt; no sería imprescindible.&lt;/p&gt;

&lt;p&gt;El tamaño de una página afecta al tiempo de carga de la misma, dada las velocidades de incluso los dispositivos móviles la velocidad ya no es tan importante como cuando el ancho de banda era significativamente menor y ahora importa más la latencia que &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/02/introduccion-al-protocolo-http-2/&#34;&gt;el protocolo HTTP/2&lt;/a&gt; trata de mejorar. En cualquier caso tanto comprimir con gzip el contenido devuelto por el servidor como minificar se consigue la mayor reducción en el tamaño de una página.&lt;/p&gt;

&lt;p&gt;Minificar el código y ofuscarlo hace que depurar sea más complicado al no tener el código fuente original. Para que los depuradores tengan la información de los nombres originales al minificar se pueden generar archivos &lt;em&gt;.map&lt;/em&gt; que los contengan y que los depuradores obtienen y usan cuando es necesario.&lt;/p&gt;

&lt;p&gt;ESLint es un verificador estático de código que nos informará de aquellas reglas que se no se respetan según las normas de estilos que definamos. En ESLint hay cantidad de &lt;a href=&#34;https://eslint.org/docs/rules/&#34;&gt;reglas&lt;/a&gt; que podemos aplicar al código y personalizar según nuestras preferencias, por ejemplo, requerir que las cadenas de texto se usen mediante comillas simples o que las llaves de bloques de código estén en la misma linea que la expresión &lt;em&gt;if&lt;/em&gt;, &lt;em&gt;else&lt;/em&gt;, &lt;em&gt;while&lt;/em&gt;, etc.&lt;/p&gt;

&lt;p&gt;Gulp define las tareas de un proyecto en un archivo de nombre &lt;em&gt;gulpfile.js&lt;/em&gt; que usando &lt;em&gt;gulp-balbel&lt;/em&gt;, &lt;em&gt;eslint&lt;/em&gt;, &lt;em&gt;gulp-uglify&lt;/em&gt; y &lt;em&gt;gulp-sourcemaps&lt;/em&gt; obtenemos todas las funcionalidades anteriores. Con Gulp los archivos son transformados en varios pasos y finalmente enviados a un directorio destino del sistema de archivos.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/0cf6306cf3a7770953946e94618578b8.js?file=gulpfile.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Para usar Gulp deberemos tener instalado &lt;a href=&#34;https://www.npmjs.com/&#34;&gt;npm&lt;/a&gt; que en Arch Linux sería instalar su paquete:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/0cf6306cf3a7770953946e94618578b8.js?file=npm.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Instalar Gulp a nivel global en el sistema:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/0cf6306cf3a7770953946e94618578b8.js?file=gulp.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Y finalmente instalar en el proyecto las dependencias definidas en el archivo &lt;em&gt;package.json&lt;/em&gt;:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/0cf6306cf3a7770953946e94618578b8.js?file=npm-install.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;El archivo JavaScript original con ECMAScript 6 es el siguiente.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/0cf6306cf3a7770953946e94618578b8.js?file=main.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Transformado a ECMAScript 5 queda lo siguiente.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/0cf6306cf3a7770953946e94618578b8.js?file=main-babel.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Estos son los archivos de configuración para ESLint donde indicaremos las reglas que queremos aplicar al código JavaScript y la configuración para Babel donde indicamos a que versión de JavaScript haremos la transformación.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/0cf6306cf3a7770953946e94618578b8.js?file=.eslintrc.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/0cf6306cf3a7770953946e94618578b8.js?file=.babelrc&#34;&gt;&lt;/script&gt;

&lt;p&gt;Transformado con Uglify queda algo ilegible pero con el archivo &lt;em&gt;.map&lt;/em&gt; podremos depurar en el navegador mostrándose los nombres de las variables originales.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/0cf6306cf3a7770953946e94618578b8.js?file=main-uglify.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/0cf6306cf3a7770953946e94618578b8.js?file=main.js.map&#34;&gt;&lt;/script&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/ECMAScript6&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;npm install &amp;amp;&amp;amp; gulp &amp;amp;&amp;amp; node ./build/dist/main.js&lt;/code&gt;.
&lt;/p&gt;

&lt;p&gt;El resultado son los siguientes mensajes en la terminal tanto para la ejecución del archivo ECMAScript 6 original con &lt;code&gt;node src/main/js/main.js&lt;/code&gt; como para el &lt;em&gt;transpilado&lt;/em&gt; con &lt;code&gt;node ./build/dist/main.js&lt;/code&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/0cf6306cf3a7770953946e94618578b8.js?file=System.out&#34;&gt;&lt;/script&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="javascript"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/12/como-implementar-correctamente-y-por-que-los-metodos-equals-y-hashcode-de-los-objetos-java/</id>
        <title>Cómo implementar correctamente y por qué los métodos equals y hashCode de los objetos Java</title>        
        <updated>2016-12-07T14:00:00+01:00</updated>
        <published>2016-12-07T11:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/12/como-implementar-correctamente-y-por-que-los-metodos-equals-y-hashcode-de-los-objetos-java/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Los métodos &lt;em&gt;equals&lt;/em&gt; y &lt;em&gt;hashCode&lt;/em&gt; son esenciales en las colecciones de objetos. Para su correcta implementación es necesario conocer unas cuantas propiedades que han de cumplir estos métodos. Pueden parecer sencillos pero no lo son tanto y una mala implementación posiblemente produzca algún tipo de error o comportamiento anómalo indeseado. En el siguiente artículo comento varias formas de implementarlos de forma sencilla y correcta.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/java.png&#34; class=&#34;right&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;En Java los métodos &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-&#34;&gt;equals&lt;/a&gt; y &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--&#34;&gt;hashCode&lt;/a&gt; están definidos en la raíz de la jerarquía de clases, esto es en la clase &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html&#34;&gt;Object&lt;/a&gt;, lo que significa que todas las instancias de objetos los poseen. Estos métodos son especialmente importantes ya que afectan al correcto funcionamiento de las colecciones como &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html&#34;&gt;Collection&lt;/a&gt;, &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/List.html&#34;&gt;List&lt;/a&gt;, &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/Set.html&#34;&gt;Set&lt;/a&gt; y &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/Map.html&#34;&gt;Map&lt;/a&gt;, colecciones, listas, conjuntos y mapas que es difícil que cualquier programa no use alguna implementación de ellas.&lt;/p&gt;

&lt;p&gt;El método &lt;em&gt;equals&lt;/em&gt; es usado en las colecciones de tipo &lt;em&gt;List&lt;/em&gt;, &lt;em&gt;Set&lt;/em&gt;, y también &lt;em&gt;Map&lt;/em&gt; para determinar si un objeto ya está incluida en la colección, el método &lt;em&gt;hashCode&lt;/em&gt; es usado en los &lt;em&gt;Map&lt;/em&gt; para encontrar el objeto asociado a la clave. Dado que las colecciones son ampliamente usadas en cualquier programa la correcta implementación implementación de los métodos &lt;em&gt;equals&lt;/em&gt; y &lt;em&gt;hashCode&lt;/em&gt; es fundamental ya que de lo contrario descubriremos errores poco agradables.&lt;/p&gt;

&lt;p&gt;Una de las cosas que tenemos que tener cuenta es que siempre que sobreescribamos el método &lt;em&gt;equals&lt;/em&gt; también debemos sobreescribir el método &lt;em&gt;hashCode&lt;/em&gt;. Según el &lt;a href=&#34;http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html&#34;&gt;contrato definido en la clase Object&lt;/a&gt; deberemos saber que:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Durante la ejecución del programa el método &lt;em&gt;hashCode&lt;/em&gt; debe retornar el mismo valor siempre que no se modifique la información usada en el método &lt;em&gt;equals&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Si dos objetos son iguales según sus métodos &lt;em&gt;equals&lt;/em&gt; entonces el valor devuelto por &lt;em&gt;hashCode&lt;/em&gt; en cada uno de los dos objetos debe devolver el mismo valor.&lt;/li&gt;
&lt;li&gt;Si dos objetos son distintos según sus métodos &lt;em&gt;equals&lt;/em&gt; el valor devuelto no ha de ser necesariamente distinto aunque se recomienda para mejorar el rendimiento de las colecciones &lt;em&gt;Map&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;cómo-implementar-el-método-equals&#34;&gt;Cómo implementar el método &lt;em&gt;equals&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Según la &lt;a href=&#34;http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-&#34;&gt;especificación del método equals&lt;/a&gt; definido en la clase &lt;em&gt;Object&lt;/em&gt; debe tener las siguientes propiedades:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Es reflexiva: para cualquier referencia no nula de x, &lt;code&gt;x.equals(x)&lt;/code&gt; debe retornar &lt;em&gt;true&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Es simétrica: para cualquier referencia no nula de x e y, &lt;code&gt;x.equals(y)&lt;/code&gt; debe retornar &lt;em&gt;true&lt;/em&gt; si y solo si &lt;code&gt;y.equals(x)&lt;/code&gt; retorna &lt;em&gt;true&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Es transitiva: para cualquier referencia no nula de x, y y z, si &lt;code&gt;x.equals(y)&lt;/code&gt; debe retorna &lt;em&gt;true&lt;/em&gt; y &lt;code&gt;y.equals(z)&lt;/code&gt; retorna &lt;em&gt;true&lt;/em&gt; entonces &lt;code&gt;x.equals(z)&lt;/code&gt; debe retornar &lt;em&gt;true&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Es consistente: para cualquier referencia no nula de x e y, múltiples invocaciones de &lt;code&gt;x.equals(y)&lt;/code&gt; consistentemente debe retornar &lt;em&gt;true&lt;/em&gt; o &lt;em&gt;false&lt;/em&gt;, si no se ha modificado la información utilizada en la comparación.&lt;/li&gt;
&lt;li&gt;Para para cualquier referencia no nula de x, &lt;code&gt;x.equals(null)&lt;/code&gt; debe retornar &lt;em&gt;false&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La implementación del método &lt;em&gt;equals&lt;/em&gt; de la clase &lt;em&gt;Object&lt;/em&gt; usa la equivalencia más restrictiva posible, esto es, para cualquier referencia no nula de &lt;em&gt;x&lt;/em&gt; e &lt;em&gt;y&lt;/em&gt; este método retorna &lt;em&gt;true&lt;/em&gt; si y solo si son el mismo objeto (&lt;em&gt;x == y&lt;/em&gt; tienen la misma referencia).&lt;/p&gt;

&lt;p&gt;Según estas reglas una implementación del método &lt;em&gt;equals&lt;/em&gt; tiene la siguiente forma:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/906be34ee509940d9025c689fa50bb20.js?file=PhoneNumber-equals.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;Usando la clase &lt;a href=&#34;https://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/builder/EqualsBuilder.html&#34;&gt;EqualsBuilder&lt;/a&gt; de la librería &lt;a href=&#34;https://commons.apache.org/proper/commons-lang/&#34;&gt;commons-lang&lt;/a&gt; la implementación es aparentemente similar pero en el caso de necesitar hacer comparaciones con datos de tipo &lt;em&gt;float&lt;/em&gt;, &lt;em&gt;double&lt;/em&gt;, &lt;em&gt;arrays&lt;/em&gt; u objetos hace la implementación un poco más sencilla. En los &lt;em&gt;float&lt;/em&gt; y &lt;em&gt;double&lt;/em&gt; para hacer la comparación deberíamos usar los métodos &lt;a href=&#34;http://docs.oracle.com/javase/8/docs/api/java/lang/Float.html#compare-float-float-&#34;&gt;Float.compare&lt;/a&gt; y &lt;a href=&#34;http://docs.oracle.com/javase/8/docs/api/java/lang/Double.html#compare-double-double-&#34;&gt;Double.commpare&lt;/a&gt; y en los objetos deberemos tener en cuenta si la referencia es posible que se a nula para evitar la excepción &lt;a href=&#34;http://docs.oracle.com/javase/8/docs/api/java/lang/NullPointerException.html&#34;&gt;NullPinterException&lt;/a&gt; cosas que la clase &lt;em&gt;EqualsBuilder&lt;/em&gt; ya tiene en cuenta.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/906be34ee509940d9025c689fa50bb20.js?file=PhoneNumber-equals-commons-lang.java&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;como-implementar-el-método-hashcode&#34;&gt;Como implementar el método &lt;em&gt;hashCode&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;La implementación del &lt;a href=&#34;http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--&#34;&gt;método hashCode&lt;/a&gt; se debe realizar según los siguientes pasos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Almacenar un valor constante distinto de 0 en una variable int, por ejemplo 17.&lt;/li&gt;
&lt;li&gt;Por cada campo usado en el método &lt;em&gt;equals&lt;/em&gt; se debe obtener un &lt;em&gt;hash code&lt;/em&gt; (int) realizando:

&lt;ul&gt;
&lt;li&gt;Si el campo es un &lt;em&gt;boolean&lt;/em&gt; se debe calcular &lt;code&gt;(f ? 1 : 0)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Si el campo es un &lt;em&gt;byte&lt;/em&gt;, &lt;em&gt;char&lt;/em&gt;, &lt;em&gt;short&lt;/em&gt; o &lt;em&gt;int&lt;/em&gt; se debe calcular &lt;code&gt;(int) f&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Si el campo es un &lt;em&gt;long&lt;/em&gt; se debe calcular &lt;code&gt;(int) (f ^ (f &amp;gt;&amp;gt;&amp;gt; 32))&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Si el campo es un &lt;em&gt;float&lt;/em&gt; se debe calcular &lt;code&gt;Float.floatToIntBits(f)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Si el campo es un &lt;em&gt;double&lt;/em&gt; se debe calcular &lt;code&gt;Double.doubleToLongBits(f)&lt;/code&gt; y calcular el &lt;em&gt;hash&lt;/em&gt; del &lt;em&gt;long&lt;/em&gt; obtenido en el paso para los tipos &lt;em&gt;long&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Si el campo es una referencia a un objeto y el método &lt;em&gt;equals&lt;/em&gt; de esta clase compara recursivamente invocando el método &lt;em&gt;equals&lt;/em&gt; del campo, invocar su método &lt;em&gt;hashCode&lt;/em&gt;. si el valor de campo es nulo se debe retornar una constante que tradicionalmente es 0.&lt;/li&gt;
&lt;li&gt;Si el campo es un &lt;em&gt;array&lt;/em&gt; se debe tratar individualmente cada elemento aplicando estas reglas a cada elemento. Si cada elemento del array es significativo se puede usar &lt;a href=&#34;http://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html#hashCode-java.lang.Object:A-&#34;&gt;Arrays.hashCode&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Combinar los &lt;em&gt;hash code&lt;/em&gt; obtenidos de la siguiente forma, &lt;code&gt;result = 31 * result + c&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/906be34ee509940d9025c689fa50bb20.js?file=PhoneNumber-hashcode.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;Implementar este método en cada clase de una aplicación es tedioso, repetitivo y propenso a errores, para hacer más sencilla su implementación existe el método &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/Objects.html#hash-java.lang.Object...-&#34;&gt;Objects.hash&lt;/a&gt; desde la versión 7 de Java. Si usamos una versión anterior a Java 7 disponemos de la clase &lt;a href=&#34;https://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/builder/HashCodeBuilder.html&#34;&gt;HashCodeBuilder&lt;/a&gt; en la librería &lt;em&gt;commons-lang&lt;/em&gt;. La misma implementación anterior quedaría.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/906be34ee509940d9025c689fa50bb20.js?file=PhoneNumber-hashcode-java.java&#34;&gt;&lt;/script&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/906be34ee509940d9025c689fa50bb20.js?file=PhoneNumber-hashcode-commons-lang.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;En el libro &lt;a href=&#34;http://amzn.to/2g9N1bi&#34;&gt;Effective Java&lt;/a&gt; se explican con un poco más detalle estas dos cosas y muchas otras otras sobre Java que son muy interesantes conocer, el libro es una buena y recomendada lectura para todo programador Java que está entre los &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/12/8-plus-libros-para-mejorar-como-programadores/&#34;&gt;8+ libros para mejorar como programadores&lt;/a&gt; que recomiendo.&lt;/p&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0321356683&amp;linkId=9145a271e7886cea526d9fcbe9edb707&amp;internal=1&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javaworld.com/article/2074996/hashcode-and-equals-method-in-java-object---a-pragmatic-concept.html&#34;&gt;HashCode and Equals method in Java object&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/12/introduccion-al-javascript-de-ecmascript-6/</id>
        <title>Introducción al JavaScript de ECMAScript 6</title>        
        <updated>2016-12-09T13:50:00+01:00</updated>
        <published>2016-12-03T12:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/12/introduccion-al-javascript-de-ecmascript-6/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Con ECMAScript 6 se han incorporado al lenguaje varias novedades como nuevas palabras reservadas para definir variables y constantes, símbolos, interpolación de variables en cadenas, desestructuración, forma abreviada para declarar funciones, nueva sintaxis más sencilla para definir clases, objetos de tipo &lt;em&gt;Map&lt;/em&gt; y &lt;em&gt;Set&lt;/em&gt;, &lt;em&gt;Promises&lt;/em&gt; como alternativa a &lt;em&gt;callbacks&lt;/em&gt;, el protocolo &lt;em&gt;Iterator&lt;/em&gt; y generadores, además de algunas otras cosas que si como yo no habías dedicado tiempo a aprender mejor JavaScript aún te resulten novedosas.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/javascript.png&#34; class=&#34;right&#34; alt=&#34;JavaScript&#34; title=&#34;JavaScript&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Hasta ahora como desarrollador web durante prácticamente toda mi vida laboral no había dedicado tiempo a conocer en más detalle el lenguaje de programación &lt;a href=&#34;http://es.wikipedia.org/wiki/JavaScript&#34;&gt;JavaScript&lt;/a&gt; usado en los navegadores web. Mucho de lo que necesitaba me era suficiente con librerías como &lt;a href=&#34;http://jquery.com/&#34;&gt;jQuery&lt;/a&gt; o &lt;a href=&#34;http://underscorejs.org/&#34;&gt;underscore&lt;/a&gt;. Ahora algunas páginas web tienen un peso importante en el lado cliente y ante esta necesidad el lenguaje JavaScript está evolucionando e incorporando nuevas características como las definidas en sus especificaciones de &lt;a href=&#34;https://es.wikipedia.org/wiki/ECMAScript&#34;&gt;ECMAScript&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Para aprender en mucho más en detalle lo poco que conocía de JavaScript he leído el libro &lt;a href=&#34;http://amzn.to/2g3TV52&#34;&gt;Learning JavaScript&lt;/a&gt; que cubre las novedades de ECMAScript 2015 también conocido como ECMAScript 6 (ES6). Después de leerlo diré que es un libro que me ha gustado mucho y considero que es adecuado tanto para alguien que pueda estar aprendiendo a programar como para alguien que ya conoce otros lenguajes de programación explicando los conceptos sin complicaciones.&lt;/p&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1491914912&amp;linkId=3ea3a8ae787fc5f9cdd9ca6934c7d635&amp;internal=1&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Las últimas versiones de los navegadores &lt;a href=&#34;https://www.google.es/chrome/browser/desktop/&#34;&gt;Chrome&lt;/a&gt; y &lt;a href=&#34;https://www.mozilla.org/es-ES/firefox/new/&#34;&gt;Firefox&lt;/a&gt; ya soportan todo lo que describo a continuación y que está más detalladamente explicado en el libro. Para los navegadores que aún no soportan todo como en los dispositivos móviles hay compiladores o &lt;em&gt;transpilers&lt;/em&gt; para &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/12/transpiling-de-ecmascript-6-a-5-uglify-y-eslint-con-gulp/&#34;&gt;traducir de ECMAScript 6 a ECMAScript 5&lt;/a&gt;. En un entorno en el que sepamos se usa solo Chrome o Firefox como en una intranet o una aplicación de uso interno en una organización podemos utilizar estas novedades y si es una aplicación accesible por cualquier usuario desde internet podemos hacer la conversión de ECMAScript 6 a ECMAScript 5 con &lt;a href=&#34;http://gulpjs.com/&#34;&gt;gulp&lt;/a&gt; o &lt;a href=&#34;http://gruntjs.com/&#34;&gt;grunt&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Estas son gran parte de las novedades que he anotado al leer el libro Learning JavaScript. Para profundizar sobre JavaScript la documentación de &lt;a href=&#34;https://developer.mozilla.org/es/&#34;&gt;Mozilla Developer Network&lt;/a&gt; está muy bien como manual de referencia donde hay más ejemplos y comentarios más extensos de los que hago en cada sección.&lt;/p&gt;

&lt;h3 id=&#34;definición-de-variables&#34;&gt;Definición de variables&lt;/h3&gt;

&lt;p&gt;Para solventar las deficiencias de las variables declaradas con &lt;em&gt;var&lt;/em&gt; hay dos nuevas palabras reservadas &lt;em&gt;let&lt;/em&gt; para &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Declarations&#34;&gt;declarar variables&lt;/a&gt; que cambian de valor y &lt;em&gt;const&lt;/em&gt; para constantes. También se pueden declarar símbolos que son identificadores de tipos únicos e inmutables.&lt;/p&gt;

&lt;p&gt;El problema de las variables declaradas con &lt;em&gt;var&lt;/em&gt; está en que tienen ámbito de función con &lt;em&gt;let&lt;/em&gt; no existe hasta que es declarada. Las variables con &lt;em&gt;var&lt;/em&gt; son declaradas al principio del ámbito de la función o en el ámbito global.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/e2d39c688ee437367ff2c2e89b791ed2.js?file=variables.js&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;interpolación-de-variables-en-cadenas&#34;&gt;Interpolación de variables en cadenas&lt;/h3&gt;

&lt;p&gt;La &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals&#34;&gt;interpolación de variables en cadenas&lt;/a&gt; facilita la construcción de &lt;em&gt;strings&lt;/em&gt; y hace el código más legible. Las plantillas se definen con comillas de acento grave `.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/e2d39c688ee437367ff2c2e89b791ed2.js?file=interpolation.js&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;desestructuración&#34;&gt;Desestructuración&lt;/h3&gt;

&lt;p&gt;Se ha incorporado la &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&#34;&gt;asignación desestructurada&lt;/a&gt; pudiendo hacer cosas como las siguientes en las asignaciones y en las llamadas a las funciones.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/e2d39c688ee437367ff2c2e89b791ed2.js?file=destructuring.js&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;operador-spread&#34;&gt;Operador &lt;em&gt;spread&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;El &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&#34;&gt;operador &lt;em&gt;spread&lt;/em&gt;&lt;/a&gt; permite a una expresión se expandida en lugares donde se esperan múltiples argumentos como en llamadas a funciones, múltiples elementos para literales de &lt;em&gt;arrays&lt;/em&gt; o múltiples variables para asignación desestructurada.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/e2d39c688ee437367ff2c2e89b791ed2.js?file=spread.js&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;bucles-con-in-y-of&#34;&gt;Bucles con &lt;em&gt;in&lt;/em&gt; y &lt;em&gt;of&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Usando el &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in&#34;&gt;iterador &lt;em&gt;in&lt;/em&gt;&lt;/a&gt; en un bucle recorremos las propiedades de un objeto y con el &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of&#34;&gt;iterador &lt;em&gt;of&lt;/em&gt;&lt;/a&gt; podemos recorrer cualquier objeto iterable. Cualquier objeto que definamos podemos hacerlo iterable cumpliendo el &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols&#34;&gt;protocolo Iterable&lt;/a&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/e2d39c688ee437367ff2c2e89b791ed2.js?file=iterator-in-of.js&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;funciones&#34;&gt;Funciones&lt;/h3&gt;

&lt;p&gt;En JavaScript &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions&#34;&gt;definir funciones&lt;/a&gt; es una parte muy importante de la esencia del lenguaje, ahora hay una forma corta de definir funciones.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/e2d39c688ee437367ff2c2e89b791ed2.js?file=arrow-functions.js&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;arrays&#34;&gt;Arrays&lt;/h3&gt;

&lt;p&gt;El &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&#34;&gt;tipo Array&lt;/a&gt; tiene muchos métodos y funciones adecuadas para la programación funcional como &lt;em&gt;map&lt;/em&gt;, &lt;em&gt;filter&lt;/em&gt; o &lt;em&gt;reduce&lt;/em&gt; y también &lt;em&gt;push&lt;/em&gt;, &lt;em&gt;pop&lt;/em&gt;, &lt;em&gt;shift&lt;/em&gt;, &lt;em&gt;unshift&lt;/em&gt;, &lt;em&gt;forEach&lt;/em&gt;, &lt;em&gt;slice&lt;/em&gt;, &lt;em&gt;splice&lt;/em&gt;, &lt;em&gt;fill&lt;/em&gt;, &lt;em&gt;copyWithin&lt;/em&gt;, &lt;em&gt;findIndex&lt;/em&gt;, &lt;em&gt;lastIndexOf&lt;/em&gt;, &lt;em&gt;indexOf&lt;/em&gt;, &lt;em&gt;reverse&lt;/em&gt;, &lt;em&gt;sort&lt;/em&gt;, &lt;em&gt;some&lt;/em&gt;, &lt;em&gt;every&lt;/em&gt;, &lt;em&gt;join&lt;/em&gt; o &lt;em&gt;concat&lt;/em&gt;. Funciones que antes no estaban presentes y para suplir su ausencia usábamos la librería &lt;em&gt;underscore&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&#34;métodos-de-la-clase-function&#34;&gt;Métodos de la clase &lt;em&gt;Function&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Teniendo en una variable de &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&#34;&gt;tipo Function&lt;/a&gt; podemos llamarla con &lt;em&gt;call&lt;/em&gt; incluyendo un parámetro que se considerará el valor de la referencia &lt;em&gt;this&lt;/em&gt; dentro de la función. Con &lt;em&gt;apply&lt;/em&gt; los argumentos serán los definidos en un array aunque con la sintaxis &lt;em&gt;spread&lt;/em&gt; esta función puede caer en desuso. Con &lt;em&gt;bind&lt;/em&gt; podemos asociar a la función la referencia que siempre se tomará como &lt;em&gt;this&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&#34;nueva-sintaxis-para-clases&#34;&gt;Nueva sintaxis para clases&lt;/h3&gt;

&lt;p&gt;Anteriormente en JavaScript ya se podían &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes&#34;&gt;definir clases&lt;/a&gt; haciendo uso de la propiedad &lt;em&gt;prototype&lt;/em&gt; aunque su sintaxis ahora se ha simplificado y hecho más parecida a otros lenguajes además de definir propiedades con su método &lt;em&gt;getter&lt;/em&gt; y &lt;em&gt;setter&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/e2d39c688ee437367ff2c2e89b791ed2.js?file=classes.js&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;objetos-map-y-set&#34;&gt;Objetos Map y Set&lt;/h3&gt;

&lt;p&gt;Los objetos pueden ser utilizados como mapas pero a veces utilizar un objeto no es deseable como contenedor de datos, para ello se definen los &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&#34;&gt;Map&lt;/a&gt; que son clases que a través de una clave se accede a un valor y &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&#34;&gt;Set&lt;/a&gt; para colecciones sin elementos repetidos.&lt;/p&gt;

&lt;p&gt;Algunas funciones de la clase Map son &lt;em&gt;get&lt;/em&gt;, &lt;em&gt;set&lt;/em&gt;, &lt;em&gt;has&lt;/em&gt;, &lt;em&gt;size&lt;/em&gt;, &lt;em&gt;keys&lt;/em&gt;, &lt;em&gt;values&lt;/em&gt;, &lt;em&gt;entries&lt;/em&gt;, &lt;em&gt;forEach&lt;/em&gt;, &lt;em&gt;delete&lt;/em&gt;, &lt;em&gt;clear&lt;/em&gt; y &lt;em&gt;size&lt;/em&gt;. Algunas de la clase Set son &lt;em&gt;add&lt;/em&gt;, &lt;em&gt;has&lt;/em&gt;, &lt;em&gt;forEach&lt;/em&gt;, &lt;em&gt;delete&lt;/em&gt; y &lt;em&gt;size&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&#34;operadores-instanceof-y-typeof&#34;&gt;Operadores &lt;em&gt;instanceof&lt;/em&gt; y &lt;em&gt;typeof&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Con &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof&#34;&gt;instanceof&lt;/a&gt; se puede comprobar si una variable es de un cierto tipo, si su cadena de prototipos incluye la función indicada. Con &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof&#34;&gt;typeof&lt;/a&gt; se puede conocer el tipo de dato de una variable.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/e2d39c688ee437367ff2c2e89b791ed2.js?file=instanceof-typeof.js&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;excepciones&#34;&gt;Excepciones&lt;/h3&gt;

&lt;p&gt;JavaScript soporta gestionar ciertas circunstancias de error con excepciones y con la construcción &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch&#34;&gt;try catch finally&lt;/a&gt; similar a la existente en lenguajes como Java.&lt;/p&gt;

&lt;h3 id=&#34;callback-y-promise&#34;&gt;&lt;em&gt;Callback&lt;/em&gt; y &lt;em&gt;Promise&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Algunas tareas las manejamos usando &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Mozilla/js-ctypes/Using_js-ctypes/Declaring_and_Using_Callbacks&#34;&gt;funciones &lt;em&gt;callback&lt;/em&gt;&lt;/a&gt;, funciones que se pasan como argumento y que son llamadas en algún momento. La programación con &lt;em&gt;callback&lt;/em&gt; se hace complicada en la programación asíncrona cuando se anidan varias funciones. Con los &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&#34;&gt;objetos Promise&lt;/a&gt; el código de la programación asíncrona es más legible.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/e2d39c688ee437367ff2c2e89b791ed2.js?file=callback-promise.js&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;generators&#34;&gt;&lt;em&gt;Generators&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Los &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator&#34;&gt;objetos Generator&lt;/a&gt; que se basan en el &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&#34;&gt;protocolo &lt;em&gt;Iterator&lt;/em&gt;&lt;/a&gt; pueden establecer una comunicación entre el generador y el código que lo llama con la palabra reservada &lt;em&gt;yield&lt;/em&gt; que retorna el valor del generador y la función &lt;em&gt;next()&lt;/em&gt; del iterador que puede proporcionar una parámetro usable en el generador. Las funciones generadoras se declaran poniendo un * después de la palabra &lt;em&gt;function&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/e2d39c688ee437367ff2c2e89b791ed2.js?file=generator.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Otros métodos nuevos de la &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&#34;&gt;clase &lt;em&gt;Object&lt;/em&gt;&lt;/a&gt; son &lt;em&gt;freeze&lt;/em&gt; que impide añadir nuevas propiedades al objeto, eliminar existentes o modificar sus valores haciendo al objeto inmutable. Con &lt;em&gt;seal&lt;/em&gt; se previene únicamente añadir nuevas propiedades.&lt;/p&gt;

&lt;h3 id=&#34;misc&#34;&gt;Misc&lt;/h3&gt;

&lt;p&gt;Declarando el &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&#34;&gt;modo esctricto&lt;/a&gt; con &lt;em&gt;&amp;lsquo;use strict&amp;rsquo;;&lt;/em&gt; evitamos algunos de los errores que podemos cometer al usar JavaScript como declarar una variable en un ámbito global cuando no es nuestra intención. Con el método &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&#34;&gt;toString()&lt;/a&gt; de los objetos podremos proporcionar una representación de un objeto más descriptiva.&lt;/p&gt;

&lt;h3 id=&#34;manipulación-dom&#34;&gt;Manipulación DOM&lt;/h3&gt;

&lt;p&gt;Es raro que para manipular el árbol &lt;a href=&#34;https://es.wikipedia.org/wiki/Document_Object_Model&#34;&gt;DOM&lt;/a&gt; que representa el HTML cargado en el navegador no usemos la librería jQuery pero para casos básicos o cuando no podemos usar esa librería o queremos esa dependencia podemos hacer uso de las funciones incorporadas en el propio navegador y algunas funciones declaradas en el &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Document&#34;&gt;objeto Document&lt;/a&gt;. Algunos métodos del objeto Documento son &lt;em&gt;getElementById&lt;/em&gt;, &lt;em&gt;getElementsByClassName&lt;/em&gt;, &lt;em&gt;getElementsByTagName&lt;/em&gt;, &lt;em&gt;querySelector&lt;/em&gt; y &lt;em&gt;querySelectorAll&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Para manipular el texto de un nodo se usa la propiedad &lt;em&gt;textContent&lt;/em&gt; de la &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Node&#34;&gt;interfaz Node&lt;/a&gt; y para incluir en el nodo contenido HTML la propiedad &lt;em&gt;innerHTML&lt;/em&gt; de la &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/element&#34;&gt;interfaz Element&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Con &lt;em&gt;createElement&lt;/em&gt; de Document mediante código podemos crear nuevos elementos y con &lt;em&gt;appendChild&lt;/em&gt; o &lt;em&gt;insertBefore&lt;/em&gt; de Node insertarlos en el árbol DOM. Con la propiedad &lt;em&gt;classList&lt;/em&gt; y los métodos &lt;em&gt;add&lt;/em&gt; y &lt;em&gt;remove&lt;/em&gt; podemos añadir clases a un nodo y con &lt;em&gt;dataset&lt;/em&gt; acceder a los atributos &lt;em&gt;data-&lt;/em&gt; de la etiqueta.&lt;/p&gt;

&lt;h3 id=&#34;eventos&#34;&gt;Eventos&lt;/h3&gt;

&lt;p&gt;Los navegadores definen más de 200 eventos ante los que podemos reaccionar, uno de los más típicos es el &lt;em&gt;click&lt;/em&gt; en un botón. A un &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/element&#34;&gt;Element&lt;/a&gt; de la página y con el método &lt;em&gt;addEventListener()&lt;/em&gt; se pueden asociar eventos.&lt;/p&gt;

&lt;p&gt;Eventos como el &lt;em&gt;click&lt;/em&gt; en algunos elementos tienen definido un comportamiento por defecto, para evitar ejecutar ese comportamiento por defecto disponemos de la función &lt;em&gt;preventDefault&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Los manejadores de eventos se van recorriendo primero en modo captura desde la raíz hasta el nodo del árbol DOM donde se ha producido el evento y posteriormente en modo burbuja desde el nodo donde se ha producido el evento hasta la raíz. Con &lt;em&gt;stopPropagation&lt;/em&gt; se puede cancelar la propagación del evento, realmente la propagación se sigue realizando pero el evento se marca como cancelado. Con &lt;em&gt;stopImmediatePropagation&lt;/em&gt; se puede parar la propagación completamente, parando incluso la propagación con el evento cancelado.&lt;/p&gt;

&lt;p&gt;Todos estos ejemplos funcionan en los navegadores Firefox y Chrome pudiendo probarlos en la consola JavaScript que incorporan para los desarrolladores. En la página &lt;a href=&#34;http://es6-features.org/&#34;&gt;es6-features&lt;/a&gt; hay una lista completa de todas las nuevas características de ECMAScript 6.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/es/&#34;&gt;Mozilla Developer Network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://es6-features.org/&#34;&gt;es6-features&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="javascript"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/11/desempaquetado-bombillas-led-de-philips/</id>
        <title>Desempaquetado bombillas LED de PHILIPS</title>        
        <updated>2016-11-26T23:00:00+01:00</updated>
        <published>2016-11-26T23:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/11/desempaquetado-bombillas-led-de-philips/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Sustituyendo las bombillas incandescentes por bombillas LED o de bajo consumo de aquellas que usemos más habitualmente (salón, habitaciones y baño) podemos ahorrar de forma significativa en iluminación en la factura de electricidad. Su coste aunque más caro llega a compensar pasados unos meses tanto por su menor consumo como por su mayor vida útil.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;p&gt;Desde hace unos años las bombillas incandescentes ya no se fabrican y se venden hasta agotar las existencias con el objetivo de que sean sustituidas por nuevas bombillas de más bajo consumo reduciendo de esta manera el consumo de energía eléctrica. Ya solo se venden dos tipos de bombillas, las de bajo consumo similares a las lámparas fluorescentes pero mucho más compactas y las bombillas LED que permiten ahorrar en electricidad dedicada a la iluminación entre un significativo 60% y 80% respecto a las bombillas incandescentes y un 50% respecto a las de bajo consumo. Una bombilla LED equivalente a 60W y 100W de una incandescente consume solo unos 6W y 11W respectivamente por lo que es recomendable hacer la sustitución de aquellas que usemos más habitualmente como salón, habitaciones y baño.&lt;/p&gt;

&lt;p&gt;Las bombillas LED son algo más caras que las de bajo consumo fluorescentes costando 8€ las equivalentes a 60W de 500 lumens, unos 12€ las equivalentes a 75W de 1000 lumens y unos 14€ las equivalentes a 100W de 1500 lumens, sin embargo, según los fabricantes tienen una esperanza de vida bastante mayor de unas 15000 horas de uso que en teoría junto con el ahorro de energía compensa al cabo de unos unos meses o pocos años. Otro detalle importante de las bombillas LED es que no contienen mercurio sustancia que es muy contaminante aún en bajas cantidades por lo que las de bajo consumo fluorescente que contienen algunos miligramos en cada unidad deben ser tratadas convenientemente después de su vida útil. Se puede comprarar la &lt;a href=&#34;http://blog.ledbox.es/ahorro-eficiencia-energetica/tabla-de-equivalencias-de-las-bombillas-led&#34;&gt;tabla de equivalencias en vatios&lt;/a&gt; entre bombillas incandescentes y LED y de bajo consumo y LED.&lt;/p&gt;

&lt;p&gt;Al comprar bombillas LED debemos tener en cuenta otros detalles como la temperatura de la luz emitida que puede ser cálida (entre 2700K y 3000K) un amarillo similar a las incandescentes adecuada para salón y habitaciones, neutra y más blanca (4000K) adecuada para baño y cocina o fría (6000K) de un tono más azulado. Depende de nuestra preferencia, en los hogares se suelen emplear luces cálidas o nuestras o una combinación según espacio de uso. También deberemos fijarnos en el casquillo E14, E27, &amp;hellip; y el tamaño, algunas tienen 6cm de diámetro y 11cm de largo o más pequeñas de 4,5cm de diámetro 7,5cm de largo pero también con menos lumens. La distribución de la luz emitida por las bombillas LED no es tan uniforme como en las incandescentes siendo mayor la cantidad emitida en la dirección a la que apunta la bombilla.&lt;/p&gt;

&lt;p&gt;El electrodoméstico que más electricidad consume y que más peso tendrá en la factura en un hogar es el frigorífico, vitrocerámica o placa de inducción por lo que comprar uno de estos aparatos más eficiente energéticamente es buena idea aún siendo algo mayor su importe. Por lo que aunque sustituyamos las bombillas incandescentes por bombillas LED no quiere decir que vayamos ahorrar en la factura un 80% pero si en iluminación aunque esto no está desglosado en la factura para comprobarlo.&lt;/p&gt;

&lt;p&gt;Haciendo un cálculo rápido podemos estimar el ahorro que podemos conseguir sustituyendo bombillas incandescentes por bombillas LED y el tiempo que debe transcurrir para recuperar la inversión. Estimando que en un salón tenemos colocadas tres bombillas de 100W el gasto en electricidad sería el siguiente para bombillas incandescentes, de bajo consumo fluorescentes y LED con un uso de 5 horas en horario de invierno durante 6 meses y 3 en horario verano en los otros 6, con un coste en electricidad de 0,114873 €/kWh. El ahorro anual es notable según los números.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Bombillas incandescentes&lt;/strong&gt;: 3 x (&lt;sup&gt;100&lt;/sup&gt;&amp;frasl;&lt;sub&gt;1000&lt;/sub&gt; kW x 5 horas x 182,5 días / ) + 3 * (&lt;sup&gt;100&lt;/sup&gt;&amp;frasl;&lt;sub&gt;1000&lt;/sub&gt; kW x 3 horas x 182,5 días) = 438 kW x 0,114873 €/kW = &lt;strong&gt;50,3143 €/año&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bombillas bajo consumo&lt;/strong&gt;: 3 x (&lt;sup&gt;23&lt;/sup&gt;&amp;frasl;&lt;sub&gt;1000&lt;/sub&gt; kW x 5 horas x 182,5 días) ̣+ (&lt;sup&gt;23&lt;/sup&gt;&amp;frasl;&lt;sub&gt;1000&lt;/sub&gt; kW x 3 horas x 182,5 días) / 1000 = 100,74 kWh x 0,114873 €/kWh = &lt;strong&gt;11,5723 €/año&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bombillas LED&lt;/strong&gt;: 3 x (13,&lt;sup&gt;5&lt;/sup&gt;&amp;frasl;&lt;sub&gt;1000&lt;/sub&gt; kW x 5 horas x 182,5 días) x (13,&lt;sup&gt;5&lt;/sup&gt;&amp;frasl;&lt;sub&gt;1000&lt;/sub&gt; kW x 3 horas x 182,5 días) = 59,13 kWh x 0,114873 €/kWh = &lt;strong&gt;6,7924 €/año&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En la siguiente &lt;a href=&#34;http://www.bombillasled.net/content/11-calculadora-de-ahorro&#34;&gt;calculadora de ahorro con bombillas LED&lt;/a&gt; si no queremos hacerlo nosotros podemos calcular el retorno que obtenemos al hacer la sustitución, probablemente en el segundo año usar bombillas LED ya nos suponga un ahorro.&lt;/p&gt;

&lt;p&gt;En &lt;a href=&#34;http://amzn.to/2flFhHA&#34;&gt;Amazon&lt;/a&gt; hay una amplia gama de bombillas LED variando en tipo de casquillo, temperatura de la luz, formas y tamaños. Yo compré &lt;a href=&#34;http://amzn.to/2fDevZv&#34;&gt;6 bombillas LED E27 de 13.5 W equivalente a 100 W con 1521 lúmenes en luz cálida&lt;/a&gt; de la marca PHILIPS algo más caras de lo que están ahora aunque Amazon ha sacado un modelo similar de su marca blanca AmazonBasics. Encontraremos &lt;a href=&#34;http://amzn.to/2fQIpr9&#34;&gt;más modelos de bombillas&lt;/a&gt; que también deberemos elegir según la lámpara donde vaya ser colocadas. Yo las puse en varias del siguiente modelo de &lt;a href=&#34;http://amzn.to/2fQKYJJ&#34;&gt;lámpara de 3 focos Brilliant&lt;/a&gt; y estoy contento tanto con las bombillas como con las lámparas.&lt;/p&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01GRYK35Y&amp;linkId=27b2aaaf6a098d54c4ded8cb52f9f5a6&amp;internal=1&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01J1NTGVA&amp;linkId=b0ce33f634a15053194c9178f2e2d7dc&amp;internal=1&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B001BB1SSA&amp;linkId=a35b7a1682f1f28f137f770d01fc5318&amp;internal=&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/197/bombilla-led-philips-1.jpg&#34; title=&#34;Bombilla LED PHILIPS 100W E27 13.5W 2700K&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/197/bombilla-led-philips-1-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/197/bombilla-led-philips-2.jpg&#34; title=&#34;Bombilla LED PHILIPS 100W E27 13.5W 2700K&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/197/bombilla-led-philips-2-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/197/bombilla-led-philips-3.jpg&#34; title=&#34;Bombilla LED PHILIPS 100W E27 13.5W 2700K&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/197/bombilla-led-philips-3-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/197/bombilla-led-philips-4.jpg&#34; title=&#34;Bombilla LED PHILIPS 100W E27 13.5W 2700K&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/197/bombilla-led-philips-4-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Bombilla LED PHILIPS 100W E27 13.5W 2700K&lt;/figcaption&gt;
&lt;/figure&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/197/lampara-brilliant.jpg&#34; title=&#34;Lámpara Brilliant con bombillas LED PHILIPS 100W E27 13.5W 2700K&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/197/lampara-brilliant-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Lámpara Brilliant con bombillas LED PHILIPS 100W E27 13.5W 2700K&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.llumor.es/info-led/equivalencia-de-lumen-a-vatios&#34;&gt;Equivalencia de Lumen a Vatios&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/11/guardar-contrasenas-de-forma-segura-con-keepassx/</id>
        <title>Guardar contraseñas de forma segura con KeePassX</title>        
        <updated>2016-11-26T22:00:00+01:00</updated>
        <published>2016-11-26T11:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/11/guardar-contrasenas-de-forma-segura-con-keepassx/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/keepassx.png&#34; class=&#34;right&#34; alt=&#34;KeePassX&#34; title=&#34;KeePassX&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;La mayor parte de servicios usan aún como forma de autenticación el método de usuario y contraseña. Si la contraseña proporcionada conocida solo por su usuario es correcta el sistema confía en que el usuario es quien dice ser. Las contraseñas debería ser difíciles de averiguar, se recomienda que tenga una longitud mínima de 8 caracteres y que contenga letras en minúscula y mayúscula, números y símbolos, sin embargo, cuanto más fuerte y difícil sea de averiguar más difícil será recordarla. Además, idealmente se debe utilizar una contraseña distinta en cada servicio para evitar que descubierta la contraseña por un fallo de seguridad en cualquiera de en los que se use pueda accederse a todos los otros servicios que use ese usuario utilice, por lo que el número de contraseñas a recordar pueden ser numerosas de modo que muchos usuarios terminan usando la misma contraseña en varios servicios con el riesgo que conlleva. Dado que recordar una contraseña fuerte para cada servicio es difícil y mantenerlas guardadas en un archivo de texto o en un papel no es lo más recomendable podemos usar un programa que las almacene.&lt;/p&gt;

&lt;p&gt;Uno de estos programas es &lt;a href=&#34;https://www.keepassx.org/&#34;&gt;KeePassX&lt;/a&gt;, básicamente es una base de datos de contraseñas que se almacenan de forma segura y cifrada y protegidas por una contraseña maestra. La información básica que podemos guardar es el nombre del servicio y su URL, el usuario que usamos en ese servicio y la contraseña. Con KeePassX podemos crear grupos de contraseñas que nos permitan buscarlas de forma más sencilla.&lt;/p&gt;

&lt;p&gt;Instalado el &lt;a href=&#34;https://www.archlinux.org/packages/community/x86_64/keepassx2/&#34;&gt;paquete de KeePassX&lt;/a&gt; de nuestra distribución &lt;a href=&#34;http://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;/&lt;a href=&#34;http://www.linux.com/&#34;&gt;Linux&lt;/a&gt; o el binario para nuestro sistema operativo lo primero que deberemos hacer es crear una base de datos que protegeremos con una contraseña maestra, podemos guardar la base de datos en un archivo en la ubicación que deseemos.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/1e0bc79d0f7260e6243c744207cb19ff.js?file=pacman.sh&#34;&gt;&lt;/script&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/196/keepassx-1.png&#34; title=&#34;KeePassX&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/196/keepassx-1-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/196/keepassx-4.png&#34; title=&#34;KeePassX&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/196/keepassx-4-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Lo siguiente será crear una entrada con el usuario y contraseña de un servicio.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/196/keepassx-2.png&#34; title=&#34;KeePassX&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/196/keepassx-2-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Una vez almacenada la credencial podemos copiar al portapapeles el usuario y contraseña de esa credencial para usarla en el servicio. También podremos ver la contraseña no protegida con asteriscos sino los caracteres originales.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/196/keepassx-3.png&#34; title=&#34;Contraseñas guardadas&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/196/keepassx-3-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;KeePassX es una herramienta que no tiene más complejidad, podemos asociar alguna información más a la credencial con atributos adicionales y archivos adjuntos pero no es imprescindible.&lt;/p&gt;

&lt;p&gt;Si somos nosotros los que implementamos un servicio con el método de autenticación de usuario y contraseña deberíamos &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/04/guardar-contrasenas-usando-salted-password-hashing-y-otras-formas-correctas/&#34;&gt;almacenar las contraseñas de forma segura usando «password salted hasing»&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Otras formas de guardar las contraseñas es en un &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2013/11/introduccion-la-criptografia-e-inicio-con-gpg.html&#34;&gt;archivo cifrado con GPG&lt;/a&gt; que desciframos cuando queramos usar alguna contraseña o en un &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/02/cifrar-archivos-con-encfs-en-gnu-linux/&#34;&gt;sistema de archivos cifrado como con EncFS&lt;/a&gt; que lo montamos para acceder a archivo de texto con las contraseñas.&lt;/p&gt;

&lt;p&gt;KeePassX posee una utilidad para generar contraseñas únicas para cada servicio con cierta complejidad, podemos variar la longitud, si incluye símbolos, y mayúsculas y minúsculas. &lt;a href=&#34;http://strongpasswordgenerator.com/&#34;&gt;StrongPassowrdGenerator&lt;/a&gt; en una página web con la que podemos generar contraseñas usando estas mismas preferencias desde el navegador.&lt;/p&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/11/instalar-programas-con-homebrew-en-macos/</id>
        <title>Instalar programas con Homebrew en macOS</title>        
        <updated>2016-11-25T22:30:00+01:00</updated>
        <published>2016-11-19T12:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/11/instalar-programas-con-homebrew-en-macos/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Para no tener que descargar binarios e instalarlos manualmente y estar pendiente de nuevas versiones que se publiquen en un futuro en macOS está Homebrew. Homebrew es un gestor de paquetes similar a los existentes en las distribuciones GNU/Linux con el que podremos buscar software, instalar, actualizar, ver que hemos instalado, cuales están desactualizados, iniciar y parar servicios y desinstalar los paquetes o programas. Esta es una guía básica sobre como instalar software en macOS con Homebrew y como instalar iTerm2 que es una mejor terminal que la propia del sistema con iterm.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/apple.png&#34; class=&#34;right&#34; alt=&#34;Apple&#34; title=&#34;Apple&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/macos.png&#34; class=&#34;right&#34; alt=&#34;macOS&#34; title=&#34;macOS&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Como nuevo usuario de &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/11/mi-primer-mac-yo-usuario-de-gnu-linux/&#34;&gt;mi primer mac&lt;/a&gt; he tenido que empezar instalando los programas que voy a usar. Una de las cosas buenas de las distribuciones &lt;a href=&#34;http://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;/&lt;a href=&#34;http://www.linux.com/&#34;&gt;Linux&lt;/a&gt; es la forma de obtener e instalar programas. Cada distribución de GNU/Linux tiene su repositorio de paquetes y programas de los que el gestor de paquetes obtiene e instala. Los gestores paquetes se encargan de instalar, actualizar y desinstalar cada paquete junto las dependencias que requiera. Con el gestor de paquetes y desde la terminal es posible instalar múltiples programas rápidamente con un comando. En &lt;a href=&#34;http://www.microsoft.com/es-es/windows/&#34;&gt;Windows&lt;/a&gt; y &lt;a href=&#34;http://www.apple.com/macos/&#34;&gt;macOS&lt;/a&gt; los programas se instalan descargando un binario y ejecutándolo que inicia un asistente. Instalar programas de esta forma en Windows y macOS tiene los inconvenientes de que hay que hay que ir a la página oficial de programa y descargar el último binario disponible, además cuando se publique una nueva versión hay que descargar el nuevo binario y volverlo a instalar, también es una fuente de introducción de virus si se descarga e instala el software de fuentes no confiables. En GNU/Linux el gestor de paquetes se encarga de actualizar los paquetes y programas que estén desactualizados cuando haya nuevas versiones.&lt;/p&gt;

&lt;p&gt;En macOS existe un gestor de paquetes similar a los existentes en GNU/Linux, &lt;a href=&#34;http://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; se define así mismo como el gestor de paquetes que le falta a macOS. Con Homebrew podemos instalar los programas y mantenerlos actualizados sin tener que estar observando cuando se publica una nueva versión de cada programa. Con Homebrew también podremos instalar muchos de los comandos que están disponibles en GNU/Linux como wget, cmus, gimp, &amp;hellip; &lt;a href=&#34;https://caskroom.github.io/&#34;&gt;Hombrew Cask&lt;/a&gt; es un añadido que proporciona los mismo para los binarios de los programas de macOS. Con estas dos herramientas podemos instalar y mantener actualizado la mayor parte del software que utilicemos.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/195/homebrew.png&#34; title=&#34;Homebrew&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/195/homebrew-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Para instalar Hombrew ejecutamos el siguiente comando en la terminal:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/75e99b8f3dd26a446b1b0ec19cd81ee0.js?file=homebrew.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;El siguiente comando nos permitirá instalar versiones anteriores a las últimas, por ejemplo, Java 7:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/75e99b8f3dd26a446b1b0ec19cd81ee0.js?file=brew-versions.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Lo siguiente será buscar los programas que queramos:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/75e99b8f3dd26a446b1b0ec19cd81ee0.js?file=brew-search.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Para instalar Firefox, Google Chrome, VirtualBox, Docker, Java 8 y Java 7, Atom e iTerm2:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/75e99b8f3dd26a446b1b0ec19cd81ee0.js?file=brew-cask-install.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Algunos otros programas que podemos instalar si programamos son:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/75e99b8f3dd26a446b1b0ec19cd81ee0.js?file=brew-install.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Con jenv podemos cambiar entre las versiones de Java 8 y Java 7:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/75e99b8f3dd26a446b1b0ec19cd81ee0.js?file=jenv.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Los servicios como MySQL o Redis podemos iniciarlos y pararlos, además de ver cuales hemos instalado:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/75e99b8f3dd26a446b1b0ec19cd81ee0.js?file=brew-services.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;También podemos listar que paquetes y programas tenemos instalados:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/75e99b8f3dd26a446b1b0ec19cd81ee0.js?file=brew-list.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Para ver que programas y paquetes tenemos desactualizados:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/75e99b8f3dd26a446b1b0ec19cd81ee0.js?file=brew-outdated.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Para actualizar todos los paquetes desactualizados o actualizar uno individualmente:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/75e99b8f3dd26a446b1b0ec19cd81ee0.js?file=brew-upgrade.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Si queremos mantener desactualizado un paquete podemos fijar la versión que tengamos instalada:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/75e99b8f3dd26a446b1b0ec19cd81ee0.js?file=brew-pin.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Y para desinstalar paquetes:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/75e99b8f3dd26a446b1b0ec19cd81ee0.js?file=brew-uninstall.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;La terminal incluida de serie en macOS es muy básica por ello mucha gente suele instalar una más avanzada como &lt;a href=&#34;http://iterm2.com/&#34;&gt;iTerm2&lt;/a&gt;. iTerm2 añade funcionalidades como pestañas y podemos dividir una terminal horizontal y verticalmente. También se puede instalar &lt;a href=&#34;http://ohmyz.sh/&#34;&gt;oh-my-zsh&lt;/a&gt; que permite gestionar la configuración del intérprete de comandos &lt;a href=&#34;http://zsh.sourceforge.net/&#34;&gt;zsh&lt;/a&gt; pudiendo añadir temas para modificar el &lt;em&gt;prompt&lt;/em&gt; del sistema o cambiarlo según la información del directorio actual, por ejemplo, si estamos en un directorio de git veremos en que rama estamos y si hay cambios realizados.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/75e99b8f3dd26a446b1b0ec19cd81ee0.js?file=oh-my-zsh.sh&#34;&gt;&lt;/script&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/195/iterm2.png&#34; title=&#34;iTerm2&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/195/iterm2-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Terminal iTerm2&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;



        </content>
        
            
                <category term="apple"/>
            
                <category term="blog-stack"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/11/usar-una-imagen-de-fondo-aleatoria-al-cargar-una-pagina-web/</id>
        <title>Usar una imagen de fondo aleatoria al cargar una página web</title>        
        <updated>2016-11-13T12:00:00+01:00</updated>
        <published>2016-11-13T12:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/11/usar-una-imagen-de-fondo-aleatoria-al-cargar-una-pagina-web/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;p&gt;Para darle un toque de estilo a la bitácora he usado unas cuantas texturas de fondo obtenidas de &lt;a href=&#34;http://subtlepatterns.com/&#34;&gt;Subtle Patterns&lt;/a&gt;. Son unas imágenes con un patrón repetitivo de colores suaves y poco llamativos que podemos usar como fondo de una página web, son de libre uso respetando la &lt;a href=&#34;https://creativecommons.org/licenses/by-sa/3.0/&#34;&gt;licencia Creative Commons - Reconocimiento - Compartir igual&lt;/a&gt;. Podemos encontrar texturas en las siguientes categorías y motivos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://subtlepatterns.com/tag/light/&#34;&gt;Light&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://subtlepatterns.com/tag/dark/&#34;&gt;Dark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://subtlepatterns.com/tag/paper/&#34;&gt;Paper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://subtlepatterns.com/tag/stripes/&#34;&gt;Stripes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://subtlepatterns.com/tag/wall/&#34;&gt;Wall&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://subtlepatterns.com/tag/fabric/&#34;&gt;Fabric&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://subtlepatterns.com/tag/noise/&#34;&gt;Noise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://subtlepatterns.com/tag/diamond/&#34;&gt;Diamond&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://subtlepatterns.com/tag/grid/&#34;&gt;Grid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://subtlepatterns.com/tag/carbon/&#34;&gt;Carbon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En el momento de escribir este artículo hay 400+ texturas con diferentes patrones para temas claros, oscuros, &amp;hellip; Como tenemos muchas podemos usar varias y hacer que se cargue una diferente de forma aleatoria cada vez que se visualiza una página variando un poco el estilo de la página cada vez que se carga. En el momento de escribir este artículo es lo que hago en Blog Bitix con el siguiente código JavaScript, puedes probar a recargar la página y verás que se carga otra textura de fondo.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/5a071fff1edbd801b8a984b9c8bb310c.js?file=app-theme.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Otra página que podemos para obtener una textura en este caso con ruido es &lt;a href=&#34;http://www.noisetexturegenerator.com/&#34;&gt;Noise Texture Generator&lt;/a&gt;. Indicamos unos cuantos parámetros y podemos obtener la textura generada.&lt;/p&gt;

&lt;p&gt;Si lo que queremos son fotos de buena calidad en la página en &lt;a href=&#34;https://unsplash.com/&#34;&gt;Unsplash&lt;/a&gt; se publican 10 fotos cada 10 días que también podemos usar libremente, deberemos tener en cuenta que como son fotos de alta calidad y en formato jpg ocupan bastante más y si las usamos en una web deberemos reducir su tamaño para que la carga de la página no se ralentice demasiado en conexiones lentas o consuma demasiados datos, también podemos usarlas como fondo de pantalla de nuestro escritorio.&lt;/p&gt;

&lt;p&gt;Una buena textura o imagen pueden darle a una página un aspecto mucho más atractivo y si además hacemos que se use una diferente cada cierto tiempo o de forma aleatoria hacemos que la página sea algo diferente cada vez que se visualiza.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://subtlepatterns.com/&#34;&gt;Subtle Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.noisetexturegenerator.com/&#34;&gt;Noise Texture Generator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://unsplash.com/&#34;&gt;Unsplash&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="javascript"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
</feed>
<?xml version="1.0" encoding="utf-8"?><feed version="2.0" xmlns="http://www.w3.org/2005/Atom"><id>https://picodotdev.github.io/blog-bitix/tags/blog/</id><title type="text">Blog Bitix</title><subtitle>Recent content on Blog Bitix</subtitle><updated>2019-06-30T10:30:00+02:00</updated><author><name>picodotdev</name></author><generator>Hugo</generator><icon>https://picodotdev.github.io/blog-bitix/assets/images/logotipos/hugo.png</icon><logo>https://picodotdev.github.io/blog-bitix/assets/images/logotipos/hugo.png</logo><rights>https://creativecommons.org/licenses/by-sa/4.0/</rights><entry><id>https://picodotdev.github.io/blog-bitix/2019/06/hemeroteca-15/</id><title>Hemeroteca #15</title><updated>2019-06-30T10:30:00+02:00</updated><published>2019-06-30T10:30:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2019/06/hemeroteca-15/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/hugo.svg" class="right " width="200" alt="Hugo" title="Hugo"/>
&lt;/div>
&lt;p>Estos seis primeros meses del 2019 han transcurrido como todos los años anteriores, sigo manteniendo la constancia de publicar dos artículos nuevos y únicos, algunas semanas sólo uno las menos tres.&lt;/p>
&lt;p>En cuanto al blog durante este tiempo le he hecho un cambio de diseño para que el contenido quede centrado en la pantalla y tenga más espacio horizontal lo que creo hace más agradable la lectura del texto y los extractos de código se ven mejor con menos necesidad de hacer desplazamiento horizontal.&lt;/p>
&lt;p>Para que la publicidad y los ingresos de adsense no se viesen perjudicados y para mejorarlos más aún si cabe he puesto un bloque &lt;em>billboard&lt;/em> en la cabecera, he mantenido el &lt;em>leaderboard&lt;/em> después del resumen del articulo en aquellos que lo tienen y la publicidad lateral he hecho que sea &lt;em>sticky&lt;/em> de manera que permanece mas tiempo visible con la consiguiente mejora en el numero de clic.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/">Rediseño de Blog Bitix con contenido centrado, más grande horizontalmente y publicidad lateral sticky&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Sólo han pasado dos meses con el nuevo diseño pero creo que ha sido un acierto, para la lectura del usuario como para los ingresos de adsense que apreciablemente sigue mejorado respecto al año anterior. Estos meses de verano el tráfico suele descender algo y las visitas ya no me continúan creciendo mes a mes, los mejores meses son los de octubre, noviembre y diciembre con lo que esas fechas podré comparar mejor con las del año pasado. El número de visitas se mantiene más o menos contante y no de crecimiento como semestres anteriores.&lt;/p>
&lt;p>En cuanto a los artículos que he escrito han sido sobre las temáticas habituales a las que dedicó este blog. Como desde hace poco estoy pudiendo usar Java 11 (¡por fin!, algo al menos) en el trabajo espero poder escribir algunos artículos con lo que considere destacable, por el momento he actualizado el ejemplo de código de la &lt;a href="https://picodotdev.github.io/blog-bitix/series/graphql/">serie de artículos de GraphQL&lt;/a> de los que tengo pendiente publicar alguno más. Los artículos de este semestre han sido los siguientes. En total 47 nuevos.&lt;/p>
&lt;p>En la categoría de Java.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/01/las-contrasenas-e-informacion-sensible-en-el-codigo-fuente-o-bytecode-de-java-no-son-seguras/">Las contraseñas e información sensible en el código fuente o bytecode de Java no son seguras&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/01/acceder-a-hojas-de-calculo-de-google-docs-mediante-api-desde-una-aplicacion-java/">Acceder a hojas de cálculo de Google Docs mediante API desde una aplicación Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/01/compilar-el-codigo-fuente-y-ejecutar-con-los-comandos-javac-java-y-jar-en-java-8-o-anteriores/">Compilar el código fuente y ejecutar con los comandos javac, java y jar en Java 8 o anteriores&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/01/generar-procesar-y-modificar-documentos-json-con-json-p-en-java/">Generar, procesar y modificar documentos JSON con JSON-P en Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/01/reproducir-audio-y-musica-midi-y-sampled-wav-mp3-ogg-con-java-y-ffmpeg/">Reproducir audio y música MIDI y sampled (wav, mp3, ogg) con Java y FFmpeg&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/01/usar-expresiones-jsonpath-para-extraer-datos-de-un-json-en-java/">Usar expresiones JSONPath para extraer datos de un JSON en Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/02/convertir-un-json-a-objetos-y-objetos-a-json-con-json-b-gson-y-jackson-en-java/">Convertir un JSON a objetos y objetos a JSON con JSON-B, Gson y Jackson en Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/">Servidor OAuth, gateway y servicio REST utilizando tokens JWT con Spring&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/02/ofuscar-datos-sensibles-en-las-trazas-con-log4j/">Ofuscar datos sensibles en las trazas con Log4j&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/02/las-clases-anidadas-inner-anonimas-y-locales-en-java/">Las clases anidadas inner, anónimas y locales en Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/02/lookahead-y-lookbehind-en-expresiones-regulares-con-java/">Lookahead y lookbehind en expresiones regulares con Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/02/las-colecciones-de-java-estructuras-de-datos-para-guardar-referencias-a-objetos/">Las colecciones de Java, estructuras de datos para guardar referencias a objetos&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/03/colecciones-sincronizadas-e-inmutables-en-java/">Colecciones sincronizadas e inmutables en Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/03/ejemplo-de-reactive-streams-en-java/">Ejemplo de Reactive Streams en Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/03/novedades-de-java-12/">Novedades de Java 12&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/03/escribir-en-la-misma-linea-de-la-consola-y-obtener-el-ancho-y-alto-de-la-terminal-con-java/">Escribir en la misma línea de la consola y obtener el ancho y alto de la terminal con Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/04/aumentar-el-tamano-del-identificativo-de-la-cookie-de-sesion-de-tomcat-o-spring-session/">Aumentar el tamaño del identificativo de la cookie de sesión de Tomcat o Spring Session&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/03/varias-consideraciones-importantes-para-trabajar-con-importes-correctamente-tipo-de-datos-precision-y-guardado/">Varias consideraciones importantes para trabajar con importes correctamente (tipo de datos, precisión y guardado)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/">Ejemplo de máquina de estados con Spring Statemachine&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/04/el-concepto-de-wildcard-capture-en-java/">El concepto de wildcard capture en Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/04/trazabilidad-en-microservicios-con-spring-cloud-sleuth/">Trazabilidad en microservicios con Spring Cloud Sleuth&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/05/lanzar-excepciones-checked-como-si-fueran-unchecked-en-java/">Lanzar excepciones checked como si fueran unchecked en Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/05/log-de-sentencias-sql-sentencias-lentas-y-otra-informacion-en-jooq/">Log de sentencias SQL, sentencias lentas y otra información en jOOQ&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/06/teses-unitarios-parametrizados-con-junit/">Teses unitarios parametrizados con JUnit&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/06/metadatos-e-introspeccion-en-graphql/">Metadatos e introspección en GraphQL&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>En la categoría de GNU/Linux.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/05/autenticacion-mediante-clave-publica-y-privada-con-ssh/">Autenticación mediante clave pública y privada con SSH&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/">Crear de forma sencilla y rápida máquinas virtuales de VirtualBox con Vagrant&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/06/formatear-un-dispositivo-de-almacenamiento-compatible-con-windows-macos-y-smart-tv-en-gnu-linux/">Formatear un dispositivo de almacenamiento compatible con Windows, macOS y Smart TV en GNU/Linux&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Unos sobre algunas de las herramientas de &lt;a href="https://www.hashicorp.com/">HashiCorp&lt;/a>, los que me gustaría seguir ampliando en el futuro.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/04/introduccion-a-nomad-para-gestionar-aplicaciones-y-microservicios/">Introducción a Nomad para gestionar aplicaciones y microservicios&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/">Estrategias de despliegue para microservicios con Nomad&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/04/servicios-con-persistencia-en-el-orquestador-de-microservicos-nomad/">Servicios con persistencia en el orquestador de microservicos Nomad&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/">Registro y descubrimiento de servicios en contenedores de Docker con Consul y Registrator&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Varios sobre JavaScript y desarrollo web.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/03/componentes-en-el-cliente-con-web-components-usando-javascript-html-y-css/">Componentes en el cliente con Web Components usando JavaScript, HTML y CSS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/03/codificar-los-datos-para-evitar-ataques-xss-en-una-pagina-web/">Codificar los datos para evitar ataques XSS en una página web&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/05/combinaciones-de-teclado-en-html-javascript-y-paginas-web/">Combinaciones de teclado en HTML, JavaScript y páginas web&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/06/pruebas-de-carga-y-rendimiento-de-un-servicio-web-con-apache-bench/">Pruebas de carga y rendimiento de un servicio web con Apache Bench&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/06/comprobar-la-seguridad-de-un-sitio-web-que-use-ssl-tls/">Comprobar la seguridad de un sitio web que use SSL/TLS&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Sobre SQL destacando el dedicado a como hacer paginación correctamente con &lt;em>seek&lt;/em> en vez de como habitualmente con &lt;em>ofsset&lt;/em>.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/02/log-de-sqls-y-de-sqls-lentas-en-myql-y-postgresql/">Log de SQLs y de SQLs lentas en MySQL y PostgreSQL&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/05/implementar-la-paginacion-eficientemente-en-consultas-sql-con-seek/">Implementar la paginación eficientemente en consultas SQL con seek&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/06/orden-de-ejecucion-de-las-clausulas-de-las-sentencias-select-de-sql/">Orden de ejecución de las cláusulas de las sentencias SELECT de SQL&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Otros que no entran en las categorias anteriores y otro de opinión.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/">Conferencia BilboStack 2019&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/05/de-un-movil-samsung-galaxy-s3-a-un-samsung-galaxy-s6/">De un móvil Samsung Galaxy S3 a un Samsung Galaxy S6&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/06/conocer-la-evolucion-de-los-precios-de-los-productos-en-amazon-con-camelcamelcamel/">Conocer la evolución de los precios de los productos en Amazon con CamelCamelCamel&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/06/sobre-la-play-station-4-play-station-5-y-google-stadia/">Sobre la PlayStation 4, PlayStation 5 y Google Stadia&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Los dedicados al blog.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/02/9-aniversario-del-blog/">9º aniversario del blog&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/">Rediseño de Blog Bitix con contenido centrado, más grande horizontalmente y publicidad lateral sticky&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Y finalmente uno que estuvo patrocinado.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2019/02/proyecto-de-mejora-de-smart-tv-usando-una-vpn-para-acceder-a-contenido-restringido-por-ip/">Proyecto de mejora de Smart TV usando una VPN para acceder a contenido restringido por IP&lt;/a>&lt;/li>
&lt;/ul></content><category term="blog"/><category term="planeta-codigo"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/</id><title>Rediseño de Blog Bitix con contenido centrado, más grande horizontalmente y publicidad lateral sticky</title><updated>2019-05-13T20:00:00+02:00</updated><published>2019-05-12T14:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>&lt;strong>He cambiado ligeramente el diseño del blog con la intención de mejorar la experiencia de usuario haciendo que el contenido quede centrado en la pantalla en vez de estar desplazado un poco a la izquierda por un panel lateral. Pero más espacio horizontal para el contenido podría afectar negativamente al rendmiento de los &lt;em>banners&lt;/em> de publicidad laterales si tenía que quitarlos con lo que he tenido que buscar una solución para ambos requerimientos. También he experimentado con la disposición de la publicidad, incluido un &lt;em>billboard&lt;/em> y publicidad lateral &lt;em>sticky&lt;/em> para que permanezca más tiempo visible y quizá mejorar su rendmiento.&lt;/strong>&lt;/p>
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/hugo.svg" class="right " width="200" alt="Hugo" title="Hugo"/>
&lt;/div>
&lt;p>En el último &lt;a href="https://picodotdev.github.io/blog-bitix/2015/05/nuevo-diseno-en-blog-bitix/">diseño significativo que hice en el 2015&lt;/a> cambié a un tema más claro, la posición de varios &lt;em>banners&lt;/em> de publicidad además de quitar algunas secciones, otros cambios de menor importancia han sido quitar el justificado del texto o la posición del título en la cabecera, además de generar de forma estática el contenido del blog con &lt;a href="https://gohugo.io/">Hugo&lt;/a> en vez de &lt;a href="http://octopress.org/">Octopress&lt;/a>.&lt;/p>
&lt;p>Hacía tiempo que como mejora para el diseño del blog quería que el contenido de los artículos estuviese centrado en la pantalla y tuviese más espacio horizontal, ambas cosas porque considero que mejoraría un poco la experiencia de lectura de los usuarios. Un panel a la derecha que ocupaba cierto espacio hacía que el contenido del artículo no estuviese centrado y quedase escorado un poco hacia la izquierda, además en ciertos artículos donde incluyo código por el espacio ocupaban requería de una barra de desplazamiento horizontal para ver la parte derecha de los listados.&lt;/p>
&lt;p>Este deseo me obligaba a quitar el panel lateral donde tenía un &lt;em>banner&lt;/em> de publicidad fijo estilo &lt;em>large-skycraper&lt;/em> de 300px de ancho por 600px de alto junto a otro debajo &lt;em>large-rectangle&lt;/em> de 336px por 280px, una imagen con un enlace de &lt;a href="https://picodotdev.github.io/blog-bitix/2015/12/yo-apoyo-al-software-libre-tu-tambien/">Yo apoyo al software libre, tu también&lt;/a> con los artículos de donaciones que he hecho y un enlace al &lt;a href="https://picodotdev.github.io/blog-bitix/archive/">Archivo y hemeroteca&lt;/a>. Pero perder esos &lt;em>banners&lt;/em> de publicidad para dejar más espacio al contenido posiblemente afectaría al rendimiento de los anuncios.&lt;/p>
&lt;p>Querer que el contenido estuviese centrado y ocupase más espacio horizontal y querer publicidad lateral competían entre sí así que tenía que buscar una solución que cumpliese ambos.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/images/diseno-blogbitix-antes_hu99ce55195660f9e2198292b5b3f31dd2_871066_2560x1440_fit_box_2.png" title="Diseño de Blog Bitix antes de hacer cambios" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/images/diseno-blogbitix-antes_hu99ce55195660f9e2198292b5b3f31dd2_871066_300x200_fit_box_2.png" width="267"/>&lt;/a>
&lt;figcaption>Diseño de Blog Bitix antes de hacer cambios&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Hacer que el contenido estuviese centrado y ocupase más espacio horizontal obligaba poner la publicidad lateral más a la derecha, fuera del espacio del contenido central. Como mejora para esa publicidad lateral también quería que permaneciese visible aún haciendo desplazamiento vertical, ya que antes la publicidad siempre permanecía en la misma posición al inicio del artículo y se dejaba de ver en la parte inferior del artículo posiblemente quedando desaprovechada alguna oportunidad. Para hacer que la publicidad se desplace verticalmente he usado el &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/position">posicionamiento &lt;em>sticky&lt;/em>&lt;/a> que ya soportan los navegadores. Con los primeros cambios el diseño queda como deseaba.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/images/diseno-blogbitix-despues-1_hu39421a32a7156c34972e8bb79eebe70a_806765_2560x1440_fit_box_2.png" title="Diseño de Blog Bitix después de hacer algunos cambios" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/images/diseno-blogbitix-despues-1_hu39421a32a7156c34972e8bb79eebe70a_806765_300x200_fit_box_2.png" width="300"/>&lt;/a>
&lt;figcaption>Primer diseño de Blog Bitix después de hacer algunos cambios&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Sin embargo, hacer que el contenido ocupe todo el espacio horizontal de lo que tenía anteriormente y poner la publicidad más a la derecha requiere que los usuarios tengan una pantalla con suficientemente resolución para que quepa todo. Yo &lt;a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q/">tengo una pantalla de resolución 2560x1440&lt;/a> y lo veía todo bien pero &lt;a href="https://www.google.es/intl/es/analytics/">Google Analytics&lt;/a> me indicaba que un porcentaje importante del los usuarios, un 32%, tienen una resolución habitual en los portátiles de 1366x768 píxeles. Con esa resolución los 1140 píxeles requeridos para el contenido más los 300 del &lt;em>banner&lt;/em> horizontal en la parte derecha no entraba. También agravado si para algunas páginas deseaba en la parte lateral izquierda otro panel &lt;em>sticky&lt;/em> de publicidad.&lt;/p>
&lt;p>Mantener la publicidad lateral &lt;em>sticky&lt;/em> hace que no entre un &lt;em>skycraper&lt;/em> y un &lt;em>large-rectangle&lt;/em> verticalmente en una resolución de 768px de alto de modo que he dejado solo un espacio para publicidad. Como idea para el futuro quizá haga que al llegar a cierto desplazamiento vertical se cambier el espacio de publicidad por otro.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/images/resolucion-usuarios_hu6c2fc9b1b5e5693edaba0e098b6027c2_48562_2560x1440_fit_box_2.png" title="Resolución de pantalla de los usuarios" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/images/resolucion-usuarios_hu6c2fc9b1b5e5693edaba0e098b6027c2_48562_300x200_fit_box_2.png" width="200"/>&lt;/a>
&lt;figcaption>Resolución de pantalla de los usuarios&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Ocupando 1140 píxeles el contenido poco espacio queda en los laterales en una resolución de 1366 de ancho. La solución que he aplicado para poder poner publicidad en ambos laterales es reducir un poco el ancho para el contenido central, a 1080px, y que la publicidad lateral se adapte al espacio que queda, no entran &lt;em>banners&lt;/em> de 300px en los laterales pero si dos &lt;em>skycraper&lt;/em> de 120px de ancho al menos, con la que en buena medida la experiencia de usuario se mantiene igual que en resoluciones mayores.&lt;/p>
&lt;p>La página es ahora un poco menos ancha que antes 1080px frente a 1140px pero el contenido ocupa más espacio horizontal, 1080px frente a unos 840px. Haciendo que la publicidad lateral se adapte al espacio restante según la resolución que quede me ha permitido cumplir los dos objetivos de hacer que el contenido quede centrado y con más espacio horizontal sin perder la publicidad lateral y haciendo que esta permanezca visible en la pantalla aún con desplazamiento vertical y en ambos laterales en algunas páginas.&lt;/p>
&lt;p>En resoluciones menores de 1366 he optado por quitar completamente la publicidad lateral ya que aún aplicando un diseño adaptativo en cualquier caso no aparecería en los laterales porque físicamente no hay espacio suficiente.&lt;/p>
&lt;p>Así queda en las resoluciones habituales de 2560 píxeles, 1920, 1600, 1440, 1366 y 1200.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/images/diseno-blogbitix-despues-2560_huedf0efadfecec55769b50c9ecf8140a9_897237_2560x1440_fit_box_2.png" title="Diseño después con resolución 2560" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/images/diseno-blogbitix-despues-2560_huedf0efadfecec55769b50c9ecf8140a9_897237_300x200_fit_box_2.png" width="300"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/images/diseno-blogbitix-despues-1920_hud1e83883e999674e1b635811b50bec5c_578883_2560x1440_fit_box_2.png" title="Diseño después con resolución 1920" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/images/diseno-blogbitix-despues-1920_hud1e83883e999674e1b635811b50bec5c_578883_300x200_fit_box_2.png" width="300"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/images/diseno-blogbitix-despues-1600_hub5795fdf3af4442b701e63aff38f91f6_430851_2560x1440_fit_box_2.png" title="Diseño después con resolución 1600" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/images/diseno-blogbitix-despues-1600_hub5795fdf3af4442b701e63aff38f91f6_430851_300x200_fit_box_2.png" width="285"/>&lt;/a>
&lt;/figure>
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/images/diseno-blogbitix-despues-1440_hu3b54ee66f9b6ea3593ed09b22c0e9f54_442295_2560x1440_fit_box_2.png" title="Diseño después con resolución 1440" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/images/diseno-blogbitix-despues-1440_hu3b54ee66f9b6ea3593ed09b22c0e9f54_442295_300x200_fit_box_2.png" width="256"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/images/diseno-blogbitix-despues-1366_hu0e6b49fb900a5c2f7aeed64ea4244053_405070_2560x1440_fit_box_2.png" title="Diseño después con resolución 1366" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/images/diseno-blogbitix-despues-1366_hu0e6b49fb900a5c2f7aeed64ea4244053_405070_300x200_fit_box_2.png" width="243"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/images/diseno-blogbitix-despues-1200_hua796edd138dd723bd937a49f132922ff_262914_2560x1440_fit_box_2.png" title="Diseño después con resolución 1200" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/images/diseno-blogbitix-despues-1200_hua796edd138dd723bd937a49f132922ff_262914_300x200_fit_box_2.png" width="214"/>&lt;/a>
&lt;figcaption>Diseño después de los cambios a diferentes resoluciones (2560, 1920, 1600, 1440, 1366 y 1200)&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Padría hacer algún experimento o test &lt;em>a/b&lt;/em> de que diseño resulta mejor si el anterior o el contenido más ancho y medirlo por el porcentaje de rebote, tiempo medio de permanencia en la página o retorno de usuarios pero dudo que esas métricas fuesen suficientemente buenas como para determinar que un diseño sea mejor que otro, es dedicar un tiempo y esfuerzo a medir algo que considero claramente es mejor. En lo que si podría hacer algún experimento es medir que disposición de anuncios, en ubicación y tamaño da mejor resultado pero prefiero dedicar el tiempo a escribir artículos, no creo que los cambios que he hecho en los anuncios impacten muy negativamente o quiza se compense con la posición &lt;em>sticky&lt;/em> de los &lt;em>banners&lt;/em> laterales.&lt;/p>
&lt;p>También he introducirdo un &lt;em>banner&lt;/em> &lt;em>billboard&lt;/em> en la cabecera de la página a ver que tal resultado da, el &lt;em>leaderboard&lt;/em> del inicio de los artículos tenía buen rendimiento aún siendo bastante pequeño, lo he mantenido en los artículos que incluyo un resumen. En los que no tienen un resumen lo he sustituido por el &lt;em>billboard&lt;/em> ya que mantener ambos me resutlaba un exceso de publicidad. Dentro de unos meses compararé con los anteriores o del año pasado si los cambios que he hecho dan buen resultado.&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2013/12/hola-nuevo-mundo/">Hola nuevo mundo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2015/05/nuevo-diseno-en-blog-bitix/">Nuevo diseño en Blog Bitix&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="blog"/><category term="planeta-codigo"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2019/02/9-aniversario-del-blog/</id><title>9º aniversario del blog</title><updated>2019-02-05T20:00:00+01:00</updated><published>2019-02-05T20:00:00+01:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2019/02/9-aniversario-del-blog/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/hugo.svg" class="right " width="200" alt="Hugo" title="Hugo"/>
&lt;/div>
&lt;p>Ya han pasado nueve años desde que el sábado 6 de febrero del 2010 cree un blog, &lt;a href="https://elblogdepicodev.blogspot.com.es">El blog de pico.dev&lt;/a>, que fue el precedente de &lt;a href="https://picodotdev.github.io/blog-bitix/">Blog Bitix&lt;/a> cambio motivado por pasar de &lt;a href="https://www.blogger.com/">Blogger&lt;/a> a &lt;a href="http://octopress.org/">Octopress&lt;/a> con &lt;a href="https://pages.github.com/">GitHub Pages&lt;/a> y posteriormente con &lt;a href="https://gohugo.io/">Hugo&lt;/a>.&lt;/p>
&lt;p>Dicen que las bitácoras o &lt;em>blogs&lt;/em> están en decadencia por las redes sociales como &lt;a href="https://twitter.com/">Twitter&lt;/a> u otras formas de compartir contenido como los &lt;em>podcast&lt;/em> que son más cálidos por la voz humana que los fríos &lt;em>blogs&lt;/em> y vídeos de &lt;a href="https://www.youtube.com/">YouTube&lt;/a> dinámicos más útiles en ciertos casos que los estáticos &lt;em>blogs&lt;/em>, otras formas son a través de &lt;a href="https://www.linkedin.com/">LinkedIn&lt;/a> o &lt;a href="https://www.facebook.com/">Facebook&lt;/a>. Sin embargo, y a pesar de todo creo que los &lt;em>blogs&lt;/em> son una de las mejores formas de compartir contenido simplemente por el hecho de que es un contenido indexable por los buscadores cosa que ni los &lt;em>podcast&lt;/em> ni los vídeos de YouTube cumplen en la misma medida a los cuales se llega por recomendación y no por búsqueda.&lt;/p>
&lt;p>En Twitter últimamente se ha puesto de moda escribir mensajes encadenados e hilos, algunos son un contenido muy bueno pero personalmente me gustan poco estos hilos por el simple hecho de la misma naturaleza de Twitter de transmitir la información, no son indexables por los buscadores, tienen un momento de gloria cuando son compartidos con &lt;em>retwets&lt;/em> pero al cabo del tiempo se pierden, una pena. &lt;a href="https://www.linkedin.com/">LinkedIn&lt;/a> pide registrarse para acceder a su contenido y Facebook ¡no, gracias! por motivos de privacidad. Por ello no he tenido hasta el momento anhelos de compartir el contenido que elaboro en cualquier otro de estos otros formatos.&lt;/p>
&lt;p>También han surgido los canales de &lt;a href="https://telegram.org/">Telegram&lt;/a> para grupos de usuarios por ejemplo para &lt;a href="https://www.archlinux.org/">Arch Linux&lt;/a>, &lt;a href="https://www.gnome.org/">GNOME&lt;/a>, &lt;a href="https://www.linux.com/">Linux&lt;/a>, &amp;hellip; que ofrecen ayuda sobre estos temas, vamos lo que son los antiguos foros web pero en un formato mucho peor, es muy probable que recurrentemente se pregunte cada cierto tiempo la misma pregunta y las contestaciones no quedan disponibles para otros usuarios en el futuro. Las redes sociales ofrecen inmediatez, mayor disponibilidad con los dispositivos móviles y contacto directo pero como formatos para contenido me parecen un atraso con respecto a la web y los &lt;em>blogs&lt;/em>.&lt;/p>
&lt;p>Desistid de compartir contenido que debiera perdurar y ser encontrado en las anteriores formas, su éxito se debe a que en ellas están los usuarios, que solo es necesario una cuenta en esos servicios y se obtiene respuesta rápidamente, pero para mí ¡larga vida a la web, HTML, los &lt;em>blogs&lt;/em> y a los &lt;em>bloggers&lt;/em>!.&lt;/p>
&lt;p>Lo que sí podría intentar hacer es escribir artículos en inglés, alguno ya escribí a modo de prueba y es que el público potencial sería todo el mundo en vez de solo los hispanohablantes. Sería una buena forma de que practicase el inglés pero quizá lo determinante es que me requeriría mayor tiempo para escribir el artículo. El público sería mayor pero también hay mucha más competencia al haber más &lt;em>blogs&lt;/em> en ese idioma.&lt;/p>
&lt;p>Cada letra, cada tilde, cada coma y punto, cada imagen de un artículo está ahí y en la posición en la que está porque así alguien lo quiso e hizo con cada pulsación de tecla y clic de ratón. Uso varias herramientas para publicar el contenido pero no hay ninguna que me ayude a escribir el contenido de los artículos y crear los ejemplos, es todo manual y lleva horas hacerlo, este artículo entre tres y cuatro horas y solo contiene unos pocos párrafos, más de cinco horas los que llevan ejemplo y más aún si tengo que investigar para hacerlo. Múltiplica eso por 380 artículos escritos hasta el momento y 566 sumando los de El blog de pico.dev y da una buena cantidad de horas que no son parte mi trabajo sino simplemente en mi caso un entretenimiento.&lt;/p>
&lt;p>En los artículos que escribo no suelo expresar habitualmente mis sentimientos o temas personales cosa que algunos otros &lt;em>bloggers&lt;/em> hacen, puede crear un vínculo emocional entre &lt;em>blogger&lt;/em> y lectores pero simplemente no es mi forma de escribir contenido. Podría también escribir menos artículos pero más elaborados o de mayor aporte, en buena medida nada de lo que escribo es nada que no se encuentre sin mucha dificultad en otro lado, eso sí si muestro algo de código suelo incluir en &lt;a href="https://github.com/">GitHub&lt;/a> el código fuente del ejemplo completo cosa que ya no es tan habitual encontrar.&lt;/p>
&lt;p>He llegado al noveno año y con los artículos que tengo escritos en borrador y pendientes de publicar creo que llegaré a la cifra más redonda de la década. &lt;a href="https://picodotdev.github.io/blog-bitix/2019/02/log-de-sqls-y-de-sqls-lentas-en-myql-y-postgresql/">El artículo anterior&lt;/a>, el #379 de Blog Bitix lo tenía escrito en borrador desde el año 2016, casi dos años, es un ejemplo del tiempo que tengo algunos sin publicar, si los contabilizo para ser más exacto son 70 artículos que tengo escritos en borrador y pendientes de publicar que es lo que más me exige. Por lo que sí creo que llegaré al año 10 publicando artículos.&lt;/p></content><category term="blog"/><category term="opinion"/><category term="planeta-codigo"/><category term="planeta-linux"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/</id><title>Novedades y nuevas características de Java 11</title><updated>2018-09-29T14:00:00+02:00</updated><published>2018-09-28T21:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>&lt;strong>Java 11 es la primera versión de soporte extendido publicada o LTS bajo el nuevo ciclo de publicaciones que adoptó Java en la versión 9. Añade varias novedades importantes en cuanto a seguridad y elimina otras que en versiones anteriores ya fueron marcadas como desaconsejadas.&lt;/strong>&lt;/p>
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;p>En la plataforma Java era habitual que entre versión y versión mayor pasasen varios años normalmente 3 o más. Este ciclo de publicaciones no se adapta a las necesidades de todas las empresas, organizaciones y usuarios. Algunas empresas y usuarios desean ciclos de publicaciones más cortos quizá con no tantas novedades en cada uno de ellos pero sí de forma más constante incorporando mejoras. Otras organizaciones necesitan confiar en una versión que tenga un ciclo de soporte largo para sus aplicaciones.&lt;/p>
&lt;p>Para adaptarse a ambos requerimientos Java a partir de Java 9 adoptó un nuevo ciclo de publicaciones siendo cada seis meses para los que desean mejoras de forma regular y cada tres años para los que necesitan soporte extendido. &lt;a href="https://picodotdev.github.io/blog-bitix/2017/09/novedades-de-java-9-mas-alla-de-la-modularidad/">Java 9 incorporó la esperada modularización&lt;/a> que cambia la forma de desarrollo de las aplicaciones con numerosas mejoras. &lt;a href="https://picodotdev.github.io/blog-bitix/2018/03/novedades-de-java-10/">Java 10 añadío la inferencia de tipos para variables locales&lt;/a> con la palabra reservada &lt;em>var&lt;/em>. Ahora Java 11 siendo una versión de soporte extendido o LTS, el soporte de Java 11 está planificado que dure hasta 2023 y hasta 2026 de forma extendida lo que son 8 años de soporte.&lt;/p>
&lt;p>En esta nueva versión de Java 11 publicada el 25 de septiembre de 2018 las novedades no son tan relevantes como lo fuero Java 8 con las &lt;em>lambadas&lt;/em> y Java 9 con los módulos pero continúa con las mejoras incrementales y proporciona una versión LTS en la que empresas grandes confiarán como base para sus desarrollos.&lt;/p>
&lt;p>La lista más relevante de &lt;a href="http://openjdk.java.net/projects/jdk/11/">novedades de Java 11&lt;/a> es la siguiente:&lt;/p>
&lt;ul>
&lt;li>181: &lt;a href="http://openjdk.java.net/jeps/181">Nest-Based Access Control&lt;/a>&lt;/li>
&lt;li>309: &lt;a href="http://openjdk.java.net/jeps/309">Dynamic Class-File Constants&lt;/a>&lt;/li>
&lt;li>315: &lt;a href="http://openjdk.java.net/jeps/315">Improve Aarch64 Intrinsics&lt;/a>&lt;/li>
&lt;li>318: &lt;a href="http://openjdk.java.net/jeps/318">Epsilon: A No-Op Garbage Collector&lt;/a>&lt;/li>
&lt;li>320: &lt;a href="http://openjdk.java.net/jeps/320">Remove the Java EE and CORBA Modules&lt;/a>&lt;/li>
&lt;li>321: &lt;a href="http://openjdk.java.net/jeps/321">HTTP Client (Standard)&lt;/a>&lt;/li>
&lt;li>323: &lt;a href="http://openjdk.java.net/jeps/323">Local-Variable Syntax for Lambda Parameters&lt;/a>&lt;/li>
&lt;li>324: &lt;a href="http://openjdk.java.net/jeps/324">Key Agreement with Curve25519 and Curve448&lt;/a>&lt;/li>
&lt;li>327: &lt;a href="http://openjdk.java.net/jeps/327">Unicode 10&lt;/a>&lt;/li>
&lt;li>328: &lt;a href="http://openjdk.java.net/jeps/328">Flight Recorder&lt;/a>&lt;/li>
&lt;li>329: &lt;a href="http://openjdk.java.net/jeps/329">ChaCha20 and Poly1305 Cryptographic Algorithms&lt;/a>&lt;/li>
&lt;li>330: &lt;a href="http://openjdk.java.net/jeps/330">Launch Single-File Source-Code Programs&lt;/a>&lt;/li>
&lt;li>331: &lt;a href="http://openjdk.java.net/jeps/331">Low-Overhead Heap Profiling&lt;/a>&lt;/li>
&lt;li>332: &lt;a href="http://openjdk.java.net/jeps/332">Transport Layer Security (TLS) 1.3&lt;/a>&lt;/li>
&lt;li>333: &lt;a href="http://openjdk.java.net/jeps/333">ZGC: A Scalable Low-Latency Garbage Collector (Experimental)&lt;/a>&lt;/li>
&lt;li>335: &lt;a href="http://openjdk.java.net/jeps/335">Deprecate the Nashorn JavaScript Engine&lt;/a>&lt;/li>
&lt;li>336: &lt;a href="http://openjdk.java.net/jeps/336">Deprecate the Pack200 Tools and API&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="eliminación-de-módulos-java-ee-y-corba">Eliminación de módulos Java EE y CORBA&lt;/h3>
&lt;p>Se eliminan del JDK paquetes ya desaconsejados hace varias versiones anteriores y que no eran muy usados en cualquier caso. Estos paquetes son los de CORBA una forma de llamada a procedimientos remotos que se utilizó como alternativa a RMI pero que nunca tuvo un uso extendido prefiriéndose SOAP o más recientemente interfaces REST.&lt;/p>
&lt;p>La lista de paquetes eliminados son los siguientes.&lt;/p>
&lt;ul>
&lt;li>&lt;em>java.xml.ws&lt;/em> (JAX-WS, plus the related technologies SAAJ and Web Services Metadata)&lt;/li>
&lt;li>&lt;em>java.xml.bind&lt;/em> (JAXB)&lt;/li>
&lt;li>&lt;em>java.activation&lt;/em> (JAF)&lt;/li>
&lt;li>&lt;em>java.xml.ws.annotation&lt;/em> (Common Annotations)&lt;/li>
&lt;li>&lt;em>java.corba&lt;/em> (CORBA)&lt;/li>
&lt;li>&lt;em>java.transaction&lt;/em> (JTA)&lt;/li>
&lt;li>&lt;em>java.se.ee&lt;/em> (Aggregator module for the six modules above)&lt;/li>
&lt;li>&lt;em>jdk.xml.ws&lt;/em> (Tools for JAX-WS)&lt;/li>
&lt;li>&lt;em>jdk.xml.bind&lt;/em> (Tools for JAXB)&lt;/li>
&lt;/ul>
&lt;h3 id="sintaxis-de-variables-locales-para-parámetros-en-lambdas">Sintaxis de variables locales para parámetros en lambdas&lt;/h3>
&lt;p>Ahora los parámetros de una lambda pueden declararse con &lt;em>var&lt;/em> con inferencia de tipos. Esto proporciona uniformidad en el lenguaje al declarar los parámetros permite usar anotaciones en los parámetros de la función lambda como &lt;em>@NotNull&lt;/em>.&lt;/p>
&lt;p>Esta funcionalidad tiene algunas restricciones. No se puede mezclar el uso y no uso de &lt;em>var&lt;/em> y no se puede mezclar el uso de &lt;em>var&lt;/em> y tipos en &lt;em>lambdas&lt;/em> explícitas. Son consideradas ilegales por el compilador y producirá un error en tiempo de compilación.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="o">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">process&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">(&lt;/span>&lt;span class="n">var&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">var&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">process&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">(&lt;/span>&lt;span class="nd">@NotNull&lt;/span> &lt;span class="n">var&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nd">@NotNull&lt;/span> &lt;span class="n">var&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">process&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">(&lt;/span>&lt;span class="n">var&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">process&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="c1">// no se puede mezclar var y no var
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">var&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">process&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="o">/&lt;/span> &lt;span class="n">no&lt;/span> &lt;span class="n">se&lt;/span> &lt;span class="n">puede&lt;/span> &lt;span class="n">mezclar&lt;/span> &lt;span class="n">var&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="n">tipos&lt;/span> &lt;span class="n">en&lt;/span> &lt;span class="n">lamdas&lt;/span> &lt;span class="n">explícitas&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/code/Lambda.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/code/Lambda.java" target="_blank">Lambda.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="media media-video" style="text-align: center;">
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/0eWgRyanQI0?rel=0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen>&lt;/iframe>
&lt;/div>
&lt;h3 id="cliente-http">Cliente HTTP&lt;/h3>
&lt;p>En Java 9 se incorporó de forma experimental un cliente HTTP con soporte para HTTP/2 en el propio JDK. En Java 11 alcanza la categoría de estable. Este cliente HTTP es una forma sencilla de hacer llamadas a servicios web ya sean REST o &lt;a href="https://graphql.org/">GraphQL&lt;/a>. Las clases del nuevo cliente se encuentran en el paquete &lt;a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/package-summary.html">java.net.http&lt;/a>. Al estar este cliente HTTP incorporado en el JDK no será necesario depender de librerías de terceros.&lt;/p>
&lt;div class="media media-video" style="text-align: center;">
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/sZSdWq490Vw?rel=0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen>&lt;/iframe>
&lt;/div>
&lt;h3 id="ejecución-desde-archivo-de-código-fuente-único">Ejecución desde archivo de código fuente único&lt;/h3>
&lt;p>Para ejecutar un programa Java es necesario compilarlo a &lt;em>bytecode&lt;/em> y posteriormente ejecutarlos. Se necesitan dos pasos. Para facilitar la ejecución de los programas que se componen de un único archivo de código fuente se añade la posibilidad de lanzar un programa desde el archivo de código fuente. Esto es útil par programas pequeños o para los casos de estar aprendiendo el lenguaje.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">HelloWorld&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Hello, World&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/code/HelloWorld.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/code/HelloWorld.java" target="_blank">HelloWorld.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ java HelloWorld.java
Hello, World&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/code/java-helloworld.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/code/java-helloworld.sh" target="_blank">java-helloworld.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Esta funcionalidad es compatible con los &lt;em>shebang&lt;/em> de los sistemas Unix.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!java --source 11
&lt;/span>&lt;span class="cp">&lt;/span>
public class HelloWorld &lt;span class="o">{&lt;/span>
public static void main&lt;span class="o">(&lt;/span>String&lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span> args&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
System.out.println&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;Hello, World&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/code/HelloWorld.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/code/HelloWorld.sh" target="_blank">helloworld.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ chmod +x ./HelloWorld.sh
$ ./HelloWorld.sh
Hello, World&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/code/hello.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/code/hello.sh" target="_blank">hello.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/images/java-helloworld_huaa51cd775853ec98b86099eb2028f7dc_95828_2560x1440_fit_box_2.png" title="Java 11 HelloWorld!" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/images/java-helloworld_huaa51cd775853ec98b86099eb2028f7dc_95828_6500x450_fit_box_2.png" width="700"/>&lt;/a>
&lt;figcaption>Java 11 HelloWorld!&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;h3 id="unicode-10">Unicode 10&lt;/h3>
&lt;p>Tratar texto es una parte importante casi de cualquier aplicación, este soporte de Unicode 10 añade 16018 nuevos caracteres soportados, 128 nuevos emojis y 19 símbolos nuevos para el estándar en televisiones 4K.&lt;/p>
&lt;h3 id="tls-1-3">TLS 1.3&lt;/h3>
&lt;p>Algunas de las versiones anteriores de TLS ya no se consideran seguras añadir soporte para la versión más reciente TLS 1.3 permite a las aplicaciones Java ser más compatibles y más seguras. El protocolo TLS 1.3 proporciona dos beneficios principalmente, es más seguro y más rápido que sus versiones anteriores.&lt;/p>
&lt;div class="media media-video" style="text-align: center;">
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/HxDb5nwvN_Y?rel=0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen>&lt;/iframe>
&lt;/div>
&lt;h3 id="otras-mejoras">Otras mejoras&lt;/h3>
&lt;p>Se añaden implementaciones específicas para la arquitectura Aarch64 para un mejor rendimiento en la plataforma &lt;a href="https://www.arm.com/">ARM&lt;/a> en algunas funciones. Se añade de forma experimental un nuevo recolector de basura ZGC con pausas para recolectar basura menores capaz de manejar cantidades de memoria pequeñas de megabytes y grandes de terabytes. Al mismo tiempo se añade un recolector de basura Epsilon que no reclama la memoria. Se añade soporte para los algoritmos criptográficos &lt;em>ChaCha20&lt;/em> y &lt;em>Poly1305&lt;/em> junto con otras funcionalidades criptográficas &lt;em>RSASSA-PSS&lt;/em>, &lt;em>AES Encryption with HMAC-SHA2 for Kerberos 5&lt;/em>, &amp;hellip;&lt;/p>
&lt;p>Se añaden varios métodos a la clase &lt;a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html">String&lt;/a> muy utilizados con los que no será necesario recurrie a librerías de terceros. Estos métodos son &lt;a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#repeat(int)">repeat&lt;/a>, &lt;a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#isBlank()">isBlank&lt;/a>, &lt;a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#strip()">strip&lt;/a>, &lt;a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#stripLeading()">stripLeading&lt;/a>, &lt;a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#stripTrailing()">stripTrailing&lt;/a>, &lt;a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#lines()">lines&lt;/a>. En otras clases de la API también se han añadido nuevos métodos.&lt;/p>
&lt;p>Java que tradicionalmente marcaba como &lt;em>deprecarted&lt;/em> características pero que las seguía manteniendo por compatibilidad hacia atrás parece que ha empezado a eliminar varias de esas características desaconsejadas de forma más agresiva. No solo se añaden nuevas características, también se eliminan algunas y se desaconseja el uso de otras entre ellas el visor de &lt;em>applets&lt;/em>, eliminación de &lt;em>Unsafe.defineClass&lt;/em>, &lt;em>Thread.destroy()&lt;/em> y &lt;em>Thread.stop(Throwable)&lt;/em>, eliminación de las funcionalidades de despliegue de &lt;em>Java Plugin&lt;/em> y &lt;em>Java Web Start&lt;/em> que se marcaron como desaconsejadas en Java 9 y para eliminación en Java 10 finalmente en Java 11 se han eliminado sin reemplazo.&lt;/p>
&lt;p>Oracle ya no ofrece el entorno de ejecución JRE ni versiones de 32 bits para Windows. JavaFX ya no está incluído en el JDK pero seguirá siendo utilizable como librería independiente.&lt;/p>
&lt;p>Las anteriores son las funcionalidades que he considerado más destacables para todos los usuarios., También hay otras funcionalidades añadidas, soporte eliminado para funciones específicas o de funcionamiento interno.&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://developer.oracle.com/java/java11">Introducing Java SE 11&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.oracle.com/technetwork/java/javase/11-relnote-issues-5012449.html">JDK 11 Release Notes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/en/java/javase/11/">Java 11 Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/en/java/javase/11/docs/api/index.html">Java 11 Javadoc&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blogs.oracle.com/java-platform-group/introducing-java-se-11">Introducing Java SE 11 (blog)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blogs.oracle.com/java-platform-group/oracle-jdk-releases-for-java-11-and-later">Oracle JDK Releases for Java 11 and Later&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.takipi.com/java-11-will-include-more-than-just-features/">Java 11 Will Include More Than Just Features&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.azul.com/90-new-features-and-apis-in-jdk-11/">90 New Features (and APIs) in JDK 11&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://4comprehension.com/java-11-string-api-updates/">Java 11 String API Updates&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/eclipse/jetty.project/issues/2487">Java 11 removes EE and Corba packages&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://twitter.com/java/status/1044609723012665344">Java Mission Control - Now serving OpenJDK binaries too!&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/en/java/javase/11/migrate/index.html">Oracle JDK 11 Migration Guide&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.java-countdown.xyz/">Countdown to Java Release Date&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="blog"/><category term="java"/><category term="planeta-codigo"/><category term="programacion"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/06/hemeroteca-13/</id><title>Hemeroteca #13</title><updated>2018-06-30T10:00:00+02:00</updated><published>2018-06-30T10:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/06/hemeroteca-13/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>El primer semestre del 2018 ya ha pasado. Estos primeros meses he publicado 38 artículos sobre la temática habitual de esta bitácora como programación, software libre, &lt;a href="https://www.gnu.org/">GNU&lt;/a>/&lt;a href="https://www.linux.com/">Linux&lt;/a> algunos de opinión relacionados con la tecnología. Las visitas e ingresos de AdSense no han crecido tanto como en ocasiones anteriores pero se han mantenido a un nivel similar sobre los 30K páginas vistas y los 30€ de ingresos en AdSense que no están nada mal.&lt;/p>
&lt;p>Dado que desde hace unos cuantos meses no tengo ordenador propio y solo dispongo de el del trabajo normalmente solo los fines de semana no he podido investigar, probar tantas cosas que me gustaría y he publicado más artículos de opinión que de software libre y GNU/Linux. Como comento en algunos de los artículos publicados más o menos ya tengo decidido que mi siguiente equipo será un &lt;a href="https://en.wikipedia.org/wiki/Next_Unit_of_Computing">Intel NUC&lt;/a> pero estoy esperando a que salgan esta segunda mitad los Bean Canyon para que el salto que experimente sea notable tanto en el microprocesador con un &lt;a href="https://ark.intel.com/es-es/products/124967/Intel-Core-i5-8250U-Processor-6M-Cache-up-to-3_40-GHz">Intel Core i5 8250U&lt;/a> o &lt;a href="https://ark.intel.com/products/135935/Intel-Core-i5-8259U-Processor-6M-Cache-up-to-3_80-GHz">i5-8259U&lt;/a>, 4 núcleos y 8 hilos, 6 MiB de caché y 32 GiB de memoria sobre lo que tenía antes un &lt;a href="https://ark.intel.com/es-es/products/67355/Intel-Core-i5-3210M-Processor-3M-Cache-up-to-3_10-GHz-rPGA">Intel Core i5 3210M&lt;/a>, 3 MiB de caché, 2 núcleos, 4 hilos y 8 GiB de memoria. Con tal cantidad de memoria podré hacer algunas pruebas con contenedores y virtualización que con solo 8 GiB de memoria ya incluso se me quedaba escaso. Cuando adquiera este nuevo equipo publicaré varios artículos con el desempaquetado o &lt;em>unboxing&lt;/em> y el análisis de varios de esos componentes.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/06/hemeroteca-13/images/analytics_hu8ba3bde248b5428d7e505641b1455469_257538_2560x1440_fit_box_2.png" title="Evolución Analytics" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/06/hemeroteca-13/images/analytics_hu8ba3bde248b5428d7e505641b1455469_257538_650x450_fit_box_2.png" width="650"/>&lt;/a>
&lt;/figure>
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/06/hemeroteca-13/images/adsense_huc0e3ed4b9192027e33752b7087e42910_150019_2560x1440_fit_box_2.png" title="Evolución AdSense" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/06/hemeroteca-13/images/adsense_huc0e3ed4b9192027e33752b7087e42910_150019_650x450_fit_box_2.png" width="650"/>&lt;/a>
&lt;figcaption>Evolución Analytics y AdSense&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Entre los artículos sobre programación han estado los habituales sobre Java, destacando las novedades de Java 10, un par sobre &lt;a href="https://tapestry.apache.org/">Apache Tapestry&lt;/a>. Como resolver varios de los problemas clásicos de sincronización, programación concurrente en Java, &lt;a href="https://www.webjars.org/">Webjars&lt;/a>, &amp;hellip;&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/01/integracion-y-entrega-continua-con-gitlab-sobre-docker/">Integración y entrega continua con GitLab sobre Docker&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/01/gestion-de-peticiones-wiki-y-pages-con-gitlab/">Gestión de peticiones, wiki y pages con GitLab&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/02/analisis-estatico-de-codigo-con-pmd-y-un-ejemplo/">Análisis estático de código con PMD y un ejemplo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/02/las-6-plus-2-formas-normales-de-las-bases-de-datos-relacionales/">Las 6+2 formas normales de las bases de datos relacionales&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/02/referencias-a-grupos-de-captura-en-expresiones-regulares-y-reemplazos/">Referencias a grupos de captura en expresiones regulares y reemplazos&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/02/el-problema-de-concurrencia-de-la-cena-de-los-filosofos-resuelto-con-java/">El problema de concurrencia de la cena de los filósofos resuelto con Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/03/el-problema-de-concurrencia-del-agente-y-los-fumadores-resuelto-en-java/">El problema de concurrencia del agente y los fumadores resuelto en Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/03/novedades-de-java-10/">Novedades de Java 10&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/03/la-herramienta-jlink-para-generar-runtimes-de-java-incluyendo-exclusivamente-los-modulos-que-usa-una-aplicacion/">La herramienta jlink para generar runtimes de Java incluyendo exclusivamente los módulos que usa una aplicación&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/03/que-es-y-como-funciona-el-type-erasure-en-java/">Qué es y cómo funciona el type erasure en Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/04/introduccion-a-nio-2-el-sistema-de-entrada-salida-de-java/">Introducción a NIO.2, el sistema de entrada/salida de Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/04/la-controversia-sobre-las-excepciones-checked-y-unchecked/">La controversia sobre las excepciones checked y unchecked&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/04/la-sentencia-try-with-resources-de-java/">La sentencia try-with-resources de Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/04/la-clase-optional-de-java-para-evitar-la-excepcion-nullpointerexception/">La clase Optional de Java para evitar la excepción NullPointerException&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/05/plantillas-con-etiquetas-no-balanceadas-en-apache-tapestry/">Plantillas con etiquetas no balanceadas en Apache Tapestry&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/05/gestion-de-errores-con-either-o-try-en-vez-de-con-codigo-de-error-null-optional-checked-exception-o-unchecked-exception/">Gestión de errores con Either o Try en vez de con código de error, null, Optional, checked exception o unchecked exception&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/05/depurar-codigo-javascript-con-la-instruccion-debugger/">Depurar código JavaScript con la instrucción debugger&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/05/recuperar-datos-eficientemente-en-graphql-usando-batching/">Recuperar datos eficientemente en GraphQL usando batching&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/05/empaquetar-una-aplicacion-java-en-un-archivo-jar-ejecutable-incluyendo-sus-dependencias/">Empaquetar una aplicación Java en un archivo jar ejecutable incluyendo sus dependencias&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/06/dependencias-sobre-librerias-de-lado-de-cliente-con-webjars-en-una-aplicacion-web-java/">Dependencias sobre librerías de lado de cliente con Webjars en una aplicación web Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/06/actualizar-las-versiones-de-las-librerias-javascript-built-in-de-apache-tapestry/">Actualizar las versiones de las librerías JavaScript built-in de Apache Tapestry&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/06/soporte-para-lanzar-eventos-desde-javascript-con-ajax-en-un-componente-de-apache-tapestry/">Soporte para lanzar eventos desde JavaScript con Ajax en un componente de Apache Tapestry&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/06/java-magazine-la-publicacion-gratuita-sobre-java/">Java Magazine, la publicación gratuita sobre Java&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>En la categoría de software libre o GNU/Linux como tener una consola de juegos retro con una Raspberry Pi, varias computadoras similares a la Raspberry Pi.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/02/consola-de-juegos-retro-con-lakka-y-una-raspberry-pi/">Consola de juegos retro con Lakka y una Raspberry Pi&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/03/7-plus-computadoras-baratas-del-tamano-de-una-tarjeta-de-credito-basadas-en-gnu-linux-y-arm/">7+ computadoras baratas del tamaño de una tarjeta de crédito basadas en GNU/Linux y ARM&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/04/prompt-de-la-terminal-personalizado-en-carpetas-de-git-con-el-interprete-bash/">Prompt de la terminal personalizado en carpetas de git con el intérprete Bash&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/04/personalizar-el-prompt-del-sistema-del-interprete-de-comandos-bash/">Personalizar el prompt del sistema del intérprete de comandos Bash&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/05/generador-de-paginas-web-estaticas-y-bitacoras-con-hugo/">Generador de páginas web estáticas y bitácoras Hugo&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>En la categoría de opinión están el importante problema de seguridad que se hacía público a principio de año y que afectaba a todos los microprocesadores de Intel fabricados desde hace una década con &lt;em>Meltdown&lt;/em>. &lt;a href="https://www.intel.es">Intel&lt;/a>, &lt;a href="https://www.amd.com/es">AMD&lt;/a> y &lt;a href="https://www.arm.com/">ARM&lt;/a> afectados otras variantes denominadas &lt;em>Spectre&lt;/em>. Como el hardware estos microprocesadores es defectuoso ni solucionable por microcódigo solo se ha podido mitigar mediante parches de software en los nucleos de los sistemas operativos y compiladores que en cualquier caso pueden suponer una merma en el rendimiento. Aún no se conoce un software capaz de aprovechar estos fallos de seguridad pero no quiere decir que no se descubran. Afecta aún más si cabe a entornos de computación en la nube al compartirse los recursos de computación, en estos entornos es especialmente grabe por seguridad ya que el fallo permite leer la memoria del &lt;em>kernel&lt;/em>, aplicaciones, contenedores, datos, claves, &amp;hellip;&lt;/p>
&lt;p>También publiqué un artículo el ordenador con las opciones que barajaba, una opinión sobre el &lt;a href="https://slimbook.es/aio-curve-el-all-in-one-curvo-de-gnu-linux">Slimbook AIO Curve&lt;/a> y cómo internet está transformando el sector del comercio y distribución o mi opinión de que me quedo GNU/Linux sobre un Mac. También los artículos con las opciones que estoy tomando para comprar equipo ya no a mucho tiempo tardar.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/01/articulo-5-de-yo-apoyo-al-software-libre/">Artículo #5 de Yo apoyo al software libre&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/01/explicacion-del-fallo-de-seguridad-meltdown-y-spectre-en-los-microprocesadores-intel/">Explicación del fallo de seguridad Meltdown y Spectre en los microprocesadores Intel&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/">Conferencia BilboStack 2018&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/02/8-aniversario-del-blog/">8º aniversario del blog&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/03/tu-con-mac-yo-con-mi-gnu-linux/">Tú con tu Mac, yo con mi GNU/Linux&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/04/intentando-elegir-portatil-nuc-o-mini-itx-para-comprar-nuevo-equipo/">Intentando elegir portátil, NUC o mini ITX para comprar nuevo equipo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/04/sobre-el-slimbook-aio-curve/">Sobre el Slimbook AIO Curve&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/05/sobre-el-comercio-electronico-el-corte-ingles-y-amazon/">Sobre el comercio electrónico, El Corte Inglés y Amazon&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/06/decidido-a-comprar-un-intel-nuc-entre-las-opciones-que-he-evaluado/">Decidido a comprar un Intel NUC entre las opciones que he evaluado&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Para finalizar otro artículo fuera de tema del habitual de este blog con los plantones de roble que tengo, como han crecido y como están desde que los planté el año pasado. Aunque aún no lo he publicado algunos están mostrando síntomas de fallecimiento y lo que es peor no tengo claro por que si por la cantidad de agua, excesiva luz directa del sol, humedad, calor, &amp;hellip;&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2018/05/los-plantones-de-roble/">Los plantones de roble&lt;/a>&lt;/li>
&lt;/ul></content><category term="blog"/><category term="hemeroteca"/><category term="java"/><category term="planeta-codigo"/><category term="programacion"/><category term="software"/><category term="software-libre"/><category term="tapestry"/><category term="gnu-linux"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/05/generador-de-paginas-web-estaticas-y-bitacoras-con-hugo/</id><title>Generador de páginas web estáticas y bitácoras Hugo</title><updated>2018-06-05T18:30:00+02:00</updated><published>2018-05-25T18:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/05/generador-de-paginas-web-estaticas-y-bitacoras-con-hugo/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>&lt;strong>Hugo es un de las mejores herramientas en la categoría de generadores de páginas web estáticas, también puede utilizarse para generar bitácoras. Su fácil instalación, rapidez, personalización o su gran sistema de plantillas y taxonomía son varias de sus características destacadas. Con Hugo conseguí resolver varias de las necesidades que tenía para Blog Bitix, la gestión de enlaces internos y externos, personalización de diseño y procesado de imágenes.&lt;/strong>&lt;/p>
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/hugo.svg" class="right " width="200" alt="Hugo" title="Hugo"/>
&lt;/div>
&lt;p>En diciembre del 2013 pase de usar &lt;a href="https://www.blogger.com/">Blogger&lt;/a> a usar &lt;a href="http://octopress.org/">Ocotpress&lt;/a> junto con &lt;a href="https://pages.github.com/">GitHub Pages&lt;/a> para el hospedaje. En mayo del 2015 modifiqué mi bitácora para usar en vez de &lt;a href="http://octopress.org/">Octopress&lt;/a> la herramienta equivalente &lt;a href="https://gohugo.io/">Hugo&lt;/a>, ambas sirven para generar sitios web estáticos formados únicamente por HTML, CSS, imágenes, documentos y JavaScript. Tanto Octopress, &lt;a href="https://jekyllrb.com/">Jekyll&lt;/a> como Hugo y otros como &lt;a href="https://docs.getpelican.com/en/stable/">Pelican&lt;/a> son similares, a partir de archivos normalmente en formato &lt;em>markdown&lt;/em> genera el HTML de la página web o bitácora junto con los recursos estáticos que necesite. Cada una de estas opciones son adecuadas para páginas de presencia en internet y bitácoras.&lt;/p>
&lt;p>Varían en el lenguaje de programación que emplean, Octopress usa &lt;a href="https://www.ruby-lang.org/es/">Ruby&lt;/a> y Hugo usa &lt;a href="https://golang.org/">Go&lt;/a>, y el formato de las plantillas que utilizan para personalizar la generación del contenido. La &lt;a href="https://picodotdev.github.io/blog-bitix/2014/03/guia-para-la-creacion-de-un-blog-con-octopress/">migración desde Blogger a Octopress&lt;/a> que hice en 2013 me supuso una gran mejora al editar los artículos. La edición de los artículos se puede hacer con cualquier editor de textos en la computadora local en vez de usar una editor en un navegador mucho más limitado y lento, además de editar el texto la gestión de las imágenes es mucho más simple al tratarse como simples archivos que basta colocar entre el código fuente de la bitácora que usará el generador para producir la página web o bitácora y no menos importante aprovechar la corrección ortográfica de las palabras que en mi caso hago con &lt;a href="https://www.vim.org/">vim&lt;/a>, no me imagino la gran cantidad de errores que tendré en los artículos de Blogger y no me habré dado cuenta a pesar de siempre leer un par de veces cada artículo antes de pubicarlo. El &lt;a href="https://picodotdev.github.io/blog-bitix/2015/05/nuevo-diseno-en-blog-bitix/">cambio de Octopress a Hugo&lt;/a> más tarde me permitió otros aspectos importantes a la hora de editar los artículos.&lt;/p>
&lt;p>La web está formada por un conjunto de páginas enlazadas, la gestión de los enlaces es un aspecto muy importante en una página web y en una bitácora es igual. Si una página a la que hacíamos referencia cambia de dirección todos los enlaces que tuviésemos quedarán rotos. Hay varias posibilidades para &lt;a href="https://picodotdev.github.io/blog-bitix/2015/12/como-buscar-los-enlaces-rotos-de-un-sitio-web/">buscar enlaces rotos&lt;/a>, encontrados y sustituirlos usando Blogger es complicado ya que hay que usar el lento y poco cómodo editor web, usando Octopress era más sencillo haciendo una búsqueda y reemplazo en los archivos de texto en formato &lt;em>markdown&lt;/em> con un buen editor de textos pero con Hugo me resulta mucho más sencillo por la forma en que he organizado el código fuente. Los enlaces comunes que utilizo en múltiples artículos los incluyo en un &lt;a href="https://github.com/picodotdev/blog-bitix/blob/master/layouts/shortcodes/links.html">&lt;em>shortcode&lt;/em>&lt;/a> y otro para los &lt;a href="https://github.com/picodotdev/blog-bitix/blob/master/layouts/shortcodes/postslinks.html">propios artículos del blog&lt;/a> y luego en la página o artículo hago referencia a ellos usando un identificador de forma que si un día cambia una página de dirección o una URL de algún artículo solo he de hacer la sustitución en un único lugar en esos &lt;em>shortcodes&lt;/em>. Con &lt;a href="https://disqus.com/">Disqus&lt;/a> externalizo los comentarios.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2016/09/gestionar-los-enlaces-de-una-bitacora-con-hugo/">Gestionar los enlaces de una bitácora con Hugo&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>La gestión de las imágenes es otro aspecto que si no se organiza se acaba con un directorio sin ninguna organización donde es complicado saber que imágenes utiliza cada artículo. Los principales directorios que utilizo son dos uno para &lt;a href="https://github.com/picodotdev/blog-bitix/tree/master/static/assets/images/logotipos">imágenes de logotipos&lt;/a> y otro para las &lt;a href="https://github.com/picodotdev/blog-bitix/tree/master/static/assets/images/posts">imágenes de cada artículo&lt;/a> con una subcarpeta por año y otra con el identificador del artículo. Hasta hace poco usaba &lt;a href="https://www.imagemagick.org">ImageMagick&lt;/a> para producir las previsulizaciones de las imágenes y una reducción de las imágenes originales. Recientemente en Hugo se ha incorporado la funcionalidad de aplicar procesado a las imágenes con lo que es posible generar estas previsualizaciones y reducciones sin necesidad de perder las &lt;a href="https://github.com/picodotdev/blog-bitix/tree/master/content/post/2018/2018-05-04-los-plantones-de-roble/images">imágenes originales&lt;/a>, esto tiene la ventaja de que si un tiempo después hay que hacer algún cambio a un imagen se puede utilizar la original. También podido simplificar la forma de organizar las imágenes, ahora al lado del artículo &lt;em>markdown&lt;/em> en que se usan.&lt;/p>
&lt;p>Tanto la gestión de enlaces como de los recursos estáticos es algo que no podía hacer con Blogger y fue uno de los principales motivos para migrar a un generador estático de páginas web. Como todo son archivos estáticos lo único que hace falta es un servidor web, hay varias opciones de hospedaje bastante baratas al no necesitar un lenguaje de programación en el servidor como PHP ni una base de datos relacional. Yo utilizo GitHub Pages que es incluso sin coste. Usando algunas de las &lt;a href="https://picodotdev.github.io/blog-bitix/2016/11/3-formas-sencillas-de-monetizar-un-blog/">varias formas para monetizar un blog&lt;/a> escribiendo contenido interesante y de forma regular los ingresos por este medio cubren el coste del hospedaje y del dominio.&lt;/p>
&lt;p>Con Hugo personalicé completamente el diseño y estilos de de la bitácora pero &lt;a href="https://themes.gohugo.io/">Hugo dispone de múltiples temas&lt;/a>. En la página de &lt;a href="https://gohugo.io/documentation/">documentación de Hugo&lt;/a> está el formato a usar en las plantillas, &lt;a href="https://gohugo.io/content-management/shortcodes/">&lt;em>shortcodes&lt;/em>&lt;/a> y &lt;a href="https://gohugo.io/templates/partials/">&lt;em>partials&lt;/em>&lt;/a> así como las &lt;a href="https://gohugo.io/variables/">variables disponibles&lt;/a> y &lt;a href="https://gohugo.io/functions/">funciones&lt;/a> disponibles en las plantillas. Con la &lt;a href="https://gohugo.io/getting-started/quick-start/">guía de inicio rápido&lt;/a> es posible tener una página web en unos pocos minutos y la &lt;a href="https://gohugo.io/getting-started/directory-structure/">estructura básica de directorios&lt;/a>.&lt;/p>
&lt;p>Una de las características destacadas de Hugo es que es muy rápido, en unos pocos segundos es capaz de generar la página web completa a partir del código fuente de los archivos. Ya he escrito más de 300 artículos y tarda menos de 3 segundos en generar este blog. Otra que destaco es que solo se necesita un único binario con lo que se evita el infierno de dependencias que en alguna ocasión con Octopress me causó problemas. Usando el servidor web incorporado que posee es posible previsualizar en local el contenido de la página antes de publicarla.&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2013/12/hola-nuevo-mundo/">¡Hola nuevo mundo!&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2015/05/nuevo-diseno-en-blog-bitix/">Nuevo diseño en Blog Bitix&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2016/09/gestionar-los-enlaces-de-una-bitacora-con-hugo/">Gestionar los enlaces de una bitácora con Hugo&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="blog"/><category term="planeta-codigo"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/04/introduccion-a-nio-2-el-sistema-de-entrada-salida-de-java/</id><title>Introducción a NIO.2, el sistema de entrada/salida de Java</title><updated>2018-04-07T14:00:00+02:00</updated><published>2018-04-07T10:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/04/introduccion-a-nio-2-el-sistema-de-entrada-salida-de-java/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>&lt;strong>Una de las tareas más importante que realizan algunas aplicaciones es el manejo de la entrada y salida ya sea al sistema de ficheros o a la red. Desde las versiones iniciales de Java se ha mejorado soporte añadiendo programación asíncrona de E/S, permitir obtener información de atributos propios del sistema de archivos, reconocimiento de enlaces simbólicos y facilitado de algunas operaciones básicas.&lt;/strong>&lt;/p>
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;p>En las primeras versiones de Java el sistema de entrada/salida proporcionado en el paquete &lt;a href="https://docs.oracle.com/javase/10/docs/api/java/io/package-summary.html">&lt;em>java.io&lt;/em>&lt;/a> era básico. En la versión 1.4 de Java se añadió un nuevo sistema de entrada/salida llamado NIO para suplir algunas de sus deficiencias que posteriormente en Java 7 se mejoró aún más con NIO.2. Entre las mejoras se incluyen permitir navegación de directorios sencillo, soporte para reconocer enlaces simbólicos, leer atributos de ficheros como permisos e información como última fecha de modificación, soporte de entrada/salida asíncrona y soporte para operaciones básicas sobre ficheros como copiar y mover ficheros.&lt;/p>
&lt;p>Las clases principales de esta nueva API para el manejo de rutas, ficheros y operaciones de entrada/salida son las siguientes:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/Path.html">Path&lt;/a>: es una abstracción sobre una ruta de un sistema de ficheros. No tiene porque existir en el sistema de ficheros pero si si cuando se hacen algunas operaciones como la lectura del fichero que representa. Puede usarse como reemplazo completo de &lt;a href="https://docs.oracle.com/javase/10/docs/api/java/io/File.html">java.io.File&lt;/a> pero si fuera necesario con los métodos &lt;a href="https://docs.oracle.com/javase/10/docs/api/java/io/File.html#toPath()">File.toPath()&lt;/a> y &lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/Path.html#toFile()">Path.toFile()&lt;/a> se ofrece compatibilidad entre ambas representaciones.&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/Files.html">Files&lt;/a>: es una clase de utilidad con operaciones básicas sobre ficheros.&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/FileSystems.html">FileSystems&lt;/a>: otra clase de utilidad como punto de entrada para obtener referencias a sistemas de archivos.&lt;/li>
&lt;/ul>
&lt;p>Con la clase &lt;em>Path&lt;/em> se pueden hacer operaciones sobre rutas como obtener la ruta absoluta de un &lt;em>Path&lt;/em> relativo o el &lt;em>Path&lt;/em> relativo de una ruta absoluta, de cuanto elementos se compone la ruta, obtener el &lt;em>Path&lt;/em> padre o una parte de una ruta. Otros métodos interesantes son &lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/Path.html#relativize(java.nio.file.Path)">relativize()&lt;/a>, &lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/Path.html#normalize()">normalize()&lt;/a>, &lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/Path.html#toAbsolutePath()">toAbsolutePath()&lt;/a>, &lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/Path.html#resolve(java.nio.file.Path)">resolve()&lt;/a>, &lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/Path.html#startsWith(java.nio.file.Path)">startsWith()&lt;/a> y &lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/Path.html#endsWith(java.nio.file.Path)">endsWith()&lt;/a>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="c1">// Path
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;# info&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Path&lt;/span> &lt;span class="n">relative&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Paths&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;.&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Path&lt;/span> &lt;span class="n">absolute&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">relative&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toAbsolutePath&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">normalize&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Relative: %s%n&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">relative&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Absolute: %s%n&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">absolute&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Name count: %d%n&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">absolute&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getNameCount&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Parent: %s%n&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">absolute&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getParent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Subpath(0, 2): %s%n&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">absolute&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">subpath&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">2&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/04/introduccion-a-nio-2-el-sistema-de-entrada-salida-de-java/code/Main-1.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/04/introduccion-a-nio-2-el-sistema-de-entrada-salida-de-java/code/Main-1.java" target="_blank">Main-1.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext"># info
Relative: .
Absolute: /home/picodotdev/Software/personal/blog-ejemplos/JavaNIO
Name count: 6
Parent: /home/picodotdev/Software/personal/blog-ejemplos
Subpath(0, 2): home/picodotdev&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/04/introduccion-a-nio-2-el-sistema-de-entrada-salida-de-java/code/info.out" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/04/introduccion-a-nio-2-el-sistema-de-entrada-salida-de-java/code/info.out" target="_blank">info.out&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Utilizando estas clases expondré algunos ejemplos siendo el primero recorrer el listado de archivos o también se podría hacer el listado de forma recursiva de un directorio e imprimir la información de cada archivo como nombre, si es un enlace simbólico, permisos propietario, fecha de última modificación y tamaño utilizando los siguiente métodos similar a lo que hace el comando &lt;em>ls&lt;/em> de GNU/Linux:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/Files.html#walkFileTree(java.nio.file.Path,java.nio.file.FileVisitor)">Files.walkFileTree()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/Files.html#isSymbolicLink(java.nio.file.Path)">Files.isSymbolicLink()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/Files.html#readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)">Files.readAttributes()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/attribute/PosixFilePermissions.html">PosixFilePermissions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/FileVisitor.html">FileVisitor&lt;/a>, &lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/SimpleFileVisitor.html">SimpleFileVisitor&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Al igual que es posible leer los permisos también es posible establecerlos con el método &lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/Files.html#setPosixFilePermissions(java.nio.file.Path,java.util.Set)">Files.setPosixFilePermissions()&lt;/a>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="c1">// ls -la
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;# ls -la&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Files&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">walk&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">relative&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sorted&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">p1&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">p2&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">p1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getFileName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toString&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">compareTo&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">p2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getFileName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toString&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">forEach&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">path&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">toLine&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">Exception&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">e&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printStackTrace&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">toLine&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Path&lt;/span> &lt;span class="n">path&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">IOException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">attributtes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Files&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">readAttributes&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;posix:*&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">PosixFileAttributes&lt;/span> &lt;span class="n">posixFileAttributes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Files&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getFileAttributeView&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">PosixFileAttributeView&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">readAttributes&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">posixFileAttributes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">isDirectory&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s">&amp;#34;d&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s">&amp;#34;-&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">permissions&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">PosixFilePermissions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toString&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">posixFileAttributes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">permissions&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">owner&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">posixFileAttributes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">owner&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">group&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">posixFileAttributes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">group&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kt">long&lt;/span> &lt;span class="n">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">posixFileAttributes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">size&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">ZonedDateTime&lt;/span> &lt;span class="n">date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">posixFileAttributes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">lastModifiedTime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toInstant&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">atZone&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ZoneId&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Europe/Madrid&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">lasModified&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DateTimeFormatter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">ofPattern&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;d MMM HH:mm&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">date&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">path&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getFileName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toString&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;%s%s %16s %10s %5d %12s %s&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">type&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">permissions&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">owner&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">group&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">size&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">lasModified&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/04/introduccion-a-nio-2-el-sistema-de-entrada-salida-de-java/code/Main-2.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/04/introduccion-a-nio-2-el-sistema-de-entrada-salida-de-java/code/Main-2.java" target="_blank">Main-2.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">$ ls -la
total 40
drwxr-xr-x 11 picodotdev 110277442 352 7 abr 12:11 .
drwxr-xr-x 78 picodotdev 110277442 2496 7 abr 10:41 ..
drwxr-xr-x 5 picodotdev 110277442 160 7 abr 10:47 .gradle
drwxr-xr-x 6 picodotdev 110277442 192 7 abr 12:23 .idea
drwxr-xr-x 4 picodotdev 110277442 128 7 abr 10:50 build
-rw-r--r-- 1 picodotdev 110277442 156 7 abr 10:49 build.gradle
drwxr-xr-x 3 picodotdev 110277442 96 7 abr 10:42 gradle
-rwxr-xr-x 1 picodotdev 110277442 5296 7 abr 10:42 gradlew
-rw-r--r-- 1 picodotdev 110277442 2260 7 abr 10:42 gradlew.bat
-rw-r--r-- 1 picodotdev 110277442 354 7 abr 10:42 settings.gradle
drwxr-xr-x 4 picodotdev 110277442 128 7 abr 10:48 src
# ls -la (with Java)
drwxr-xr-x picodotdev 110277442 352 7 abr 12:11 .
drwxr-xr-x picodotdev 110277442 160 7 abr 10:47 .gradle
drwxr-xr-x picodotdev 110277442 192 7 abr 12:23 .idea
drwxr-xr-x picodotdev 110277442 128 7 abr 10:50 build
-rw-r--r-- picodotdev 110277442 156 7 abr 10:49 build.gradle
drwxr-xr-x picodotdev 110277442 96 7 abr 10:42 gradle
-rwxr-xr-x picodotdev 110277442 5296 7 abr 10:42 gradlew
-rw-r--r-- picodotdev 110277442 2260 7 abr 10:42 gradlew.bat
-rw-r--r-- picodotdev 110277442 354 7 abr 10:42 settings.gradle
drwxr-xr-x picodotdev 110277442 128 7 abr 10:48 src&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/04/introduccion-a-nio-2-el-sistema-de-entrada-salida-de-java/code/ls.out" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/04/introduccion-a-nio-2-el-sistema-de-entrada-salida-de-java/code/ls.out" target="_blank">ls.out&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Las operaciones de crear directorios o archivos, copiar archivos, moverlos y eliminarlos son muy comunes de modo que la clase &lt;em>Files&lt;/em> ofrece varios métodos que con una única línea permite hacer estas operaciones de forma sencilla. El siguiente ejemplo crea un archivo, lo copia, lo mueve y finalmente lo elimina.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="c1">// File operations
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">Path&lt;/span> &lt;span class="n">file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Paths&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;build.gradle&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Path&lt;/span> &lt;span class="n">backup&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Paths&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;build.gradle.backup&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Path&lt;/span> &lt;span class="n">rename&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Paths&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;build.gradle.backup.1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Files&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">copy&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">backup&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">StandardCopyOption&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">REPLACE_EXISTING&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Files&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">move&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">backup&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">rename&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">StandardCopyOption&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">REPLACE_EXISTING&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Files&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">delete&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">rename&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/04/introduccion-a-nio-2-el-sistema-de-entrada-salida-de-java/code/Main-3.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/04/introduccion-a-nio-2-el-sistema-de-entrada-salida-de-java/code/Main-3.java" target="_blank">Main-3.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Para leer el contenido de archivos la clase &lt;em>Files&lt;/em> ofrece los métodos &lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/Files.html#newBufferedReader(java.nio.file.Path)">newBufferedReader()&lt;/a>, &lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/Files.html#newBufferedWriter(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption...)">newBufferedWrite()&lt;/a>, &lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/Files.html#newInputStream(java.nio.file.Path,java.nio.file.OpenOption...)">newInputStream()&lt;/a> y &lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/Files.html#newOutputStream(java.nio.file.Path,java.nio.file.OpenOption...)">newOutputStream()&lt;/a> junto con otros como &lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/Files.html#readAllLines(java.nio.file.Path,java.nio.charset.Charset)">readAllLines()&lt;/a> y &lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/Files.html#readAllBytes(java.nio.file.Path)">readAllBytes()&lt;/a>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="c1">// Read
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;# build.gradle&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Files&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">readAllLines&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">stream&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">forEach&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">l&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/04/introduccion-a-nio-2-el-sistema-de-entrada-salida-de-java/code/Main-4.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/04/introduccion-a-nio-2-el-sistema-de-entrada-salida-de-java/code/Main-4.java" target="_blank">Main-4.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>En cuanto a la programación de entrada/salida asíncrona se ofrecen dos paradigmas uno basado en la clase &lt;a href="https://docs.oracle.com/javase/10/docs/api/java/util/concurrent/Future.html">Future&lt;/a> y otro en funciones de rellamada o &lt;em>callbacks&lt;/em>. La programación asíncrona evita bloquear el hilo que ejecuta el código y aprovecha mejor los procesadores multinúcleo con lo que se mejora el rendimiento de las aplicaciones. Para los ficheros se usa la clase &lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/channels/AsynchronousFileChannel.html">AsynchronousFileChannel&lt;/a> y para flujos de red &lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/channels/AsynchronousSocketChannel.html">AsynchronousSocketChannel&lt;/a>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;# async with Future&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">{&lt;/span>
&lt;span class="n">AsynchronousFileChannel&lt;/span> &lt;span class="n">channel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">AsynchronousFileChannel&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">open&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">StandardOpenOption&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">READ&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">ByteBuffer&lt;/span> &lt;span class="n">buffer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ByteBuffer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">allocate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">100_000&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Future&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">channel&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">read&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">buffer&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">Integer&lt;/span> &lt;span class="n">bytesRead&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">buffer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">array&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/04/introduccion-a-nio-2-el-sistema-de-entrada-salida-de-java/code/Main-5.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/04/introduccion-a-nio-2-el-sistema-de-entrada-salida-de-java/code/Main-5.java" target="_blank">Main-5.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;# async with callback&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">{&lt;/span>
&lt;span class="n">AsynchronousFileChannel&lt;/span> &lt;span class="n">channel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">AsynchronousFileChannel&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">open&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">StandardOpenOption&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">READ&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">ByteBuffer&lt;/span> &lt;span class="n">buffer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ByteBuffer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">allocate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">100_000&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">channel&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">read&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">buffer&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">buffer&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">CompletionHandler&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ByteBuffer&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">completed&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Integer&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ByteBuffer&lt;/span> &lt;span class="n">buffer&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">buffer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">array&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">UnsupportedEncodingException&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">e&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printStackTrace&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">failed&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Throwable&lt;/span> &lt;span class="n">exception&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ByteBuffer&lt;/span> &lt;span class="n">attachment&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">exception&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getMessage&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Thread&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sleep&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">2000&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/04/introduccion-a-nio-2-el-sistema-de-entrada-salida-de-java/code/Main-6.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/04/introduccion-a-nio-2-el-sistema-de-entrada-salida-de-java/code/Main-6.java" target="_blank">Main-6.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Si se desea profundizar más en NIO y NIO.2 el libro &lt;a href="https://amzn.to/2JsEIao">The Well-Grounded Java Developer&lt;/a> dedica un capítulo introductorio en el que me he basado para realizar este artículo, el libro &lt;a href="https://amzn.to/2q7qMdN">Java I/O, NIO and NIO.2&lt;/a> está completamente dedicado al nuevo sistema de entrada/salida de Java y el tutorial &lt;a href="https://docs.oracle.com/javase/tutorial/essential/io/index.html">Java Basic I/O&lt;/a> también está muy bien como introducción.&lt;/p>
&lt;div class="media-amazon" style="text-align: center;">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1617290068&amp;linkId=61507308185711a0af4b5ed5ab70b62b">&lt;/iframe>
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1484215664&amp;linkId=d748ea086bd02aa68dd0b27945514558">&lt;/iframe>
&lt;/div>
&lt;p>En el artículo &lt;a href="https://picodotdev.github.io/blog-bitix/2014/09/monitorizar-archivos-con-java/">monitorizar archivos con Java&lt;/a> muestro como recibir eventos cuando se añade, elimina o modifica algún archivo de los observados usando la clase &lt;a href="https://docs.oracle.com/javase/10/docs/api/java/nio/file/WatchService.html">WatchService&lt;/a>.&lt;/p>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaNIO">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./gradlew run&lt;/code>.
&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="http://www.javamagazine.mozaicreader.com/JulyAug2016/Twitter">Artículo NIO.2, Java Magazine Jul/Ago 2016&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="blog"/><category term="java"/><category term="planeta-codigo"/><category term="programacion"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/02/8-aniversario-del-blog/</id><title>8º aniversario del blog</title><updated>2018-02-07T18:30:00+01:00</updated><published>2018-02-06T19:00:00+01:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/02/8-aniversario-del-blog/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/hugo.svg" class="right " width="200" alt="Hugo" title="Hugo"/>
&lt;/div>
&lt;p>Hoy se cumplen 8 años desde que creé y empecé a escribir en un blog, primeramente &lt;a href="https://elblogdepicodev.blogspot.com.es">El blog de pico.dev&lt;/a> y más tarde en Blog Bitix. Durante este tiempo he escrito 485 artículos entre ambos blogs, en Blog Bitix ya tengo más artículos escritos y publicados de los que he tenido en El blog de pico.dev. Ocho años ya son una cifra considerable y requiere gran constancia, dedicación, motivación, perseverancia y gran cantidad de tiempo. Muchos blogs no llegan a esta cifra.&lt;/p>
&lt;p>Trato de compartir el conocimiento que voy aprendiendo según leo libros, uso &lt;a href="https://www.gnu.org/">GNU&lt;/a>/&lt;a href="https://www.linux.com/">Linux&lt;/a> o me pregunto como se haría tal cosa con el lenguaje que uso principalmente, Java. El tener documentación es vital para un programador o en la tecnología y lo que comparto trato de que para el siguiente que tenga el mismo problema o se pregunte como se hace algo lo tenga más fácil y al mismo tiempo aprenda. Aparte de compartir conocimiento el blog me gustaría que me sirviese en mi vida profesional, ya sea para encontrar un nuevo trabajo o para profundizar aún en algún conocimiento. Por el momento este objetivo no lo considero del todo cumplido ya que a pesar de lo fan que soy de Java realmente trabajo a día de hoy con &lt;a href="https://www.groovy-lang.org/">Groovy&lt;/a> y &lt;a href="https://grails.org/">Grails&lt;/a>, son un lenguaje de programación y un framework web de la plataforma Java pero salvo la API del JDK tiene poco que ver y no me permiten seguir aprendiendo todo lo que me gustaría de esta plataforma, en el trabajo con otros aspectos tengo alguna otra compensación. Escribo y leo mucho pero por falta de uso una buena parte al cabo de varios meses voy olvidando.&lt;/p>
&lt;p>Tengo bastantes artículos ya escritos pero pendientes publicar, tengo esta reserva de artículos por si alguna semana no me apetece escribir, no puedo o por si un ejemplo funcional de código se me complica disponer de algún artículo para publicar. Veo la fecha de algunos que escribí y no miento si digo que para varios ya han pasado ¡dos! años estando ahí pendientes de publicar. No me faltan ideas en un documento voy priorizando los artículos siguientes que escribiré y en otro documento voy recogiendo las ideas para nuevos artículos, pues bien, estos documentos tienen una longitud de 12 y 32 páginas donde cada idea de artículo solo ocupa el título y una pequeña descripción y algún enlace, por si fuera poco en un tercer documento recojo las ideas de artículos de opinión ya que estos no requieren crear un ejemplo de código y en este sentido me resulta más sencillo escribirlos. También es cierto que finalmente algunas ideas desecho. Lo que si me falta es tiempo para dedicarlo al blog, por el trabajo y por no ser el trabajo y el blog la únicas cosas que hago.&lt;/p>
&lt;p>Cada cierto tiempo reviso y publico los datos de las visitas mensuales que tengo, lentamente pero de forma constante van aumentando y comprobando la diferencia de año en año por el momento el aumento es significativo para un blog con una temática bastante especializada. Sin embargo hasta el momento no he dado más detalles de estos datos en grandes números. Después de un crecimiento notable en el mes de mayo de 2017 las visitas han vuelto a los números de los meses anteriores y parece que se han estancado, veré como evolucionan en los siguientes meses, diciembre y enero por las vacaciones y días festivos no son de los mejores meses.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/02/8-aniversario-del-blog/images/paginas-vistas_hu0474e3e89a22ba548e1721322fbe9ce2_319661_2560x1440_fit_box_2.png" title="Páginas vistas" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/02/8-aniversario-del-blog/images/paginas-vistas_hu0474e3e89a22ba548e1721322fbe9ce2_319661_300x200_fit_box_2.png" width="300"/>&lt;/a>
&lt;figcaption>Páginas vistas&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Un poco menos de la mitad de los usuarios los recibo desde España y la otra mitad de varios países de latinoamérica ya que por compartir el lenguaje los buscadores devuelven referencias a alguno de mis artículos. A parte de España con un 35% entre los países de latinoamérica están México 17%, Argentina 8%, Colombia 8%, Chile 6%, Perú 5,3%, Ecuador 3%, Venezuela 2,5%, Estados Unidos 1,76% o Bolivia 1,25%.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/02/8-aniversario-del-blog/images/pais_hu4c7e441492b16bc7a9a78d85c199aef4_470482_2560x1440_fit_box_2.png" title="Ubicación por país" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/02/8-aniversario-del-blog/images/pais_hu4c7e441492b16bc7a9a78d85c199aef4_470482_300x200_fit_box_2.png" width="300"/>&lt;/a>
&lt;figcaption>Ubicación por país&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>En cuanto al navegador usado por los usuarios la mayor cuota de uso es &lt;a href="https://www.google.es/chrome/browser/desktop/">Chrome&lt;/a> con un 71%, luego &lt;a href="https://www.mozilla.org/es-ES/firefox/new/">Firefox&lt;/a> con un 17% y en menores porcentajes Safari con un 3,7% y Edge con un pequeño 2,5% aún con la cuota de mercado de Windows. A pesar de publicar artículos sobre GNU/Linux la mayoría de usuarios usan &lt;a href="https://www.microsoft.com/es-es/windows/">Windows&lt;/a> con un 72% pero me sorprende el 10,23% de Android incluso por delante de GNU/Linux con otro 10% y un 4,5% de Macintosh, finalmente está iOS con un 2,76%.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/02/8-aniversario-del-blog/images/navegador_hud73fd9cd3a5bd968178bef15d799cd70_445359_2560x1440_fit_box_2.png" title="Navegador" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/02/8-aniversario-del-blog/images/navegador_hud73fd9cd3a5bd968178bef15d799cd70_445359_300x200_fit_box_2.png" width="300"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/02/8-aniversario-del-blog/images/sistema-operativo_huf20f681e4fd475df1999e14cb5015ad9_438410_2560x1440_fit_box_2.png" title="Sistema operativo" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/02/8-aniversario-del-blog/images/sistema-operativo_huf20f681e4fd475df1999e14cb5015ad9_438410_300x200_fit_box_2.png" width="300"/>&lt;/a>
&lt;figcaption>Navegador y sistema operativo&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>En un porcentaje aplastante la mayoría de usuarios proviene del buscador Google con un 91% y un 4,8% para el tráfico directo.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/02/8-aniversario-del-blog/images/fuente_hu28fe6f95841f6b70a2185090094ece71_495265_2560x1440_fit_box_2.png" title="Fuente" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/02/8-aniversario-del-blog/images/fuente_hu28fe6f95841f6b70a2185090094ece71_495265_300x200_fit_box_2.png" width="300"/>&lt;/a>
&lt;figcaption>Fuente&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Con toda la intención publiqué varios artículos sobre Windows contando mi experiencia al usar sin licencia tanto Windows como &lt;a href="https://products.office.com/es-es/">Office&lt;/a>, pues estos son de los artículos más visitados en mi blog con diferencia. Dada la cuota de uso de Windows y que a nivel hogar muchos usuarios optan por usar sin licencia estos productos de &lt;a href="https://www.microsoft.com/">Microsoft&lt;/a> es normal que estos artículos sean de los más visitados en mi blog. No se cuan efectivo será pero en esos artículos indico que existen las distribuciones GNU/Linux y que hay alternativas a Microsoft Office para la mayoría de usuarios perfectamente válidos.&lt;/p></content><category term="blog"/><category term="planeta-codigo"/><category term="planeta-linux"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2017/12/hemeroteca-12/</id><title>Hemeroteca #12</title><updated>2018-01-13T11:35:00+01:00</updated><published>2017-12-30T09:30:00+01:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/12/hemeroteca-12/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>Cuarto año de Blog Bitix y en febrero serán ocho desde que empecé con &lt;a href="https://elblogdepicodev.blogspot.com.es">El blog del pico.dev&lt;/a>. En los últimos seis meses he seguido publicando casi a dos artículos por semana y durante el 2017 ha sido casi siempre así, en este semestre han sido 48 artículos, que juntos con los 39 del primero son 87 durante el año 2017, mi mayor tasa de publicación en un año.&lt;/p>
&lt;p>En estas hemerotecas siempre repaso cual es la evolución de visitas e ingresos de AdSense que quizá a alguien más le resulte de interés. En Junio y Julio alcance unas 50K páginas vistas el mayor pico de visitas, aunque en meses posteriores han descendido, al principio lo achacaba a los meses vacacionales de verano pero luego se han mantenido no se si por alguna penalización de Google o algún artículo que recibía muchas visitas y haya descendido en su posicionamiento. En cualquier caso en los últimos meses del año las visitas han tenido una tendencia ascendente, de unas 40K páginas vistas y superior respecto a las de hace una año que comparándolas han sido de 25K en 2016 y de 38K en 2017 un crecimiento de un 85%. No está mal, si el año siguiente fuese igual me daría por muy satisfecho.&lt;/p>
&lt;p>En el apartado de ingresos por la publicidad AdSense, algunos artículos patrocinados y enlaces de afiliación también ha estado bien. En estos momentos por AdSense es raro el día que no recibo al menos un euro y algún día excepcional he recibido 8, otros algo menos de 2 y 3, mensualmente ya es habitual que esté en un rango de 30 y 45€, los ingresos de AdSense se relacionan en gran medida con el número de visitas. Al final el artículo que publiqué sobre los &lt;a href="https://picodotdev.github.io/blog-bitix/2017/02/cursos-de-formacion-de-keepcoding/">cursos de formación de KeepCoding&lt;/a> han merecido la pena como artículo patrocinado con la compra de dos usuario de tres cursos (aunque la mayoría de gente se registran a los cursos gratuitos), pero esto junto con los artículos patrocinados es más esporádico y por el momento poco habitual para mi.&lt;/p>
&lt;p>En alguna ocasión me han comentado que me donarían algo por los artículos que escribo, una posibilidad sería usar &lt;a href="https://www.patreon.com/">Patreon&lt;/a> o &lt;a href="https://www.paypal.com/">PayPal&lt;/a>, sin embargo, no me convence mucho la donación directa por ser demasiado generosa y he preferido añadir una &lt;a href="https://picodotdev.github.io/blog-bitix/series/donacion/">página con ciertos productos tecnológicos y &lt;em>gamers&lt;/em> seleccionados&lt;/a> para que si alguien le gusta mis artículos, se acuerda y quiere donarme algo lo haga a través de estos enlaces de afiliación. Al que compra le cuesta lo mismo pero yo recibo una comisión. Esto me recuerda que debería hacer alguna nueva donación a proyectos de software libre y estoy pensando en &lt;a href="https://lineageos.org/">Lineage OS&lt;/a> y &lt;a href="https://www.replicant.us/">Replicant&lt;/a>.&lt;/p>
&lt;p>Quien crea que es mucho que pruebe a crearse una bitácora, un canal en &lt;a href="https://www.youtube.com/">YouTube&lt;/a> o un &lt;em>podcast&lt;/em> y verá rápidamente que o se acierta en la temática y se es muy bueno creando contenido que genera interés o primero verá que han de pasar dos años y dedicar una ingente cantidad de horas a crear ese contenido para llegar a estas cifras que tampoco son altas, no en vano muchos de estos proyectos son abandonados al cabo de unos meses, por algo será.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/12/hemeroteca-12/images/analytics-2017.png" title="Analytics 2017 de Blog Bitix" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/12/hemeroteca-12/images/analytics-2017-thumb.png" width="650"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/12/hemeroteca-12/images/gadsense-2017.png" title="AdSense 2017 de Blog Bitix" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/12/hemeroteca-12/images/gadsense-2017-thumb.png" width="650"/>&lt;/a>
&lt;figcaption>Evolución visitas e ingresos en 2017&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Pero por otra parte he recibido buenos comentarios sobre lo que escribo en Blog Bitix, por algunas personas vía &lt;a href="https://twitter.com/">Twitter&lt;/a> y otras en algún comentario que me anima a seguir escribiendo y compartiendo como hasta ahora lo que voy aprendiendo e investigando que algún día espero utilizar en algún trabajo antes de que me jubile o pruebe ser un jardinero o barrendero.&lt;/p>
&lt;p>Este semestre me propuse publicar una mayor cantidad de artículos relacionados con el lenguaje de programación Java con motivo de la pasada publicación de Java 9. Pero primero empecé con un par de artículos sobre &lt;em>portlets&lt;/em> y &lt;a href="https://tapestry.apache.org/">Apache Tapestry&lt;/a> que en algún momento espero añadirlos en alguna sección del libro &lt;a href="https://picodotdev.github.io/blog-bitix/2014/08/actualizacion-del-libro-plugin-tapestry/">PlugIn Tapestry&lt;/a>. Por supuesto, varios artículos comentando las novedades más relevantes de Java 9 publicado en septiembre entre ellas la modularidad y otras no menos notables.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/07/introduccion-a-los-portales-y-ejemplo-de-portlet-con-liferay/">Introducción a los portales y ejemplo de portlet con Liferay&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/07/portlets-con-el-framework-apache-tapestry-y-apache-pluto/">Portlets con el framework Apache Tapestry y Apache Pluto&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/07/iniciar-rapido-un-proyecto-de-java-con-gradle-o-de-spring-con-spring-initializr/">Iniciar rápido un proyecto de Java con Gradle o de Spring con Spring Initializr&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/07/iniciacion-a-la-programacion-concurrente-en-java/">Iniciación a la programación concurrente en Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/07/4-formas-de-hacer-un-bucle-for-en-java/">4 formas de hacer un bucle for en Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/07/ejecutar-varias-tareas-de-forma-concurrente-en-java/">Ejecutar varias tareas de forma concurrente en Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/08/el-antipatron-de-inicializacion-de-variables-con-dobles-llaves-en-java/">El antipatrón de inicialización de variables con dobles llaves en Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/08/cache-simple-de-datos-y-con-ehcache-en-java/">Cache simple de datos y con Ehcache en Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/09/los-cuantificadores-greedy-reluctant-y-possessive-en-expresiones-regulares/">Los cuantificadores greedy, reluctant y possessive en expresiones regulares&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/09/los-tipos-de-referencias-debiles-soft-weak-y-phantom-en-java/">Los tipos de referencias débiles soft, weak y phantom en Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/09/la-herramienta-de-documentacion-javadoc-de-java/">La herramienta de documentación Javadoc de Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/09/como-generar-la-documentacion-javadoc-con-gradle/">Cómo generar la documentación Javadoc con Gradle&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/09/crear-anotaciones-de-javadoc-personalizadas-con-taglets/">Crear anotaciones de Javadoc personalizadas con taglets&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/09/cambiar-y-personalizar-los-estilos-de-la-documentacion-javadoc/">Cambiar y personalizar los estilos de la documentación Javadoc&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/09/novedades-y-nuevas-caracteristicas-de-java-9-los-modulos/">Novedades y nuevas características de Java 9, los módulos&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/09/novedades-de-java-9-mas-alla-de-la-modularidad/">Novedades de Java 9, más allá de la modularidad&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/09/jshell-la-herramienta-repl-incorporada-en-java-9/">JShell la herramienta REPL incorporada en Java 9&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/10/evitar-niveles-de-anidacion-de-sentencias-condicionales-con-guard-clauses/">Evitar niveles de anidación de sentencias condicionales con guard clauses&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/10/ejemplo-con-el-cliente-http-2-de-java/">Ejemplo con el cliente HTTP/2 de Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/10/obtener-el-minimo-o-maximo-de-dos-una-lista-o-stream-de-valores-en-java/">Obtener el mínimo o máximo de dos, una lista o stream de valores en Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/10/las-excepciones-del-lenguaje-java/">Las excepciones del lenguaje Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/10/obtener-informacion-de-la-pila-de-las-excepciones/">Obtener información de la pila de las excepciones&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/10/implementar-funcionalidades-comunes-en-java-con-la-libreria-lombok/">Implementar funcionalidades comunes en Java con la librería Lombok&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/10/visualizar-datos-y-generar-graficas-en-java-con-jfreechart/">Visualizar datos y generar gráficas en Java con JFreeChart&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/11/ordenar-alfabeticamente-cadenas-con-la-clase-collator-en-java/">Ordenar alfabéticamente cadenas con la clase Collator en Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/12/introduccion-a-la-programacion-funcional-con-java-y-la-libreria-vavr/">Introducción a la programación funcional con Java y la librería Vavr&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Una serie de artículos sobre &lt;a href="https://graphql.org/">GraphQL&lt;/a> como alternativa a una API REST que tiene algunas ventajas. Aún me queda publicar uno de esta serie, en cuanto se acepte un &lt;em>pull request&lt;/em> a raíz de una petición que cree con &lt;a href="https://github.com/graphql-java/graphql-java-tools/issues/93">un problema que me encontré&lt;/a>.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/">Ejemplo de GraphQL para una interfaz de un servicio con Spring Boot y Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/11/usar-un-resolver-para-recuperar-propiedades-en-graphql/">Usar un resolver para recuperar propiedades en GraphQL&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/11/consultas-con-parametros-para-filtrar-datos-en-graphql/">Consultas con parámetros para filtrar datos en GraphQL&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/11/paginacion-usando-cursores-en-graphql-y-java/">Paginación usando cursores en GraphQL y Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/12/definir-nuevos-tipos-de-datos-escalares-en-graphql/">Definir nuevos tipos de datos escalares en GraphQL&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/11/devolver-mensajes-de-error-descriptivos-en-graphql/">Devolver mensajes de error descriptivos en GraphQL&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>De los menos en este semestre están relacionados con el software libre. De &lt;a href="https://about.gitlab.com/">GitLab&lt;/a> tengo otro par de artículos por publicar para realizar integración continua y mostrando más en detalles su gestión de peticiones, wiki y páginas. Si estas navidades tienes algún momento para ver la televisión en uno de los siguientes artículos encontrarás varias ideas relacionadas con la tecnología.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/08/instalar-y-renovar-un-certificado-de-lets-encrypt-en-nginx/">Instalar y renovar un certificado de Let&amp;rsquo;s Encrypt en Nginx&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/">El buscador que respeta tu privacidad, DuckDuckGo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/">Películas sobre tecnología o informática, series, documentales, vídeos, libros, GNU/Linux y software libre&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/12/como-eliminar-metainformacion-de-las-fotos-en-gnu-linux/">Como eliminar metainformación de las fotos en GNU/Linux&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/">GitLab, la completa herramienta integrada para desarrollo de software&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>O de opinión.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/10/la-triste-realidad-de-java-versiones-antiguas/">La triste realidad de Java, versiones antiguas&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/10/consejos-para-empresas-y-gente-de-recursos-humanos-que-busquen-talento/">Consejos para empresas y gente de recursos humanos que busquen talento&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/12/microsoft-does-not-care-if-you-use-windows-or-office-without-a-license/">Microsoft does not care if you use Windows or Office without a license&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Algunos artículos de tema alternativos en la temática principal de este blog pero que también me gusta compartir, comentando el cambio que hice de compañía eléctrica a &lt;a href="https://www.holaluz.com/">Holaluz&lt;/a>, de caldera a termo eléctrico y la diferencia en la factura entre tener caldera y tener termo eléctrico. Un par de artículos de los robles que he plantado que espero prosperen, publicaré alguno más. También algún artículo de desempaquetado.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/07/desempaquetado-maletin-herramientas-mannesmann-y-bandejas-melamina-balvi/">Desempaquetado maletín herramientas Mannesmann y bandejas melamina Balvi&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/07/la-busqueda-de-ejemplares-de-roble-comun/">La búsqueda de ejemplares de roble común&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/09/seleccion-de-semillas-de-roble-comun-y-metodos-de-germinacion/">Selección de semillas de roble común y métodos de germinación&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/08/sustituir-caldera-de-gas-por-un-termo-electrico-fleck-duo-7-50/">Sustituir caldera de gas por un termo eléctrico Fleck Duo 7 50&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/11/comparando-la-factura-entre-caldera-de-gas-y-termo-electrico/">Comparando la factura entre caldera de gas y termo eléctrico&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/11/me-cambio-a-la-electrica-holaluz/">Me cambio a la eléctrica Holaluz&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Una buena colección de libros técnicos que he leído durante el último trío de años y me han gustado junto con una selección de productos tecnológicos.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/08/37-buenos-libros-sobre-sobre-java-linux-devops-y-desarrollo-que-he-leido/">37 buenos libros sobre sobre Java, Linux, DevOps y desarrollo que he leído&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/11/8-plus-ideas-de-productos-tecnologicos-para-comprar-o-regalar/">Productos tecnológicos para comprar o regalar&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Espero seguir escribiendo como hasta ahora en el 2018 si el tiempo del que dispongo me lo permite y continuo con motivación. Por lo pronto son unos cuantos artículos que ya tengo escritos a falta de retocar en el momento que los publique. Puedes aprovechar para repasar esta lista y leer alguno si te lo perdiste, por supuesto si aún no lo has hecho, suscríbete con tu lector preferido al &lt;a href="https://picodotdev.github.io/blog-bitix/index.xml">&lt;em>feed&lt;/em> a Blog Bitix&lt;/a>. Finalmente, ya solo me queda desearos con la siguiente imagen linuxera de &lt;a href="http://www.klowner.com/">Klouner&lt;/a>&amp;hellip; ¡Buen &lt;strike>2016&lt;/strike> 2018!&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/12/hemeroteca-12/images/christmas-tux-2017.jpg" title="¡Buen 2018!" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/12/hemeroteca-12/images/christmas-tux-2017-thumb.jpg" width="650"/>&lt;/a>
&lt;figcaption>¡Buen 2018!&lt;/figcaption>
&lt;/figure>
&lt;/div></content><category term="blog"/><category term="hemeroteca"/><category term="java"/><category term="planeta-codigo"/><category term="planeta-linux"/><category term="programacion"/><category term="software"/><category term="software-libre"/><category term="tapestry"/><category term="gnu-linux"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2017/08/37-buenos-libros-sobre-sobre-java-linux-devops-y-desarrollo-que-he-leido/</id><title>37 buenos libros sobre sobre Java, Linux, DevOps y desarrollo que he leído</title><updated>2017-08-19T11:00:00+02:00</updated><published>2017-08-18T23:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/08/37-buenos-libros-sobre-sobre-java-linux-devops-y-desarrollo-que-he-leido/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>&lt;strong>Con el buscador Google y usando las palabras clave adecuadas es raro no encontrar información sobre aquello que estemos buscando. Pero en internet la información suele estar muy dispersa y en cada sitio la información no es completa y con profundidad, internet esta muy bien como apoyo o para precisar una determinada cuestión. Sin embargo, los libros siguen siendo un buen material de aprendizaje, entre sus ventajas está que la información está mejor organizada con una estructura más didáctica y dependiendo del libro el tema tratado es explicado con profundidad. Desde el 2014 son unos cuantos libros más los que he leído.&lt;/strong>&lt;/p>
&lt;p>En internet hay cantidad de información que nos permiten aprender sobre cualquier cosa a nuestro libre albedrío y que queramos teniendo el tiempo para dedicárselo ya sea en forma de escuetas presentaciones en &lt;a href="https://speakerdeck.com/">SpeakerDeck&lt;/a> o &lt;a href="https://es.slideshare.net/">SlideShare&lt;/a>, páginas sobre temas de programación, artículos en bitácoras como esta que estás leyendo u otras, vídeos en &lt;a href="https://www.youtube.com/">YouTube&lt;/a>, convenciones presenciales o &lt;em>hangouts&lt;/em>.&lt;/p>
&lt;p>Algunas páginas dedicadas a la programación relativa a &lt;a href="https://www.oracle.com/technetwork/java/index.html">Java&lt;/a> y &lt;a href="https://www.gnu.org/">GNU&lt;/a>/&lt;a href="https://www.linux.com/">Linux&lt;/a> a las que estoy suscrito son:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://jaxenter.com/">JAXenter&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.javaworld.com/">JavaWorld&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.javamagazine.mozaicreader.com/">JavaMagazine&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://virtualjug.com/">VirtualJUG&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bsdmag.org/">BSD Magazine&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://lwn.net">LWN.net&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.linux.com/">linux.com&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>En la biblioteca digital &lt;a href="https://openlibra.com">OpenLibra&lt;/a> encontramos una gran cantidad de libros de diversos temas cuyas licencias permiten su libre acceso.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/08/37-buenos-libros-sobre-sobre-java-linux-devops-y-desarrollo-que-he-leido/images/openlibra.png" title="OpenLibra" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/08/37-buenos-libros-sobre-sobre-java-linux-devops-y-desarrollo-que-he-leido/images/openlibra-thumb.png" width="300"/>&lt;/a>
&lt;figcaption>Web de OpenLibra&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Podemos leer libros cuya información no está relacionada con un determinado herramienta técnica sino que su conocimiento es más generalista e independiente de la tecnología, en el artículo &lt;a href="https://picodotdev.github.io/blog-bitix/2014/12/8-plus-libros-para-mejorar-como-programadores/">8+ libros para mejorar como programadores&lt;/a> recogía varios de los más mencionados y recomendados por mucha gente todavía válidos a pesar del tiempo transcurrido desde que fueron escritos, son atemporales. En la época que estaba en la universidad hace unos 15-20 años para mi internet aún estaba llegando, lo más parecido que tenía era la biblioteca en la que pedía prestados libros pero lógicamente con mayor limitación de material disponible. Hoy en día los alumnos, de universidad o bachillerato y gente con interés que quiera formarse mediante internet tiene acceso a material del que aprender mucho mejor en cantidad, facilidad y seguramente en calidad. A la gente que ahora está en la universidad le recomendaría que no se limiten a aprender lo que les enseñan en clases magistrales sus profesores sino que tomen parte activa en su formación aprovechándose de los recursos que pueden encontrar en internet.&lt;/p>
&lt;p>Estos son los que me ha parecido que están bastante bien, algunos he leído de forma completa otros solo ciertos capítulos, algunos después de leídos olvidados en parte por falta de uso y porque mi inglés no es muy bueno. Son libros relacionados con la programación, la web o el lenguaje Java en su mayoría. Hay algún libro más que he leído pero estos son los que quería destacar. Además de aprender leer esta buena cantidad de libros me da ideas para escribir algunos artículos, algunos de los cuanles he incluído en este artículo como relacionados.&lt;/p>
&lt;h2 id="libros-sobre-java">Libros sobre Java&lt;/h2>
&lt;h3 id="java-9-modularity">Java 9 Modularity&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1491954167&amp;linkId=a4ac0f67b92d5e64b2f115dec0ed246c">&lt;/iframe>
&lt;/div>
&lt;p>La modularidad no es la única característica que se incorporará en Java 9 hay muchas otras pero quizá la que más llama la atención en parte porque estaba prevista ya para versiones anteriores y finalmente se ha postergado desde la versión 7. En cualquier caso la modularidad mejora la encapsulación, seguridad, rendimiento y compatibilidad con versiones futuras aspecto de la compatibilidad hacia atrás que siempre se la ha dado y es destacado en la plataforma Java.&lt;/p>
&lt;p>&lt;a href="https://amzn.to/2ic88Qc">Java 9 Modularity&lt;/a> explica los cambios que afectan principalmente a algún nuevo archivo de código fuente para definir de forma explícita las dependencias que posee un módulo y los paquetes que exporta que definen su interfaz pública. También explica los cambios que afectan a comandos básicos como &lt;em>javac&lt;/em> para compilar y &lt;em>java&lt;/em> para ejecutar una aplicación. Hasta que los módulos se empiecen a adoptar por las librerías, y será lento, se explican los mecanismos para usar en Java 9 con módulos librerías de código que no hayan sido adaptadas aún.&lt;/p>
&lt;p>Java 9 será publicado en septiembre y ya tengo ideados unos cuantos artículos para publicar.&lt;/p>
&lt;h3 id="java-generics-and-collections">Java Generics and Collections&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0596527756&amp;linkId=7392be28d1ec52d1dca41e10fc216fc1">&lt;/iframe>
&lt;/div>
&lt;p>Los tipos genéricos se añadieron en Java 5, en el año 2004, que el copilador utiliza para validar la corrección del código evitando problemas que serían producidos en tiempo de ejecución. En la API de colecciones se usa de forma extensiva.&lt;/p>
&lt;p>El concepto no es difícil pero dominar las declaraciones de los &lt;em>generics&lt;/em> no lo es, se puede complicar bastante. El libro &lt;a href="https://amzn.to/2whneuf">Java Generics and Collections&lt;/a> es antiguo pero no está anticuado y sigue tiendo plena validez hoy, explica porque los &lt;em>generics&lt;/em> fueron implementados en Java como fueron implementados, las limitaciones que causa y las ponderaciones que realizaron sus desarrolladores.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2016/04/tutorial-sobre-los-tipos-genericos-de-java/">Tutorial sobre los tipos genéricos de Java&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="cloud-native-java">Cloud Native Java&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B074R4B7LY&amp;linkId=cb4b120dd4eac60796de0ec4796fbf8e">&lt;/iframe>
&lt;/div>
&lt;p>La flexibilidad que aporta la computación en la nube (o en los ordenadores de otros como dice la FSF) es en gran medida su éxito. Los programas que adopten esta nueva arquitectura obtienen varias ventajas como escalabilidad, tolerancia a fallos o administración de automatizada. Sin embargo, las aplicaciones tiene que diseñarse o adaptarse a este nuevo entorno.&lt;/p>
&lt;p>Algunas librerías como &lt;a href="https://projects.spring.io/spring-boot/">Spring Boot&lt;/a> proporciona a las aplicaciones Java facilidades para desarrollar aplicaciones que se consideran nativas para la computación en la nube. &lt;a href="https://amzn.to/2v7T4EK">Cloud Native Java&lt;/a> hace un repaso a los factores a tener en cuenta en las aplicaciones.&lt;/p>
&lt;h3 id="java-the-good-parts">Java The Good Parts&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0596803737&amp;linkId=c8d9a7967ea7439451a570b1f2659e9d">&lt;/iframe>
&lt;/div>
&lt;p>El lenguaje de programación Java es uno de los lenguajes más populares y que más desarrolladores posee desde ya muchos años. Su éxito se debe a varios principios que los arquitectos de la plataforma incorporaron desde sus inicios. Un lenguaje orientado a objetos, con excepciones para el tratamiento de errores, organización de clases en paquetes, recolector de basura que libera al programador de la tarea y evitar fugas de memoria o errores no controlados, la máquina virtual que posibilita escribir el código una vez y ejecutarlo en cualquier plataforma para la que haya una JVM, la gran documentación en &lt;em>javadoc&lt;/em> que sirve como consulta y como formato para documentar en el propio código fuente, las colecciones que proporcionan estructuras de datos básicas y útiles para cualquier programa, concurrencia con hilos y primitivas para la sincronización y con el paso del tiempo un ecosistema muy grande de librerías, herramientas y entornos integrados de desarrollo.&lt;/p>
&lt;p>Todas estas características se comentan detalladamente en &lt;a href="https://amzn.to/2xaP6wf">Java The Good Parts&lt;/a>.&lt;/p>
&lt;h3 id="building-maintainable-software-java-edition">Building Maintainable Software Java Edition&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1491953527&amp;linkId=6a378c8faf06d2e362cdeb9226b925cf">&lt;/iframe>
&lt;/div>
&lt;p>Hay conocimiento que es independiente del lenguaje que se utilice como tratar de escribir funciones o métodos con pocas líneas de código, mantener las interfaces pequeñas, separar en módulos, mantener el acoplamiento bajo y balanceados, que la base de código sea pequeña, automatizar las pruebas o escribir código limpio. Aunque &lt;a href="https://amzn.to/2vPOQ6v">Building Maintainable Software Java Edition&lt;/a> es una edición para Java con los ejemplos en este lenguaje las motivaciones que describe de cada uno de los puntos anteriores es universal.&lt;/p>
&lt;h3 id="the-well-grounded-java-developer">The Well-Grounded Java Developer&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1617290068&amp;linkId=1b305765190419f6de43b75335e43746">&lt;/iframe>
&lt;/div>
&lt;p>&lt;a href="https://amzn.to/2fRQgJS">The Well-Grounded Java Developer&lt;/a> diserta sobre varios conceptos a tener en cuenta para tener una base sólida sobre la plataforma Java. Nuevas características de Java 7, cosas vitales como inyección de dependencias, concurrencia, ficheros &lt;em>class&lt;/em> y &lt;em>bytecode&lt;/em> o lenguajes alternativos para la máquina virtual.&lt;/p>
&lt;h3 id="spring-boot-in-action">Spring Boot in Action&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1617292540&amp;linkId=990ac035faf92b423b7edd4e70377b89">&lt;/iframe>
&lt;/div>
&lt;p>Spring Boot permite que una aplicación sea completamente autocontenida incluyendo un servidor web como &lt;a href="https://tomcat.apache.org/">Tomcat&lt;/a> entre otros disponibles. En vez de distribuir la aplicación en formato &lt;em>war&lt;/em> para ser desplegada en un contenedor de &lt;em>servlets&lt;/em> o aplicaciones la aplicación se distribuye en formato &lt;em>jar&lt;/em> y se inicia como una aplicación Java tradicional. Es la aplicación la que inicia el servidor web embebido y hace que proporcione su servicio. Esta es nueva tendencia que se sigue en las aplicaciones y en las aplicaciones basadas en la nube.&lt;/p>
&lt;p>Spring Boot proporciona una integración con la parte del ecosistema de &lt;a href="https://spring.io/">Spring&lt;/a> que requiera la aplicación. Para nuevos proyectos &lt;a href="https://amzn.to/2v8gMk7">Spring Boot in Action&lt;/a> es muy interesante.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2015/10/aplicacion-java-autocontenida-con-spring-boot/">Aplicación Java autocontenida con Spring Boot&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2015/12/informacion-y-metricas-de-la-aplicacion-con-spring-boot-actuator/">Información y métricas de la aplicación con Spring Boot Actuator&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2016/09/ejemplo-de-api-rest-en-java-con-jax-rs-y-spring-boot/">Ejemplo de API REST en Java con JAX-RS y Spring Boot&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="gradle-in-action">Gradle in Action&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1617291307&amp;linkId=86af7295a55368699341bfbe2ae7040e">&lt;/iframe>
&lt;/div>
&lt;p>&lt;a href="https://gradle.org/">Gradle&lt;/a> es una herramienta de construcción de proyectos y gestión de dependencias que adopta las mejores características de &lt;a href="https://ant.apache.org/">Ant&lt;/a> y &lt;a href="https://maven.apache.org/">Maven&lt;/a> con pocas o ninguna de sus deficiencias. &lt;a href="https://amzn.to/2uY2naN">Gradle in Action&lt;/a> explica en profundidad esta herramienta de construcción para llegar a dominarla.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://elblogdepicodev.blogspot.com.es/2012/03/herramienta-de-construccion-gradle.html">Herramienta de construcción Gradle&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://elblogdepicodev.blogspot.com.es/2012/04/usar-gradle-mediante-gradle-wrapper.html">Usar Gradle mediante Gradle wrapper&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2015/09/ejemplo-de-multiproyecto-con-gradle/">Ejemplo de multiproyecto con Gradle&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2016/05/incluir-informacion-de-la-version-en-el-artefacto-distribuible-con-gradle/">Incluir información de la versión en el artefacto distribuible con Gradle&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/07/iniciar-rapido-un-proyecto-de-java-con-gradle-o-de-spring-con-spring-initializr/">Iniciar rápido un proyecto de Java con Gradle o de Spring con Spring Initializr&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="java-testing-with-spock">Java Testing with Spock&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1617292532&amp;linkId=ac77f9a86125173cda19c2c4949ce0a3">&lt;/iframe>
&lt;/div>
&lt;p>Las pruebas automatizadas son indispensables para escribir código con menos errores y con mayor calidad. En Java hay varias herramientas de &lt;em>testing&lt;/em> para hacer pruebas unitarias, de integración o funcionales. &lt;a href="https://code.google.com/p/spock/">Spock&lt;/a> con el que se escriben especificaciones con un DSL y utilizando el lenguaje &lt;a href="https://www.groovy-lang.org/">Groovy&lt;/a> permite automatizar las indispensables pruebas de todo código. &lt;a href="https://amzn.to/2vPt5Ul">Java Testing with Spock&lt;/a> explica esta herramienta.&lt;/p>
&lt;h3 id="portlets-in-action">Portlets in Action&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1935182544&amp;linkId=e954596f73982d6fc4c7338ffb4225b7">&lt;/iframe>
&lt;/div>
&lt;p>Los portales son utilizados por algunas organizaciones para gestionar el contenido que publican en su web. &lt;a href="https://amzn.to/2w96DIn">Portlets in Action&lt;/a> explica como crear las unidades básicas de los portales en Java, los &lt;em>portlets&lt;/em>.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/07/introduccion-a-los-portales-y-ejemplo-de-portlet-con-liferay/">Introducción a los portales y ejemplo de portlet con Liferay&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/07/portlets-con-el-framework-apache-tapestry-y-apache-pluto/">Portlets con el framework Apache Tapestry y Apache Pluto&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="varios-libros">Varios libros&lt;/h2>
&lt;h3 id="learning-javascript">Learning JavaScript&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1491914912&amp;linkId=380952682c6e61c533807cd32a6dd038">&lt;/iframe>
&lt;/div>
&lt;p>&lt;a href="https://amzn.to/2xbmkMh">Learning JavaScript&lt;/a> explica este lenguaje de programación utilizado en los navegadores web. Denostado a veces por falta de conocimiento el libro explica muchas cosas interesantes del lenguaje e incorporadas la versión de ECMAScript 6. Es un libro que no requiere gran conocimiento previo y empieza desde un nivel básico.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2016/12/introduccion-al-javascript-de-ecmascript-6/">Introducción al JavaScript de ECMAScript 6&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="the-book-of-css3">The Book of CSS3&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1593275803&amp;linkId=74be128029bfbd8f789af03a1b673aba">&lt;/iframe>
&lt;/div>
&lt;p>Al igual que JavaScript el denostado CSS también a veces lo es por el mismo motivo. &lt;a href="https://amzn.to/2wgURft">The Book of CSS3&lt;/a> explica las nuevas posibilidades para aplicar estilos a documentos HTML en los navegadores. &lt;em>Media queries&lt;/em>, selectores, psedo-clases y pseudo-elementos, &lt;em>web fonts&lt;/em>, efectos y estilos de tipografías, disposiciones en múltiples columnas, imágenes de fondo, bordes y efectos de caja, color y opacidad, gradientes transoformaciones 3D, animaciones y transiciones, &lt;em>layouts&lt;/em>, modos &lt;em>blend&lt;/em>, filtros y máscaras es el contenido del libro.&lt;/p>
&lt;h3 id="learning-rabbitmq-y-mastering-rabbitmq">Learning RabbitMQ y Mastering RabbitMQ&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1783984562&amp;linkId=bffff9170b71717eb95f6be0a95274db">&lt;/iframe>
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1783981520&amp;linkId=4cce33b79c609e875e6fb2a8b3b9ded2">&lt;/iframe>
&lt;/div>
&lt;p>Los libros &lt;a href="https://amzn.to/2xbdSN2">Learning RabbitMQ&lt;/a> y &lt;a href="https://amzn.to/2xbjaI2">Mastering RabbitMQ&lt;/a> tratan sobre la herramienta &lt;a href="https://www.rabbitmq.com/">RabbitMQ&lt;/a> para desarrollar aplicaciones que se comuniquen mediante mensajes. Los mensajes son una forma efectiva de desacoplar dos aplicaciones tanto temporalmente como en el lenguaje utilizado en cada una de ellas.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/02/ejemplo-de-rabbitmq-con-java-para-enviar-y-recibir-mensajes/">Ejemplo de RabbitMQ con Java para enviar y recibir mensajes&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="mongodb-in-action">MongoDB in Action&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1617291609&amp;linkId=497acae6ed525c559c046c38d3ed28c0">&lt;/iframe>
&lt;/div>
&lt;p>La misión de las bases de datos es almacenar información para una posterior consulta o búsqueda. &lt;a href="https://amzn.to/2xb7KUJ">MongoDB in Action&lt;/a> trata sobre la base de datos orientada a documentos &lt;a href="https://www.mongodb.com/">MongoDB&lt;/a> catalogada como NoSQL.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-nosql-mongodb/">Ejemplo de RabbitMQ con Java para enviar y recibir mensajes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/06/usar-la-base-de-datos-nosql-mongodb-con-java/">Usar la base de datos NoSQL MongoDB con Java&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="sql-antipatterns">SQL Antipatterns&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1934356557&amp;linkId=f6f8cc4cba1c24fdec9a4a47503e738d">&lt;/iframe>
&lt;/div>
&lt;p>Aún con la popularización de las bases de datos NoSQL las bases de datos relacionales siguen siendo perfectamente válidas. El libro &lt;a href="https://amzn.to/2icem2F">SQL Antipatterns&lt;/a> es una colección de consejos a tener en cuenta al diseñar y utilizar las bases de datos relacionales. Algunas formas de uso que generan problemas están desaconsejados y se consideran antipatrones.&lt;/p>
&lt;h3 id="beginning-sql-queries-y-learning-postgresql">Beginning SQL Queries y Learning PostgreSQL&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1484219546&amp;linkId=6c88c8326d867c036266f6483f41477d">&lt;/iframe>
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1783989181&amp;linkId=0b62f915f94acd860485c75946fa0392">&lt;/iframe>
&lt;/div>
&lt;p>El lenguaje declarativo SQL es muy potente y yo al menos desconocía o he usado poco muchas cosas que se han añadido al lenguaje en versiones más modernas y que algunas bases de datos como &lt;a href="https://www.postgresql.org/">PostgreSQL&lt;/a> implementan. Algunas de estas cosas son las &lt;em>windows functions&lt;/em>, tipos definidos por el usuario, &lt;em>triggers&lt;/em>, &lt;em>common table expression&lt;/em> o CTE, consultas recursivas, búsqueda de texto más avanzado y eficiente que la expresión &lt;em>like&lt;/em>, &lt;em>lateral subqueries&lt;/em>, &amp;hellip;&lt;/p>
&lt;p>Los libros &lt;a href="https://amzn.to/2xbh62O">Beginning SQL Queries&lt;/a> y &lt;a href="http://amzn.to/2vaxQG8">Learning PostgreSQL&lt;/a> son una buena documentación sobre el lenguaje SQL que van más allá de lo enseñado en algunos cursos académicos.&lt;/p>
&lt;h3 id="cors-in-action">CORS in Action&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=161729182X&amp;linkId=a1fec0248175841014bd8986c63eb82e">&lt;/iframe>
&lt;/div>
&lt;p>&lt;em>Cross-Origin Resource Sharing&lt;/em> permite a sitios distintos del origen de la página proporcionar su contenido. Por defecto, los navegadores solo permiten hacer peticiones al mismo sitio del origen de la página, con una combinación del navegador y cabeceras en las peticiones que proporcionan los sitios web permiten hacer llamadas entre diferentes sitios manteniendo la seguridad. El libro &lt;a href="https://amzn.to/2vKvmlf">CORS in Action&lt;/a> trata en detalle este tema.&lt;/p>
&lt;h3 id="microservice-architecture">Microservice Architecture&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1491956259&amp;linkId=57e9f172013ca12309e2ca2b5fa19fc2">&lt;/iframe>
&lt;/div>
&lt;p>El ámbito &lt;em>cloud&lt;/em> y una nueva forma de arquitectura para las aplicaciones han originado los denominados microservicios. En vez de desarrollar una aplicación monolítica y grande se tiende hacia múltiples aplicaciones más pequeñas con un contexto específico que colaboran para proporcionar la misma funcionalidad. El libro &lt;a href="https://amzn.to/2vPtaY3">Microservice Architecture&lt;/a> trata las motivaciones, que valor aportan los microservicios así como sus principios y cultura.&lt;/p>
&lt;h3 id="learning-http-2">Learning HTTP/2&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1491962445&amp;linkId=1a89f93cde97f31c639b38ca79811040">&lt;/iframe>
&lt;/div>
&lt;p>La siguiente versión del protocolo HTTP mejora varios aspectos del anterior. Es más eficiente, con menos latencia, con mejor rendimiento mas seguro al requerirse una conexión cifrada y haciendo innecesarios varias técnicas que se usaban anteriormente. &lt;a href="https://amzn.to/2xaScjO">Learning HTTP/2&lt;/a> es un buen material para conocer las diferencias y los problemas que presentaba HTTP/1.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2016/02/introduccion-al-protocolo-http-2/">Introducción al protocolo HTTP/2&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="mastering-oauth-2-0">Mastering OAuth 2.0&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1784395404&amp;linkId=c62cfbc31fdea33038fa6650c9bf9686">&lt;/iframe>
&lt;/div>
&lt;p>&lt;a href="https://oauth.net/">OAuth&lt;/a> es un protocolo para proporcionar autenticación y autorización a un sitio o aplicación sin que el usuario le proporcione las credenciales. Una aplicación que requiera acceso aun tercero necesita obtener un &lt;em>bearer token&lt;/em> que mediante un proceso de autorización se puede obtener de cuatro formas diferentes dependiendo de la aplicación y de si el dispositivo autorizado es de confianza o no. &lt;a href="https://amzn.to/2wXTEH6">Matering OAuth 2.0&lt;/a> es una buena introducción.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/">Autenticación con OAuth y Keycloak en un servicio REST con JAX-RS y Spring Boot&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/">Integrar autenticación OAuth con Keycloak, Shiro, Apache Tapestry y Spring Boot&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="libros-sobre-linux-y-devops">Libros sobre Linux y DevOps&lt;/h2>
&lt;h3 id="git-mastering-version-control">Git: Mastering Version Control&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01MXIFY5E&amp;linkId=f6eea55958b2783765b4bda371dd3e04">&lt;/iframe>
&lt;/div>
&lt;p>He leído varios libros sobre &lt;a href="https://git-scm.com/">Git&lt;/a>, muchos empiezan explicando como es la estructura de información que guarda Git, no es necesario empezar por ahí. El libro &lt;a href="https://amzn.to/2vKqyMR">Git: Mastering Version Control&lt;/a> es mucho más pragmático y explica muy bien los casos de uso que uno requiere de este sistema de control de versiones. Con este libro finalmente he aprendido mejor como usar un &lt;em>rebase&lt;/em> interactivo para reescribir los &lt;em>commits&lt;/em> o hacer un &lt;em>squash&lt;/em>, también como crear &lt;em>alias&lt;/em> y &lt;em>hooks&lt;/em>, los diferentes modos de &lt;em>reset&lt;/em> además de como crear &lt;em>commits&lt;/em>, hacer búsquedas en el repositorio y otras muchas cosas que no he usado aún.&lt;/p>
&lt;h3 id="gitlab-cookbook">GitLab Cookbook&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1783986840&amp;linkId=153454430c956fe5335fe123ab829a40">&lt;/iframe>
&lt;/div>
&lt;p>Como servidor de Git me gustan de &lt;a href="https://about.gitlab.com/">GitLab&lt;/a> dos cosas: que tiene una versión para la comunidad usable por ejemplo en un servidor propio de una empresa u organización y que tiene varias herramientas integradas como son una wiki, un sistema de &lt;em>tracking&lt;/em> para las tareas de un proyecto junto con tableros y soporte para hacer integración y entrega continua sin necesidad de más herramientas lo que simplifica la infraestructura para el desarrollo en gran medida. También soporta otras características presentes en GitHub como &lt;em>merge request&lt;/em>, revisiones entre pares o calidad de código entre otras muchas otras, la &lt;a href="https://about.gitlab.com/features/">lista completa de &lt;em>features&lt;/em>&lt;/a> es grande. &lt;a href="https://amzn.to/2icQyvr">GitLab Cookbook&lt;/a> es un libro introductorio para empezar a manejarlo.&lt;/p>
&lt;h3 id="docker-in-action-y-the-devops-2-1-toolkit">Docker in Action y The DevOps 2.1 Toolkit&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1633430235&amp;linkId=f257277b2f9112d7cd77aa1147bafd1d">&lt;/iframe>
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1542468914&amp;linkId=f250891fe3d29d340f3fd3f82af96671">&lt;/iframe>
&lt;/div>
&lt;p>&lt;a href="https://www.docker.com/">Docker&lt;/a> y los contenedores junto con la computación en la nube han cambiado la forma de distribuir y desplegar las aplicaciones en los servidores. Docker es una gran herramienta muy interesante de conocer. Son varias las herramientas del ecosistema, &lt;a href="https://amzn.to/2icqdxN">Docker in Action&lt;/a> explica &lt;em>docker&lt;/em> y &lt;a href="https://docs.docker.com/compose/">&lt;em>docker compose&lt;/em>&lt;/a> y &lt;a href="https://amzn.to/2uXSwBT">The DevOps 2.1 Toolkit&lt;/a> explica &lt;a href="https://docs.docker.com/swarm/">&lt;em>docker swarm&lt;/em>&lt;/a> para crear &lt;em>clusters&lt;/em> de servidores.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/series/docker/">Serie de artículos sobre Docker&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="ansible-up-and-running-y-implementing-devops-with-ansible-2">Ansible Up and Running y Implementing DevOps with Ansible 2&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1491979801&amp;linkId=35c25b05f8577bf1bf72e0797ca47367">&lt;/iframe>
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1787120538&amp;linkId=2e83b442739bb1c91a6637a6f3d50a6c">&lt;/iframe>
&lt;/div>
&lt;p>&lt;a href="https://www.ansible.com/">Ansible&lt;/a> es una herramienta para automatizar tareas en una o múltiples máquinas locales o remotas. Otra de sus propiedades en la mayoría de los casos es que es idempotente, es decir, se pueden ejecutar las acciones múltiples veces aplicando los cambios pertinentes o no haciendo nada según el estado de la máquina y el estado deseado.&lt;/p>
&lt;p>La herramienta es muy útil para tratar a los servidores siendo numerosos como ganado en vez de como mascotas y los libros &lt;a href="https://amzn.to/2wY1LDM">Ansible Up and Running&lt;/a> y &lt;a href="https://amzn.to/2wgRIMR">Implementing DevOps with Ansible 2&lt;/a> lo explican.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/">Introducción a Ansible&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="unix-and-linux-system-administration-handbook-linux-administration-a-beginner-s-guide-y-how-linux-works">UNIX and Linux System Administration Handbook, Linux Administration A Beginner’s Guide y How Linux Works&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0134277554&amp;linkId=7c91fcafae6964872c27d9bf3f68a9f1">&lt;/iframe>
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0071845364&amp;linkId=a7a84bf9b3f731a5b2e4cffba08c00b4">&lt;/iframe>
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1593275676&amp;linkId=09f1c68e67a12909a5af564fc43cf8d3">&lt;/iframe>
&lt;/div>
&lt;p>&lt;a href="https://amzn.to/2vPg7WB">UNIX and Linux System Administration Handbook&lt;/a> es un libro que presenta al usuario los sistemas GNU/Linux, &lt;a href="https://amzn.to/2wXrJae">Linux Administration A Beginner’s Guide&lt;/a> detalla las tareas administrativas para un servidor Linux y &lt;a href="https://amzn.to/2uYcE6Z">How Linux Works&lt;/a> es un libro que explica detalles más profundos de aspectos internos de Linux.&lt;/p>
&lt;h3 id="amazon-web-services-in-action-y-amazon-web-services-for-dummies">Amazon Web Services in Action y Amazon Web Services For Dummies&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1617292885&amp;linkId=88093372487f3f14280848b9bec59ef8">&lt;/iframe>
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1118571835&amp;linkId=03661313e03334c617b0ec833c2e2eb3">&lt;/iframe>
&lt;/div>
&lt;p>Aún habiendo leído &lt;a href="https://amzn.to/2v8nI0F">Amazon Web Services in Action&lt;/a> y &lt;a href="https://amzn.to/2icfumV">Amazon Web Services For Dummies&lt;/a> como no he tenido la oportunidad de practicar con la nube de Amazon casi todo de lo que leí lo tengo olvidado. &lt;a href="https://aws.amazon.com/es/free/">Amazon ofrece una capa gratuita&lt;/a> para probarlo.&lt;/p>
&lt;h2 id="publicaciones-más-breves">Publicaciones más breves&lt;/h2>
&lt;p>Esto ya no son libros sino documentos más pequeños sobre diferentes temas.&lt;/p>
&lt;h3 id="guide-to-the-java-ecosystem-2015">Guide to the Java Ecosystem 2015&lt;/h3>
&lt;p>Aun es la &lt;a href="https://dzone.com/guides/the-java-ecosystem-2015-edition">edición del 2015&lt;/a> y no he visto que hayan publicado una más reciente. Explica las tendencias y el ecosistema de Java. Microservicios, &lt;em>docker&lt;/em>, Java 8, programación &lt;em>reactiva&lt;/em>, mejores prácticas, &amp;hellip;&lt;/p>
&lt;h3 id="java-the-legend">Java The Legend&lt;/h3>
&lt;p>¿A que es debido el éxito de Java? El libro &lt;a href="http://www.oreilly.com/programming/free/java-the-legend.csp">Java The Legend&lt;/a> expone varios motivos como importancia de la compatibilidad hacia atrás, fácil de aprender y de leer, un sistema de tipos simple o la máquina virtual de Java o JVM. Aunque también según el documento con algunos fracasos como los &lt;em>Java Bean&lt;/em> por promover la mutabilidad que es molesta para la concurrencia, la finalización de los objetos, sobre configuración de Java EE o la abstracción muy básica de hilos. Comenta el ecosistema alrededor de la plataforma Java con &lt;a href="https://eclipse.org">Eclipse&lt;/a>, &lt;a href="https://www.apache.org/">Apache&lt;/a> y &lt;a href="https://spring.io/">Spring&lt;/a> junto con el futuro con Java 9, HTTP/2, JShell y quizá en un futuro el proyecto Panama para una nueva interfaz alternativa a JNI para código nativo y el proyecto Valhalla que trata sobre los tipos para usar cosas como definir colecciones genéricas con tipos primitivos.&lt;/p>
&lt;h3 id="the-daemon-the-gnu-and-the-penguin">The daemon, the GNU and the penguin&lt;/h3>
&lt;div class="media-amazon float-right">
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=097903423X&amp;linkId=cf2cd5a87906b63405d49e3f74dc59a3">&lt;/iframe>
&lt;/div>
&lt;p>&lt;a href="https://amzn.to/2vKs5CH">The daemon, the GNU and the penguin&lt;/a> es un documento que repasa el origen, inicios y evolución del software libre y de código abierto desde el año 1968 con referencias a Unix, BSD, Minix, Sun, GPL, Hurd, la web, Tanenbaum, Torvalds, Linux, &amp;hellip; Este documento y el siguiente son unos clásicos en internet.&lt;/p>
&lt;h3 id="la-catedral-y-el-bazar">La catedral y el bazar&lt;/h3>
&lt;p>La catedral y el bazar hace referencia a dos modelos distintos de desarrollo uno centralizado y controlado por una organización y otro distribuido de más libre albedrío pero también se ha demostrado muy efectivo posibilitado por la democratización de internet. &lt;a href="http://catb.org/esr/writings/cathedral-bazaar/">La catedral y el bazar&lt;/a> está traducido a varios idiomas entre ellos el &lt;a href="http://biblioweb.sindominio.net/telematica/catedral.html">español&lt;/a>.&lt;/p>
&lt;p>Para acabar este artículo, viendo la cantidad de libros que he leído en unos 3 o 4 años con el tiempo que supone dedicado a adquirir estos conocimientos en gran parte en el tiempo libre y que en general empleamos los que trabajamos en el sector tecnológico hay que hacerse valer a la hora de recibir o postular a una oferta de trabajo y me refiero al ámbito económico que en muchas ofertas de &lt;a href="https://www.infojobs.net/">InfoJobs&lt;/a> o &lt;a href="https://www.tecnoempleo.com/">Tecnoempleo&lt;/a> no se corresponde con lo que supone los conocimientos que se solicitan.&lt;/p></content><category term="blog"/><category term="gnu-linux"/><category term="java"/><category term="planeta-codigo"/><category term="programacion"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2017/06/hemeroteca-11/</id><title>Hemeroteca #11</title><updated>2017-11-25T13:00:00+01:00</updated><published>2017-06-24T10:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/06/hemeroteca-11/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>Desde hace ya tiempo escribir y publicar en el blog es una de las cosas que realmente me gustan y me motivan a pesar de que el blog me requiere mucho tiempo de mi tiempo personal, cada artículo me exige entre 5 y 10 horas de dedicación durante el fin de semana y en mi tiempo libre. Es satisfactorio ver que cada semana y cada mes el número de visitas aumentan a un ritmo rozando los dos dígitos y que también se nota en los &lt;a href="https://picodotdev.github.io/blog-bitix/series/donacion/">ingresos por publicidad de AdSense que en parte dono&lt;/a> a alguno de los proyectos de software libre que usó o me parecen interesante apoyarles económicamente aunque sea de forma pequeña.&lt;/p>
&lt;p>Aún no he llegado al punto de plantearme seriamente abandonar el blog y recuperar mi tiempo para leer, ver películas que ahora me descargo pero pocas veo, andar en bicicleta, pasear u otras cosas, a veces pienso que le dedico mucho tiempo al blog, antes escribía un artículo a la semana, ahora estoy publicando muchas dos artículos faltándome más tiempo para editar y publicar los artículos que para redactarlos. La fe de poder de usar en un trabajo muchas de las herramientas de escribo, que es uno de mis motivaciones de tener el blog, me mantiene escribiendo aunque la realidad es que llevo ya 3 lustros trabajando y en prácticamente la totalidad de proyectos la tecnología estaba ya decidida e impuesta.&lt;/p>
&lt;p>El número de visitas ha aumentado notablemente de unas 9K páginas vistas en enero de 2016 a unas 30K en enero de 2017 y ahora a finales de junio unas 60K. Solamente en estos seis primeros meses ya he duplicado el tráfico mayoritariamente proveniente del buscador Google. Los ingresos por AdSense también han aumentado notablemente de 15€ pasando a 50€ mensuales con los que ahora cada dos meses recibo una transferencia de Google en mi cuenta corriente lo que empieza a ser una cantidad respetable aunque no compense por ello solamente la dedicación que requiere.&lt;/p>
&lt;p>Más del 90% del tráfico que recibo proviene del buscador Google y el resto de tráfico directo o de referencia. Solo unos 5 artículos son los que reciben la mayor parte de las visitas y que intento aprovechar para que los usuarios accedan a otros artículos relacionados. El aumento de visitas se debe a que con el paso del tiempo habré posicionado mejor algunos artículos en Google y en menor medida a los nuevos que he publicado. A Google creo que le gustan los sitios que publican nuevo contenido con asiduidad y regularmente en primera instancia y en medida similar si es de calidad. De enero de 2014 a enero de 2016 el crecimiento parece plano pero también fue constante aunque simplemente se ve enmascarado por el de los últimos meses.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/06/hemeroteca-11/images/analytics.png" title="Analytics" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/06/hemeroteca-11/images/analytics-thumb.png" width="650"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/06/hemeroteca-11/images/gadsense.png" title="AdSense" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/06/hemeroteca-11/images/gadsense-thumb.png" width="650"/>&lt;/a>
&lt;figcaption>Evolución visitas e ingresos&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Analizando los ingresos y visitas de mi blog y divagando cual sería el tráfico que debería generar para vivir únicamente blog si con 60K páginas vistas obtengo 50€ en ingresos al mes, debería multiplicar por ¿30, 40? el tráfico de este momento para vivir del blog, pero siendo más modesto multiplicar por 5 o 10 ya serían unos ingresos muy notables y algo que parece alcanzable aunque no sea fácilmente, ¿cuantas visitas mensuales son esas para una web? ¿3,6M de páginas vistas al mes? ¿300K o 600K siendo más modesto?. Quizá si publicase en inglés la audiencia sería mayor, aún no se cual es el tráfico que poseen otras páginas hispanas personales de temática tecnológica, software libre o programación más conocidos para saber cual es el límite de visitas alcanzable en este nicho de temática ya que los blogs que sigo en pocos he visto esta misma exhivición impúdica de datos que incluyo aquí (si como blogger te sientes aludido ya tienes tema para un artículo ;). Medios como &lt;a href="https://www.xataka.com/">Xataka&lt;/a> o &lt;a href="https://www.genbeta.com/">Genbeta&lt;/a> por citar algunos tecnológicos muy conocidos profesionales, empresariales o de grupos editoriales con las vistas que tienen deben generar suficiente tráfico para que sus ingresos solo en publicidad costeen los gastos de los redactores, servidores, viajes, paguen algunos sueldos, etc.&lt;/p>
&lt;p>Cambiando de tema y yendo a la hemeroteca en la lista de artículos que he publicado en estos seis meses están los siguientes, en total 40 (incluido este) nuevos artículos únicos y fabricados artesanalmente a mano. Este semestre he hecho dos donaciones de 60€ y publicados otros tantos artículos comentando a que proyectos.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/01/articulo-3-de-yo-apoyo-al-software-libre/">Artículo #3 de Yo apoyo al software libre&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/05/articulo-4-de-yo-apoyo-al-software-libre/">Artículo #4 de Yo apoyo al software libre&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Este semestre he publicado una nueva serie sobre electrónica aprovechando que compre un kit con varios elementos electrónicos con los que jugar para la &lt;a href="https://www.raspberrypi.org/">Raspberry Pi&lt;/a> 3 que he usado en la 1, se ha compuesto de un total de 10 artículos y aún podría escribir alguno más pero lo dejaré para otro momento si recupero las ganas de cacharrear con el hardware otra vez.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/02/desempaquetado-del-kit-de-iniciacion-a-la-electronica-para-la-raspberry-pi/">Desempaquetado del kit de iniciación a la electrónica para la Raspberry Pi&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-hello-world-con-java-en-la-raspberry-pi/">Ejemplo Hello World con Java en la Raspberry Pi&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-encender-y-apagar-diodo-led-con-la-raspberry-pi-en-java/">Ejemplo encender y apagar diodo LED con la Raspberry Pi en Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/03/controlar-un-display-lcd-1602-para-mostrar-texto-con-la-raspberry-pi-y-java/">Controlar un display LCD 1602 para mostrar texto con la Raspberry Pi y Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-de-jni-usar-codigo-en-c-desde-java/">Ejemplo de JNI, usar código en C desde Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/03/obtener-la-temperatura-y-humedad-con-el-sensor-dht11-la-raspberry-pi-c-y-java/">Obtener la temperatura y humedad con el sensor DHT11, la Raspberry Pi, C y Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/04/como-usar-un-diodo-led-un-pulsador-y-un-zumbador-con-la-raspberry-pi-y-java/">Cómo usar un diodo LED, un pulsador y un zumbador con la Raspberry Pi y Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/04/ejemplo-sensor-de-golpes-y-detector-movimiento-en-la-raspberry-pi-con-java/">Ejemplo sensor de golpes y detector de movimiento en la Raspberry Pi con Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/05/controlar-un-servomotor-con-la-raspberry-pi-y-java/">Controlar un servomotor con la Raspberry Pi y Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/05/luces-navidenas-con-la-raspberry-pi-y-java/">Luces navideñas con la Raspberry Pi y Java&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>La otra serie de varios artículos publicados durante otras tantas semanas ha sido sobre &lt;a href="https://docs.docker.com/swarm/">Docker Swarm&lt;/a> continuando y completando un poco más la serie sobre &lt;a href="https://www.docker.com/">Docker&lt;/a> para crear &lt;em>clusters&lt;/em> de nodos con la tecnología de la se se está hablando mucho y está transformando el estado del arte para el despliegue, ejecución y distribución de servicios.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/03/introduccion-y-ejemplo-de-cluster-de-contenedores-con-docker-swarm/">Introducción y ejemplo de cluster de contenedores con Docker Swarm&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/04/iniciar-un-stack-de-servicios-en-un-cluster-de-docker-swarm/">Iniciar un stack de servicios en un cluster de Docker Swarm&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/04/escalar-y-actualizar-un-servicio-de-un-cluster-de-docker-swarm/">Escalar y actualizar un servicio de un cluster de Docker Swarm&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/">Contenedores en Docker Swarm con volúmenes de datos persistentes usando REX-Ray y VirtualBox&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/04/informacion-sensible-en-contenedores-con-docker-secrets/">Información sensible en los contenedores con Docker Secrets&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/04/imagenes-de-docker-con-alpine-linux/">Imágenes de Docker con Alpine Linux&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Entre otros artículos que he publicado está un &lt;em>script&lt;/em> para instalar &lt;a href="https://www.archlinux.org/">Arch Linux&lt;/a> de forma desatendida, automatizada y personalizable. Dado que Arch Linux no posee un instalador y hay que introducir los comandos directamente en la terminal para realizar la instalación después de leer una buena cantidad de documentación de la estupenda &lt;a href="https://wiki.archlinux.org/">wiki de Arch Linux&lt;/a>, este &lt;em>script&lt;/em> sirve para instalar Arch Linux de forma sencilla o como consulta de los comandos a ejecutar paso a paso para instalar esta distribución.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/01/script-de-instalacion-de-arch-linux-desatendido-automatizado-y-personalizable/">Script de instalación de Arch Linux desatendido, automatizado y personalizable&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>También he publicado algún que otro artículo de opinión de dos noticias relevantes que se han producido en este periodo de tiempo, como son el ataque del &lt;em>ransomware&lt;/em> WannaCry y que afectó a algunas empresas y organizaciones y relacionado con este tema me preguntaba si las distribuciones GNU/Linux son más seguras que Windows. También daba mi opinión sobre el el anuncio de Shuttleworth de abandonar la convergencia con el servidor gráfico Mir y el entorno de escritorio Unity. Y un último sobre la diferencia de trato para bien de &lt;a href="https://www.pepephone.com/">Pepephone&lt;/a> con lo que es habitual en otras empresas de telecomunicaciones para mal.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/01/distribuciones-gnu-linux-mas-seguras-que-windows/">Distribuciones GNU/Linux, ¿más seguras que Windows?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/05/sobre-el-anuncio-de-shuttleworth-de-abandonar-unity-y-mir-y-volver-a-gnome-en-ubuntu/">Sobre el anuncio de Shuttleworth de abandonar Unity y Mir y volver a GNOME en Ubuntu&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/05/sobre-el-ataque-de-ransomware-que-ha-sufrido-telefonica-y-otras-empresas/">Sobre el ataque de ransomware que ha sufrido Telefonica y otras empresas&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/06/asi-trata-pepephone-a-sus-clientes/">Así trata Pepephone a sus clientes&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Dos artículos para usuarios sin muchos conocimientos de como instalar &lt;a href="https://www.microsoft.com/es-es/windows/">Windows&lt;/a> o la distribución &lt;a href="https://www.ubuntu.com/">Ubuntu&lt;/a> de &lt;a href="https://www.gnu.org/">GNU&lt;/a>/&lt;a href="https://www.linux.com/">Linux&lt;/a>. Explicando paso a paso y detalladamente con capturas de pantalla cuales son los pasos para realizar la instalación desde cero.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/05/descargar-e-instalar-windows-10-paso-a-paso-desde-cero/">Descargar e instalar Windows 10 paso a paso desde cero&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/05/descargar-e-instalar-la-distribucion-ubuntu-de-gnu-linux-paso-a-paso-desde-cero/">Descargar e instalar la distribución Ubuntu de GNU/Linux paso a paso desde cero&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Un par de artículos patrocinados de los cuales uno ha sido otra forma de ingreso.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/02/cursos-de-formacion-de-keepcoding/">Cursos de formación de KeepCoding&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/02/servidores-cloud-vps-de-cloudingio-para-hospedar-blogs-y-paginas-web/">Servidores Cloud VPS de Clouding.io para hospedar blogs y páginas web&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>También he publicado un par de artículos en inglés traducción de otros que publique en español como experimento para comprobar que tal se indexan en Google y si alguno de ellos atrae visitas a mi blog.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/04/windows-10-and-office-2016-as-easy-to-use-without-license-as-always/">Windows 10 and Office 2016 as easy to use without license as always&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/04/3-office-alternative-options-to-microsoft-office/">3 office alternative options to Microsoft Office&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Habiendo publicado dos series con una buena cantidad de artículos este semestre he publicado pocos artículos de programación. A destacar de estos últimos ha sido el resumen como en años anteriores de la conferencia &lt;a href="https://bilbostack.com/">BilboStack&lt;/a> celebrada en febrero de las presentaciones a las que asistí. Varios artículos sobre diferentes tipos de bases de datos relacionales, de documentos y de clave valor representadas por &lt;a href="https://www.postgresql.org/">PostgreSQL&lt;/a>, &lt;a href="https://www.mongodb.com/">MongoDB&lt;/a> y &lt;a href="https://redis.io/">Redis&lt;/a>. También como realizar autenticación mutua entre cliente y servidor con certificados ya sea con el programa &lt;em>curl&lt;/em>, una aplicación en la plataforma Java o con un navegador web.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/01/registro-y-descubrimiento-de-servicios-con-spring-cloud-y-consul/">Registro y descubrimiento de servicios con Spring Cloud y Consul&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/02/conferencia-bilbostack-2017/">Conferencia BilboStack 2017&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/02/como-crear-un-servicio-de-systemd-para-una-aplicacion-con-spring-boot/">Cómo crear un servicio de systemd para una aplicación con Spring Boot&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/02/ejemplo-de-rabbitmq-con-java-para-enviar-y-recibir-mensajes/">Ejemplo de RabbitMQ con Java para enviar y recibir mensajes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-relacional-postgresql/">Introducción a la base de datos relacional PostgreSQL&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-nosql-mongodb/">Introducción a la base de datos NoSQL MongoDB&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/06/usar-la-base-de-datos-nosql-mongodb-con-java/">Usar la base de datos NoSQL MongoDB con Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/06/introduccion-a-la-base-de-datos-nosql-redis/">Introducción a la base de datos NoSQL Redis&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/06/autenticacion-mutua-de-cliente-y-servidor-con-certificados/">Autenticación mutua de cliente y servidor con certificados&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Para acabar publique un artículo de un cargador de pilas recargables, un paquete de pilas de la marca blanca de Amazon y un reloj con un pequeño análisis y múltiples fotos.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/03/desempaquetado-de-cargador-de-pilas-recargables-pilas-recargables-aa-y-reloj-despertador/">Desempaquetado de cargador de pilas recargables, pilas recargables AA y reloj despertador&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Que disfrutéis leyendo algunos de los artículos que publiqué y aprovechar para suscribiros con vuestro lector de &lt;em>feeds&lt;/em> preferido a Blog Bitix para no perderos ninguno de los que publique en el siguiente semestre que posiblemente verse bastante sobre Java.&lt;/p></content><category term="blog"/><category term="hemeroteca"/><category term="java"/><category term="planeta-codigo"/><category term="planeta-linux"/><category term="programacion"/><category term="software"/><category term="software-libre"/><category term="tapestry"/><category term="gnu-linux"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2017/04/imagenes-de-docker-con-alpine-linux/</id><title>Imágenes de Docker con Alpine Linux</title><updated>2017-04-28T23:00:00+02:00</updated><published>2017-04-28T23:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/04/imagenes-de-docker-con-alpine-linux/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/docker.svg" class="right " width="200" alt="Docker" title="Docker"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/alpinelinux.svg" class="right " width="350" alt="Alpine Linux" title="Alpine Linux"/>
&lt;/div>
&lt;p>En el repositorio de imágenes &lt;a href="https://registry.hub.docker.com/">Docker Hub&lt;/a> de &lt;a href="https://www.docker.com/">Docker&lt;/a> hay múltiples versiones de cada software &lt;em>contenirizado&lt;/em>, alguna de las versiones están etiquetadas con la palabra &lt;em>alpine&lt;/em>. Las imágenes de Docker etiquetadas con &lt;em>alpine&lt;/em> hacen referencia a que usan como base la distribución &lt;a href="https://www.alpinelinux.org/">Alpine Linux&lt;/a> y la razón de usar Alpine Linux es que al ser una distribución minimalista basada en &lt;a href="https://www.busybox.net/">busybox&lt;/a> y &lt;a href="https://www.musl-libc.org/">musl-libc&lt;/a> hace que las imágenes ocupen bastante menos que una imagen equivalente por ejemplo basada en &lt;a href="https://www.ubuntu.com/">Ubuntu&lt;/a> o &lt;a href="https://www.debian.org/">Debian&lt;/a>, seguramente porque no contienen una buena cantidad de cosas innecesarias.&lt;/p>
&lt;p>Por ejemplo, la &lt;a href="https://hub.docker.com/_/openjdk/">imagen de Docker que contiene en JDK&lt;/a> de Java basada en Debian ocupa 643 MiB y la imagen de Java basada en Alpine Linux ocupa 101 MiB, una diferencia significativa de casi 500 MiB. Con la capacidad de los discos duros actuales no es tanto por lo que ocupan en disco sino por el tiempo que las imágenes tardan en descargarse desde el repositorio e iniciarse los contenedores como es el caso en un &lt;a href="https://picodotdev.github.io/blog-bitix/2017/03/introduccion-y-ejemplo-de-cluster-de-contenedores-con-docker-swarm/">cluster de contenedores Docker&lt;/a>.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/imagenes-de-docker-con-alpine-linux/images/imagenes-docker.png" title="Imágenes de Docker con su tamaño. Ver imágenes openjdk, Ubuntu y Alpine. Linux" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/imagenes-de-docker-con-alpine-linux/images/imagenes-docker-thumb.png" width="300"/>&lt;/a>
&lt;figcaption>Imágenes de Docker con su tamaño. Ver imágenes openjdk, Ubuntu y Alpine Linux.&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>El tiempo de descarga solo se emplea la primera vez que se hace uso de una imagen pero como las imágenes se van actualizando hay que tener en cuenta que en cada nueva versión que se use hay que descargar una nueva imagen, cuanto más pequeñas sean las imágenes menos tiempo se emplea en descargarlas y más rápidamente se iniciarán los contenedores.&lt;/p>
&lt;p>La &lt;a href="https://hub.docker.com/_/ubuntu/">imagen base de Ubuntu&lt;/a> con la que crear nuevas ocupa 117 MiB y la &lt;a href="https://hub.docker.com/_/alpine/">imagen base de Alpine Linux&lt;/a> únicamente 3.98 MiB. Si creamos imágenes propias basadas en Alpine Linux deberemos saber que esta distribución usa su propio gestor de paquetes &lt;em>apk&lt;/em> y su propio &lt;a href="https://pkgs.alpinelinux.org/packages">repositorio de paquetes&lt;/a>. Para &lt;a href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/">crear una imagen de Docker&lt;/a> hay que usar los archivos &lt;em>Dockerfile&lt;/em> que contienen las instrucciones para construir la imagen del contenedor.&lt;/p></content><category term="blog"/><category term="planeta-codigo"/><category term="planeta-linux"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2017/04/informacion-sensible-en-los-contenedores-con-docker-secrets/</id><title>Información sensible en los contenedores con Docker Secrets</title><updated>2017-04-22T12:00:00+02:00</updated><published>2017-04-22T12:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/04/informacion-sensible-en-los-contenedores-con-docker-secrets/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>&lt;strong>Parte de la información que usan los contenedores de Docker se debe proteger de accesos no deseados. Anteriormente en algunos casos se usaban variables de entorno para lanzar los contenedores lo que no es seguro si se listan los procesos del sistema con sus parámetros, incluir archivos en las imágenes de los contenedores tampoco es recomendable. Docker Secrets permite proporcionar y mantener segura la información sensible que usen los contenedores.&lt;/strong>&lt;/p>
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/docker.svg" class="right " width="200" alt="Docker" title="Docker"/>
&lt;/div>
&lt;p>Los contenedores de &lt;a href="https://www.docker.com/">Docker&lt;/a> necesitan acceder a algunos datos sensibles desde el punto de vista de la seguridad como usuarios y contraseñas, certificados SSL, claves privadas SSH o cualquier otra información de acceso restringido. Algunos de estos datos en Docker se proporcionan mediante variables de entorno al lanzar los contenedores, esto es inseguro ya que al hacer un listado de los procesos con sus parámetros de invocación los relativos a Docker mostrarán esta información, lo que es un posible problema de seguridad.&lt;/p>
&lt;p>Con &lt;a href="https://docs.docker.com/engine/swarm/secrets/">Docker Secrets&lt;/a> se puede gestionar esta información que se necesita en tiempo de ejecución pero que no se quiere almacenar en la imagen de Docker o en el repositorio de código fuente. Algunos ejemplos de información sensible son:&lt;/p>
&lt;ul>
&lt;li>Nombres de usuario y contraseñas.&lt;/li>
&lt;li>Certificados TLS y claves.&lt;/li>
&lt;li>Claves SSH.&lt;/li>
&lt;li>Otra información sensible como el nombre de una base de datos o el nombre de un servidor interno.&lt;/li>
&lt;/ul>
&lt;p>Los secretos de Docker se proporcionan a los contenedores que los necesitan y se transmiten de forma cifrada al nodo en el que se ejecuten. Los secretos se montan en el sistema de archivos en la ruta &lt;em>/run/secrets/&amp;lt;secret_name&amp;gt;&lt;/em> de forma descifrada al que el servicio del contenedor puede acceder.&lt;/p>
&lt;p>Algunos comandos para manejar los secretos son los siguientes:&lt;/p>
&lt;ul>
&lt;li>&lt;em>docker secret create secreto&lt;/em>: crea un secreto.&lt;/li>
&lt;li>&lt;em>docker secret inspect secreto&lt;/em>: muestra los detalles de un secreto.&lt;/li>
&lt;li>&lt;em>docker secret ls&lt;/em>: lista los secretos creados.&lt;/li>
&lt;li>&lt;em>docker secret rm secreto&lt;/em>: elimina un secreto.&lt;/li>
&lt;li>Se usa el parámetro &lt;em>&amp;ndash;secret&lt;/em> para &lt;em>docker service create&lt;/em> y &lt;em>&amp;ndash;secret-add&lt;/em> y &lt;em>&amp;ndash;secret-rm flags&lt;/em> para &lt;em>docker service update&lt;/em>.&lt;/li>
&lt;/ul>
&lt;p>Usando un &lt;em>stack&lt;/em> de servicios con un archivo de &lt;a href="https://docs.docker.com/compose/">Docker Compose&lt;/a> en la sección &lt;em>secrets&lt;/em> de los servicios se indica cuales usa, en la sección &lt;em>secrets&lt;/em> se definen los secretos de los servicios con sus nombres y su contenido referenciando archivos que pueden ser binarios o de text no superior a 500 KiB.&lt;/p>
&lt;p>Al servicio de &lt;a href="https://nginx.org/">nginx&lt;/a> la clave privada y certificado para configurar el acceso mediante el protocolo seguro HTTPS se le proporciona a través de secretos que son referenciados en el archivo de configuración del servidor web &lt;em>nginx.conf&lt;/em>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-YAML" data-lang="YAML">version&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;3.1&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>services&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>nginx&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>image&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>nginx&lt;span class="p">:&lt;/span>stable-alpine&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>ports&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;80:80&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;443:443&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>networks&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w"> &lt;/span>proxy&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>secrets&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w"> &lt;/span>nginx.conf&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w"> &lt;/span>localhost.pem&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w"> &lt;/span>localhost.key&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>command&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>sh&lt;span class="w"> &lt;/span>-c&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;exec nginx -c /run/secrets/nginx.conf -g &amp;#39;daemon off;&amp;#39;&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>app&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>image&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>localhost&lt;span class="p">:&lt;/span>&lt;span class="m">5000&lt;/span>/spring-boot-app&lt;span class="p">:&lt;/span>&lt;span class="m">1.0&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>ports&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;8080:8080&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>networks&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w"> &lt;/span>proxy&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>volumes&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w"> &lt;/span>app&lt;span class="p">:&lt;/span>/data&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>secrets&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w"> &lt;/span>message.txt&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>networks&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>proxy&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>volumes&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>app&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>driver&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>rexray&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>external&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>secrets&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>nginx.conf&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>file&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>./nginx.conf&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>localhost.pem&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>file&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>./localhost.pem&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>localhost.key&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>file&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>./localhost.key&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>message.txt&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>file&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>./message.txt&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/informacion-sensible-en-los-contenedores-con-docker-secrets/code/docker-compose-stack-app.yml" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/informacion-sensible-en-los-contenedores-con-docker-secrets/code/docker-compose-stack-app.yml" target="_blank">docker-compose-stack-app.yml&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">...
http {
...
upstream app {
server app_app:8080;
}
server {
listen 80;
server_name localhost;
return 301 https://$host$request_uri;
}
server {
listen 443;
server_name localhost;
ssl on;
ssl_certificate /run/secrets/localhost.pem;
ssl_certificate_key /run/secrets/localhost.key;
ssl_session_timeout 5m;
ssl_protocols SSLv2 SSLv3 TLSv1;
ssl_ciphers HIGH:!aNULL:!MD5;
ssl_prefer_server_ciphers on;
location / {
proxy_pass http://app;
proxy_set_header Host $host;
proxy_set_header X-Real-IP $remote_addr;
}
}
}&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/informacion-sensible-en-los-contenedores-con-docker-secrets/code/nginx.conf" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/informacion-sensible-en-los-contenedores-con-docker-secrets/code/nginx.conf" target="_blank">nginx.conf&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Por otra parte la aplicación Java con &lt;a href="https://projects.spring.io/spring-boot/">Spring Boot&lt;/a> lista el contenido de los secretos incorporados en el contenedor cuando se solicita en la URL &lt;em>https://192.168.99.100/system/info/&lt;/em>, esto no se debe hacer porque se pierde la seguridad que proporcionan los secretos pero sirve a modo de muestra en el ejemplo.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.dockerswarm&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@Component&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">HostInfoContributor&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">InfoContributor&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">contribute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Builder&lt;/span> &lt;span class="n">builder&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">details&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">HashMap&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="n">File&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="n">secrets&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">FileSystems&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDefault&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getPath&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/run/secrets/&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toFile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">listFiles&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">for&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">File&lt;/span> &lt;span class="n">file&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">secrets&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">content&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Files&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">lines&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toPath&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">collect&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Collectors&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">joining&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;\n&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">details&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toString&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">content&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">Exception&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">e&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printStackTrace&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">Exception&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">e&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printStackTrace&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">withDetails&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">details&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/informacion-sensible-en-los-contenedores-con-docker-secrets/code/HostInfoContributor.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/informacion-sensible-en-los-contenedores-con-docker-secrets/code/HostInfoContributor.java" target="_blank">HostInfoContributor.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>&lt;span class="err">.&lt;/span>&lt;span class="err">.&lt;/span>&lt;span class="err">.&lt;/span>&lt;span class="err">,&lt;/span>&lt;span class="nt">&amp;#34;message.txt&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;Hello World!&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/informacion-sensible-en-los-contenedores-con-docker-secrets/code/info.json" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/informacion-sensible-en-los-contenedores-con-docker-secrets/code/info.json" target="_blank">info.json&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/informacion-sensible-en-los-contenedores-con-docker-secrets/images/message.png" title="Contenido del archivo message.txt" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/informacion-sensible-en-los-contenedores-con-docker-secrets/images/message-thumb.png" width="300"/>&lt;/a>
&lt;figcaption>Contenido del archivo message.txt&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Para probar el ejemplo hay que ejecutar varios comandos, la secuencia completa es la siguiente:&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./01-cluster-create.sh
$ ./02-vboxwebsrv.sh
$ ./03-rex-ray-install.sh
$ ./04-docker-compose-stack-deploy-registry.sh
$ ./05-spring-boot-app-build.sh
$ ./06-create-volumes.sh
$ ./06-docker-compose-stack-deploy-app.sh
$ curl -k https://192.168.99.100/system/info&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/informacion-sensible-en-los-contenedores-con-docker-secrets/code/run.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/informacion-sensible-en-los-contenedores-con-docker-secrets/code/run.sh" target="_blank">run.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/DockerSwarm">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a>.
&lt;/p></content><category term="blog"/><category term="planeta-codigo"/><category term="planeta-linux"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/</id><title>Contenedores en Docker Swarm con volúmenes de datos persistentes usando REX-Ray y VirtualBox</title><updated>2017-04-16T23:00:00+02:00</updated><published>2017-04-16T12:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>&lt;strong>Salvo que un servicio sea sin estado o &lt;em>stateless&lt;/em> los contenedores de Docker necesitan persistir datos y que estos sobrevivan a su terminación, como es el caso de un contenedor de una base de datos. Además en un &lt;em>cluster&lt;/em> de nodos Docker hay que tener en cuenta que los datos deben estar accesibles para todos los nodos ya que un contenedor que usase los datos podría ser lanzado en cualquiera de ellos. REX-Ray es un sistema de almacenamiento en red que cubre estas necesidades, es simple de instalar, configurar y de iniciar. En el artículo muestro un ejemplo usando REX-Ray junto con Docker Swarm y VirtualBox.&lt;/strong>&lt;/p>
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/docker.svg" class="right " width="200" alt="Docker" title="Docker"/>
&lt;/div>
&lt;p>Los contenedores de datos son efímeros, se crean y se destruyen y con ellos los datos que tuviesen en su sistema de archivos de modo que cualquier dato que queramos que sobreviva a la vida del contenedor ha de almacenarse de forma externa, este es el caso de los datos de una base de datos como &lt;a href="https://www.postgresql.org/">PostgreSQL&lt;/a> o &lt;a href="https://www.mongodb.com/">MongoDB&lt;/a>. Además usando &lt;a href="https://docs.docker.com/swarm/">Docker Swarm&lt;/a> se plantea el problema de que hay varios nodos formando un &lt;em>cluster&lt;/em> por lo que los datos han de estar accesibles independientemente del nodo en el que sea iniciado el contenedor que los utilice y significa que los datos no pueden estar almacenados en el nodo ya que un contenedor podría ser iniciado en cualquiera de ellos.&lt;/p>
&lt;p>Así que los contenedores iniciados en un &lt;em>cluster&lt;/em> de Docker Swarm que usen datos persistentes necesitan un sistema de almacenamiento en red externo a los contenedores y nodos. Una de las opciones disponibles es &lt;a href="https://rexray.codedellemc.com/">REX-Ray&lt;/a> que ofrece una configuración sencilla y múltiples proveedores de computación entre las que están las más populares como &lt;a href="https://aws.amazon.com/es/ec2/">Amazon EC2&lt;/a>, &lt;a href="https://www.digitalocean.com/">Digital Ocean&lt;/a>, &lt;a href="https://cloud.google.com/compute/">Google Compute Engine&lt;/a>, &lt;a href="https://azure.microsoft.com/es-es/">microsoft-azure&lt;/a> e incluso &lt;a href="https://www.virtualbox.org/">VirtualBox&lt;/a>.&lt;/p>
&lt;p>En el siguiente ejemplo uso un &lt;em>cluster&lt;/em> de nodos Docker, VirtualBox y REX-Ray para proporcionar volúmenes de datos persistentes para un contenedor que tiene una base de datos postgres basándome en el artículo previo &lt;a href="https://picodotdev.github.io/blog-bitix/2017/03/introduccion-y-ejemplo-de-cluster-de-contenedores-con-docker-swarm/">Crear un &lt;em>cluster&lt;/em> de contenedores Docker&lt;/a> donde explicaba como crear un &lt;em>cluster&lt;/em> de nodos con Docker Swarm.&lt;/p>
&lt;p>Para la integración entre VirtualBox y REX-Ray hay que iniciar primero un servidor en el &lt;em>host&lt;/em> que permite a REX-Ray hacer llamadas remotas a VirtualBox para que gestione los volúmenes de datos.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/usr/bin/env bash
&lt;/span>&lt;span class="cp">&lt;/span>
VBoxManage setproperty websrvauthlibrary null
vboxwebsrv -H 0.0.0.0 -v&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/code/02-vboxwebsrv.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/code/02-vboxwebsrv.sh" target="_blank">02-vboxwebsrv.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Si hay un &lt;em>firewall&lt;/em> hay que permitir el tráfico para el puerto &lt;em>18083&lt;/em>, en mi caso que uso &lt;em>ufw&lt;/em> creando la siguiente regla.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ sudo ufw allow to any port &lt;span class="m">18083&lt;/span> from 192.168.0.0/16
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/code/ufw.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/code/ufw.sh" target="_blank">ufw.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Con el &lt;em>cluster&lt;/em> creado debemos instalar y configurar REX-Ray en cada uno de los nodos ejecutando varios comandos, un comando instala REX-Ray, otro crea el archivo de configuración en &lt;em>/etc/rexray/config.yml&lt;/em> y finalmente otro inicia el servicio de REX-Ray. Algunas opciones que se indican en el archivo de configuración de REX-Ray es la ubicación en el &lt;em>host&lt;/em> donde se guardan los volúmenes con el parámetro &lt;em>volumePath&lt;/em>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/usr/bin/env bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="c1">#export MACHINE_STORAGE_PATH=&amp;#34;/run/media/picodotdev/BMOVE ROJO/docker-machine/&amp;#34;&lt;/span>
&lt;span class="c1">#sudo ufw allow to any port 18083 from 192.168.0.0/16&lt;/span>
&lt;span class="k">for&lt;/span> i in &lt;span class="s2">&amp;#34;01&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;02&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;03&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
docker-machine ssh node-&lt;span class="nv">$i&lt;/span> &lt;span class="s2">&amp;#34;curl -sSL https://dl.bintray.com/emccode/rexray/install | sh -&amp;#34;&lt;/span>
docker-machine ssh node-&lt;span class="nv">$i&lt;/span> &lt;span class="s2">&amp;#34;cat &amp;gt; /tmp/rexray-config.yml &amp;lt;&amp;lt; EOF
&lt;/span>&lt;span class="s2">rexray:
&lt;/span>&lt;span class="s2"> logLevel: info
&lt;/span>&lt;span class="s2">libstorage:
&lt;/span>&lt;span class="s2"> service: virtualbox
&lt;/span>&lt;span class="s2">virtualbox:
&lt;/span>&lt;span class="s2"> endpoint: http://192.168.99.1:18083
&lt;/span>&lt;span class="s2"> volumePath: /run/media/picodotdev/BMOVE ROJO/docker-machine/volumes/
&lt;/span>&lt;span class="s2"> controllerName: SATA
&lt;/span>&lt;span class="s2">EOF
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
docker-machine ssh node-&lt;span class="nv">$i&lt;/span> &lt;span class="s2">&amp;#34;sudo mkdir -p /etc/rexray/&amp;#34;&lt;/span>
docker-machine ssh node-&lt;span class="nv">$i&lt;/span> &lt;span class="s2">&amp;#34;sudo mv /tmp/rexray-config.yml /etc/rexray/config.yml&amp;#34;&lt;/span>
docker-machine ssh node-&lt;span class="nv">$i&lt;/span> &lt;span class="s2">&amp;#34;sudo rexray start&amp;#34;&lt;/span>
&lt;span class="k">done&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/code/03-rex-ray-install.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/code/03-rex-ray-install.sh" target="_blank">03-rex-ray-install.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/images/instalacion-rex-ray.png" title="Instalación de REX-Ray en nodos de Docker Swarm con VirtualBox" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/images/instalacion-rex-ray-thumb.png" width="254"/>&lt;/a>
&lt;figcaption>Instalación de REX-Ray en nodos de Docker Swarm con VirtualBox&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Para probar la persistencia de datos usaré un &lt;em>stack&lt;/em> iniciado de la misma forma que en artículo &lt;a href="https://picodotdev.github.io/blog-bitix/2017/04/iniciar-un-stack-de-servicios-en-un-cluster-de-docker-swarm/">Iniciar un stack de servicios en un cluster de Docker Swarm&lt;/a> pero con un contenedor de postgres que guarda los datos en un volumen de REX-Ray en &lt;em>/var/lib/postgresql/data&lt;/em>. Para iniciar el &lt;em>stack&lt;/em> el &lt;em>custer&lt;/em> de Docker Swarm uso un archivo de &lt;a href="https://docs.docker.com/compose/">Docker Compose&lt;/a> con la definición del &lt;em>stack&lt;/em> en formato YAML.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-YAML" data-lang="YAML">version&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;3.1&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>services&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>postgres&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>image&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>postgres&lt;span class="p">:&lt;/span>latest&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>ports&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;5432:5432&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>volumes&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w"> &lt;/span>postgres&lt;span class="p">:&lt;/span>/var/lib/postgresql/data&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>volumes&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>postgres&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>external&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/code/docker-compose-stack-postgres.yml" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/code/docker-compose-stack-postgres.yml" target="_blank">docker-compose-stack-postgres.yml&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/usr/bin/env bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="c1">#export MACHINE_STORAGE_PATH=&amp;#34;/run/media/picodotdev/BMOVE ROJO/docker-machine/&amp;#34;&lt;/span>
&lt;span class="nb">eval&lt;/span> &lt;span class="k">$(&lt;/span>docker-machine env node-01&lt;span class="k">)&lt;/span>
docker stack deploy -c docker-compose-stack-postgres.yml postgres
sleep 30s
&lt;span class="nb">echo&lt;/span> -e &lt;span class="s2">&amp;#34;\n# Cluster services&amp;#34;&lt;/span>
docker service ls
&lt;span class="nb">echo&lt;/span> -e &lt;span class="s2">&amp;#34;\n# Nginx service tasks&amp;#34;&lt;/span>
docker service ps nginx_nginx
&lt;span class="k">for&lt;/span> i in &lt;span class="s2">&amp;#34;01&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;02&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;03&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="nb">echo&lt;/span> -e &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="s2">\n# Node &lt;/span>&lt;span class="nv">$i&lt;/span>&lt;span class="s2"> containers&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">eval&lt;/span> &lt;span class="k">$(&lt;/span>docker-machine env node-&lt;span class="nv">$i&lt;/span>&lt;span class="k">)&lt;/span>
docker ps
&lt;span class="k">done&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/code/06-docker-compose-stack-deploy-postgres.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/code/06-docker-compose-stack-deploy-postgres.sh" target="_blank">06-docker-compose-stack-deploy-postgres.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>En la siguiente captura de pantalla se observa en que nodo ha sido iniciado el contenedor de postgres y que identificativo se le ha asignado.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/images/stack-deploy-postgres.png" title="Deploy del stack de postgres" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/images/stack-deploy-postgres-thumb.png" width="300"/>&lt;/a>
&lt;figcaption>Deploy del stack de postgres&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>En el &lt;em>stack&lt;/em> el volumen de datos postgres está declarado y creado de forma externa. Usando VirtualBox con REX-Ray en el &lt;em>host&lt;/em> o anfitrión se crea un archivo que contiene los datos del volumen. Al listar los volúmenes de datos además de los creados &lt;em>postgres&lt;/em> y &lt;em>app&lt;/em> están los de los discos duros de cada uno de los nodos identificados como &lt;em>disk.vmdk&lt;/em>. El parámetro &lt;em>opt=size=5&lt;/em> indica que el volumen de datos es de una tamaño de 5GiB.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/usr/bin/env bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="c1">#export MACHINE_STORAGE_PATH=&amp;#34;/run/media/picodotdev/BMOVE ROJO/docker-machine/&amp;#34;&lt;/span>
&lt;span class="nb">eval&lt;/span> &lt;span class="k">$(&lt;/span>docker-machine env node-01&lt;span class="k">)&lt;/span>
docker volume create --driver&lt;span class="o">=&lt;/span>rexray --name&lt;span class="o">=&lt;/span>postgres --opt&lt;span class="o">=&lt;/span>&lt;span class="nv">size&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">5&lt;/span>
docker volume create --driver&lt;span class="o">=&lt;/span>rexray --name&lt;span class="o">=&lt;/span>app --opt&lt;span class="o">=&lt;/span>&lt;span class="nv">size&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">5&lt;/span>
&lt;span class="nb">echo&lt;/span> -e &lt;span class="s2">&amp;#34;\n# Volumes&amp;#34;&lt;/span>
docker volume ls&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/code/06-create-volumes.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/code/06-create-volumes.sh" target="_blank">06-create-volumes.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/images/volumes.png" title="Volúmenes de datos" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/images/volumes-thumb.png" width="300"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/images/volumes-nautilus.png" title="Archivos de volúmenes en el sistema de archivos del host" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/images/volumes-nautilus-thumb.png" width="300"/>&lt;/a>
&lt;figcaption>Volúmenes de datos&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Para crear algunos datos en la base de datos hay que conectarse al contenedor y lanzar algunas sentencias SQL. Hay que obtener el identificativo del contenedor de postgres, iniciar un proceso &lt;em>bash&lt;/em>, realizar la conexión a la base de datos con el cliente &lt;em>psql&lt;/em> y lanzar las sentencias SQL.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ docker ps -q --filter &lt;span class="nv">label&lt;/span>&lt;span class="o">=&lt;/span>com.docker.swarm.service.name&lt;span class="o">=&lt;/span>postgres_postgres
ac90f7e1e7b5
$ docker &lt;span class="nb">exec&lt;/span> -it ac90f7e1e7b5 /bin/bash
postgres-# psql --username&lt;span class="o">=&lt;/span>postgres
&lt;span class="nv">postgres&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="c1"># CREATE TABLE COMPANY(&lt;/span>
postgres&lt;span class="o">(&lt;/span>&lt;span class="c1"># ID SERIAL PRIMARY KEY NOT NULL,&lt;/span>
postgres&lt;span class="o">(&lt;/span>&lt;span class="c1"># NAME TEXT NOT NULL,&lt;/span>
postgres&lt;span class="o">(&lt;/span>&lt;span class="c1"># AGE INT NOT NULL,&lt;/span>
postgres&lt;span class="o">(&lt;/span>&lt;span class="c1"># ADDRESS CHAR(50),&lt;/span>
postgres&lt;span class="o">(&lt;/span>&lt;span class="c1"># SALARY REAL&lt;/span>
postgres&lt;span class="o">(&lt;/span>&lt;span class="c1"># );&lt;/span>
CREATE TABLE
&lt;span class="nv">postgres&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="c1"># \dt&lt;/span>
List of relations
Schema &lt;span class="p">|&lt;/span> Name &lt;span class="p">|&lt;/span> Type &lt;span class="p">|&lt;/span> Owner
--------+---------+-------+----------
public &lt;span class="p">|&lt;/span> company &lt;span class="p">|&lt;/span> table &lt;span class="p">|&lt;/span> postgres
&lt;span class="o">(&lt;/span>&lt;span class="m">1&lt;/span> row&lt;span class="o">)&lt;/span>
&lt;span class="nv">postgres&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="c1"># \d+ company&lt;/span>
Table &lt;span class="s2">&amp;#34;public.company&amp;#34;&lt;/span>
Column &lt;span class="p">|&lt;/span> Type &lt;span class="p">|&lt;/span> Modifiers &lt;span class="p">|&lt;/span> Storage &lt;span class="p">|&lt;/span> Stats target &lt;span class="p">|&lt;/span> Descrip
tion
---------+---------------+------------------------------------------------------+----------+--------------+--------
-----
id &lt;span class="p">|&lt;/span> integer &lt;span class="p">|&lt;/span> not null default nextval&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;company_id_seq&amp;#39;&lt;/span>::regclass&lt;span class="o">)&lt;/span> &lt;span class="p">|&lt;/span> plain &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
name &lt;span class="p">|&lt;/span> text &lt;span class="p">|&lt;/span> not null &lt;span class="p">|&lt;/span> extended &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
age &lt;span class="p">|&lt;/span> integer &lt;span class="p">|&lt;/span> not null &lt;span class="p">|&lt;/span> plain &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
address &lt;span class="p">|&lt;/span> character&lt;span class="o">(&lt;/span>50&lt;span class="o">)&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> extended &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
salary &lt;span class="p">|&lt;/span> real &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> plain &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
Indexes:
&lt;span class="s2">&amp;#34;company_pkey&amp;#34;&lt;/span> PRIMARY KEY, btree &lt;span class="o">(&lt;/span>id&lt;span class="o">)&lt;/span>
&lt;span class="nv">postgres&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="c1"># INSERT INTO COMPANY (name, age, address, salary) VALUES (&amp;#39;Company A&amp;#39;, 21, &amp;#39;13, Rue del Percebe&amp;#39;, 45000);&lt;/span>
INSERT &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;span class="nv">postgres&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="c1"># SELECT * FROM company;&lt;/span>
id &lt;span class="p">|&lt;/span> name &lt;span class="p">|&lt;/span> age &lt;span class="p">|&lt;/span> address &lt;span class="p">|&lt;/span> salary
----+-----------+-----+----------------------------------------------------+--------
&lt;span class="m">3&lt;/span> &lt;span class="p">|&lt;/span> Company A &lt;span class="p">|&lt;/span> &lt;span class="m">21&lt;/span> &lt;span class="p">|&lt;/span> 13, Rue del Percebe &lt;span class="p">|&lt;/span> &lt;span class="m">45000&lt;/span>
&lt;span class="o">(&lt;/span>&lt;span class="m">1&lt;/span> row&lt;span class="o">)&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/code/postgres.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/code/postgres.sh" target="_blank">postgres.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Destruyendo el &lt;em>stack&lt;/em> y volviéndolo a arrancar posiblemente Docker Swarm iniciará el contenedor en otro nodo del &lt;em>cluster&lt;/em> pero los datos seguirán estando presentes en la base de datos postgres, se puede comprobar iniciando una nueva sesión bash en el nuevo contenedor, iniciando el cliente de psql y lanzando la consulta &lt;em>select&lt;/em> de SQL o con el comando &lt;code>\dt&lt;/code> para obtener las tablas de la base de datos, &lt;em>\d+ company&lt;/em> para obtener una descripción de la tabla y la consulta SQL &lt;em>SELECT * FROM company;&lt;/em>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/usr/bin/env bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="c1">#export MACHINE_STORAGE_PATH=&amp;#34;/run/media/picodotdev/BMOVE ROJO/docker-machine/&amp;#34;&lt;/span>
&lt;span class="nb">eval&lt;/span> &lt;span class="k">$(&lt;/span>docker-machine env node-01&lt;span class="k">)&lt;/span>
docker stack rm postgres&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/code/docker-compose-stack-remove-postgres.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/code/docker-compose-stack-remove-postgres.sh" target="_blank">docker-compose-stack-remove-postgres.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/DockerSwarm">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a>.
&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://rexray.readthedocs.io/en/v0.3.3/user-guide/installation/">REX-Ray Installation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://rexray.readthedocs.io/en/v0.3.3/user-guide/installation/#docker-machine-virtualbox">REX-Ray Installation - Docker Machine (VirtualBox)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://rexray.readthedocs.io/en/v0.3.3/user-guide/storage-providers/#virtualbox">REX-Ray Storage Providers - VirtualBox&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://rexray.readthedocs.io/en/stable/user-guide/applications/">REX-Ray - Applications&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="blog"/><category term="planeta-codigo"/><category term="planeta-linux"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2017/04/escalar-y-actualizar-un-servicio-de-un-cluster-de-docker-swarm/</id><title>Escalar y actualizar un servicio de un cluster de Docker Swarm</title><updated>2017-04-16T13:00:00+02:00</updated><published>2017-04-09T11:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/04/escalar-y-actualizar-un-servicio-de-un-cluster-de-docker-swarm/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>&lt;strong>Ya tenemos un &lt;em>cluster&lt;/em> formado por varios nodos con algún servicio ejecutándose en el &lt;em>cluster&lt;/em> de Docker Swarm. Si surge la necesidad los servicios del &lt;em>cluster&lt;/em> se pueden escalar cambiando el número de instancias de contenedores que forma el servicio para atender las necesidades computacionales o para ofrecer el servicio a más usuarios. Por otro lado, pasado un tiempo muy posiblemente se publicará una nueva imagen de los contenedores, el servicio se puede actualizar para que los contenedores utilicen esa nueva imagen.&lt;/strong>&lt;/p>
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/docker.svg" class="right " width="200" alt="Docker" title="Docker"/>
&lt;/div>
&lt;p>Una vez que ya hemos &lt;a href="https://picodotdev.github.io/blog-bitix/2017/03/introduccion-y-ejemplo-de-cluster-de-contenedores-con-docker-swarm/">creado un &lt;em>cluster&lt;/em> de nodos con Docker Swarm&lt;/a> y hemos desplegado algunos servicios ya sea directamente mediante comandos para crear servicios o mediante un &lt;a href="https://picodotdev.github.io/blog-bitix/2017/04/iniciar-un-stack-de-servicios-en-un-cluster-de-docker-swarm/">&lt;em>stack&lt;/em> con un archivo similar a un Docker Compose&lt;/a> al cabo de un tiempo necesitaremos hacer otras operaciones. Dos de esas operaciónes básicas son escalar hacia arriba o hacia abajo un servicio cambiando el número de instancias de contenedores desplegadas o actualizar la imagen que utilizan los servicios por otra diferente posiblemente más nueva.&lt;/p>
&lt;p>En la documentación de &lt;a href="https://www.docker.com/">Docker&lt;/a> están detallados y comentados los &lt;a href="https://docs.docker.com/engine/swarm/swarm-tutorial/scale-service/">comandos para escalar un servicio&lt;/a>. Por ejemplo, en el &lt;em>cluster&lt;/em> de ejemplo formado por tres nodos, uno con el rol de &lt;em>manager&lt;/em> y otros dos como &lt;em>worker&lt;/em>, ejecutándose en &lt;a href="https://www.virtualbox.org/">VirtualBox&lt;/a> y desplegando un servicio para el servidor &lt;a href="https://nginx.org/">nginx&lt;/a> con inicialmente una réplica o instancia podemos escalar el servicio para que se cree alguna instancia o contenedor más del servicio con el siguiente comando &lt;code>docker service scale&lt;/code>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/usr/bin/env bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="c1">#export MACHINE_STORAGE_PATH=&amp;#34;/run/media/picodotdev/BMOVE ROJO/docker-machine/&amp;#34;&lt;/span>
&lt;span class="nb">eval&lt;/span> &lt;span class="k">$(&lt;/span>docker-machine env node-01&lt;span class="k">)&lt;/span>
&lt;span class="nb">echo&lt;/span> -e &lt;span class="s2">&amp;#34;\n# Nginx service tasks&amp;#34;&lt;/span>
docker service ps nginx
&lt;span class="nb">echo&lt;/span> -e &lt;span class="s2">&amp;#34;\n# Nginx service inspect&amp;#34;&lt;/span>
docker service inspect --pretty nginx
docker service scale &lt;span class="nv">nginx&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">4&lt;/span>
sleep 1m
&lt;span class="nb">echo&lt;/span> -e &lt;span class="s2">&amp;#34;\n# Nginx service tasks&amp;#34;&lt;/span>
docker service ps nginx
&lt;span class="nb">echo&lt;/span> -e &lt;span class="s2">&amp;#34;\n# Nginx service inspect&amp;#34;&lt;/span>
docker service inspect --pretty nginx
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/escalar-y-actualizar-un-servicio-de-un-cluster-de-docker-swarm/code/06-nginx-scale.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/escalar-y-actualizar-un-servicio-de-un-cluster-de-docker-swarm/code/06-nginx-scale.sh" target="_blank">06-nginx-scale.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Al igual que cuando se crea un contenedor para un servicio en el &lt;em>cluster&lt;/em> &lt;a href="https://docs.docker.com/swarm/">Docker Swarm&lt;/a> si no se indica alguna restricción decidirá en qué nodos se crean las nuevas instancias o contenedores del servicio.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/escalar-y-actualizar-un-servicio-de-un-cluster-de-docker-swarm/images/nginx-service-1.png" title="Servicio de nginx con una réplica" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/escalar-y-actualizar-un-servicio-de-un-cluster-de-docker-swarm/images/nginx-service-1-thumb.png" width="300"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/escalar-y-actualizar-un-servicio-de-un-cluster-de-docker-swarm/images/nginx-service-4.png" title="Servicio de nginx escalado a cuatro réplicas" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/escalar-y-actualizar-un-servicio-de-un-cluster-de-docker-swarm/images/nginx-service-4-thumb.png" width="300"/>&lt;/a>
&lt;figcaption>Servicio de nginx antes y después de escalarlo&lt;/figcaption>
&lt;/figure>
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/escalar-y-actualizar-un-servicio-de-un-cluster-de-docker-swarm/images/nginx-service-scale.png" title="Escalado del servicio de nginx" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/escalar-y-actualizar-un-servicio-de-un-cluster-de-docker-swarm/images/nginx-service-scale-thumb.png" width="300"/>&lt;/a>
&lt;figcaption>Escalado del servicio de nginx&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Por otro lado, una vez desplegados en un &lt;em>cluster&lt;/em> algunos servicios llegará el momento en que queramos actualizar algún parámetro del servicio, uno de ellos será probablemente la imagen del servicio cuando se publique una nueva. En la página de documentación &lt;a href="https://docs.docker.com/engine/swarm/swarm-tutorial/rolling-update/">Aplicando actualizaciones a un servicio&lt;/a> está explicada esta funcionalidad y los comandos junto con sus opciones que hay que utilizar.&lt;/p>
&lt;p>En el ejemplo al crear el &lt;em>cluster&lt;/em> se usa la última imagen de docker para nginx, en un entorno de producción es más recomendable establecer una versión en concreto para evitar que la imagen que se usa no varía desde que se prueba hasta que se despliega. El siguiente &lt;em>script&lt;/em> actualiza la imagen a la versión &lt;em>nginx:1.10-alpine&lt;/em> en todas las réplicas del servicio de nginx en el &lt;em>cluster&lt;/em>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/usr/bin/env bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="c1">#export MACHINE_STORAGE_PATH=&amp;#34;/run/media/picodotdev/BMOVE ROJO/docker-machine/&amp;#34;&lt;/span>
&lt;span class="nb">eval&lt;/span> &lt;span class="k">$(&lt;/span>docker-machine env node-01&lt;span class="k">)&lt;/span>
&lt;span class="nb">echo&lt;/span> -e &lt;span class="s2">&amp;#34;\n# Nginx service tasks&amp;#34;&lt;/span>
docker service ps nginx
&lt;span class="nb">echo&lt;/span> -e &lt;span class="s2">&amp;#34;\n# Nginx service inspect&amp;#34;&lt;/span>
docker service inspect --pretty nginx
docker service update --image nginx:1.10-alpine nginx
sleep 1m
&lt;span class="nb">echo&lt;/span> -e &lt;span class="s2">&amp;#34;\n# Nginx service tasks&amp;#34;&lt;/span>
docker service ps nginx
&lt;span class="nb">echo&lt;/span> -e &lt;span class="s2">&amp;#34;\n# Nginx service inspect&amp;#34;&lt;/span>
docker service inspect --pretty nginx
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/escalar-y-actualizar-un-servicio-de-un-cluster-de-docker-swarm/code/06-nginx-update.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/escalar-y-actualizar-un-servicio-de-un-cluster-de-docker-swarm/code/06-nginx-update.sh" target="_blank">06-nginx-update.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/escalar-y-actualizar-un-servicio-de-un-cluster-de-docker-swarm/images/nginx-service-update.png" title="Actualización de la imagen del servicio de nginx" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/escalar-y-actualizar-un-servicio-de-un-cluster-de-docker-swarm/images/nginx-service-update-thumb.png" width="300"/>&lt;/a>
&lt;figcaption>Actualización de la imagen del servicio de nginx&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Docker Swarm realiza el proceso de actualización siguiendo los siguientes pasos:&lt;/p>
&lt;ul>
&lt;li>Detiene el primer contenedor o tarea a actualizar.&lt;/li>
&lt;li>Programa la actualización del contenedor o tarea detenida.&lt;/li>
&lt;li>Inicia una nueva tarea actualizado.&lt;/li>
&lt;li>Si la tarea actualizada retorna su estado como &lt;em>RUNNING&lt;/em> se espera un tiempo determinado y se inicia el proceso de actualización de una nueva tarea.&lt;/li>
&lt;li>Si, en cualquier momento durante la actualización, una tarea retorna su estado como &lt;em>FAILED&lt;/em>, se detiene la actualización.&lt;/li>
&lt;/ul>
&lt;p>Por defecto, el planificador actualiza las tareas o contenedores del servicio de uno en uno. Con la opción &lt;em>&amp;ndash;update-parallelism&lt;/em> se especifica el número de tareas del servicio que se actualizan simultáneamente. La opción &lt;em>&amp;ndash;update-delay&lt;/em> especifica el tiempo de espera desde que se actualiza la tarea de un servicio y la siguiente. Se puede describir como una combinación de segundos, minutos o horas, de modo que 1m30s indica una espera de 1 minuto y 30 segundos.&lt;/p>
&lt;p>En los &lt;a href="https://docs.docker.com/compose/compose-file/">archivos en formato YAML de los &lt;em>stacks&lt;/em> de Docker Compose&lt;/a> hay una sección en cada servicio en el que se indica el número de contenedores que se desea que esté formado el servicio así como las opciones de paralelismo y tiempo de espera entre actualización. Para actualizar el &lt;em>stack&lt;/em> basta con hacer de nuevo el &lt;em>deploy&lt;/em>, ya sea la imagen usada, el número de réplicas u otros parámetros.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-YAML" data-lang="YAML">...&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>deploy&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>replicas&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>update_config&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>parallelism&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>delay&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>1m30s&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>...&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/escalar-y-actualizar-un-servicio-de-un-cluster-de-docker-swarm/code/docker-compose-stack-app.yml" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/04/escalar-y-actualizar-un-servicio-de-un-cluster-de-docker-swarm/code/docker-compose-stack-app.yml" target="_blank">docker-compose-stack-app.yml&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/DockerSwarm">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a>.
&lt;/p></content><category term="blog"/><category term="planeta-codigo"/><category term="planeta-linux"/></entry></feed>
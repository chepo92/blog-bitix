<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://picodotdev.github.io/blog-bitix/tags/planeta-codigo/</id>
    <title type="text">Blog Bitix</title>
    <subtitle>Recent content on Blog Bitix</subtitle>
    <updated>2018-04-07T10:00:00+02:00</updated>
    <author><name>pico.dev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix//assets/images/logotipos/hugo.png</icon>
    <logo>https://picodotdev.github.io/blog-bitix//assets/images/logotipos/hugo.png</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/04/introduccion-a-nio-2-el-sistema-de-entrada-salida-de-java/</id>
        <title>Introducción a NIO.2, el sistema de entrada/salida de Java</title>        
        <updated>2018-04-07T14:00:00+02:00</updated>
        <published>2018-04-07T10:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/04/introduccion-a-nio-2-el-sistema-de-entrada-salida-de-java/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Una de las tareas más importante que realizan algunas aplicaciones es el manejo de la entrada y salida ya sea al sistema de ficheros o a la red. Desde las versiones iniciales de Java se ha mejorado soporte añadiendo programación asíncrona de E/S, permitir obtener información de atributos propios del sistema de archivos, reconocimiento de enlaces simbólicos y facilitado de algunas operaciones básicas.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;En las primeras versiones de Java el sistema de entrada/salida proporcionado en el paquete &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/io/package-summary.html&#34;&gt;&lt;em&gt;java.io&lt;/em&gt;&lt;/a&gt; era básico. En la versión 1.4 de Java se añadió un nuevo sistema de entrada/salida llamado NIO para suplir algunas de sus deficiencias que posteriormente en Java 7 se mejoró aún más con NIO.2. Entre las mejoras se incluyen permitir navegación de directorios sencillo, soporte para reconocer enlaces simbólicos, leer atributos de ficheros como permisos e información como última fecha de modificación, soporte de entrada/salida asíncrona y soporte para operaciones básicas sobre ficheros como copiar y mover ficheros.&lt;/p&gt;

&lt;p&gt;Las clases principales de esta nueva API para el manejo de rutas, ficheros y operaciones de entrada/salida son las siguientes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/Path.html&#34;&gt;Path&lt;/a&gt;: es una abstracción sobre una ruta de un sistema de ficheros. No tiene porque existir en el sistema de ficheros pero si si cuando se hacen algunas operaciones como la lectura del fichero que representa. Puede usarse como reemplazo completo de &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/io/File.html&#34;&gt;java.io.File&lt;/a&gt; pero si fuera necesario con los métodos &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/io/File.html#toPath()&#34;&gt;File.toPath()&lt;/a&gt; y &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/Path.html#toFile()&#34;&gt;Path.toFile()&lt;/a&gt; se ofrece compatibilidad entre ambas representaciones.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/Files.html&#34;&gt;Files&lt;/a&gt;: es una clase de utilidad con operaciones básicas sobre ficheros.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/FileSystems.html&#34;&gt;FileSystems&lt;/a&gt;: otra clase de utilidad como punto de entrada para obtener referencias a sistemas de archivos.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Con la clase &lt;em&gt;Path&lt;/em&gt; se pueden hacer operaciones sobre rutas como obtener la ruta absoluta de un &lt;em&gt;Path&lt;/em&gt; relativo o el &lt;em&gt;Path&lt;/em&gt; relativo de una ruta absoluta, de cuanto elementos se compone la ruta, obtener el &lt;em&gt;Path&lt;/em&gt; padre o una parte de una ruta. Otros métodos interesantes son &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/Path.html#relativize(java.nio.file.Path)&#34;&gt;relativize()&lt;/a&gt;, &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/Path.html#normalize()&#34;&gt;normalize()&lt;/a&gt;, &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/Path.html#toAbsolutePath()&#34;&gt;toAbsolutePath()&lt;/a&gt;, &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/Path.html#resolve(java.nio.file.Path)&#34;&gt;resolve()&lt;/a&gt;, &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/Path.html#startsWith(java.nio.file.Path)&#34;&gt;startsWith()&lt;/a&gt; y &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/Path.html#endsWith(java.nio.file.Path)&#34;&gt;endsWith()&lt;/a&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/3bb11076a051490963a68625b9c1b388.js?file=Main-1.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/3bb11076a051490963a68625b9c1b388.js?file=info.out&#34;&gt;&lt;/script&gt;

&lt;p&gt;Utilizando estas clases expondré algunos ejemplos siendo el primero recorrer el listado de archivos o también se podría hacer el listado de forma recursiva de un directorio e imprimir la información de cada archivo como nombre, si es un enlace simbólico, permisos propietario, fecha de última modificación y tamaño utilizando los siguiente métodos similar a lo que hace el comando &lt;em&gt;ls&lt;/em&gt; de GNU/Linux:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/Files.html#walkFileTree(java.nio.file.Path,java.nio.file.FileVisitor)&#34;&gt;Files.walkFileTree()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/Files.html#isSymbolicLink(java.nio.file.Path)&#34;&gt;Files.isSymbolicLink()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/Files.html#readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&#34;&gt;Files.readAttributes()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/attribute/PosixFilePermissions.html&#34;&gt;PosixFilePermissions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/FileVisitor.html&#34;&gt;FileVisitor&lt;/a&gt;, &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/SimpleFileVisitor.html&#34;&gt;SimpleFileVisitor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Al igual que es posible leer los permisos también es posible establecerlos con el método &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/Files.html#setPosixFilePermissions(java.nio.file.Path,java.util.Set)&#34;&gt;Files.setPosixFilePermissions()&lt;/a&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/3bb11076a051490963a68625b9c1b388.js?file=Main-2.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/3bb11076a051490963a68625b9c1b388.js?file=ls.out&#34;&gt;&lt;/script&gt;

&lt;p&gt;Las operaciones de crear directorios o archivos, copiar archivos, moverlos y eliminarlos son muy comunes de modo que la clase &lt;em&gt;Files&lt;/em&gt; ofrece varios métodos que con una única línea permite hacer estas operaciones de forma sencilla. El siguiente ejemplo crea un archivo, lo copia, lo mueve y finalmente lo elimina.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/3bb11076a051490963a68625b9c1b388.js?file=Main-3.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;Para leer el contenido de archivos la clase &lt;em&gt;Files&lt;/em&gt; ofrece los métodos &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/Files.html#newBufferedReader(java.nio.file.Path)&#34;&gt;newBufferedReader()&lt;/a&gt;, &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/Files.html#newBufferedWriter(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption...)&#34;&gt;newBufferedWrite()&lt;/a&gt;, &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/Files.html#newInputStream(java.nio.file.Path,java.nio.file.OpenOption...)&#34;&gt;newInputStream()&lt;/a&gt; y &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/Files.html#newOutputStream(java.nio.file.Path,java.nio.file.OpenOption...)&#34;&gt;newOutputStream()&lt;/a&gt; junto con otros como &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/Files.html#readAllLines(java.nio.file.Path,java.nio.charset.Charset)&#34;&gt;readAllLines()&lt;/a&gt; y &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/Files.html#readAllBytes(java.nio.file.Path)&#34;&gt;readAllBytes()&lt;/a&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/3bb11076a051490963a68625b9c1b388.js?file=Main-4.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;En cuanto a la programación de entrada/salida asíncrona se ofrecen dos paradigmas uno basado en la clase &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/util/concurrent/Future.html&#34;&gt;Future&lt;/a&gt; y otro en funciones de rellamada o &lt;em&gt;callbacks&lt;/em&gt;. La programación asíncrona evita bloquear el hilo que ejecuta el código y aprovecha mejor los procesadores multinúcleo con lo que se mejora el rendimiento de las aplicaciones. Para los ficheros se usa la clase &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/channels/AsynchronousFileChannel.html&#34;&gt;AsynchronousFileChannel&lt;/a&gt; y para flujos de red &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/channels/AsynchronousSocketChannel.html&#34;&gt;AsynchronousSocketChannel&lt;/a&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/3bb11076a051490963a68625b9c1b388.js?file=Main-5.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/3bb11076a051490963a68625b9c1b388.js?file=Main-6.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;Si se desea profundizar más en NIO y NIO.2 el libro &lt;a href=&#34;https://amzn.to/2JsEIao&#34;&gt;The Well-Grounded Java Developer&lt;/a&gt; dedica un capítulo introductorio en el que me he basado para realizar este artículo, el libro &lt;a href=&#34;https://amzn.to/2q7qMdN&#34;&gt;Java I/O, NIO and NIO.2&lt;/a&gt; está completamente dedicado al nuevo sistema de entrada/salida de Java y el tutorial &lt;a href=&#34;https://docs.oracle.com/javase/tutorial/essential/io/index.html&#34;&gt;Java Basic I/O&lt;/a&gt; también está muy bien como introducción.&lt;/p&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1617290068&amp;linkId=61507308185711a0af4b5ed5ab70b62b&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1484215664&amp;linkId=d748ea086bd02aa68dd0b27945514558&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;En el artículo &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/09/monitorizar-archivos-con-java/&#34;&gt;monitorizar archivos con Java&lt;/a&gt; muestro como recibir eventos cuando se añade, elimina o modifica algún archivo de los observados usando la clase &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/nio/file/WatchService.html&#34;&gt;WatchService&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/JavaNIO&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew run&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamagazine.mozaicreader.com/JulyAug2016/Twitter#&amp;amp;pageSet=0&amp;amp;page=0&amp;amp;contentItem=0&#34;&gt;Artículo NIO.2, Java Magazine Jul/Ago 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/03/que-es-y-como-funciona-el-type-erasure-en-java/</id>
        <title>Qué es y cómo funciona el type erasure en Java</title>        
        <updated>2018-03-31T10:30:00+02:00</updated>
        <published>2018-03-31T10:30:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/03/que-es-y-como-funciona-el-type-erasure-en-java/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Los tipos genéricos en Java se implementaron usando &lt;em&gt;type erasure&lt;/em&gt; por simplicidad en la implementación, no incurrir en penalizaciones de rendimiento o memoria y por mantener la compatibilidad con versiones anteriores de Java. Son varios los conceptos que están asociados a la implementación de los tipos genéricos en Java que es recomendable conocer como &lt;em&gt;type erasure&lt;/em&gt;  y métodos &lt;em&gt;bridge&lt;/em&gt; de este artículo pero también &lt;em&gt;heap pollution&lt;/em&gt;, &lt;em&gt;non-reifiable&lt;/em&gt;, &lt;em&gt;wildcards&lt;/em&gt; y &lt;em&gt;bound type parameters&lt;/em&gt;.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;En la introducción de los &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/04/tutorial-sobre-los-tipos-genericos-de-java/&#34;&gt;tipos genéricos en Java&lt;/a&gt; con la versión 1.5 se decidió implementarlo usando &lt;em&gt;type erasuse&lt;/em&gt; que consiste en que en tiempo de ejecución se pierde la información de los tipos genéricos y para la máquina virtual no son distintos de un tipo no genérico, es un proceso que realiza el compilador. Esto tiene sus ventajas y algunas desventajas pero hay dos buenos motivos por los que en Java se decidió implementar los tipos genéricos usando &lt;em&gt;type erasuse&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Un motivo es que los tipos al ser en tiempo de ejecución exactamente iguales que los no genéricos de versiones anteriores se mantiene la compatibilidad hacia atrás tanto a nivel de código como a nivel binario lo que significa en un caso que el código fuente no es necesario que sea modificado y en otro que no es necesario recompilarlo y esto es importante para usar nuevas versiones de Java sin ningún tipo de modificación y para que programas antiguos sigan funcionando. El segundo motivo es que el mismo tipo sirve para todas las posibles instancias del tipo genérico, de forma que es eficiente y no se incurre en ninguna penalización de rendimiento o memoria.&lt;/p&gt;

&lt;p&gt;La desventaja del &lt;em&gt;type erasure&lt;/em&gt; es que en tiempo de ejecución no se pueden hacer algunas optimizaciones, en computación y uso de memoria. Sin embargo, evaluando las ventajas y desventajas los desarrolladores de Java siempre han dado gran importancia en la compatibilidad hacia atrás y por ello prefirieron implementar los &lt;em&gt;generics&lt;/em&gt; usando &lt;em&gt;type erasure&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;El proceso de eliminar los tipos de los genéricos se realiza eliminando todos los parámetros de los tipos parametrizados siendo reemplazados con su restricción (&lt;em&gt;bound&lt;/em&gt;), con el tipo &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/lang/Object.html&#34;&gt;Object&lt;/a&gt; o con con su restricción, si tiene múltiples restricciones se usa la primera.&lt;/p&gt;

&lt;p&gt;En Java dos métodos distintos no pueden tener la misma firma, dado que los &lt;em&gt;generics&lt;/em&gt; han sido implementados con &lt;em&gt;type erasure&lt;/em&gt; también se ha de cumplir que dos métodos no pueden tener la misma firma una vez aplicado el &lt;em&gt;erasure&lt;/em&gt;. Para no perder las validaciones de tipos el compilador inserta los &lt;em&gt;cast&lt;/em&gt; necesarios. El código fuente de una clase genérica sería el siguiente, que el compilador transformaría siguiendo las reglas del &lt;em&gt;type erasure&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/fe9adde28f19c10787720a7db6a4a840.js?file=Generic.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/fe9adde28f19c10787720a7db6a4a840.js?file=Erased.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;Al mismo tiempo que el compilador inserta los &lt;em&gt;cast&lt;/em&gt; necesarios para mantener la validación de tipos inserta métodos &lt;em&gt;bridge&lt;/em&gt; para mantener el polimorfismo en las clases que extienden de tipos genéricos. Si se extiende la clase &lt;em&gt;Node&lt;/em&gt; anterior y se aplica &lt;em&gt;type erasure&lt;/em&gt; la firma del método &lt;em&gt;setData&lt;/em&gt; de &lt;em&gt;IntegerNode&lt;/em&gt; no coincide con el de la clase &lt;em&gt;Node&lt;/em&gt;. Para solventar este problema el compilador inserta un método &lt;em&gt;bridge&lt;/em&gt; para el método &lt;em&gt;setData&lt;/em&gt; con un parámetro &lt;em&gt;Object&lt;/em&gt; que se encarga de hacer de puente y llamar al método &lt;em&gt;setData&lt;/em&gt; que recibe un &lt;em&gt;Integer&lt;/em&gt; aplicando un &lt;em&gt;cast&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/tutorial/java/generics/erasure.html&#34;&gt;Type Erasure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/05/que-es-el-concepto-de-heap-pollution-en-java/&#34;&gt;Qué es el concepto de Heap Pollution en Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.quora.com/What-are-the-pros-and-cons-of-having-Generics-as-erasure-or-reifiable?share=1&#34;&gt;What are the pros and cons of having Generics as erasure or reifiable?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/03/la-herramienta-jlink-para-generar-runtimes-de-java-incluyendo-exclusivamente-los-modulos-que-usa-una-aplicacion/</id>
        <title>La herramienta jlink para generar runtimes de Java incluyendo exclusivamente los módulos que usa una aplicación</title>        
        <updated>2018-03-24T23:30:00+01:00</updated>
        <published>2018-03-24T23:30:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/03/la-herramienta-jlink-para-generar-runtimes-de-java-incluyendo-exclusivamente-los-modulos-que-usa-una-aplicacion/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;En versiones anteriores de Java 9 había un único &lt;em&gt;runtime&lt;/em&gt; para ejecutar cualquier aplicación que debía ser instalado previamente para la ejecución de la aplicación. Aunque la aplicación no usase &lt;em&gt;Swing&lt;/em&gt; por ser una aplicación web o cosas como &lt;a href=&#34;https://es.wikipedia.org/wiki/CORBA&#34;&gt;CORBA&lt;/a&gt; ya en desuso aún estaban disponibles en el &lt;em&gt;runtime&lt;/em&gt; por motivos de no romper la compatibilidad con versiones anteriores.&lt;/p&gt;

&lt;p&gt;Esto hacía que las aplicaciones no fuesen lo más eficiente posible y aumenta el tamaño necesario ahora de las imágenes de contenedores como &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; estas tuviesen un tamaño mayor del imprescindible, además de hacer que el tiempo de arranque sea algo mayor e incluir clases que aumentan la superficie de ataque ante un fallo de seguridad. Entre las &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/&#34;&gt;novedades de Java 8&lt;/a&gt; se añadieron los &lt;a href=&#34;http://www.oracle.com/technetwork/java/embedded/resources/tech/compact-profiles-overview-2157132.html&#34;&gt;&lt;em&gt;compact profiles&lt;/em&gt;&lt;/a&gt; que eran subconjuntos más reducidos del &lt;em&gt;runtime&lt;/em&gt; pero eran conjuntos prefijados, las aplicaciones debían usar el mínimo que necesitasen si querían usar alguno. La solución de Java 8 fue una solución intermedia, &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/09/novedades-y-nuevas-caracteristicas-de-java-9-los-modulos/&#34;&gt;los módulos de Java 9&lt;/a&gt; han sido la solución completa.&lt;/p&gt;

&lt;p&gt;Con la incorporación de la modularidad a Java 9 se posibilita generar &lt;em&gt;runtimes&lt;/em&gt; con exclusivamente los módulos que necesite la aplicación, si la aplicación solo necesita el módulo &lt;em&gt;java.base&lt;/em&gt; por ser muy sencilla se puede generar un &lt;em&gt;runtime&lt;/em&gt; con solo este módulo. Los módulos son una mejora conveniente para la tendencia en el desarrollo de aplicaciones en forma de microservicios y ejecución con contenedores. La herramienta que posibilita generar &lt;em&gt;runtimes&lt;/em&gt; personalizados con &lt;a href=&#34;https://docs.oracle.com/javase/9/tools/jlink.htm&#34;&gt;jlink&lt;/a&gt; que pueden ser ejecutandos sin instalar previamente ningún JDK en el sistema y posibilitando que cada aplicación pueda usar su propio &lt;em&gt;runtime&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Usando como ejemplo el caso de la &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/10/ejemplo-con-el-cliente-http-2-de-java/&#34;&gt;aplicación con el cliente de HTTP/2&lt;/a&gt; que tiene como dependencias únicamente el módulo &lt;em&gt;jdk.incubator.httpclient&lt;/em&gt; de forma explícita y &lt;em&gt;java.base&lt;/em&gt; de forma implícita en su definición de módulo la forma de generar un runtime específico para esta aplicación con &lt;em&gt;jlink&lt;/em&gt; es la siguiente que utiliza el archivo con las dependencias de módulos declarados en el archivo &lt;em&gt;module-info.java&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/2e113967c3823da21308e8f2a9adbd4f.js?file=module-info.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;Usando la linea de comandos o con una tarea de &lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle&lt;/a&gt; se genera el &lt;em&gt;runtime&lt;/em&gt; para la aplicación con &lt;em&gt;jlink&lt;/em&gt;. El módulo ha de compilarse previamente. Con la opción &lt;em&gt;&amp;ndash;launcher&lt;/em&gt; se crea un &lt;em&gt;script&lt;/em&gt; para lanzar la aplicación con la clase que contiene el método &lt;em&gt;main&lt;/em&gt; indicada como punto de entrada, la opción &lt;em&gt;&amp;ndash;output&lt;/em&gt; indica donde se genera el contenido del &lt;em&gt;runtime&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/2e113967c3823da21308e8f2a9adbd4f.js?file=jlink.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;El espacio total del &lt;em&gt;runtime&lt;/em&gt; en este caso de es de solo 38 MiB. Comparados con los casi 200 MiB que ocupa el &lt;a href=&#34;http://openjdk.java.net/&#34;&gt;OpenJDK&lt;/a&gt; comprimido que incluye todos los módulos, aproximadamente 500 MiB instalado y alrededor de entre 600 y 900 MiB dependiendo de la imagen base de Docker que se use se aprecia que el ahorro de espacio es considerable lo que redunda en tiempos de transferencia por red menores y un inicio más rápido de las aplicaciones.&lt;/p&gt;

&lt;p&gt;El contenido del &lt;em&gt;runtime&lt;/em&gt; y de su estructura de directorios es la indicada a continuación. Listando los módulos incluidos en este &lt;em&gt;runtime&lt;/em&gt; en vez de todos los del JDK se observa que solo están incluidos los necesarios por la aplicación.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/2e113967c3823da21308e8f2a9adbd4f.js?file=info.sh&#34;&gt;&lt;/script&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/2e113967c3823da21308e8f2a9adbd4f.js?file=build.gradle&#34;&gt;&lt;/script&gt;

&lt;p&gt;Una vez generado el &lt;em&gt;runtime&lt;/em&gt; su uso es el siguiente:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/2e113967c3823da21308e8f2a9adbd4f.js?file=run.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;En el vídeo &lt;a href=&#34;https://www.oracle.com/java/java9-screencasts.html?bcid=5582437011001&amp;amp;playerType=single-social&amp;amp;size=events&#34;&gt;Java in a World of Containers&lt;/a&gt; se comenta otra serie de características y opciones incluidas en Java para hacer de esta plataforma más consciente de las condiciones de ejecución propias de los contenedores.&lt;/p&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/JavaHttp2&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradew jlink&lt;/code&gt;.
&lt;/p&gt;



        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/03/novedades-de-java-10/</id>
        <title>Novedades de Java 10</title>        
        <updated>2018-03-27T17:00:00+01:00</updated>
        <published>2018-03-23T20:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/03/novedades-de-java-10/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Oracle y los ingenieros a cargo del desarrollo de Java están haciendo en mi opinión un buen trabajo que se han materializado en las versiones Java 8 con las &lt;em&gt;lambdas&lt;/em&gt;, en Java 9 con los módulos y en Java 10 con la mejora en la inferencia de tipos. Todo ello está haciendo que la plataforma evolucione más rápido y significativamente que lo que hasta hace unos años estábamos acostumbrados.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;El 20 de marzo de 2018 se publicó la que es la versión 10 de Java siguiendo el nuevo calendario de publicar una nueva versión cada seis meses, Java 9 fue publicado en septiembre del año anterior. Con este nuevo calendario no pasarán tantos años entre cada nueva versión que era la queja de algunos desarrolladores y el motivo de que la plataforma Java no evolucionar tan rápidamente como algunos desarrolladores desean, quizá ahora la queja sea al contrario que se publican demasiadas versiones y no da tiempo a asimilar los cambios. Para dar cabida a ambas necesidades y garantizar un soporte prolongado cada año y medio será declarada una versión como de soporte a plazo largo o &lt;em&gt;LTS&lt;/em&gt; para que las empresas tengan seguridad en las aplicaciones que desarrollen.&lt;/p&gt;

&lt;p&gt;Lo mejor de este nuevo calendario de publicaciones cada seis meses es que las empresas y programadores tienen predictibilidad de cuándo se lanzará la siguiente versión aunque las nuevas características que tenga no está predeterminado ya no pasarán varios años entre versiones visibilizando que la plataforma evoluciona continuamente en pequeños saltos cada poco tiempo en vez de saltos grandes cada mucho tiempo que son más disruptivos y hace más difícil la adopción.&lt;/p&gt;

&lt;p&gt;Es un principio no añadir características según lo que está de moda sino pensando en décadas futuras. Java 10 tiene una lista más reducida de cambios que Java 9 pero importantes y significativos. Java es el último en unirse a la fiesta de la inferencia de tipos pero ha sido de forma intencionada ya que el coste de implementarla de forma incorrecta supone un alto coste que hay que mantener en adelante. Otras ideas que ha sido implementadas el lenguajes de programación funcional y están listas para su uso masivo tomarán su propio camino en futuras versiones de Java por ejemplo &lt;em&gt;pattern matching&lt;/em&gt; y &lt;em&gt;value types&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;La lista más relevante de novedades de Java 10 es la siguiente:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;286: &lt;a href=&#34;http://openjdk.java.net/jeps/286&#34;&gt;Local-Variable Type Inference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;296: &lt;a href=&#34;http://openjdk.java.net/jeps/296&#34;&gt;Consolidate the JDK Forest into a Single Repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;304: &lt;a href=&#34;http://openjdk.java.net/jeps/304&#34;&gt;Garbage-Collector Interface&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;307: &lt;a href=&#34;http://openjdk.java.net/jeps/307&#34;&gt;Parallel Full GC for G1&lt;/a&gt;, se ha mejorado el recolector de basura G1 añadiendo soporte para paralelismo y mejorado las pausas en los peores escenarios.&lt;/li&gt;
&lt;li&gt;310: &lt;a href=&#34;http://openjdk.java.net/jeps/310&#34;&gt;Application Class-Data Sharing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;312: &lt;a href=&#34;http://openjdk.java.net/jeps/312&#34;&gt;Thread-Local Handshakes&lt;/a&gt;, mejora interna en la sincronización y pausas en los &lt;em&gt;threads&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;313: &lt;a href=&#34;http://openjdk.java.net/jeps/313&#34;&gt;Remove the Native-Header Generation Tool (javah)&lt;/a&gt;, se elimina la funcionalidad de &lt;em&gt;javah&lt;/em&gt; al haber sido sustituida y mejorada por funcionalidad añadida en &lt;em&gt;javac&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;314: &lt;a href=&#34;http://openjdk.java.net/jeps/314&#34;&gt;Additional Unicode Language-Tag Extensions&lt;/a&gt;, se añade alguna nueva extensión de Unicode.&lt;/li&gt;
&lt;li&gt;316: &lt;a href=&#34;http://openjdk.java.net/jeps/316&#34;&gt;Heap Allocation on Alternative Memory Devices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;317: &lt;a href=&#34;http://openjdk.java.net/jeps/317&#34;&gt;Experimental Java-Based JIT Compiler&lt;/a&gt;, se añade en forma experimental el compilador JIT Graal implementado en Java en la plataforma Linux.&lt;/li&gt;
&lt;li&gt;319: &lt;a href=&#34;http://openjdk.java.net/jeps/319&#34;&gt;Root Certificates&lt;/a&gt;, se han añadido varios certificados raíz al &lt;em&gt;keystore&lt;/em&gt; incluído para permitir que las conexiones TLS funcionen por defecto.&lt;/li&gt;
&lt;li&gt;322: &lt;a href=&#34;http://openjdk.java.net/jeps/322&#34;&gt;Time-Based Release Versioning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;inferencia-de-tipos-para-variables-locales&#34;&gt;Inferencia de tipos para variables locales&lt;/h3&gt;

&lt;p&gt;De las novedades la inferencia de tipos para variables locales es la más destacada en cuanto a cambios en el lenguaje con la adición de la nueva palabra reservada &lt;em&gt;var&lt;/em&gt;, esto ayuda a no tener que repetir varias veces los tipos en la construcción de un objeto. En las &lt;em&gt;lambdas&lt;/em&gt; los parámetros no es necesario declararlos infiriéndose de la interfaz que implementan. La inferencia de tipos es la idea que permite al compilador obtener el tipo estático sin que sea necesario escribirlo de forma explícita.&lt;/p&gt;

&lt;p&gt;Java no es el único o primer lenguaje en incluir la inferencia de tipos para variables. Ha sido usado en otros lenguajes durante décadas. En realidad la inferencia de tipos incluida en Java 10 con &lt;em&gt;var&lt;/em&gt; es muy limitada y restringida de manera intencionada. Si no fuese así el &lt;a href=&#34;https://en.wikipedia.org/wiki/Hindley-Milner_type_system&#34;&gt;algoritmo Hindley-Milner&lt;/a&gt; usado para la inferencia de tipos usado en la mayoría de lenguajes que toma un tiempo exponencial en el peor de los casos potencialmente disminuiría la velocidad de &lt;em&gt;javac&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;La inferencia de tipos para variables locales hace que el código no sea tan verboso sin perder en gran medida la legibilidad ya que solo es para las variables locales. El siguiente ejemplo muestra la evolución de la inferencia de tipos desde Java 5 pasando por Java 8 donde se incluyeron algunas mejoras y el que puede utilizarse a partir de Java 10.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/d4ff7ac7eecda8504ee0834593d70929.js?file=JavaTypeInference.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;Los tipos en la parte izquierda pueden parecer redundantes y obvios. Tradicionalmente la filosofía de Java es declarar de forma estática los tipos para todo incluyendo las expresiones más simples. Ciertamente definir los tipos para propiedades y en las firmas de los métodos impone un contrato que es necesario respetar y esto ayuda en el mantenimiento asi como a su entendimiento. Sin embargo, declarar los tipos para expresiones intermedias puede parecer menos útil e incómodo.&lt;/p&gt;

&lt;p&gt;En el artículo &lt;a href=&#34;https://developer.oracle.com/java/jdk-10-local-variable-type-inference&#34;&gt;Java 10 Local Variable Type Inference&lt;/a&gt; y vídeo de Youtube &lt;a href=&#34;https://www.youtube.com/watch?v=Le1DbpRZdRQ&#34;&gt;First contact with &amp;lsquo;var&amp;rsquo; in Java 10&lt;/a&gt; hay una explicación más detallada de esta nueva característica y se aprecia claramente en los siguientes ejemplos que muestran la evolución de la inferencia de tipos.&lt;/p&gt;

&lt;p&gt;No solo hay una mejora de legibilidad aquí, también hay una ventaja en términos de evolución y mantenimiento de código. Si tomamos el mismo código con tipos explícitos para la variable &lt;em&gt;userChannels&lt;/em&gt; y reemplazamos el tipo del canal representado con un &lt;em&gt;String&lt;/em&gt; con un objeto de dominio &lt;em&gt;Channel&lt;/em&gt; que pudiese tener información adicional acerca del canal entonces necesitaríamos reescribir los tipos de todo el código que dependa de este nuevo tipo.&lt;/p&gt;

&lt;p&gt;La inferencia de tipos definitivamente reduce la cantidad de tiempo para escribir código Java pero mejor es la mejora en legibilidad del código. Los desarrolladores dedican mucho más tiempo a leer código fuente que el que dedican a escribirlo de manera que definitivamente hay que optimizar para la facilidad de lectura sobre la facilidad de escritura. Aunque &lt;em&gt;var&lt;/em&gt; no siempre es una mejora en cuanto a legibilidad ya que se pierde la información del tipo su uso se guía por el principio de no tanto para optimizar la escritura o lectura sino generalizando más para la facilidad de mantenimiento, escribir algunos tipos genéricos no triviales es complicado aún con la ayuda de asistencia de un entorno integrado de desarrollo.&lt;/p&gt;

&lt;p&gt;No está permitido en retornos, parámetros, propiedades, variables sin inicializar, ni asignar &lt;em&gt;null&lt;/em&gt; pero en Java 11 el uso de &lt;em&gt;var&lt;/em&gt; se permitirá en los parámetros de una expresión &lt;em&gt;lambda&lt;/em&gt; que será útil porque permite un parámetro formal cuyo tipo es inferido pero que además en el que se pueden usar anotaciones.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/d4ff7ac7eecda8504ee0834593d70929.js?file=JavaLambdaVarAnnotation.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;Con la inferencia de tipos los nombres de las variables cobran mayor importancia dado que &lt;em&gt;var&lt;/em&gt; elimina la posibilidad al lector del código adivinar la intención de una variable a partir del tipo. Ya es difícil asignar nombres adecuados ahora supondrá mayor importancia.&lt;/p&gt;

&lt;p&gt;El tipo en las variables locales no es tan importante ya que normalmente los nombres de las variables son el del tipo. Con &lt;em&gt;var&lt;/em&gt; se evita repetición entre el tipo y el nombre de la variable, la brevedad de &lt;em&gt;var&lt;/em&gt; hace destacar el nombre de la variable y proporciona mayor claridad además de tener que escribir menos código repetitivo.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/d4ff7ac7eecda8504ee0834593d70929.js?file=NamesAlign.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;Con &lt;em&gt;var&lt;/em&gt; se evita la longitud variable de los tipos y la no alineación de los nombres de las variables, permite quitar los nombres largos de algunos tipos que son comunes en las aplicaciones empresariales como cosas como &lt;em&gt;DefaultListenerFactory&lt;/em&gt; con vocablos que se van añadiendo uno detras de otro hasta formar un largo nombre.&lt;/p&gt;

&lt;p&gt;Utilizar &lt;em&gt;var&lt;/em&gt; no tiene por que suponer una perdida de legibilidad del código, un buen nombre de variable da más información que el tipo. Por ejemplo, &lt;em&gt;List&amp;lt;User&amp;gt;&lt;/em&gt; parece ser una lista de usuarios, utilizando el nombre de la variable &lt;em&gt;admins&lt;/em&gt; obtendríamos que son una parte más concreta de usuarios en el contexto local en el que se está usando. Por lo que no tener el tipo no es dramático si es suplido con un buen nombre de variable que capture su contenido correctamente.&lt;/p&gt;

&lt;p&gt;La palabra reservada &lt;em&gt;var&lt;/em&gt; no hace de Java un lenguaje dinámico, sigue siendo estático y fuertemente tipado. Solo que ahora los tipos no hace falta declararlos explícitamente y es el compilador el que se encarga de inferirlos según el contexto. En tiempo de ejecución nada cambia, el rendimiento sigue siendo el mismo y solo es una característica en tiempo de compilación.&lt;/p&gt;

&lt;p&gt;La existencia de &lt;em&gt;var&lt;/em&gt; no significa que haya de usarse de forma indiscriminada para todas las variables locales sino juiciosamente. En este caso quizá es preferible declarar el tipo por no ser obvio lo que retorna el método &lt;em&gt;getCities()&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/d4ff7ac7eecda8504ee0834593d70929.js?file=TypeVsVar.java&#34;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://openjdk.java.net/projects/amber/LVTIstyle.html&#34;&gt;Style Guidelines for Local Variable Type Inference in Java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Los entornos integrados de desarrollo tardarán un tiempo en implementar la inferencia de tipos para variables locales hasta que lancen nuevas versiones.&lt;/p&gt;

&lt;h3 id=&#34;otras-novedades&#34;&gt;Otras novedades&lt;/h3&gt;

&lt;p&gt;El tiempo para iniciar el interprete REPL de &lt;a href=&#34;https://docs.oracle.com/javase/9/jshell/introduction-jshell.htm&#34;&gt;JShell&lt;/a&gt; ha sido reducido significativamente especialmente en casos donde se inicia con un archivo que incluye varios &lt;em&gt;snippets&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Se han añadido mejoras en la herramienta de documentación de las clases Javadoc como soporte para varias hojas de estilo, agrupar métodos redefinidos que no cambian la especificación o nueva etiqueta &lt;em&gt;summary&lt;/em&gt; como resumen de la API.&lt;/p&gt;

&lt;p&gt;Se han añadido varios métodos para crear copias no modificables con &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/util/List.html#copyOf(java.util.Collection)&#34;&gt;List.copyOf()&lt;/a&gt;, &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/util/Set.html#copyOf(java.util.Collection)&#34;&gt;Set.copyOf()&lt;/a&gt;, and &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/util/Map.html#copyOf(java.util.Map)&#34;&gt;Map.copyOf()&lt;/a&gt;. Se han añadido nuevos métodos a la clase &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/util/stream/Collectors.html&#34;&gt;Collectors&lt;/a&gt; para devolver una lista no modificable con &lt;em&gt;toUnmodifiableList&lt;/em&gt;, &lt;em&gt;toUnmodifiableSet&lt;/em&gt;, and &lt;em&gt;toUnmodifiableMap&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Se añade el método &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/util/Optional.html#orElseThrow()&#34;&gt;Optional.orElseThrow()&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Algunas &lt;a href=&#34;http://www.oracle.com/technetwork/java/javase/10-relnote-issues-4108729.html#Removed&#34;&gt;otras características ya obsoletas se han eliminado&lt;/a&gt; y &lt;a href=&#34;http://www.oracle.com/technetwork/java/javase/10-relnote-issues-4108729.html#Deprecated&#34;&gt;otras se han marcado como &lt;em&gt;deprecated&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;el-posible-futuro-jdk-11&#34;&gt;El posible futuro JDK 11+&lt;/h3&gt;

&lt;p&gt;Está planificado en seis meses después de Java 10 y con soporte extendido, el soporte de Java 10 durará tan solo hasta 2018.09, el de Java 11 al ser una &lt;em&gt;LTS&lt;/em&gt; durará un periodo de 8 años hasta el 2026.09.&lt;/p&gt;

&lt;p&gt;En el nuevo modelo las nuevas características no se añaden hasta que están preparadas. Tentativamente las &lt;a href=&#34;http://openjdk.java.net/projects/jdk/11/&#34;&gt;características de JDK 11&lt;/a&gt; no están completamente determinadas pero se están evaluando grandes proyectos como &lt;a href=&#34;http://openjdk.java.net/projects/valhalla/&#34;&gt;Valhalla&lt;/a&gt; para hacer más eficiente el tratamiento de datos que no requieran la indentidad de objetos con los denominados &lt;a href=&#34;http://openjdk.java.net/jeps/169&#34;&gt;Value Types&lt;/a&gt; útil para la programación funcional con datos puros optimizados para computaciones en paralelo. El proyecto &lt;a href=&#34;http://openjdk.java.net/projects/loom/&#34;&gt;Loom&lt;/a&gt; que posibilita una versión más ligera aún que los &lt;em&gt;threads&lt;/em&gt; o hilos con &lt;em&gt;fibers&lt;/em&gt; o fibras, &lt;em&gt;continuations&lt;/em&gt; o &lt;em&gt;coroutine&lt;/em&gt; y &lt;a href=&#34;https://en.wikipedia.org/wiki/Tail_call&#34;&gt;Tail Call&lt;/a&gt;. El proyecto &lt;a href=&#34;http://openjdk.java.net/projects/panama/&#34;&gt;Panama&lt;/a&gt; hará más fácil trabajar con código nativo o el proyecto &lt;a href=&#34;http://openjdk.java.net/projects/zgc/&#34;&gt;ZGC&lt;/a&gt; para crear un recolector de basura que pueda manejar gigabytes y terabytes con pausas menores a 10ms. O el proyecto &lt;a href=&#34;http://openjdk.java.net/projects/amber/&#34;&gt;Amber&lt;/a&gt; con unas pequeñas mejoras pero muy cómodas para el programador como la de los literales &lt;em&gt;strings raw&lt;/em&gt;. En la &lt;a href=&#34;http://openjdk.java.net/&#34;&gt;página del OpenJDK&lt;/a&gt; hay más proyectos que en un futuro quizá sean implementados y publicados en alguna versión.&lt;/p&gt;

&lt;p&gt;En la sección final de referencia incluyo varios artículos y vídeos de los que he obtenido la información para hacer este resumen de las novedades de Java 10. Algunos son muy interesantes y amplían en gran medida lo comentado y lo que posiblemente llegue en un futuro.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Le1DbpRZdRQ&#34;&gt;First contact with &amp;lsquo;var&amp;rsquo; in Java 10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/84mCmmzksGI?t=47m43s&#34;&gt;Keynotes: Oracle Code Chicago&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.oracle.com/java/java10&#34;&gt;Introducing Java SE 10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.oracle.com/java/jdk-10-local-variable-type-inference&#34;&gt;Java 10 Local Variable Type Inference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.eclipse.org/content/java-10-support-oxygen&#34;&gt;Java 10 Support for Oxygen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jdk.java.net/10/&#34;&gt;JDK 10 General-Availability Release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.oracle.com/technetwork/java/javase/10-relnote-issues-4108729.html&#34;&gt;JDK 10 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.oracle.com/corporate/pressrelease/Java-10-032018.html&#34;&gt;Oracle Java SE 10 Release Arrives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.infoworld.com/article/3230507/java/java-jdk-10-what-new-features-to-expect-in-the-next-java.html&#34;&gt;JDK 10: What’s new in Java 10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.forbes.com/sites/oracle/2018/03/20/what-java-10-and-javas-new-6-month-release-cadence-mean-for-developers/&#34;&gt;What Java 10 And Java&amp;rsquo;s New 6-Month Release Cadence Mean For Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cr.openjdk.java.net/~rpressler/loom/Loom-Proposal.html&#34;&gt;Project Loom: Fibers and Continuations for the Java Virtual Machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.azul.com/the-incredible-shrinking-java-platform/&#34;&gt;The Incredible Shrinking Java Platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.oracle.com/technetwork/java/eol-135779.html&#34;&gt;Oracle Java SE Support Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.opsian.com/blog/java-on-docker/&#34;&gt;Java on Docker will no longer suck: improvements coming in Java 10&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/03/tu-con-mac-yo-con-mi-gnu-linux/</id>
        <title>Tú con tu Mac, yo con mi GNU/Linux</title>        
        <updated>2018-03-18T17:00:00+01:00</updated>
        <published>2018-03-17T14:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/03/tu-con-mac-yo-con-mi-gnu-linux/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/macos.png&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;macOS&#34; title=&#34;macOS&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/windows-10.svg&#34; class=&#34;right &#34; width=&#34;350&#34; alt=&#34;Windows&#34; title=&#34;Windows&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/gnu.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;GNU&#34; title=&#34;GNU&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/linux.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Linux&#34; title=&#34;Linux&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Por motivos laborales y por política de la empresa tuve que elegir como equipo un portátil de &lt;a href=&#34;https://www.apple.com/&#34;&gt;Apple&lt;/a&gt;, en concreto un MacBook Pro con procesador Intel Core i5, 16 GiB de memoria y 512 GiB de almacenamiento SSD. Prácticamente el mejor portátil que había en su momento en el catálogo de la manzana que tendría un precio seguro más de 2000€ y quizá 2500€. Este cambio me ha permitido poder comparar con mi propio portátil, un Sony Vaio con procesador Intel Core i5 3210, 8 GiB de memoria y 250 GiB de almacenamiento SSD y la distribución &lt;a href=&#34;https://www.archlinux.org/&#34;&gt;Arch Linux&lt;/a&gt; de &lt;a href=&#34;https://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;/&lt;a href=&#34;https://www.linux.com/&#34;&gt;Linux&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Tenía la duda de si esta experiencia me iba a convencer de pasarme al lado oscuro. Llevo usando el MacBook desde hace un año siendo este &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/11/mi-primer-mac-yo-usuario-de-gnu-linux/&#34;&gt;mi primer contacto con un Mac&lt;/a&gt; y puedo decir de momento que no hay nada en los Mac que me convezca de adquirir uno de los portátiles de Apple. Sí no son feos, tenían (en pasado) alguna cosa distinta como los &lt;em&gt;magsafe&lt;/em&gt; en el adaptador de corriente, no tienen elementos obsoletos como una salida VGA o grabadora DVD, una buena pantalla y un buen &lt;em&gt;touchpad&lt;/em&gt; pero a un precio exagerado. Aún así y ahora que he probado tanto Windows, macOS como GNU/Linux no tengo nada que envidiar a los portátiles de Apple ni a macOS por mi parte, es más estoy más convencido de usar GNU/Linux.&lt;/p&gt;

&lt;h3 id=&#34;software&#34;&gt;Software&lt;/h3&gt;

&lt;p&gt;Empezando por el software libre, ¿hace falta que mecione &lt;a href=&#34;https://www.gnu.org/philosophy/free-sw.es.html&#34;&gt;las cuatro libertades esenciales&lt;/a&gt;? o la posibilidad de elegir la distribución o entorno de escritorio que más me guste o mejor se adapte a mis requerimientos. Pensando mal, en el portátil Mac no estoy seguro de que no tengan algún tipo de software espía, algún tipo de monitorización o telemetría.&lt;/p&gt;

&lt;p&gt;Para cualquier necesidad en Linux seguramente hay una aplicación que realice esa funcionalidad, editor de documentos, reproductor de vídeo, edición fotográfica, navegador, administrador de ebooks, entorno de desarrollo, editor de código, descargas torrent. Las principales aplicaciones están disponibles para ambas plataformas: &lt;a href=&#34;https://www.libreoffice.org/&#34;&gt;LibreOffice&lt;/a&gt;, &lt;a href=&#34;https://www.videolan.org/vlc/&#34;&gt;VLC&lt;/a&gt;, &lt;a href=&#34;https://www.gimp.org/&#34;&gt;GIMP&lt;/a&gt;, &lt;a href=&#34;https://www.mozilla.org/es-ES/firefox/new/&#34;&gt;Firefox&lt;/a&gt;, &lt;a href=&#34;http://calibre-ebook.com/&#34;&gt;Calibre&lt;/a&gt;, &lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;IntelliJ&lt;/a&gt;, &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt;, &lt;a href=&#34;https://transmissionbt.com/&#34;&gt;Tranmission&lt;/a&gt;, &amp;hellip;&lt;/p&gt;

&lt;p&gt;Sin embargo, para algunas otras necesidades en Mac seguramente hay que sacar otra vez la tarjeta de crédito para compra alguna aplicación que realice la tarea que en GNU/Linux está disponible gratuitamente y es software libre. Por ejemplo, para convertir un vídeo a otro formato, para convertir a MP3 un CD de audio o un simple compresor/descompresor de archivos. Menos mal que en mac también se puede acceder a todo ese catálogo de software libre.&lt;/p&gt;

&lt;p&gt;Y &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/&#34;&gt;en GNU/Linux también hay juegos de buena calidad&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;hardware&#34;&gt;Hardware&lt;/h3&gt;

&lt;p&gt;El hardware de Apple es bonito y es un aspecto que lo cuidan mucho al menos más que en los típicos portátiles de la mayoría de las marcas que fabrican para Windows. Sin embargo, en cuanto a características no es de lo mejor que uno puede encontrar y a un precio significativamente mayor.&lt;/p&gt;

&lt;p&gt;Mi equipo es del 2012 y el Mac que uso del 2015, realmente lo único que echo de menos es la resolución de la pantalla que en el Mac es de 2560x1600 nativa y de 1650x1050 escalada lo que hace que se vea el texto muy bien. El &lt;em&gt;magic mouse&lt;/em&gt; al ser táctil también está bien aunque a veces detecte gestos incorrectos pero el hecho de que cuando esté cargándose no se pueda utilizar es un fallo de diseño.&lt;/p&gt;

&lt;p&gt;Compara el &lt;a href=&#34;https://slimbook.es/&#34;&gt;Slimbook Pro 2&lt;/a&gt; y el &lt;a href=&#34;https://www.apple.com/es/macbook-pro/&#34;&gt;MacBook Pro&lt;/a&gt;, para empezar en el Slimbook se pueden instalar 32 GiB de memoria en el Mac solo 16 GiB, a características similares con disco SSD de 512 GiB y pantalla de HiDPI el Slimbook está sobre los 1000€ y los Mac empezando por 1500€.&lt;/p&gt;

&lt;h3 id=&#34;entorno-de-escritorio&#34;&gt;Entorno de escritorio&lt;/h3&gt;

&lt;p&gt;El entorno de escritorio en lo personal uso &lt;a href=&#34;https://www.gnome.org/&#34;&gt;GNOME&lt;/a&gt; y en ciertos aspectos tiene similitudes como la barra superior, la vista de ventas o la gestión de escritorios. GNOME ha evolucionado de forma muy notable desde las primeras versiones 3.0 añadiendo muchas nuevas funcionalidades y mejorando varios aspectos visuales en cada ciclo de desarrollo de seis meses. KDE también ha mejorado mucho.&lt;/p&gt;

&lt;p&gt;GNOME puede personalizarse en cierta medida con algunos complementos para por ejemplo hacer que la barra de aplicaciones se muestre siempre. Algunos otros aspectos de GNOME me gustan más como el menú agrupado para varios de los iconos, en Mac cada icono tiene su propio menú de acciones. En la vista de aplicaciones de GNOME estás pueden cerrarse sin tener que seleccionar la aplicación. Tanto GNOME como macOS soportan escritorios virtuales.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/305/gnome-overview.jpg&#34; title=&#34;GNOME&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/305/gnome-overview-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/305/macos-overview.jpg&#34; title=&#34;macOS&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/305/macos-overview-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Comparación entre el entorno de escritotio de GNOME y macOS&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;GNOME incluye todo lo que un usuario necesita desde navegador de archivos, visor de fotos, visor de documentos, aplicación de correo electrónico, terminal, editor de texto plano. Y GNOME no es la única opción también está &lt;a href=&#34;https://www.kde.org/&#34;&gt;KDE&lt;/a&gt; o &lt;a href=&#34;https://xfce.org/&#34;&gt;XFCE&lt;/a&gt; por nombrar solo dos de los otros entornos e escritorio más conocidos.&lt;/p&gt;

&lt;h3 id=&#34;gestor-de-paquetes&#34;&gt;Gestor de paquetes&lt;/h3&gt;

&lt;p&gt;La forma de instalar y actualizar aplicaciones de las distribuciones GNU/Linux con los gestores y repositorios de paquetes es muy sencillo. En Arch Linux que es una distribución &lt;a href=&#34;https://en.wikipedia.org/wiki/Rolling_release&#34;&gt;rolling release&lt;/a&gt; cada vez que hago una actualización tengo las últimas versiones de cada paquete y aplicación.&lt;/p&gt;

&lt;p&gt;En los Mac se puede utilizar algo similar con &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; y menos mal que existe para hacer más fácil instalar y sobre todo matener actualizados los programas a las últimas versiones.&lt;/p&gt;

&lt;h3 id=&#34;precio&#34;&gt;Precio&lt;/h3&gt;

&lt;p&gt;No se cuanto costaría exactamente el equipo Mac pero con su configuración al menos unos 2000€. Pues bien un Slimbook a día de hoy con con una configuración del modelo tal que Intel Core i5 8250U (4 núcleos, 8 hilos), 32 GiB de memoria, 250 GiB de almacenamiento SSD con interfaz NVMe y pantalla QHD+ 3200 x 1800 HiDPI cuesta unos 1400€ siendo el tope de gama. Eso para los usuarios que necesiten tal ingente cantidad de memoria y en una de las configuraciones más completas.&lt;/p&gt;

&lt;p&gt;El MacBook Pro más barato empieza en 1500€ y con únicamente 8 GiB de memoria y solo 128 GiB de SSD, con 16 GiB de memoria y 256 GiB de SSD se va a los 2000€.&lt;/p&gt;

&lt;h3 id=&#34;obsolescencia&#34;&gt;Obsolescencia&lt;/h3&gt;

&lt;p&gt;Es Apple quien decide cuando deja de dar soporte a sus equipos, en forma de actualizaciones de seguridad o nuevas versiones de macOS, 6+ años aproximadamente lo que me parece poco tiempo, posiblemente en ese momento uno ya se platee comprar otro pero también el equipo seguramente se útil para ciertos propósitos. En GNU/Linux los equipos siguen teniendo actualizaciones y siguen siendo usables incluso con 10 años. Dejan de ser válidos cuando el software demanda más al equipo del lo que es capaz principalmente por la cantidad de memoria. Pero aún en estos casos utilizando una distribución que consuma pocos recursos siguen siendo usables para ciertas tareas.&lt;/p&gt;

&lt;h3 id=&#34;mi-conclusión&#34;&gt;Mi conclusión&lt;/h3&gt;

&lt;p&gt;La marca Apple tiene un halo de idolatración, de que no hay nada mejor ya sea en el hardware o en el software y si se me permite de elitismo, superioridad, ir a contracorriente, tener algo diferenciativo o exclusividad. Por mi experiencia no creo que GNU/Linux hoy día tenga mucho envidiar, ni sea más difícil de instalar o usar, quizá un buen soporte de hardware desde el primer día pero eso es consecuencia de la cuota de uso de GNU/Linux en el escritorio, aún así las cosas han mejorado mucho en la última década.&lt;/p&gt;

&lt;p&gt;¿Quieres un equipo para trabajar sin preocuparte mucho de dedicarle tiempo a mantenerlo? usa una versión con soporte prolongado (LTS) de &lt;a href=&#34;https://www.ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt;, ¿quieres una distribución con el software actualizado? usa Arch Linux o una de sus derivadas, ¿quieres un equipo potente, configurable, ligero y bonito? échale un vistazo a los Slimbook.&lt;/p&gt;

&lt;p&gt;Pasado este tiempo usando un Mac a mi no me han convencido de cambiar y comprar uno de ellos. La plataforma del pingüino también tiene defectos al igual que macOS no está exento de ellos, los dos alguna vez se me han bloqueado, pero después de probar un Mac la verdad es que no entiendo la idolatración y lo fieles que son algunos de sus usuarios a esta marca. Al pagar lo que hay que pagar por un Mac uno debe pensar que con legitimidad van a recibir a cambio algo acorde a sus expectativas más cuanto mayor sea el precio, quizá si el precio es elevado cuesta más reconocer los defectos. Quédate con tu Mac, a mi dame mi GNU/Linux.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.soydemac.com/apple-actualiza-la-lista-de-mac-y-otros-dispositivos-vintage-y-obsoletos/&#34;&gt;Apple actualiza la lista de Mac y otros dispositivos “vintage y obsoletos”&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="apple"/>
            
                <category term="gnu-linux"/>
            
                <category term="microsoft"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="windows"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/03/7-plus-computadoras-baratas-del-tamano-de-una-tarjeta-de-credito-basadas-en-gnu-linux-y-arm/</id>
        <title>7&#43; computadoras baratas del tamaño de una tarjeta de crédito basadas en GNU/Linux y ARM</title>        
        <updated>2018-03-17T19:00:00+01:00</updated>
        <published>2018-03-10T10:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/03/7-plus-computadoras-baratas-del-tamano-de-una-tarjeta-de-credito-basadas-en-gnu-linux-y-arm/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/linux.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Linux&#34; title=&#34;Linux&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/gnu.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;GNU&#34; title=&#34;GNU&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/arm.svg&#34; class=&#34;right &#34; width=&#34;350&#34; alt=&#34;ARM&#34; title=&#34;ARM&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Una de las tendencias de la tecnología desde sus inicios es que en todo momento está en constante evolución y mejora. Cada vez es más potente, más pequeña y más barata. Hay multitud de ejemplos en cualquier dispositivo electrónico que se use para ver su evolución desde &lt;a href=&#34;https://en.wikipedia.org/wiki/History_of_IBM_magnetic_disk_drives#IBM&#39;s_first_HDD_versus_its_last_HDDs&#34;&gt;discos duros de 5 megas que ocupaban un armario y pesaban varias decenas de kilos&lt;/a&gt; a ahora las tarjetas microSD del tamaño de una uña con una capacidad de 256 GiB, de procesadores que en los años 70 funcionaban a una frecuencia de unos pocos megahercios a ahora varios gigahercios, de memorias RAM de unos pocos kilobytes a ahora varios gigabytes, de &lt;em&gt;chips&lt;/em&gt; con &lt;a href=&#34;https://en.wikipedia.org/wiki/Transistor_count&#34;&gt;unos miles de transistores&lt;/a&gt;, ya no digamos válvulas de vacío, a varios miles de millones de transistores que emplean ahora las GPU de las tarjetas gráficas.&lt;/p&gt;

&lt;p&gt;En poco más de dos décadas ha habido un salto de entre dos y tres órdenes de magnitud. Mi primer ordenador en 1996 fué un Intel Pentium a 120 Mhz con 8 MiB de memoria RAM que luego amplié a 32 MiB y un disco duro de 1 GiB que utilicé en mis años de universidad. En el 2002 cambié a un AMD 1800+ con 512 MiB, 60 GiB de disco duro y una gráfica Nvidia GeForce 2 MX creo que con 32 MiB de memoria gráfica con un monitor de 17&amp;rdquo; de tubo que pesaba más de 10 kilos seguro. En el 2008 dejé el ordenador de escritorio y pase a un portátil Dell, del que no me quiero acordar mucho por lo malo que resultó, con un Intel Core 2 Duo 8100 fabricado un una litografía de 45 nanómetros, 4 GiB de RAM, un disco duro de 320 GiB y una gráfica Nvidia 8600 con 256 MiB de memoria gráfica. Finalmente ya casi en el 2013 a mi siguiente equipo como portátil con un Intel i3-3210 de 2 núcleos y 4 hilos fabricado a 22 nanómetros, 8 GiB de memoria e inicialmente un disco duro de 500 GiB que posteriormente cambié por un SSD de 250 GiB. Y actualmente si cambiase de equipo optaría seguramente por un AMD basado en la arquitectura Zen que han aumentado de forma significativa los núcleos e hilos de los procesadores, iría a por 32 GiB para virtualizar a gusto o 64 GiB si fuese posible y la memoria DDR4 estuviese a precios más asequibles, un monitor 2K o 4K y un disco SSD basado en NVMe que aumenta más la tasa de transferencia incluso sobre la interfaz SATA. Eso en los computadores tradicionales pero ya algunos modelos de móviles de gama alta poseen más memoria que varios portátiles de la gama básica y en el tamaño de 5 pulgadas.&lt;/p&gt;

&lt;p&gt;En otro artículo algo comentaba &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/10/sobre-el-rapido-avance-de-la-tecnologia/&#34;&gt;Sobre el rápido avance de la tecnología&lt;/a&gt; y básicamente sacaba dos conclusiones. Una no merece comprar tecnología hasta que realmente es necesario pero tampoco esperar indefinidamente a lo siguiente mejor y como segunda conclusión que no hace falta tener lo último para hacer lo mismo que ya es posible con lo anterior.&lt;/p&gt;

&lt;p&gt;Una de las últimas adquisiciones que hice fué en 2012, uno de los primeros modelos de la popular computadora del tamaño de una tarjeta de crédito Raspberry Pi con un procesador ARM con el juego de instrucciones &lt;em&gt;armv6h&lt;/em&gt; y 256 MiB que he utilizado mayoritariamente para realizar descargas y compartir archivos &lt;em&gt;torrent&lt;/em&gt; o algunas pruebas de &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/02/desempaquetado-del-kit-de-iniciacion-a-la-electronica-para-la-raspberry-pi/&#34;&gt;utilización de sensores y dispositivos de entrada y salida con Java&lt;/a&gt; o para &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/08/instalar-y-renovar-un-certificado-de-lets-encrypt-en-nginx/&#34;&gt;usar un certificador de Let&amp;rsquo;s Encrypt en un servidor Nginx&lt;/a&gt;. El siguiente uso que le daré es como &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/02/consola-de-juegos-retro-con-lakka-y-una-raspberry-pi/&#34;&gt;consola de juegos retro&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ya había placas de tamaño reducido con un computador completo similares a la Raspberry Pi pero la Raspberry Pi ha sido la placa con más éxito y que sigue teniendo uno de los mejores soportes y comunidad. Su propósito original es el aprendizaje a nivel educativo sin embargo su precio reducido de unos 36€ por los que se puede &lt;a href=&#34;http://amzn.to/2EP9mHX&#34;&gt;comprar ahora en Amazon&lt;/a&gt; ha sido gran parte de su éxito junto con una labor de promoción muy bien realizada en internet que contribuyó a crear gran expectación superando con creces la demanda esperada por los propios creadores en los meses iniciales. Han sido elaborados nuevos modelos más capaces con 4 núcleos a más velocidad y basados en un procesador de arquitectura ARM Cortex-A53 de 64 bits, con WiFi y Bluetooth, pero con solo 1 GiB de memoria.&lt;/p&gt;

&lt;p&gt;La Raspberry Pi es la más popular y con mejor soporte pero no es la mini placa más capaz ni incluso la más barata, debido a su éxito han surgido numerosas placas similares. La totalidad de estas placas usan alguna distribución de GNU/Linux y procesadores ARM ya sea &lt;a href=&#34;https://www.debian.org/&#34;&gt;Debian&lt;/a&gt;, &lt;a href=&#34;https://www.ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt;, &lt;a href=&#34;https://www.android.com/&#34;&gt;Android&lt;/a&gt;, &lt;a href=&#34;https://archlinuxarm.org/&#34;&gt;Arch Linux ARM&lt;/a&gt;, &lt;a href=&#34;https://www.armbian.com/&#34;&gt;Armbian&lt;/a&gt; o algunas distribuciones especializadas como &lt;a href=&#34;https://www.lakka.tv/&#34;&gt;Lakka&lt;/a&gt; para consola de juegos retro y &lt;a href=&#34;https://libreelec.tv/&#34;&gt;LibreELEC&lt;/a&gt; o &lt;a href=&#34;https://kodi.tv/&#34;&gt;Kodi&lt;/a&gt; para centro multimedia de salón.&lt;/p&gt;

&lt;p&gt;El uso que se les puede dar a estas computadores es muy diverso quizá no como para sustituir a un ordenador de escritorio o portátil basado en procesadores &lt;a href=&#34;https://www.intel.es&#34;&gt;Intel&lt;/a&gt; o &lt;a href=&#34;https://www.amd.com/es&#34;&gt;AMD&lt;/a&gt; pero si para otros propósitos como servidor de descargas, centro multimedia, servidor web, cluster de servidores con &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;, servicio en la nube propio con &lt;a href=&#34;https://owncloud.org/&#34;&gt;OwnCloud&lt;/a&gt;, servidor de código fuente con &lt;a href=&#34;https://about.gitlab.com/&#34;&gt;GitLab&lt;/a&gt;, servidor de integración continua con &lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins&lt;/a&gt;, base de datos &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt; o los mencionados consola de juegos retro y centro multimedia entre cualesquiera otros usos que queramos mientras el software necesario esté disponible y la cantidad memoria de la computadora sea suficiente.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/304/arm-powered.svg&#34; width=&#34;300&#34; alt=&#34;ARM Powered&#34; title=&#34;ARM Powered&#34;&gt;
&lt;/div&gt;

&lt;h3 id=&#34;raspberry-pi&#34;&gt;Raspberry Pi&lt;/h3&gt;

&lt;p&gt;Cuando apareció en el 2012 ya había placas similares pero su bajo precio y &lt;em&gt;marketing&lt;/em&gt; ha sido la que ha alcanzado la mayor popularidad sin ser la más potente. Gracias a su éxito con más de 14 millones de unidades vendidas es la mejor opción por su gran soporte de la comunidad aunque para algunos casos de uso su gigabyte de memoria en el modelo &lt;a href=&#34;https://www.raspberrypi.org/magpi/raspberry-pi-3-specs-benchmarks/&#34;&gt;Raspberry Pi 3&lt;/a&gt; puede quedarse escaso. Su &lt;em&gt;SoC&lt;/em&gt; BCM2837 de Broadcom no es el más capaz tanto en CPU (&lt;em&gt;quad-core&lt;/em&gt; ARM Cortex-A53 a 1.4 GHz) como en GPU (VideoCore IV) y con su gigabit ethernet compartida con los puertos USB y limitada lo que es un inconveniente importante en las transferencias de datos.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CPU Broadcom BCM2837B0, 4 x Cortex-A53 (ARMv8) 64-bit SoC @ 1.4GHz&lt;/li&gt;
&lt;li&gt;GPU VideoCore IV&lt;/li&gt;
&lt;li&gt;Memoria 1GB LPDDR2 SDRAM&lt;/li&gt;
&lt;li&gt;WiFi 2.4GHz and 5GHz IEEE 802.11.b/g/n/ac wireless LAN, Bluetooth 4.2, BLE&lt;/li&gt;
&lt;li&gt;Red Gigabit Ethernet over USB 2.0 (maximum throughput 300 Mbps)&lt;/li&gt;
&lt;li&gt;Extended 40-pin GPIO header&lt;/li&gt;
&lt;li&gt;Full-size HDMI&lt;/li&gt;
&lt;li&gt;4 USB 2.0 ports&lt;/li&gt;
&lt;li&gt;CSI camera port for connecting a Raspberry Pi camera&lt;/li&gt;
&lt;li&gt;DSI display port for connecting a Raspberry Pi touchscreen display&lt;/li&gt;
&lt;li&gt;4-pole stereo output and composite video port&lt;/li&gt;
&lt;li&gt;Micro SD port for loading your operating system and storing data&lt;/li&gt;
&lt;li&gt;5V/2.5A DC power input&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Power-over-Ethernet (PoE) support (requires separate PoE HAT)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://es.wikipedia.org/wiki/Raspberry_Pi&#34;&gt;Raspberry Pi&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/304/raspberrypi3b.jpg&#34; title=&#34;Raspberry Pi 3&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/304/raspberrypi3b-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Raspberry Pi 3&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;h3 id=&#34;rock64&#34;&gt;Rock64&lt;/h3&gt;

&lt;p&gt;El segundo modelo que destacaré es este de &lt;a href=&#34;https://www.pine64.org/&#34;&gt;PINE64&lt;/a&gt; porque posee versiones de 1, 2 y 4 GiB de memoria, gigabit ethernet y 1 puerto USB 3.0 a un precio similar al de una Raspberry Pi, lo único que le falta es WiFi para superar en todo a la RPi. También posee un módulo eMMC más rápido que las tarjetas microSD, SPI de 128 MiB para prescincir de tarjeta microSD en el arranque, salida de audio, otros 2 puertos USB 2.0, salida HDMI con soporte para 4K@60fps HDR10, botones dedicados de encendido y reinicio y los 40 pines para usar sensores. El &lt;em&gt;SoC&lt;/em&gt; es un &lt;a href=&#34;http://www.rock-chips.com/a/en/products/RK33_Series/2017/0118/829.html&#34;&gt;Rockchip RK3328&lt;/a&gt; &lt;em&gt;quad-core&lt;/em&gt; ARM Cortex-A53 y la GPU &lt;a href=&#34;https://developer.arm.com/products/graphics-and-multimedia/mali-gpus/mali-450-gpu&#34;&gt;ARM Mali-450MP2&lt;/a&gt; con capacidad para OpenGL ES 1.1 / 2.0.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CPU Rockchip RK3328, 4 x Cortex-A53 (ARMv8) 64-bit SoC @ 1.4GHz&lt;/li&gt;
&lt;li&gt;GPU ARM Mali-450MP2&lt;/li&gt;
&lt;li&gt;Memoria 1 / 2 / 4 GiB 1600 MHz LPDDR3 SDRAM&lt;/li&gt;
&lt;li&gt;128 Mb SPI Flash&lt;/li&gt;
&lt;li&gt;eMMC Module Socket, eMMC Jumper&lt;/li&gt;
&lt;li&gt;MicroSD Card Slot (Bottom)&lt;/li&gt;
&lt;li&gt;3.5mm Barrel Power Jack (5V3A)&lt;/li&gt;
&lt;li&gt;4K60P HDR Digital Output&lt;/li&gt;
&lt;li&gt;A/V Jack&lt;/li&gt;
&lt;li&gt;Red Gigabit Ethernet&lt;/li&gt;
&lt;li&gt;2 x USB 2.0 Dedicated Host, 1 x USB 3.0 Dedicated Host&lt;/li&gt;
&lt;li&gt;Pi-P5+ Bus&lt;/li&gt;
&lt;li&gt;Pi-2 Bus&lt;/li&gt;
&lt;li&gt;Power, Reset and Recovery Buttons&lt;/li&gt;
&lt;li&gt;IR Receiver Port&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/304/rock64.jpg&#34; title=&#34;Rock64&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/304/rock64-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Rock64&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;Para suplir la carencia de WiFi en su tienda hay disponible un accesorio conectable a un puerto USB, también tienen la posibilidad de comprar el alimentador de corriente, mando a distancia, caja acrílica y un &lt;em&gt;splitter&lt;/em&gt; con &lt;em&gt;Power Over Ethernet&lt;/em&gt; o &lt;em&gt;PoE&lt;/em&gt; que hace innecesario el alimentador de corriente si poseemos o adquirimos un &lt;em&gt;switch&lt;/em&gt; con esa función, tarjetas eMMC de 16, 32 y 64 GiB. Su precio de unos $45 para el modelo de 4 GiB.&lt;/p&gt;

&lt;div class=&#34;media media-video&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe width=&#34;640&#34; height=&#34;360&#34; src=&#34;https://www.youtube.com/embed/ZejkWra-Mfc&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;En el momento de escribir el artículo están preparando el lanzamiento de la placa Rock64Pro con un mejor &lt;em&gt;SoC&lt;/em&gt; &lt;a href=&#34;http://www.rock-chips.com/a/en/products/RK33_Series/2016/0419/758.html&#34;&gt;Rockchip RK3399&lt;/a&gt; &lt;em&gt;hexa-core&lt;/em&gt; con dos Cortex-A72 y 4 Cortex-A53 además de un puerto USB Type-C y mejor GPU con una &lt;a href=&#34;https://developer.arm.com/products/graphics-and-multimedia/mali-gpus/mali-t860-and-mali-t880-gpus&#34;&gt;ARM Mali-T860MP4&lt;/a&gt; &lt;em&gt;quad-core&lt;/em&gt; con soporte para OpenGL ES 1.1 / 2.0 / 3.0 and OpenCL 1.2.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/304/rock64pro.jpg&#34; title=&#34;Rock64Pro&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/304/rock64pro-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Rock64Pro&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;Estas placas de PINE64 son de lo mejor en la relación características hardware y precio, donde adolecen es en el software y es que aún con un tiempo relativamente corto de un año de vida es en el software donde pueden presentar algún problema. Conforme pase el tiempo mejorarán pero quizá no sea el modelo más adecuado para aquellos usuarios que no deseen encontrase problemas en su uso y no estén dispuestos buscar información o a resolver los que se presenten.&lt;/p&gt;

&lt;p&gt;Aunque no es como los modelos anteriores de placas base este es destacable por ser un portátil basado en un procesador ARM a un precio de $90. Pantalla de 11&amp;rdquo; o 14&amp;rdquo; con una resolución de 1366x768, 2 GiB de memoria, WiFi, microSD, mini HDMI, 16GB eMMC, dos puertos USB 2.0, salida de audio, cámara web y batería de 10000mAH, teclado y &lt;em&gt;touchpad&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/304/pinebook-11-inch.jpg&#34; title=&#34;PineBook (11 pulgadas)&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/304/pinebook-11-inch-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;PineBook (11 pulgadas)&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;h3 id=&#34;asus-tinker-board&#34;&gt;ASUS Tinker Board&lt;/h3&gt;

&lt;p&gt;La &lt;a href=&#34;https://www.asus.com/uk/Single-Board-Computer/Tinker-Board/overview/&#34;&gt;ASUS Tinker Board&lt;/a&gt; también está basada en un &lt;em&gt;SoC&lt;/em&gt; de Rockchip pero en este caso el modelo &lt;a href=&#34;http://www.rock-chips.com/a/en/products/RK32_Series/2014/0504/484.html&#34;&gt;RK3288&lt;/a&gt; que como CPU tiene el modelo más potente de 32 bits con una ARM Cortex-A17 &lt;em&gt;quad-core&lt;/em&gt; e incorporando una GPU Mali-T764 mejor que la Mali de la Rock64. Tiene 2 GiB de memoria e incorpora de serie WiFi N y Bluetooth 4.0.&lt;/p&gt;

&lt;p&gt;Su precio es algo más elevado que la Rock64 y tiene menos memoria pero más que la Raspberry Pi, aún así incorpora de serie WiFi y Bluetooth por lo que no sería necesario comprar elementos adicionales.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CPU Rockchip Quad-Core RK3288 processor&lt;/li&gt;
&lt;li&gt;Memoria 2GB Dual Channel DDR3&lt;/li&gt;
&lt;li&gt;GPU ARM Mali-T764&lt;/li&gt;
&lt;li&gt;Micro SD(TF) card slot&lt;/li&gt;
&lt;li&gt;Red Gigabit Ethernet&lt;/li&gt;
&lt;li&gt;WiFi 802.11 b/g/n, Bluetooth V4.0 + EDR&lt;/li&gt;
&lt;li&gt;Audio RTL ALC4040 CODEC&lt;/li&gt;
&lt;li&gt;4 x USB 2.0&lt;/li&gt;
&lt;li&gt;GPIO 40-pin header, up to 28 x GPIO pins, up to 2 x SPI bus, up to 2 x I2C bus, up to 4 x UART, up to 2 x PWM, up to 1 x PCM/I2S, 2 x 5V power pins, 2 x 3.3V power pins, 8 x ground pins, 1 x PWM, 1 x S/PDIF, 1 x 15-pin MIPI DSI, 1 x 15-pin MIPI CSI&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/304/asus-tinker-board.jpg&#34; title=&#34;ASUS Tinker Board&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/304/asus-tinker-board-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;ASUS Tinker Board&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;h3 id=&#34;cubox&#34;&gt;Cubox&lt;/h3&gt;

&lt;p&gt;Aunque los modelos de &lt;a href=&#34;https://www.solid-run.com/&#34;&gt;SolidRun&lt;/a&gt; son significativamente más caros poseen buenas especificaciones como el modelo &lt;a href=&#34;https://www.solid-run.com/product/cubox-i4x4/&#34;&gt;CuBox i4x4&lt;/a&gt; con un procesador &lt;em&gt;quad core&lt;/em&gt; aunque en si versión ARMv7 de 32 bits pero con 4 GiB de memoria, gigabit ethernet, WiFi y blutooth incluido en un formato de cubo de 2 pugadas. Como decía a un precio mas elevado, $170.&lt;/p&gt;

&lt;p&gt;El modelo mas reciente &lt;a href=&#34;https://www.solid-run.com/nxp-family/cubox-pulse/&#34;&gt;Cubox Pulse&lt;/a&gt; incorpora un procesador &lt;a href=&#34;https://www.nxp.com/products/processors-and-microcontrollers/applications-processors/i.mx-applications-processors/i.mx-8-processors:IMX8-SERIES&#34;&gt;NXP i.MX8M&lt;/a&gt; ya a 64 bits pero con el precio igualmente abultado respecto a otras opciones de 170€.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CPU i.MX8M Dual/Quad core ARM Cortex A53 up to 1.5Ghz (with ARM M4 GPP)&lt;/li&gt;
&lt;li&gt;Memoria up to 4GB LPDDR4&lt;/li&gt;
&lt;li&gt;MicroSD&lt;/li&gt;
&lt;li&gt;eMMC&lt;/li&gt;
&lt;li&gt;2 x USB 3.0, 1 x HDMI 2.0, 1 x RJ45&lt;/li&gt;
&lt;li&gt;Power on button&lt;/li&gt;
&lt;li&gt;Indication LEDs&lt;/li&gt;
&lt;li&gt;RTC&lt;/li&gt;
&lt;li&gt;IR receiver&lt;/li&gt;
&lt;li&gt;PoE sink support&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/304/cubox.jpg&#34; title=&#34;Cubox&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/304/cubox-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/304/cubox-pulse.jpg&#34; title=&#34;Cubox Pulse&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/304/cubox-pulse-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Cubox y Cubox Pulse&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;h3 id=&#34;odroid&#34;&gt;ODROID&lt;/h3&gt;

&lt;p&gt;Otro distribuidor importante es &lt;a href=&#34;http://www.hardkernel.com&#34;&gt;Hardkernel&lt;/a&gt; con sus modelos ODROID de pequeñas computadoras basadas en ARM con varios modelos entre ellos el &lt;a href=&#34;http://www.hardkernel.com/main/products/prdt_info.php?g_code=G145457216438&#34;&gt;ODROID C2&lt;/a&gt; que posee un procesador ARM Cortex-A53 &lt;em&gt;quad-core&lt;/em&gt;, 2 GiB de memoria, gigabit ethernet, soporta HDMI 2.0 4K@60fps, eMMC, 4 puertos USB 2.0 pero sin WiFi ni bluetooth. A un precio de $46.&lt;/p&gt;

&lt;p&gt;Están preparando el modelo &lt;a href=&#34;https://forum.armbian.com/topic/6496-odroid-n1-not-a-review-yet/&#34;&gt;ODROID N1&lt;/a&gt; tambien basada en el &lt;em&gt;SoC&lt;/em&gt; Rockchip RK3399.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/304/odroid-c2.jpg&#34; title=&#34;ODROID C2&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/304/odroid-c2-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;ODROID C2&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;h3 id=&#34;nanopi-orangepi-y-bananapi&#34;&gt;NanoPi, OrangePi y BananaPi&lt;/h3&gt;

&lt;p&gt;De &lt;a href=&#34;http://nanopi.org/&#34;&gt;NanoPi&lt;/a&gt; voy a destacar el modelo &lt;a href=&#34;http://nanopi.org/NanoPi-K2_Feature.html&#34;&gt;NanoPi K2&lt;/a&gt; con 2 GiB de memoria, procesador quad core, con WiFi y bluetooth y gigabit ethernet y soporte de 4K@60fps y H.265 10bit, H.264 a un precio de $50.&lt;/p&gt;

&lt;p&gt;Parece que con la costumbre de denominar a estas placas bases el nombre de frutos están &lt;a href=&#34;http://www.orangepi.org/orangepiplus2/&#34;&gt;OrangePi Plus 2&lt;/a&gt; y &lt;a href=&#34;http://www.banana-pi.org/m3.html&#34;&gt;BananaPi M3&lt;/a&gt;, el primero a un precio de 45€ con 2 GiB de memoria y soporte para HDMI 4K además de incluir gigabit ethernet y WiFi. El modelo de Banana Pi se diferencia en tener un procesador &lt;em&gt;octa-core&lt;/em&gt;, un puerto SATA y un precio superior de 85€.&lt;/p&gt;

&lt;h3 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h3&gt;

&lt;p&gt;Estos no son los únicos modelos que existen pero son algunos de los más destacables. Si queremos 4 GiB de memoria la opción preferente es la Rock64 con la posibilidad de añadirle en un puerto USB la conectividad WiFi. Si con 2 GiB es suficiente está la la ODROID C2, si se desea que tenga WiFI sin adaptadores adicionales la opción preferente es la NanoPi K2 o la ASUS Tinker Board.&lt;/p&gt;

&lt;p&gt;A pesar de que las alternativas de placas bases sean más capaces que la Raspberry Pi esta les gana en mejor soporte del software como distribuciones GNU/Linux y programas como Kodi que también es algo a tener muy en cuenta y este posiblemente es el motivo de que aún siendo menos capaz tiene más éxito e igualmente una muy buena opción. Quizá con algunas de estas placas alternativas hay que leer la documentación que tengan, algún foro y probar más cosas de las que requeriría una Raspberry Pi.&lt;/p&gt;

&lt;p&gt;Hasta el 2019 no se lanzará un nuevo modelo de Rasbperry Pi lo que sería la versión 4 y, sin embargo, y ójala me equivoque, cuando salga no creo que sea mucho más potente ni tenga más memoria que la que ya hoy tiene la Rock64, posiblemente el 3.14 del 2019 (día catorce del mes tres, por el día Pi) se comprobará.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.arm.com/products/processors/cortex-a&#34;&gt;Procesadores ARM Cortex-A&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://es.wikipedia.org/wiki/Arquitectura_ARM&#34;&gt;Arquitectura ARM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.arm.com/products/graphics-and-multimedia/mali-gpu&#34;&gt;GPUs ARM Mali&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.arm.com/products/graphics-and-multimedia/mali-gpu&#34;&gt;GPUs ARM Mali (wkipedia)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/VideoCore&#34;&gt;VideoCore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.khronos.org/opengles/&#34;&gt;OpenGL ES&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.khronos.org/opencl/&#34;&gt;OpenCL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.khronos.org/openvg/&#34;&gt;OpenVG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="hardware"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/03/el-problema-de-concurrencia-del-agente-y-los-fumadores-resuelto-en-java/</id>
        <title>El problema de concurrencia del agente y los fumadores resuelto en Java</title>        
        <updated>2018-03-05T19:00:00+01:00</updated>
        <published>2018-03-05T19:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/03/el-problema-de-concurrencia-del-agente-y-los-fumadores-resuelto-en-java/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Junto con los ejemplos de &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/02/el-problema-de-concurrencia-de-la-cena-de-los-filosofos-resuelto-con-java/&#34;&gt;la cena de los filósofos&lt;/a&gt; y &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/07/iniciacion-a-la-programacion-concurrente-en-java/&#34;&gt;la barbería&lt;/a&gt; el de los fumadores es otro ejemplo clásico que se estudia en las asignaturas de sistemas operativos. Estos ejemplos necesitan de mecanismos de sincronización y concurrencia para su correcto funcionamiento al haber varios procesos y recursos compartidos que los procesos intentan utilizar de forma concurrente pero que no se debe permitir utilizando notificaciones entre procesos o &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/07/iniciacion-a-la-programacion-concurrente-en-java/&#34;&gt;algunas primitivas de sincronización, concurrencia e hilos que posee Java&lt;/a&gt; como &lt;em&gt;mutex&lt;/em&gt;, &lt;em&gt;locks&lt;/em&gt; o semáforos.&lt;/p&gt;

&lt;p&gt;El caso de los fumadores consiste en un grupo de fumadores que para fumar necesitan los ingredientes que les faltan para hacer un cigarrillo y fumárselo, poseen un ingrediente en cantidades ilimitadas pero les faltan otros dos. El agente posee cantidades ilimitadas de todos los ingredientes que son papel, tabaco y cerillas pero solo deja en una mesa dos de estos ingredientes a la vez. Cada fumador posee un ingrediente distinto de los tres necesarios y según los ingredientes que deje el agente uno de los fumadores podrá fumar con los dos ingredientes que el agente deja.&lt;/p&gt;

&lt;p&gt;El agente y los fumadores representan en la realidad a procesos y los ingredientes a los recursos de un sistema. La dificultad radica en sincronizar los agentes y fumadores para que el agente cuando deje ingredientes en la mesa el fumador correcto fume cuando.&lt;/p&gt;

&lt;p&gt;A primera vista podríamos intentar que cada uno de los fumadores tomase cada uno de los ingredientes que le falta y se pusiese a fumar representando un ingrediente como un semáforo, sin embargo, esta solución puede producir un bloqueo si uno de los otros fumadores que no pueden fumar según los ingredientes que ha dejado el agente le quitan al que podría fumar uno de los ingredientes que necesita. Por ejemplo, un caso de bloqueo sería el caso de que el agente deje en la mesa los ingredientes de tabaco y cerillas el fumador que podría fumar sería el 1 pero si el fumador 2 es más rápido y se ejecuta antes tomando el tabaco el fumador 1 se quedaría esperando a tomar tabaco y el fumador 2 también por no haber dejado el agente papel sino cerillas.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/bb2b37bba770d2d09d97d92ff82bfd1a.js?file=SmokersDeadlock.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;Para la solución hay que optar por otra estrategia, en el ejemplo de código he creado tres clases que representa a cada una de las entidades, una clase &lt;em&gt;Agent&lt;/em&gt;, una clase &lt;em&gt;Smoker&lt;/em&gt; y una clase &lt;em&gt;Table&lt;/em&gt;, adicionalmente una clase &lt;em&gt;Pusher&lt;/em&gt; que se encargará de despertar al &lt;em&gt;Smoker&lt;/em&gt; correcto según los ingredientes de la mesa. Todas las clases implementan la interfaz &lt;a href=&#34;https://docs.oracle.com/javase/9/docs/api/java/lang/Runnable.html&#34;&gt;Runnable&lt;/a&gt; para convertir cada una de las instancias en un hilo de ejecución. Cuando un agente deja ingredientes en la mesa se notifica a todos los incitadores  o &lt;em&gt;pushers&lt;/em&gt; para indicarles que hay ingredientes listos, el &lt;em&gt;pusher&lt;/em&gt; adquiere el ingrediente que tiene asignado para tomar y comprueba cual es el único ingrediente que falta en la mesa, si no lo sabe porque falten varios ingredientes indica que en la mesa está su ingrediente y deja el trabajo de despertar al fumador al siguiente &lt;em&gt;pusher&lt;/em&gt;. El &lt;em&gt;pusher&lt;/em&gt; que sepa que dos ingredientes hay en la mesa despierta al fumador que puede fumar con el ingrediente que tiene y los dos que hay en la mesa. El fumador se pone a fumar y cuando termina se indica al agente que genere otros dos ingredientes.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/bb2b37bba770d2d09d97d92ff82bfd1a.js?file=Component.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/bb2b37bba770d2d09d97d92ff82bfd1a.js?file=Table.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/bb2b37bba770d2d09d97d92ff82bfd1a.js?file=Smoker.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/bb2b37bba770d2d09d97d92ff82bfd1a.js?file=Agent.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/bb2b37bba770d2d09d97d92ff82bfd1a.js?file=Pusher.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/bb2b37bba770d2d09d97d92ff82bfd1a.js?file=Main.java&#34;&gt;&lt;/script&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
        &lt;script type=&#34;text/javascript&#34; src=&#34;https://asciinema.org/a/167230.js&#34; id=&#34;asciicast-167230&#34; async&gt;&lt;/script&gt;
        &lt;noscript&gt;&lt;a href=&#34;https://asciinema.org/a/167230&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/167230.png&#34; width=&#34;734&#34;/&gt;&lt;/a&gt;&lt;/noscript&gt;
        
        &lt;figcaption&gt;Ejemplo de concurrencia del agente y los fumadores&lt;/figcaption&gt;
        
    &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;En el siguiente &lt;a href=&#34;https://cse.yeditepe.edu.tr/~kserdaroglu/spring2014/cse331/labnotes/WEEK%205%20-%20SEMAPHORES/mysemaphoreexamplesMOE.pdf&#34;&gt;documento con varios de los problemas de concurrencia y sincronización&lt;/a&gt; está muy bien explicado la solución a este problema de los fumadores y de los otros casos. En algunos otros sitios este caso lo convierten en un problema de sincronización en vez de uno de concurrencia.&lt;/p&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/JavaConcurrency&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew run&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Cigarette_smokers_problem&#34;&gt;Cigarette smokers problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/07/iniciacion-a-la-programacion-concurrente-en-java/&#34;&gt;Introducción sobre la programación concurrente en Java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/02/el-problema-de-concurrencia-de-la-cena-de-los-filosofos-resuelto-con-java/</id>
        <title>El problema de concurrencia de la cena de los filósofos resuelto con Java</title>        
        <updated>2018-02-25T10:00:00+01:00</updated>
        <published>2018-02-25T10:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/02/el-problema-de-concurrencia-de-la-cena-de-los-filosofos-resuelto-con-java/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;En un &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/07/iniciacion-a-la-programacion-concurrente-en-java/&#34;&gt;artículo de introducción sobre la programación concurrente en Java&lt;/a&gt; explicaba cuales eran la facilidades que proporciona este lenguaje para la programación concurrente en múltiples hilos. En él exponía dos ejemplos clásicos que se estudian en las asignaturas de sistemas operativos, uno de ellos era el de &lt;a href=&#34;https://es.wikipedia.org/wiki/Problema_de_la_cena_de_los_fil%C3%B3sofos&#34;&gt;la cena de los filósofos&lt;/a&gt; donde varios filósofos sentados en una tabla durante una cena se dedican a pensar y cuando tienen hambre comen usando para ello dos tenedores que comparten con sus compañeros que se sientan a la izquierda y derecha.&lt;/p&gt;

&lt;p&gt;Dado que dos filósofos no puede utilizar el mismo tenedor a la vez hay que implementar sincronización a la hora de utilizarlos. En la realidad un filósofo representa a un proceso y un tenedor representa a un recurso compartido de uso exclusivo.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/302/dining-philosophers.png&#34; title=&#34;La cena de los filósofos&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/302/dining-philosophers-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;La cena de los filósofos&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;La solución del ejemplo que ponía en el artículo anterior no era completamente correcto ya que un filósofo si tiene mala suerte podría quedarse sin  comer o sin comer durante mucho tiempo, debido a que en esa implementación el filósofo intentaba coger los tenedores y si no podía desistía si alguno de sus compañeros los estuviese utilizando. Las reglas que ha de cumplir una solución a un problema de concurrencia para considerarse válida son:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Exclusión mutua: Si un proceso se está ejecutando en su sección crítica ningún otro proceso se puede estar ejecutando en la suya.&lt;/li&gt;
&lt;li&gt;Progreso: Si ningún proceso se está ejecutando en su sección crítica y hay otros procesos que desean entrar en las suyas, entonces solo aquellos procesos que no se está ejecutando en su sección restante pueden participar en la decisión  del cuál será el siguiente en entrar en la sección crítica, y esta selección no puede postergarse indefinidamente.&lt;/li&gt;
&lt;li&gt;Espera limitada: Debe haber un límite en el número de veces que se permite que los demás procesos entren en su sección crítica después de que un proceso haya efectuado una solicitud para entrar en la suya y antes de que se conceda esa solicitud.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;En la implementación de este ejemplo evitaré que un filósofo pueda quedarse sin comer. La razón de que un filósofo desistiera de coger uno de los tenedores que necesita si uno de sus compañeros ya lo tuviese era para evitar un bloqueo circular en el caso de que todos los filósofos al mismo tiempo cogiesen su tenedor izquierdo, en esta situación ninguno de ellos podría coger su tenedor derecho y se quedarían todos esperando indefinidamente, se produciría un bloqueo indefinido o &lt;em&gt;deadlock&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Para evitar un bloqueo indefinido una de las siguientes reglas no se ha de cumplir:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Exclusión mutua: Por lo menos un recurso debe retenerse en modo no compartido; es decir, sólo un proceso a la vez puede usar el recurso. Si otro proceso solicita el recurso, deberá esperar hasta que se haya liberado.&lt;/li&gt;
&lt;li&gt;Retención y espera: Debe haber un proceso que retenga por lo menos un recurso y espere adquirir otros recursos retenidos por otros procesos.&lt;/li&gt;
&lt;li&gt;No apropiación: Los recursos no se pueden quitar; es decir, un recurso solo puede ser liberado voluntariamente por el proceso que lo retiene, después de que haya cumplido su tarea.&lt;/li&gt;
&lt;li&gt;Espera circular: Debe haber un conjunto { P0, P1, &amp;hellip;, Pn } de procesos en espera tales que P0 espera un recurso retenido por P1, P1 espera un recurso retenido por P2, &amp;hellip; Pn-1 espera un recurso retenido por On, y Pn espera un recurso retenido por P0.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;En esta implementación he optado por hacer que el último filósofo en vez de ser diestro sea zurdo de modo que primero intente coger el tenedor izquierdo y luego el derecho, con este simple cambio la espera circular ya no puede producirse y con ello el bloqueo indefinido.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/e732e19b68e6f1fd6b0e586dc1a5aaf7.js?file=Main.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/e732e19b68e6f1fd6b0e586dc1a5aaf7.js?file=Table.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/e732e19b68e6f1fd6b0e586dc1a5aaf7.js?file=Fork.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/e732e19b68e6f1fd6b0e586dc1a5aaf7.js?file=Philosopher.java&#34;&gt;&lt;/script&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
        &lt;script type=&#34;text/javascript&#34; src=&#34;https://asciinema.org/a/165278.js&#34; id=&#34;asciicast-165278&#34; async&gt;&lt;/script&gt;
        &lt;noscript&gt;&lt;a href=&#34;https://asciinema.org/a/165278&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/165278.png&#34; width=&#34;734&#34;/&gt;&lt;/a&gt;&lt;/noscript&gt;
        
        &lt;figcaption&gt;Ejemplo de concurrencia de los filósofos&lt;/figcaption&gt;
        
    &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/JavaConcurrency&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew run&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bruceeckel.github.io/2016/12/29/dining-philosophers-in-java-8/&#34;&gt;Dining Philosophers in Java 8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/02/consola-de-juegos-retro-con-lakka-y-una-raspberry-pi/</id>
        <title>Consola de juegos retro con Lakka y una Raspberry Pi</title>        
        <updated>2018-03-05T19:30:00+01:00</updated>
        <published>2018-02-23T23:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/02/consola-de-juegos-retro-con-lakka-y-una-raspberry-pi/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;El propósito original de las Raspberry Pi era educativo y se ha hecho muy popular debido a su bajo precio y un buen trabajo de &lt;em&gt;marketing&lt;/em&gt;. Sin embargo, puede utilizarse para muchos otros propósitos desde aprendizaje a programación, electrónica, servidor de archivos personales, descarga de películas, series y libros con torrent y también como una consola de juegos antiguos de arcade.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/lakka.png&#34; class=&#34;right &#34; width=&#34;250&#34; alt=&#34;Lakka&#34; title=&#34;Lakka&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/linux.svg&#34; class=&#34;right &#34; width=&#34;250&#34; alt=&#34;Linux&#34; title=&#34;Linux&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Desde que compré la &lt;a href=&#34;https://www.raspberrypi.org/&#34;&gt;Raspberry Pi&lt;/a&gt; en el año 2012, el modelo inicial B con 256 MiB de memoria, me ha dado y me esta dando un estupendo servicio. Principalmente la he estado usando para descargar películas y libros vía &lt;em&gt;torrent&lt;/em&gt; con &lt;a href=&#34;https://transmissionbt.com/&#34;&gt;Transmission&lt;/a&gt; usando la distribución &lt;a href=&#34;https://archlinuxarm.org/&#34;&gt;Arch Linux para ARM&lt;/a&gt;. Sin embargo, ya estoy pensando en sustituirla por algo más potente para hacer algunas pruebas con &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;, &lt;a href=&#34;https://www.ansible.com/&#34;&gt;Ansible&lt;/a&gt; y algunas pruebas más que se me ocurran aparte de seguir queriendo hacer descargas o en un futuro con la función de SmartTV. De la Raspberry Pi no se lanzará un nuevo modelo, el que sería el 4, hasta el 2019 y cuando salga no creo que sea más potente que una &lt;a href=&#34;https://www.pine64.org/?page_id=7147&#34;&gt;Rock64&lt;/a&gt; que ya a día de hoy incorporan hasta 4 GiB de memoria, tienen Gigabit Ethernet y un puerto USB 3.0 con precio similar a la Raspberry Pi, lo único que le falta respecto al modelo de la RPi 3 es WiFi y Bluetooth pero a cambio se puede tener 4 veces más memoria, Gigabit Ethernet y un puerto USB 3.0. El mayor problema de la Rock64 es su soporte tanto en distribuciones, software y comunidad, en estos es donde la Raspberry Pi no tiene competidor.&lt;/p&gt;

&lt;p&gt;Pero antes estoy pensando en el uso que le puedo dar a la Raspberry Pi para que no se quede en un cajón cogiendo polvo. Y he pensado en utilizarla como consola de juegos retro con &lt;a href=&#34;https://www.lakka.tv/&#34;&gt;Lakka&lt;/a&gt; para mis sobrinos que ahora usan PlayStation 1 pero que ya tiene los cables de los mandos estropeados de tanto doblarlos al guardarlos, de tanto uso ya no funcionan bien.&lt;/p&gt;

&lt;p&gt;Lo primero que he hecho es comprar unos &lt;a href=&#34;http://amzn.to/2Cg6035&#34;&gt;mandos similares a los de la antigua Super NES&lt;/a&gt;, aunque con un teclado USB también se puede jugar es más cómodo con los mandos, además de poder jugar a dos jugadores. En muchos juegos de &lt;em&gt;arcade&lt;/em&gt; antiguos es posible incluso a tres o cuatro jugadores.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/retroarch.png&#34; width=&#34;600&#34; alt=&#34;Retroarch&#34; title=&#34;Retroarch&#34;&gt;
&lt;/div&gt;

&lt;p&gt;Los elementos necesarios para tener tener una consola retro son los siguientes: una &lt;a href=&#34;http://amzn.to/2EP9mHX&#34;&gt;Raspberry Pi 3&lt;/a&gt;, un &lt;a href=&#34;http://amzn.to/2Cf9Vxp&#34;&gt;cargador USB&lt;/a&gt; adecuado, una &lt;a href=&#34;http://amzn.to/2EP9uXX&#34;&gt;tarjeta microSD de 32 GiB&lt;/a&gt; o más, &lt;a href=&#34;http://amzn.to/2Cg6035&#34;&gt;dos mandos para consola USB&lt;/a&gt; o un &lt;a href=&#34;http://amzn.to/2ou0QHD&#34;&gt;teclado USB&lt;/a&gt;, un &lt;a href=&#34;http://amzn.to/2sPcjqz&#34;&gt;cable HDMI&lt;/a&gt; y si se quiere una &lt;a href=&#34;http://amzn.to/2Fvtyjy&#34;&gt;caja&lt;/a&gt;. Por unos 65 € se pueden adquirir los elementos imprescindibles en la tienda de &lt;a href=&#34;https://amzn.to/2flFhHA&#34;&gt;Amazon&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://amzn.to/2EP9mHX&#34;&gt;Raspberry Pi 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://amzn.to/2Cf9Vxp&#34;&gt;Cargador USB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://amzn.to/2EP9uXX&#34;&gt;Tarjeta microSD de 32 GiB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://amzn.to/2sPcjqz&#34;&gt;Cable HDMI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://amzn.to/2Cg6035&#34;&gt;Mandos USB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://amzn.to/2ou0QHD&#34;&gt;Teclado USB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.lakka.tv/&#34;&gt;Software Lakka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://archive.org/details/datomatic.no-intro.org&#34;&gt;ROMs de juegos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01CD5VC92&amp;linkId=e16de107a3b45aa06c042744e18fc33a&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B06XFSZGCC&amp;linkId=132bc906913976b2a43c4582b23f5fb5&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01N59IUV5&amp;linkId=0bcc896ec870ce504e2c4c0acfaa8870&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B06ZZJ5KVX&amp;linkId=acb19b6a6d9a6e3504f3b52fcb45ff72&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00NW4SJRM&amp;linkId=7bf1d9cf65b79b18155abd26c96831d5&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00564GWEI&amp;linkId=2264c2741c0914e881d4e70b36b927da&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;El software para usar la Raspberry Pi como consola retro que he utilizado es Lakka que es una distribución &lt;a href=&#34;https://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;/&lt;a href=&#34;https://www.linux.com/&#34;&gt;Linux&lt;/a&gt; especifica para convertir un ordenador en una consola de juegos retro. Para instalarlo en la tarjeta microSD hay que &lt;a href=&#34;http://www.lakka.tv/get/&#34;&gt;descargar la imagen de Lakka&lt;/a&gt; y una forma simple de grabarla en la tarjeta microSD es utilizando &lt;a href=&#34;https://etcher.io/&#34;&gt;Etcher&lt;/a&gt;, basta instalarlo, iniciarlo, seleccionar la imagen de Lakka una vez descomprimido su archivo zip, seleccionar la unidad de la tarjeta SD (si es necesario ya que Etcher puede seleccionarla automáticamente) y pulsar el botón &lt;em&gt;Flash!&lt;/em&gt;, después de unos pocos minutos la imagen está grabada y la tarjeta microSD lista para usarla en la Raspberry Pi y efectuar el primer inicio.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/etcher.png&#34; title=&#34;Etcher&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/etcher-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Etcher&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;Los juegos se distribuyen en archivos denominados ROM y estos se pueden descargar de ciertas páginas, una de ellas es de &lt;a href=&#34;https://archive.org/&#34;&gt;Internet Archive&lt;/a&gt; donde está una &lt;a href=&#34;https://archive.org/details/datomatic.no-intro.org&#34;&gt;colección de juegos&lt;/a&gt; de las consolas más populares o si sabemos el nombre del juego de &lt;em&gt;arcade&lt;/em&gt; descargarlo individualmente de &lt;a href=&#34;http://coolrom.com/&#34;&gt;CoolROM&lt;/a&gt;. Hay miles de juegos por lo que es importante conocer su nombre para hacer la búsqueda. En otro artículo hice una pequeña &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/&#34;&gt;recopilación de juegos míticos de arcade&lt;/a&gt; y en otros blog están recopilados otra selección de juegos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://mundogeek.net/archivos/2009/11/16/los-10-mejores-juegos-de-mame-para-nostalgicos/&#34;&gt;Los 10 mejores juegos de MAME para nostálgicos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://lopezpino.com/2010/08/24/los-mejores-juegos-de-mame/&#34;&gt;Los mejores juegos de MAME&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.taringa.net/comunidades/mame-arcade/4629126/Los-Mejores-234-Juegos-de-Mame-Por-Mediafire.html&#34;&gt;Los Mejores 234 Juegos de Mame Por Mediafire&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.hobbyconsolas.com/reportajes/100-juegos-miticos-nes-49310&#34;&gt;Los 100 juegos míticos de NES&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Algunas de las consolas emuladas son:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Nintendo Entertainment System, Super Nintendo Entertainment System, Nintendo 64, Nintendo GameCube, Game Boy&lt;/li&gt;
&lt;li&gt;Sega Master System, Genesis, Saturn, Dreamcast, Game Gear&lt;/li&gt;
&lt;li&gt;MSX, MSX 2&lt;/li&gt;
&lt;li&gt;Atari 2600, 5200, 7800, Lynx, Jaguar&lt;/li&gt;
&lt;li&gt;Varias más y juegos de máquinas recreativas con FBA Alpha y MAME&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En el primer inicio Lakka debe hacer una serie de tareas para inicializar el sistema durante unos minutos, recomiendo no conectar el cable de red  ni ningún mando o teclado en este paso. Una vez se completa este primer inicio el siguiente paso es copiar las ROMs, hay varias formas una de ellas es desde un equipo con GNU/Linux y copiar los archivos al directorio &lt;em&gt;/storage/ROMs/&lt;/em&gt; directamente a la tarjeta microSD desde un ordenador. En otros sistemas que no saben como acceder a las particiones &lt;em&gt;ext4&lt;/em&gt; de Linux la más sencilla es activando el protocolo SAMBA en Lakka y copiarlos por la red, aunque tarda más. SAMBA se activa desde el menú &lt;em&gt;Settings &amp;gt; Services &amp;gt; SAMBA Enable&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/lakka.jpg&#34; title=&#34;Lakka&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/lakka-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Raspberry Pi ejecutando Lakka (La televisión va acorde con los juegos XD)&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;Con el cable de red conectado a la Rasberry Pi al &lt;em&gt;router&lt;/em&gt; y desde un equipo con Windows, macOS o GNU/Linux y probando la dirección IP que el &lt;em&gt;router&lt;/em&gt; le ha asignado a la Raspberry Pi se accede a los directorios compartidos por red poniendo en el explorador de archivos &lt;em&gt;\\192.168.0.2&lt;/em&gt;, &lt;em&gt;\\192.168.0.3&lt;/em&gt; o &lt;em&gt;\\192.168.0.4&lt;/em&gt;, &amp;hellip; o posteriores números dependiendo de los dispositivos conectados en la red, también podría ser &lt;em&gt;\\192.168.1.2&lt;/em&gt;, &lt;em&gt;\\192.168.1.3&lt;/em&gt;, &lt;em&gt;\\192.168.1.4&lt;/em&gt;, &amp;hellip; Con acceso en el explorador de archivos ya solo queda copiar las ROMs a la carpeta compartida ROMs. En macOS macOS con &lt;em&gt;Finder&lt;/em&gt; en la opción &lt;em&gt;Ir &amp;gt; Conectar al servidor&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/lakka-samba-1.png&#34; title=&#34;Carpetas compartidas por Lakka mediante SAMBA&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/lakka-samba-1-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/lakka-samba-2.png&#34; title=&#34;Archivos de ROMs vía SAMBA&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/lakka-samba-2-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Carpetas compartidas por Lakka mediante SAMBA&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;Copiados los archivos de las ROMs a la Raspberry Pi desde la opción &lt;em&gt;Import Content &amp;gt; Scan Directory&lt;/em&gt; de Lakka esta detectará todos los juegos que encuentre en su base de datos añadiéndolos en varios menús según el sistema emulado del juego en las últimas opciones del menú horizontal de Lakka.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/lakka-games.jpg&#34; title=&#34;Juegos Lakka&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/lakka-games-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Juegos Lakka&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;Detectadas las ROMS iniciar un juego basta con seleccionarlo desde los menús e iniciarlo. La mayoría funcionará con un rendimiento óptimo tanto el fluidez de imagen como en sonido, la Raspberry Pi es mucho más potente que los sistemas antiguos que emula, el modelo Raspberry Pi 3 incluso funcionará mejor. Aún asi algunos pueden ir un poco lentos o el sonido no ser completamente fiel al original.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/the-legend-of-zelda.png&#34; title=&#34;The Legend of Zelda&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/the-legend-of-zelda-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/zelda-II-the-adventure-of-link.png&#34; title=&#34;Zelda-II: The Adventure of Link&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/zelda-II-the-adventure-of-link-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/super-mario-bros-3.png&#34; title=&#34;Super Mario Bros 3&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/super-mario-bros-3-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;


    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/mega-man-5.png&#34; title=&#34;Mega Man 5&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/mega-man-5-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/1943.png&#34; title=&#34;1943&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/1943-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/sonic-the-hedgehog.png&#34; title=&#34;Sonic The Hedgehog&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/sonic-the-hedgehog-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Varios juegos de la NES y Sega&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;Tenía dudas por la calidad de los mandos por si eran demasiado frágiles, sin embargo, cuando me han llegado y los he visto me han parecido muy decentes y creo que tratándolos bien van a aguantar mucho tiempo. Además, la Raspberry Pi y Lakka los han reconocido sin ningún tipo de problema tanto conectando uno individualmente o los dos al mismo tiempo reconociendo correctamente todos los botones. Lo único que he tenido que hacer es configurar en el menú &lt;em&gt;Input &amp;gt; Menu Toggle Gamepad Combo&lt;/em&gt; (se elige con la cruceta a derecha e izquierda) un botón para salir de un juego pulsando a la vez los botones &lt;em&gt;Start + Select&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Tampoco he tenido ningún problema para que me funcione por el HDMI como también por la salida de vídeo RCA y el sonido por el jack de 3.5mm que posee la Raspberry Pi 1 original que tengo, todo me ha funcionado sin haya tenido que realizar ninguna acción.&lt;/p&gt;

&lt;p&gt;Si añadimos algunos juegos de &lt;em&gt;arcade&lt;/em&gt; que Lakka no reconoce es posible crear una &lt;a href=&#34;http://www.lakka.tv/doc/Playlists/&#34;&gt;lista personalizada de juegos&lt;/a&gt;, el nombre de la lista determina los iconos de los juegos y las &lt;a href=&#34;https://forums.libretro.com/t/megathread-which-roms-work-with-lakka/5566&#34;&gt;rutas de los &lt;em&gt;cores&lt;/em&gt;&lt;/a&gt; dependen del sistema a emular, es probable que funcionen con &lt;em&gt;FB Alpha - Arcade Games&lt;/em&gt; o &lt;em&gt;MAME&lt;/em&gt;. Es importante no renombrar los nombres de los archivos zip de las ROMs ya que es necesario que tengan el nombre original para funcionar bien.&lt;/p&gt;

&lt;p&gt;También es posible crear una lista de juegos favoritos (muy útil si tenemos muchos juegos), para ello hay que una vez iniciado el juego salir al menú con la conbinación de teclas configurada en &lt;em&gt;Settings &amp;gt; Input &amp;gt; Menu Toggle Gamepad Combo&lt;/em&gt; y usar la opción &lt;em&gt;Add to favorites&lt;/em&gt;. Desde el mismo menú es posible salir del juego u obtener una captura de pantalla. La lista de favoritos se guarda en &lt;em&gt;Configfiles &amp;gt; retroarch &amp;gt; content_favorites.lpl&lt;/em&gt; y el historial en &lt;em&gt;Configfiles &amp;gt; retroarch &amp;gt; content_history.lpl&lt;/em&gt; por si se quiere editar manualmente.&lt;/p&gt;

&lt;p&gt;Como son muchas ROMs reconocer una entre las muchas que hay o ver como es el juego sin entrar en él está la opción de descargar imágenes del juego y elegir ver una imagen de como es el juego, su portada o su pantalla inicial. Las imágenes se pueden descargar desde la opcion &lt;em&gt;Main Menu &amp;gt; Online Updater &amp;gt; Thumbnails Updater&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Al obtener ROMs de forma individual a veces es difícil dar con una que funcione, de algunos juegos hay varias versiones y es posible que algunas de ellas fallen al cargarse, hay que tener un poco de paciencia para encontrar la correcta.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/the-legend-of-zelda-screenshot.png&#34; title=&#34;The Legend of Zelda&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/301/the-legend-of-zelda-screenshot-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Juego The Legend of Zelda de NES&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;Ya solo queda pasar algunos buenos momentos con estos juegos antiguos pero entretenidos, nosotros o los más pequeños de la casa. Otra opción alternativa a Lakka para el mismo propósito es &lt;a href=&#34;https://retropie.org.uk&#34;&gt;RetroPie&lt;/a&gt; aunque la primera soporta algunos modelos mas de placas similares a la Raspberry Pi.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://elblogdepicodev.blogspot.com.es/2012/05/raspberry-pi-desempaquetado-unboxing.html&#34;&gt;Raspberry Pi, desempaquetado&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://thumbnailpacks.libretro.com/&#34;&gt;Imágenes juegos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Nintendo_video_game_consoles&#34;&gt;Nintendo video game consoles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_Sega_video_game_consoles&#34;&gt;Sega video game consoles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="juegos"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/02/referencias-a-grupos-de-captura-en-expresiones-regulares-y-reemplazos/</id>
        <title>Referencias a grupos de captura en expresiones regulares y reemplazos</title>        
        <updated>2018-02-17T17:00:00+01:00</updated>
        <published>2018-02-17T17:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/02/referencias-a-grupos-de-captura-en-expresiones-regulares-y-reemplazos/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Las expresiones regulares definen un patrón que permite encontrar coincidencias en cadenas de caracteres, reemplazar coincidencias o validar que las cadenas de caracteres cumplen el patrón. Las expresiones regulares son potentes expresiones que resultan útiles en muchos casos pero son expresiones que pueden llegar a ser complejas cuyo uso se aprende con la experiencia. Una de las funcionalidades que poseen es hacer referencia a grupos de captura anteriores en la propia expresión regular o en la cadena de reemplazo.&lt;/p&gt;

&lt;p&gt;Hacer referencia al grupo de captura en las cadenas de reemplazo es especialmente útil ya que sirve no solo para reemplazar coincidencias por cadenas previamente conocidas sino para transformar las coincidencias encontradas por otras expresiones. El caso de las cuentas de correo a continuación es un ejemplo práctico donde se aprecia este uso.&lt;/p&gt;

&lt;p&gt;Supongamos que queremos corregir un texto en el que por error hay palabras repetidas de forma seguida y queremos eliminar esos duplicados de palabras. Por ejemplo, tenemos un texto como el siguiente en el algunas palabras como &lt;em&gt;ipsum&lt;/em&gt;, &lt;em&gt;eiusmod&lt;/em&gt;, &lt;em&gt;fugiat&lt;/em&gt;, &lt;em&gt;sint&lt;/em&gt; y &lt;em&gt;proident&lt;/em&gt; están repetidas:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/dd337be3c01de7b5e3783b34e8ccc274.js?file=lorem-ipsum.txt&#34;&gt;&lt;/script&gt;

&lt;p&gt;La expresión regular para encontrar las coincidencias deberá para cada palabra comprobar si la siguiente es la misma. Cada palabra la incluimos en un grupo y posteriormente hacemos referencia a ese grupo con &lt;em&gt;\1&lt;/em&gt; para ver si la siguiente palabra es la misma. Con la siguiente expresión regular y código encontraremos las palabras repetidas una a continuación de la otra.&lt;/p&gt;

&lt;p&gt;Para hacer referencia en los grupos de coindiciendia en la cadena de reemplazo hay que usar un caracter &lt;em&gt;$&lt;/em&gt; y un número con la posición del grupo de reemplazo.&lt;/p&gt;

&lt;p&gt;Un ejemplo más útil de los grupos de referencia en la cadena de reemplazo sería reemplazar en un texto plano las direcciones de correo electrónico por sus enlaces en HTML. Usando una expresión regular para encontrar las direcciones de correo electrónico y sustituirlas por los enlaces HTML haciendo uso de los grupos de captura y referencias a ellos.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/dd337be3c01de7b5e3783b34e8ccc274.js?file=Main.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;La salida del ejemplo en la terminal es el siguiente.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/dd337be3c01de7b5e3783b34e8ccc274.js?file=system.out&#34;&gt;&lt;/script&gt;

&lt;p&gt;A los grupos de captura se les puede dar un nombre y referenciarlos por él en vez de por un número identificador como en el de este ejemplo. A un grupo de captura se le da un nombre con la siguiente expresión &lt;em&gt;(?&amp;lt;name&amp;gt;X)&lt;/em&gt; donde &lt;em&gt;name&lt;/em&gt; es el nombre del grupo de captura de la expresión &lt;em&gt;X&lt;/em&gt;. Posteriormente con la expresión &lt;em&gt;${name}&lt;/em&gt; se hace referencia al grupo de captura, también en la cadena de reemplazo.&lt;/p&gt;

&lt;p&gt;En la &lt;a href=&#34;https://docs.oracle.com/javase/9/docs/api/java/util/regex/Pattern.html&#34;&gt;documentación Javadoc de la clase Pattern&lt;/a&gt; está detallado el soporte en Java para usar expresiones regulares.&lt;/p&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/JavaRegexpReferenceGroups&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew run&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/05/extraer-elementos-de-una-cadena-con-una-expresion-regular/&#34;&gt;Extraer elementos de una cadena con una expresión regular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/09/los-cuantificadores-greedy-reluctant-y-possessive-en-expresiones-regulares/&#34;&gt;Los cuantificadores greedy, reluctant y possessive en expresiones regulares&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/415580/regex-named-groups-in-java&#34;&gt;Regex Named Groups in Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address&#34;&gt;Using a regular expression to validate an email address&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/02/las-6-plus-2-formas-normales-de-las-bases-de-datos-relacionales/</id>
        <title>Las 6&#43;2 formas normales de las bases de datos relacionales</title>        
        <updated>2018-02-10T13:00:00+01:00</updated>
        <published>2018-02-10T13:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/02/las-6-plus-2-formas-normales-de-las-bases-de-datos-relacionales/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;En la universidad se explican las formas normales, en mi caso que yo recuerde hasta la tercera forma normal. Conocer la tercera forma normal suele ser suficiente pero en la teoría existe hasta la sexta forma normal. Cumplir las formas normales evita redundancias e inconsistencias en los datos a costa de crear más tablas que en algunos consultas puede hacerlas lentas. El proceso contrario de la normalización es la desnormalización, puede producir inconsistencias pero los datos son más sencillos y en algunos casos más rápido de consultar.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;p&gt;Las bases de datos relacionales desarrolladas en los años 70 son la forma más utilizada aún en la actualidad para almacenar la información en la mayoría de las aplicaciones informáticas de cualquier ámbito. Los datos se guardan en tablas separadas en campos y con un tipo, los datos almacenados en cada tabla están relacionados entre sí, por ejemplo, podría ser la información de una persona, nombre, apellidos, fecha de nacimiento, ciudad de residencia, teléfono, &amp;hellip; Además las tablas pueden relacionarse con otras tablas. Siguiendo el ejemplo podríamos tener una tabla de películas o libros y relacionarlas con la tabla de personas de forma que conozcamos que películas ha visto o libros ha leído una persona, de cada película podemos guardar su director, de los libros el autor y de cada uno de ellos los actores o personajes.&lt;/p&gt;

&lt;p&gt;Al almacenar la información en la base de datos debemos evitar las redundancias e inconsistencias de forma que la información que obtengamos al consultarla esté libre de inconsistencias. Por ejemplo, guardando la ciudad de residencia en la tabla persona deberemos actualizar todos los registros de las personas que residan en ella al cambiar de nombre a una ciudad o acabaremos con que la misma ciudad está referida por varios términos. Para evitar inconsistencias en las bases de datos se definieron las formas normales, hay seis formas normales y dos adicionales aunque normalmente con aplicar hasta la tercera es suficiente ya que por las relaciones de los datos no es necesario aplicar formas normales superiores. Hasta la tercera forma normal se pueden aplicar independientemente del dominio tratado, a partir de la cuarta forma normal las relaciones las cumplen o no en función de las reglas y condiciones que se establezcan para el dominio. Cuanto mayor sea la forma normal de una tabla o una base de datos menos casos existirán de que contengan inconsistencias, una tabla que cumpla una forma normal cumple las formas normales de menor nivel. Las formas normales son las siguientes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://es.wikipedia.org/wiki/Forma_normal_(base_de_datos)&#34;&gt;Forma normal de base de datos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://es.wikipedia.org/wiki/1NF&#34;&gt;Primera forma normal, 1FN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://es.wikipedia.org/wiki/2NF&#34;&gt;Segunda forma normal, 2FN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://es.wikipedia.org/wiki/3NF&#34;&gt;Tercera forma normal, 3FN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://es.wikipedia.org/wiki/BCNF&#34;&gt;Forma normal de Boyce-Codd, BCNF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://es.wikipedia.org/wiki/4NF&#34;&gt;Cuarta forma normal, 4FN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://es.wikipedia.org/wiki/5NF&#34;&gt;Quinta forma normal, 5FN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Sixth_normal_form&#34;&gt;Sexta forna normal, 6FN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://es.wikipedia.org/wiki/DKNF&#34;&gt;Forma normal de dominio/clave, DNFN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://es.wikipedia.org/wiki/Denormalizaci%C3%B3n_(base_de_datos)&#34;&gt;Desnormalización&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En los enlaces de la wikipedia está incluida una explicación más detallada de cada forma normal, a continuación solo haré un breve resumen. En anexo final del libro &lt;a href=&#34;http://amzn.to/2G2oRN1&#34;&gt;SQL Antipattens&lt;/a&gt; también hay una explicación muy detallada de las diferentes formas normales, que problemas pueden ocasionar y como corregirlos.&lt;/p&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1934356557&amp;linkId=5952266d59f312e39e2a850c1dc3a54a&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h3 id=&#34;primera-forma-normal-1fn&#34;&gt;Primera forma normal, 1FN&lt;/h3&gt;

&lt;p&gt;No hay grupos repetidos de columnas, ni una columna guarda múltiples valores. Por ejemplo, si de una persona queremos guardar varios teléfonos deberíamos crear una tabla de teléfonos y relacionarla con la tabla de usuarios.&lt;/p&gt;

&lt;p&gt;En el caso del ejemplo los grupos repetidos de columnas implica que de una persona solo se pueden guardar hasta tres teléfonos como máximo, han de crearse las columnas por adelantado aunque no se usen y si hay que actualizar un telefono no sabríamos en que campo de la tabla está obligando a realizar una consulta de actualización en los tres campos.&lt;/p&gt;

&lt;p&gt;Las columnas con múltiples valores son difíciles de actualizar con sentencias SQL por el formato que emplea la columna para guardar el dato, en este caso utilizando una barra como separador.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/b0a638123e3888d2c3ee1d7a5d9d3668.js?file=1fn.txt&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;segunda-forma-normal-2fn&#34;&gt;Segunda forma normal, 2FN&lt;/h3&gt;

&lt;p&gt;Cada columna de una tabla está relacionada con todas las columnas de la clave primaria y no solo por una combinación de parte de la clave primaria. En este caso en que se guarda las las persona que trabajan en una empresa, cumple la 1FN al no tener columnas repetidas ni múltiples valores en una columna pero no cumple la 2FN estando la clave primaria formada por los campos &lt;em&gt;id_persona&lt;/em&gt; e &lt;em&gt;id_empresa&lt;/em&gt; y el campo &lt;em&gt;direccion_empresa&lt;/em&gt; siendo solo dependiente del campo &lt;em&gt;id_empresa&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;En este caso el problema además de contener posibles inconsistencias en los valores de las direcciones es que si se quisiera actualizar la dirección de una empresa habría que actualizar todos los registros de los empleados y empresa.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/b0a638123e3888d2c3ee1d7a5d9d3668.js?file=2fn.txt&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;tercera-forma-normal-3fn&#34;&gt;Tercera forma normal, 3FN&lt;/h3&gt;

&lt;p&gt;Cada columna de una tabla está relacionada directamente con las columnas de la clave primaria, no de forma transitiva a través de otro campo. En el mismo caso anterior que cumple la 2FN no cumple la tercera si el campo &lt;em&gt;horas semanales&lt;/em&gt; depende del puesto.&lt;/p&gt;

&lt;p&gt;Podría haber inconsistenias de datos si dos personas tuviesen diferentes horas semanales para el mismo puesto.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/b0a638123e3888d2c3ee1d7a5d9d3668.js?file=3fn.txt&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;forma-normal-de-boyce-codd-bcnf&#34;&gt;Forma normal de Boyce-Codd, BCNF&lt;/h3&gt;

&lt;p&gt;Una tabla está en BCNF y está en 3FN y todos los campos tienen como deteminante (dependen) la clave primaria. En un caso en que un trabajador trabaja en varias empresas con un responsable asignado e introduciendo la restricción de que en una empresa solo hay un responsable para todos los trabajadores, el campo &lt;em&gt;id_responsable&lt;/em&gt; tiene una dependencia sobre el campo &lt;em&gt;id_empresa&lt;/em&gt; que no es clave primaria.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/b0a638123e3888d2c3ee1d7a5d9d3668.js?file=bcfn.txt&#34;&gt;&lt;/script&gt;
 

&lt;h3 id=&#34;cuarta-forma-normal-4fn&#34;&gt;Cuarta forma normal, 4FN&lt;/h3&gt;

&lt;p&gt;No existen dos o más relaciones independientes en una misma tabla. En una relación que guarde las empresas de un trabajador y las localidades en las que trabaja, si las empresas y las localidades son independientes hay redundancia de datos por guardar para cada empresa cada una de las localidades del trabajador. Aplicando la 4FN en vez de utilizar 6 filas se utilizan 2 y 3 filas en las tablas &lt;em&gt;Trabajador&lt;/em&gt; y &lt;em&gt;Localidad&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/b0a638123e3888d2c3ee1d7a5d9d3668.js?file=4fn.txt&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;quinta-forma-normal-5fn&#34;&gt;Quinta forma normal, 5FN&lt;/h3&gt;

&lt;p&gt;En el mismo caso anterior si se intodujese una realación entre empresa y localidades en las que trabaja y la condición de que es cierto que las localidades de un trabajador están incluídas en el conjunto de las localidades de una empresa si no se aplicase la 5FN y un trabajador empezase a trabajar en una nueva empresa habría que insertar una fila nueva en la tabla &lt;em&gt;Zona&lt;/em&gt; por cada localidad del trabajador.&lt;/p&gt;

&lt;p&gt;Si el trabajador 1 empezase a trabajar en la empresa 2 sin aplicar la 5FN habría que insertar dos nuevas filas en la trabla &lt;em&gt;Zona&lt;/em&gt;. Aplicando la 5FN bastaría con insertar una en la tabla &lt;em&gt;TrabajadorEmpresa&lt;/em&gt; (id_persona: 1, id_empresa: 2).&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/b0a638123e3888d2c3ee1d7a5d9d3668.js?file=5fn.txt&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;sexta-forma-normal-6fn&#34;&gt;Sexta forma normal, 6FN&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Sixth_normal_form&#34;&gt;Sixth normal form&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;forma-normal-de-dominio-clave-dnfn&#34;&gt;Forma normal de dominio/clave, DNFN&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://es.wikipedia.org/wiki/Forma_normal_de_dominio/clave&#34;&gt;Forma normal de dominio/clave&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;desnormalización&#34;&gt;Desnormalización&lt;/h3&gt;

&lt;p&gt;Aplicar las reglas de las formas normales para cumplirlas implica separar los datos que antes estaban en una tabla en varias, con las formas normales evitaremos inconsistencias pero consultar los datos de forma agrupada puede ser más lento al tener la base de datos que unir las tablas. Normalmente, llegar al nivel de 3FN es suficiente si los datos no tienen reglas especiales y si cumple la 3FN es habitual que cumpla la 5FN sin cambios adicionales.&lt;/p&gt;

&lt;p&gt;La desnormalización consiste el proceso contrario tratando de balancear la rapidez de consulta con el hecho de obtener datos inconsistentes. Dependiendo de los datos y sus reglas se puede aceptar cierto grado de desnormalización. Algunas bases de datos tienen un concepto similar al que existe en la base de datos &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgesSQL&lt;/a&gt;, las &lt;a href=&#34;https://www.postgresql.org/docs/current/static/rules-materializedviews.html&#34;&gt;materialized views&lt;/a&gt;. Las vistas materializadas son vistas de los datos pero cuyos datos son guardados de forma similar a una tabla, esto tiene la ventaja de que consultar la vista basta para consultar los datos que es más rápido que realizar de nuevo la consulta original de la vista. Con las vistas y las vistas materializadas podemos guardar los datos en la forma normal que consideremos y si por rendimiento debemos realizar una desnormalización con las vistas y vistas materializadas podemos hacerlo, en el caso de las vistas materializadas deberemos refrescarlas de forma regular.&lt;/p&gt;

&lt;p&gt;La información es una de las cosas más importantes para una organización y por tanto también para las aplicaciones. En el libro &lt;a href=&#34;http://amzn.to/2G2oRN1&#34;&gt;SQL Antipatterns&lt;/a&gt; se comentan varios situaciones en las bases de datos que conviene conocer para evitarlos, que problemas causan, cuando son aplicables y cuales son las soluciones. En libro muy recomendable y útil ya que independientemente del lenguaje o tipo de aplicación este conocimiento sobre las bases de datos relacionales es de provecho, como en la práctica totalidad de las aplicaciones se usa una base de datos relacional para persistir los datos será en casi todos los casos.&lt;/p&gt;



        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/02/8o-aniversario-del-blog/</id>
        <title>8º aniversario del blog</title>        
        <updated>2018-02-07T18:30:00+01:00</updated>
        <published>2018-02-06T19:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/02/8o-aniversario-del-blog/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/hugo.png&#34; class=&#34;right &#34; alt=&#34;Hugo&#34; title=&#34;Hugo&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Hoy se cumplen 8 años desde que creé y empecé a escribir en un blog, primeramente &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es&#34;&gt;El blog de pico.dev&lt;/a&gt; y más tarde en Blog Bitix. Durante este tiempo he escrito 485 artículos entre ambos blogs, en Blog Bitix ya tengo más artículos escritos y publicados de los que he tenido en El blog de pico.dev. Ocho años ya son una cifra considerable y requiere gran constancia, dedicación, motivación, perseverancia y gran cantidad de tiempo. Muchos blogs no llegan a esta cifra.&lt;/p&gt;

&lt;p&gt;Trato de compartir el conocimiento que voy aprendiendo según leo libros, uso &lt;a href=&#34;https://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;/&lt;a href=&#34;https://www.linux.com/&#34;&gt;Linux&lt;/a&gt; o me pregunto como se haría tal cosa con el lenguaje que uso principalmente, Java. El tener documentación es vital para un programador o en la tecnología y lo que comparto trato de que para el siguiente que tenga el mismo problema o se pregunte como se hace algo lo tenga más fácil y al mismo tiempo aprenda. Aparte de compartir conocimiento el blog me gustaría que me sirviese en mi vida profesional, ya sea para encontrar un nuevo trabajo o para profundizar aún en algún conocimiento. Por el momento este objetivo no lo considero del todo cumplido ya que a pesar de lo fan que soy de Java realmente trabajo a día de hoy con &lt;a href=&#34;http://www.groovy-lang.org/&#34;&gt;Groovy&lt;/a&gt; y &lt;a href=&#34;https://grails.org/&#34;&gt;Grails&lt;/a&gt;, son un lenguaje de programación y un framework web de la plataforma Java pero salvo la API del JDK tiene poco que ver y no me permiten seguir aprendiendo todo lo que me gustaría de esta plataforma, en el trabajo con otros aspectos tengo alguna otra compensación. Escribo y leo mucho pero por falta de uso una buena parte al cabo de varios meses voy olvidando.&lt;/p&gt;

&lt;p&gt;Tengo bastantes artículos ya escritos pero pendientes publicar, tengo esta reserva de artículos por si alguna semana no me apetece escribir, no puedo o por si un ejemplo funcional de código se me complica disponer de algún artículo para publicar. Veo la fecha de algunos que escribí y no miento si digo que para varios ya han pasado ¡dos! años estando ahí pendientes de publicar. No me faltan ideas en un documento voy priorizando los artículos siguientes que escribiré y en otro documento voy recogiendo las ideas para nuevos artículos, pues bien, estos documentos tienen una longitud de 12 y 32 páginas donde cada idea de artículo solo ocupa el título y una pequeña descripción y algún enlace, por si fuera poco en un tercer documento recojo las ideas de artículos de opinión ya que estos no requieren crear un ejemplo de código y en este sentido me resulta más sencillo escribirlos. También es cierto que finalmente algunas ideas desecho. Lo que si me falta es tiempo para dedicarlo al blog, por el trabajo y por no ser el trabajo y el blog la únicas cosas que hago.&lt;/p&gt;

&lt;p&gt;Cada cierto tiempo reviso y publico los datos de las visitas mensuales que tengo, lentamente pero de forma constante van aumentando y comprobando la diferencia de año en año por el momento el aumento es significativo para un blog con una temática bastante especializada. Sin embargo hasta el momento no he dado más detalles de estos datos en grandes números. Después de un crecimiento notable en el mes de mayo de 2017 las visitas han vuelto a los números de los meses anteriores y parece que se han estancado, veré como evolucionan en los siguientes meses, diciembre y enero por las vacaciones y días festivos no son de los mejores meses.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/298/paginas-vistas.png&#34; title=&#34;Páginas vistas&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/298/paginas-vistas-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Páginas vistas&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;Un poco menos de la mitad de los usuarios los recibo desde España y la otra mitad de varios países de latinoamérica ya que por compartir el lenguaje los buscadores devuelven referencias a alguno de mis artículos. A parte de España con un 35% entre los países de latinoamérica están México 17%, Argentina 8%, Colombia 8%, Chile 6%, Perú 5,3%, Ecuador 3%, Venezuela 2,5%, Estados Unidos 1,76% o Bolivia 1,25%.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/298/pais.png&#34; title=&#34;Ubicación por país&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/298/pais-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Ubicación por país&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;En cuanto al navegador usado por los usuarios la mayor cuota de uso es &lt;a href=&#34;https://www.google.es/chrome/browser/desktop/&#34;&gt;Chrome&lt;/a&gt; con un 71%, luego &lt;a href=&#34;https://www.mozilla.org/es-ES/firefox/new/&#34;&gt;Firefox&lt;/a&gt; con un 17% y en menores porcentajes Safari con un 3,7% y Edge con un pequeño 2,5% aún con la cuota de mercado de Windows. A pesar de publicar artículos sobre GNU/Linux la mayoría de usuarios usan &lt;a href=&#34;https://www.microsoft.com/es-es/windows/&#34;&gt;Windows&lt;/a&gt; con un 72% pero me sorprende el 10,23% de Android incluso por delante de GNU/Linux con otro 10% y un 4,5% de Macintosh, finalmente está iOS con un 2,76%.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/298/navegador.png&#34; title=&#34;Navegador&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/298/navegador-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/298/sistema-operativo.png&#34; title=&#34;Sistema operativo&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/298/sistema-operativo-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Navegador y sistema operativo&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;En un porcentaje aplastante la mayoría de usuarios proviene del buscador Google con un 91% y un 4,8% para el tráfico directo.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/298/fuente.png&#34; title=&#34;Fuente&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/298/fuente-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Fuente&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;Con toda la intención publiqué varios artículos sobre Windows contando mi experiencia al usar sin licencia tanto Windows como &lt;a href=&#34;https://products.office.com/es-es/home&#34;&gt;Office&lt;/a&gt;, pues estos son de los artículos más visitados en mi blog con diferencia. Dada la cuota de uso de Windows y que a nivel hogar muchos usuarios optan por usar sin licencia estos productos de &lt;a href=&#34;https://www.microsoft.com/&#34;&gt;Microsoft&lt;/a&gt; es normal que estos artículos sean de los más visitados en mi blog. No se cuan efectivo será pero en esos artículos indico que existen las distribuciones GNU/Linux y que hay alternativas a Microsoft Office para la mayoría de usuarios perfectamente válidos.&lt;/p&gt;



        </content>
        
            
                <category term="blog"/>
            
                <category term="blog-stack"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/02/analisis-estatico-de-codigo-con-pmd-y-un-ejemplo/</id>
        <title>Análisis estático de código con PMD y un ejemplo</title>        
        <updated>2018-02-05T17:00:00+01:00</updated>
        <published>2018-02-03T22:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/02/analisis-estatico-de-codigo-con-pmd-y-un-ejemplo/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/pmd.png&#34; class=&#34;right &#34; width=&#34;300&#34; alt=&#34;PMD&#34; title=&#34;PMD&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;El mantenimiento de un programa es la parte que más tiempo consume en su desarrollo y realmente son más los proyectos que hay que mantener que los que se empiezan desde cero. Por lo tanto el software se debe diseñar además de para funcionar correctamente y de forma suficientemente eficiente de tal forma que los futuros cambios sean en la medida de lo posible sencillos de realizar. Hay varios motivos por los que un software necesita mantenimiento según sus categorías:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Correctivo: por la necesidad de corregir errores.&lt;/li&gt;
&lt;li&gt;Adaptativo: por adaptación a un nuevo entorno o mejora con un nuevo sistema operativo o tecnologías.&lt;/li&gt;
&lt;li&gt;Perfeccionamiento: corrección de errores o adición de nuevas funcionalidades.&lt;/li&gt;
&lt;li&gt;Preventivo: para mejorar la calidad o prevenir futuros errores.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En el libro &lt;a href=&#34;http://amzn.to/2BSalVR&#34;&gt;Building Maintable Software (Java Edidtion)&lt;/a&gt; en varios capítulos repasan varios aspectos y proporciona consejos sobre cómo desarrollar software más fácilmente mantenible. Algunos son tan sencillos como evitar métodos con muchas líneas de código, con muchos parámetros, con muchas bifurcaciones por sentencias condicionales o de retorno. Estos aspectos influyen en la facilidad de realizar teses, la facilidad de reutilizar el código siendo más fácil probar y reutilizar métodos que hacen pocas cosas que otros que hacen muchas o son complejos.&lt;/p&gt;

&lt;p&gt;Estos aspectos del código requiere analizar el código. Si la base de código del software es grande será tedioso y costoso revisarlo manualmente sin embargo hay herramientas como &lt;a href=&#34;https://pmd.github.io/&#34;&gt;PMD&lt;/a&gt; que nos permite automatizar la tarea de análisis. PMD además se puede utilizar para comprobar que el código sigue las normas de estilo definidas para el proyecto o en una organización además de esos otros aspectos que afectan a la facilidad de mantenimiento del software también útil cuando se incorpora una nueva persona a un proyecto para que siga las normas ya establecidas. Al igual que se deben tener teses unitarios y de integración para comprobar el correcto funcionamiento del software con PMD se obtiene un informe con las violaciones de las reglas que quieran aplicar al analizar el código.&lt;/p&gt;

&lt;p&gt;En la documentación del proyecto PMD en la sección &lt;em&gt;Rule Reference&lt;/em&gt; están la reglas que se puede aplicar y configurar en el análisis, hay una buena cantidad de ellas que en algunos casos permiten modificar los umbrales u otras propiedades para adaptar la validación a lo deseado. Desde convenciones al formatear el código, uso de llaves, tamaño de código, comentarios, de diseño, bloques de código vacíos en sentencias &lt;em&gt;try-catch&lt;/em&gt;, &lt;em&gt;if&lt;/em&gt;, &amp;hellip;, &lt;em&gt;imports&lt;/em&gt; duplicados, no usados o del mismo paquete y por tanto innecesarios, usos innecesarios de nombres completamente cualificados, de nomenclatura de variables por ejemplo si son demasiado cortas o largas, optimizaciones, código innecesario o no usado que se puede eliminar.&lt;/p&gt;

&lt;p&gt;Al heredar un nuevo proyecto cuyo mantenimiento es complicado y grande por no cumplir varias de las reglas anteriores no es posible revisar todo el código completamente manualmente, se puede intuir cuales son algunos de los problemas haciendo una revisión a algunas partes y suponer que en el resto también están. Un buen paso es utilizar PMD para detectar de forma precisa una buena cantidad e ir corrigiéndolas a medida que se van haciendo cambios al código, con el paso del tiempo el mantenimiento si sigue siendo difícil no será por que hay código innecesario, no usado bloques de código vacíos o &lt;em&gt;imports&lt;/em&gt; no usados que son completamente innecesarios y eliminables sin riesgo.&lt;/p&gt;

&lt;p&gt;Usando la &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2012/03/herramienta-de-construccion-gradle.html&#34;&gt;herramienta de construcción Gradle&lt;/a&gt; y su &lt;a href=&#34;https://docs.gradle.org/current/userguide/pmd_plugin.html&#34;&gt;&lt;em&gt;plugin&lt;/em&gt; de PMD&lt;/a&gt; es posible realizar el análisis automatizado del código. Hay una serie de reglas predefinidas que se pueden aplicar con valores generalmente aceptados pero que es posible personalizar.&lt;/p&gt;

&lt;p&gt;Suponiendo que con la intención de hacer el software más mantenible se define que el código debe seguir las normas de estilo de Java, en el caso del ejemplo que los métodos no tengan más de 50 líneas, en un informe en formato HTML o XML PMD genera las violaciones a las reglas que encuentre y posteriormente corregirlas si se considera adecuado. Este es un ejemplo de archivo de Gradle de que solo pongo la parte relevante para el ejemplo para usar PMD aplicando unas pocas reglas ya incorporadas en PMD y la de la longitud de los métodos personalizada a una valor de 50 líneas:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/f992fce42bee4815393571c842a15498.js?file=build.gradle&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/f992fce42bee4815393571c842a15498.js?file=ruleset.xml&#34;&gt;&lt;/script&gt;

&lt;p&gt;Aplicado el &lt;em&gt;plugin&lt;/em&gt; y definidas las reglas en las construcción del proyecto se revisarán y generará un informe con el comando &lt;code&gt;./gradlew check&lt;/code&gt;. En el directorio &lt;em&gt;build/reports/pmd/&lt;/em&gt; relativo a la raíz del proyecto se genera un conjunto de archivos HTML y XML con los informes del análisis del código. En el informe se indica la clase, la linea y el error que se ha encontrado, con esta información es sencillo modificar el código para que en la siguiente ejecución de la validación el error desaparezca del informe, la myoría de reglas son fáciles de corregir.&lt;/p&gt;

&lt;p&gt;Para que en el informe aparezcan datos he cambiado la configuración de longitud a 10 líneas por método como máximo.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/297/pmd-report.png&#34; title=&#34;Informe de PMD con violaciones a las reglas&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/297/pmd-report-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Informe de PMD con violaciones a las reglas&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew check&lt;/code&gt;.
&lt;/p&gt;



        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/</id>
        <title>Conferencia BilboStack 2018</title>        
        <updated>2018-01-28T23:30:00+01:00</updated>
        <published>2018-01-27T18:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;p&gt;A diferencia de los seis años anteriores este la &lt;a href=&#34;http://bilbostack.com/&#34;&gt;BilboStack&lt;/a&gt; ha tenido lugar en el &lt;a href=&#34;https://www.euskalduna.eus/&#34;&gt;Palacio Euskalduna&lt;/a&gt; en vez de la &lt;a href=&#34;https://www.deusto.es&#34;&gt;Universidad de Deusto&lt;/a&gt; permitiendo un aforo aún mayor que el de la universidad y con unas salas más grandes y butacas más cómodas que las espartanas sillas de la uni en las que igualmente si se ponía atención y luego esfuerzo se aprendían cosas interesantes, muchos hemos pasado varios años en ellas.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/296/bilbostack-1.jpg&#34; title=&#34;BilboStack 2018&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/296/bilbostack-1-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/296/bilbostack-2.jpg&#34; title=&#34;BilboStack 2018&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/296/bilbostack-2-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;


    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/296/presentacion.jpg&#34; title=&#34;Presentación BilboStack 2018&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/296/presentacion-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;BilboStack 2018&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;En la presentación inicial se ha comentado como se gestó la primera BilboStack. A la vuelta de otra conferencia los organizadores se preguntaron por que no organizar una ellos en Bilbao para no siempre ir a otras ciudades como Madrid o Barcelona.&lt;/p&gt;

&lt;p&gt;Hasta el momento siempre se ha mantenido gratuita la entrada previa reserva pero este año con la ayuda de los patrocinadores han podido acceder a este gran recinto y costear el viaje a los ponentes, esto demuestra lo agradecidos que debemos estar a los de los  años anteriores ya que además de hacer la presentación compartiendo su conocimiento se pagaban ellos mismos el viaje.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/296/euskalduna-1.jpg&#34; title=&#34;Palacio Euskalduna&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/296/euskalduna-1-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/296/euskalduna-2.jpg&#34; title=&#34;Palacio Euskalduna&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/296/euskalduna-2-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Palacio Euskalduna&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;700 y pico entradas eran las que se han ofrecido, ni los organizadores creían que se iban a agotar y se jactaban de que habría entradas para todos en los primeros días de poner la primera oleada para la reserva, pues al final ni esas 700 parece que han estado sobradas. Sorprendente ya que en el 2016 los asistentes fueron 332, algo menos de la mitad del aforo de este año. 6 de las 8 presentaciones han sido dadas por mujeres y en años anteriores también ha habido presencia femenina tanto ponentes como asistentes.&lt;/p&gt;

&lt;p&gt;Número de asistentes por año:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2012: 252&lt;/li&gt;
&lt;li&gt;2013: 261&lt;/li&gt;
&lt;li&gt;2014: 304&lt;/li&gt;
&lt;li&gt;2015: 340&lt;/li&gt;
&lt;li&gt;2016: 332&lt;/li&gt;
&lt;li&gt;2017: ¿?&lt;/li&gt;
&lt;li&gt;2018: 500&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Por supuesto tener a disposición para la conferencia este recinto y los ponente sin que estos se paguen el viaje ha sido más fácil y posible gracias a los patrocinadores que además han ofrecido algunas pegatinas, cuadernillos, folletos a los asistentes e incluso ofertas laborales.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/296/patrocinadores.png&#34; title=&#34;Patrocinadores&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/296/patrocinadores-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/296/merchandising.jpg&#34; title=&#34;Merchandising&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/296/merchandising-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Patrocinadores&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;La agenda del evento en esta edición ha sido la siguiente, dos &lt;em&gt;tracks&lt;/em&gt; con cuatro presentaciones en cada una de ellas, en formato de una mañana y el posterior postevento para el que desee.&lt;/p&gt;

&lt;table class=&#34;table table-condensed&#34;&gt;
    &lt;thead&gt;
        &lt;th width=&#34;140px&#34;&gt;Hora&lt;/th&gt;
        &lt;th&gt;Track 1&lt;/th&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;09:00-09:20&lt;/td&gt;
            &lt;td&gt;Presentación&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;09:30-10:20&lt;/td&gt;
            &lt;td&gt;Lo que no se VUE &lt;em&gt;por Angélica Lozano&lt;/em&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;10:30-11:20&lt;/td&gt;
            &lt;td&gt;Refactoring Mount Doom - Tackling Legacy Code &lt;em&gt;por Franziska Sauerwein&lt;/em&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;11:30-12:00&lt;/td&gt;
            &lt;td&gt;Networking + Café&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;12:00-12:50&lt;/td&gt;
            &lt;td&gt;Camino a producción &lt;em&gt;por Mario Marin&lt;/em&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;13:00-13:50&lt;/td&gt;
            &lt;td&gt;Evitando el efecto dominó en nuestros (micro)servicios &lt;em&gt;por Javi Ferrer y Rafa Gómez&lt;/em&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;&gt; 14:00&lt;/td&gt;
            &lt;td&gt;Networking + pintxos y poteo&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;table class=&#34;table table-condensed&#34;&gt;
    &lt;thead&gt;
        &lt;th width=&#34;140px&#34;&gt;Hora&lt;/th&gt;
        &lt;th&gt;Track 2&lt;/th&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;09:00-09:20&lt;/td&gt;
            &lt;td&gt;Presentación&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;09:30-10:20&lt;/td&gt;
            &lt;td&gt;Con canvas y a lo loco &lt;em&gt;por Carmen Ansio Ruiz&lt;/em&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;10:30-11:20&lt;/td&gt;
            &lt;td&gt;CSS Grid Layout en acción &lt;em&gt;por Diana Aceves&lt;/em&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;11:30-12:00&lt;/td&gt;
            &lt;td&gt;Networking + Café&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;12:00-12:50&lt;/td&gt;
            &lt;td&gt;Machine Learning, camino a Skynet &lt;em&gt;por Beatriz Martín&lt;/em&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;13:00-13:50&lt;/td&gt;
            &lt;td&gt;Aventuras con Agile: retrospectivas &lt;em&gt;por Amalia Hernández&lt;/em&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;&gt; 14:00&lt;/td&gt;
            &lt;td&gt;Networking + pintxos y poteo&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;lo-que-no-se-vue-em-por-angélica-lozano-em&#34;&gt;Lo que no se Vue &lt;em&gt;por Angélica Lozano&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;En una aplicación con algunos indicadores para el sector de la automoción en la que el &lt;em&gt;front&lt;/em&gt; era «una puta chapuza» la replantean para permitir diferentes dispositivos y desacoplar el &lt;em&gt;frontend&lt;/em&gt; y &lt;em&gt;backend&lt;/em&gt;. Usando &lt;a href=&#34;https://vuejs.org/&#34;&gt;Vue&lt;/a&gt; las cosas se simplifican al usar sus componentes (componentes&amp;hellip; de que me suena&amp;hellip;) encapsulando la funcionalidad y utilizando un solo fichero en el que se incluye la plantilla para el HTML, el código JavaScript asociado y los estilos CSS.&lt;/p&gt;

&lt;p&gt;Algunas de sus manías o recomendaciones son programar y dar nombres a las cosas en inglés (¿evitar el &lt;em&gt;spanglish&lt;/em&gt;, más compacto que el español?, caracter ñ, &amp;hellip;), conocer las herramientas que hace más simple el trabajo, usar &lt;a href=&#34;https://es.wikipedia.org/wiki/Poka-yoke&#34;&gt;poka-jokes&lt;/a&gt; al diseñar el código para no poder usarlo mal ni aposta, evitar sentencias &lt;em&gt;if&lt;/em&gt; anidadas utilizando &lt;em&gt;guard-clauses&lt;/em&gt;, utilizar una buena semántica según el área de dominio junto con una buena nomenclatura al asignar nombres o usar alguna herramienta para analizar que el código sigue las buenas prácticas adoptadas.&lt;/p&gt;

&lt;p&gt;En las plantillas de Vue se usan algunas directivas como &lt;em&gt;v-if&lt;/em&gt;, &lt;em&gt;v-for&lt;/em&gt; o &lt;em&gt;v-model&lt;/em&gt; para añadirles lógica o para pasar propiedades del componente padre al hijo, con eventos se puede pasar información del hijo al componente padre. Es un &lt;em&gt;framework&lt;/em&gt; progresivo en el que se pueden ir usando cosas según se necesitan (vuex, vue-router, vuetify, vue-i18n).&lt;/p&gt;

&lt;p&gt;Llevar el código a las fábricas de automoción es parte del desarrollo y para ello utilizan herramientas como &lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins&lt;/a&gt;, &lt;a href=&#34;https://www.ansible.com/&#34;&gt;Ansible&lt;/a&gt; y &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Referencia:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=8-ymTkrZPLg&#34;&gt;La Pull Request Perfecta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=zC51h2jU0n4&#34;&gt;Meetup Vuex, ¿para qué sirve? ¿lo necesito?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gitbook.com/book/jdonsan/desarrolla-aplicaciones-con-vuejs/details&#34;&gt;Libro Desarrolla aplicaciones con Vue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=esFGn_8S_mw&#34;&gt;Curso Testing con Vuejs, CodelyTv Pro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/296/lo-que-no-se-vue.jpg&#34; title=&#34;Lo que no se Vue&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/296/lo-que-no-se-vue-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;h3 id=&#34;css-grid-layout-en-acción-em-por-diana-aceves-em&#34;&gt;CSS Grid Layout en acción &lt;em&gt;por Diana Aceves&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Mas que una charla ha sido una demostración de como implementar con &lt;a href=&#34;https://www.w3.org/TR/css-grid-1/&#34;&gt;CSS Grid&lt;/a&gt; una &lt;a href=&#34;http://themes.themewaves.com/fuze/#!layout-1&#34;&gt;plantilla existente para Wordpress&lt;/a&gt; con once variaciones de &lt;em&gt;layout&lt;/em&gt;, una columna y fila con un texto alineado horizontalmente y verticalmente, dos columnas, tres columnas, dos filas, dos filas dos columnas y así hasta once.&lt;/p&gt;

&lt;p&gt;La especificación de CSS Grid es grande y parece complicada pero no hace falta conocerla entera ya que utilizando una pequeña parte y unas pocas propiedades ya es posible hacer cosas interesantes. En las herramientas para desarrolladores de Firefox hay un inspector especifico para los &lt;em&gt;grids&lt;/em&gt; útil para depurar e inspeccionar los elementos.&lt;/p&gt;

&lt;p&gt;Algunas de las propiedades de CSS Grid son:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;display: grid;&lt;/li&gt;
&lt;li&gt;grid-template-columns: 4em 4em 4em;&lt;/li&gt;
&lt;li&gt;grid-template-columns: 1fr 1fr 1fr;&lt;/li&gt;
&lt;li&gt;grid-template-rows: repeat(5, 4em);&lt;/li&gt;
&lt;li&gt;grid-gap: 4em;&lt;/li&gt;
&lt;li&gt;grid-row-gap: 4em;&lt;/li&gt;
&lt;li&gt;grid-column: 3;&lt;/li&gt;
&lt;li&gt;grid-row: 2;&lt;/li&gt;
&lt;li&gt;grid-row: span 2;&lt;/li&gt;
&lt;li&gt;grid-row: 1/span 2;&lt;/li&gt;
&lt;li&gt;grid-auto-flow: dense;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ah! Que recuerdos de aquella época cuando se maquetaban con tablas e incluso tablas dentro de tablas y gifs de un pixel transparentes&amp;hellip;, luego vinieron los &lt;em&gt;divs&lt;/em&gt; y algunos &lt;em&gt;floats&lt;/em&gt;, &amp;hellip; las cosas han cambiado con CSS Grid y CSS Flexbox aunque los que no nos dedicamos específicamente al diseño o maquetación sobrevivimos con &lt;a href=&#34;http://getbootstrap.com/&#34;&gt;Bootstrap&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Referencia:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout&#34;&gt;CSS Grid Layout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout&#34;&gt;CSS Flexbox Layout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.igalia.com/mrego/2015/02/25/grid-auto-placement-is-ready/&#34;&gt;Grid Auto-Placement Is Ready&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/296/css-grid-layout-en-accion.jpg&#34; title=&#34;CSS Grid Layout en acción&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/296/css-grid-layout-en-accion-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;h3 id=&#34;camino-a-producción-em-por-mario-marin-em&#34;&gt;Camino a producción &lt;em&gt;por Mario Marin&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Había oído algo de la tienda de componentes electrónicos para ordenadores &lt;a href=&#34;https://www.pccomponentes.com/&#34;&gt;PC Componentes&lt;/a&gt; que ahí está luchando con &lt;a href=&#34;https://amzn.to/2flFhHA&#34;&gt;Amazon&lt;/a&gt;, nada más y nada menos, en este nicho de mercado. Es un ejemplo de éxito por como ha pasado de ser una tienda de barrio a convertirse en una de las web de referencia en internet del comercio electrónico. Algunos de sus números en el 2017 son:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;314 millones de facturación&lt;/li&gt;
&lt;li&gt;88 millones de sesiones&lt;/li&gt;
&lt;li&gt;1,5 millones de pedidos&lt;/li&gt;
&lt;li&gt;30 mil pedidos semanales&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Evolucionan en la misma medida que crece el negocio por internet. Surgen necesidades y departamentos (atención al cliente, compras, devoluciones, &amp;hellip;). El desarrollo y el mantenimiento se complica que acaba afectando a la rapidez del desarrollo. También se va acumulando la deuda técnica pero el negocio tiene que seguir funcionando, no se puede parar a resolverla o parar de crearla para llegar antes al mercado o no llegar más tarde que la competencia. El resultado es algo que no funciona bien con errores y que los sistemas a duras penas soportan.&lt;/p&gt;

&lt;p&gt;En este punto es cuando empiezan a mejorar, aprendiendo cosas que antes no conocían a partir de como los demás con problemas similares los resuelven y que aplicándolas van solucionando algunos problemas. También contratando gente específica para desarrollo o sistemas y utilizando herramientas que faciliten el desarrollo como &lt;a href=&#34;https://bitbucket.org/&#34;&gt;Bitbucket&lt;/a&gt;, &lt;a href=&#34;https://www.atlassian.com/software/jira&#34;&gt;JIRA&lt;/a&gt;, &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;, &lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins&lt;/a&gt;, &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;, &lt;a href=&#34;https://phpunit.de/&#34;&gt;PHPUnit&lt;/a&gt;, &lt;a href=&#34;https://www.sonarqube.org/&#34;&gt;SonarQube&lt;/a&gt;, &lt;a href=&#34;http://docs.seleniumhq.org/&#34;&gt;Selenium&lt;/a&gt; y &lt;a href=&#34;https://newrelic.com/&#34;&gt;New Relic&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Echando la vista atrás se ve lo que has mejorado y es satisfactorio, a pesar de que quedan muchas cosas por hacer.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/296/camino-a-produccion.jpg&#34; title=&#34;Camino a producción&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/296/camino-a-produccion-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;h3 id=&#34;evitando-el-efecto-dominó-en-nuestros-mico-servicios-em-por-javi-ferrer-y-rafa-gómez-em&#34;&gt;Evitando el efecto dominó en nuestros (mico)servicios &lt;em&gt;por Javi Ferrer y Rafa Gómez&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Muchas aplicaciones empiezan siendo un monolito, sin embargo aún siendo más fáciles de saber como funcionan y de desarrollar nuevas características no están exentas de problemas como el escalado ante picos de tráfico o que cuando se cae deja de funcionar todo. Los microservicios tratan de solventar algunos de las deficiencias de los monolitos y permiten cosas como múltiples equipos para diferentes funcionalidades, trocear el monolito en partes más pequeñas, usar diferentes lenguajes de programación según se considere el más adecuado para cada parte y escalarlas individualmente.&lt;/p&gt;

&lt;p&gt;Sin embargo, dividir la aplicación en dos no es suficiente ya que puede seguir estando acopladas en la base de datos si la comparten de modo que si una parte sufre un tráfico importante este puede afectar a la otra aplicación por competir con ella en el acceso a la base de datos. Crear dos bases de datos y que las aplicaciones se comuniquen mediante llamadas a una API, por ejemplo con un servicio REST, para acceder una a los datos de la otra sigue habiendo acoplamiento, si una parte falla afecta a la otra. Estas opciones siguen siendo un monolito, distribuido pero monolito.&lt;/p&gt;

&lt;p&gt;Para eliminar este acoplamiento en la infraestructura de las aplicaciones se pueden aplicar los principios &lt;a href=&#34;https://en.wikipedia.org/wiki/SOLID_(object-oriented_design)&#34;&gt;SOLID&lt;/a&gt; e &lt;a href=&#34;https://en.wikipedia.org/wiki/Dependency_inversion_principle&#34;&gt;inversión de dependencias&lt;/a&gt; que ya aplicamos en el código para no depender de una implementación concreta, creando una interfaz de repositorio y luego implementaciones de esta según se necesiten, una implementación del repositorio para guadar en base de datos u otra para enviar un correo electrónico. De esta forma se pueden añadir nuevas implementaciones con nuevas funcionalidades, el sistema está abierto a extensión sin necesidad de modificar el código existente.&lt;/p&gt;

&lt;p&gt;A nivel de la infraestructura una forma de interfaz son los eventos, un sistema los publica y otro u otros suscritos a ellos los consumen. Utilizar un sistema de mensajes y colas como &lt;a href=&#34;https://www.rabbitmq.com/&#34;&gt;RabbitMQ&lt;/a&gt; permite desacoplar los servicios, si el consumidor de eventos cae los mensajes se siguen encolando y se volverán a procesar cuando el consumidor esté de nuevo en funcionamiento. Si se quiere desarrollar una nueva funcionalidad asociada a un evento solo hay que crear una nueva cola y el nuevo consumidor con su funcionalidad.&lt;/p&gt;

&lt;p&gt;Aunque los microservicios solucionan algunos problemas de los monolitos traen consigo nuevo problemas como una consistencia eventual en las diferentes bases de datos que posee cada microservicio, también puede haber duplicados y no se garantiza el orden de los mensajes.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/296/evitando-el-efecto-domino-en-nuestros-micoservicios.jpg&#34; title=&#34;Evitando el efecto dominó en nuestros (mico)servicios&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/296/evitando-el-efecto-domino-en-nuestros-micoservicios-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;p&gt;Cuando en diciembre se pusieron las entradas para reserva a no mucho tardar y con las ganas de ir a la conferencia estaba motivado para ir, en los días anteriores siempre da algo de pereza la asistencia ya que después de una semana de trabajo las ganas no son tantas de pasar la mañana o el día también con el mismo tema sin desconectar ni descansar, pero luego después de haber madrugado y las presentaciones queda una buena sensación y de haber merecido la pena el esfuerzo.&lt;/p&gt;



        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/01/gestion-de-peticiones-wiki-y-pages-con-gitlab/</id>
        <title>Gestión de peticiones, wiki y pages con GitLab</title>        
        <updated>2018-01-20T10:00:00+01:00</updated>
        <published>2018-01-20T10:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/01/gestion-de-peticiones-wiki-y-pages-con-gitlab/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/gitlab.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;GitLab&#34; title=&#34;GitLab&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Una de las cosas que me gustan de &lt;a href=&#34;https://about.gitlab.com/&#34;&gt;GitLab&lt;/a&gt; es que se puede usar en un servidor propio, la otra cosa que me gusta es que incluye varias herramientas casi imprescindibles para cualquier proyecto como gestión de peticiones para recoger las historias, wiki como documentación e información y &lt;em&gt;pages&lt;/em&gt; para generar pequeños sitios web además de los repositorios de &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; o el servidor de integración y entrega continua. Que GitLab incluya por defecto todas estas herramientas hace innecesario recurrir en la mayoría de los casos a varias herramientas especializadas que cubran estas necesidades como &lt;a href=&#34;https://www.atlassian.com/software/jira&#34;&gt;JIRA&lt;/a&gt;, &lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins&lt;/a&gt;, &lt;a href=&#34;https://www.mediawiki.org/&#34;&gt;MediaWiki&lt;/a&gt; o un servidor web para los sitios web.&lt;/p&gt;

&lt;p&gt;Después de &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/&#34;&gt;instalar GitLab usando Docker&lt;/a&gt; o de alguna de sus otras formas, creado un usuario no administrador y un proyecto se puede empezar a usar las herramientas de gestión de incidencias, wiki y &lt;em&gt;pages&lt;/em&gt;. Estas son solo tres de sus herramientas incluidas, además incluye &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/01/integracion-y-entrega-continua-con-gitlab-sobre-docker/&#34;&gt;integración y entrega continua&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;gestión-de-peticiones&#34;&gt;Gestión de peticiones&lt;/h3&gt;

&lt;p&gt;La herramienta de gestión de peticiones permite crear historias que recojan las tareas a realizar, las historias pueden ser de diferente tipo como nuevas funcionalidades, mejoras técnicas o errores, es posible asignarlas a diferentes usuarios, relacionar peticiones entre si o incluir documentos adjuntos. Las historias también se pueden mostrar en un panel &lt;a href=&#34;https://es.wikipedia.org/wiki/Kanban_(desarrollo)&#34;&gt;Kanban&lt;/a&gt; para visualizar el estado de las peticiones, las que están realizándose, las desplegadas en producción, las siguientes peticiones y donde puede haber cuellos de botella en los procesos. El flujo y el panel Kanban que siguen las peticiones desde que se crean hasta que se dan por terminadas es personalizable.&lt;/p&gt;

&lt;p&gt;Para crear una nueva petición hay que acceder en el proyecto a &lt;em&gt;Issues&lt;/em&gt; y pulsar el botón &lt;em&gt;New Issue&lt;/em&gt;. Rellenados los datos del formulario de creación se puede consultar desde &lt;em&gt;Issues &amp;gt; List&lt;/em&gt; para verlas en formato lista o &lt;em&gt;Issues &amp;gt; Board&lt;/em&gt; para verlas en formato panel Kanban. El panel Kanban se puede modificar y asignando etiquetas a las peticiones crear columnas adaptado al flujo de trabajo de una organización. Con &lt;a href=&#34;https://docs.gitlab.com/ee/user/markdown.html&#34;&gt;formato de las descripciones de las peticiones&lt;/a&gt; permite hacer referencia a otras o incluir menciones a otros usuarios.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.gitlab.com/ee/user/project/issues/issues_functionalities.html#11-reference&#34;&gt;Issues Functionalities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.gitlab.com/ee/user/project/issues/crosslinking_issues.html&#34;&gt;Crosslinking Issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://about.gitlab.com/features/issueboard/&#34;&gt;Issue Board&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/295/new-issue-1.png&#34; title=&#34;Nueva petición A&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/295/new-issue-1-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/295/new-issue-2.png&#34; title=&#34;Nueva petición B&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/295/new-issue-2-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Nueva petición&lt;/figcaption&gt;
&lt;/figure&gt;


    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/295/issues.png&#34; title=&#34;Lista de peticiones&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/295/issues-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/295/labels.png&#34; title=&#34;Etiquetas&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/295/labels-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Lista de peticiones y etiquetas&lt;/figcaption&gt;
&lt;/figure&gt;


    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/295/board.png&#34; title=&#34;Panel Kanban&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/295/board-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Panel Kanban&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;h3 id=&#34;wiki&#34;&gt;Wiki&lt;/h3&gt;

&lt;p&gt;Una wiki ayuda a recoger información útil en el mismo proyecto pero no en el repositorio de código fuente, por ejemplo, cómo iniciar la aplicación de un proyecto a partir del repositorio de código fuente, qué dependencias tiene como el JDK o una base de datos. También puede recoger información general de lógica de negocio que no cambien tan a menudo como el código como pudiera ser un esquema de alto nivel de arquitectura o por que se han tomado algunas descisiones en la arquitectura y los requerimientos.&lt;/p&gt;

&lt;p&gt;Cuando se accede por primera vez a la wiki se crea la página de inicio que se puede editar o crear nuevas páginas. Las páginas de la wiki se escriben en formato &lt;a href=&#34;https://es.wikipedia.org/wiki/Markdown&#34;&gt;Markdown&lt;/a&gt; y se guarda un historial de las ediciones que se han realizado a cada página.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.gitlab.com/ce/user/project/wiki/index.html&#34;&gt;GitLab Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    
&lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/295/new-page.png&#34; title=&#34;Nueva página&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/295/new-page-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/295/page.png&#34; title=&#34;Página&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2018/295/page-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Nueva página y página&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;/div&gt;

&lt;h3 id=&#34;pages&#34;&gt;Pages&lt;/h3&gt;

&lt;p&gt;La herramienta de &lt;em&gt;pages&lt;/em&gt; o páginas permite crear un pequeño sitio web. Se pueden utilizar varias de las herramientas generadoras de sitios web estáticos como &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt; o &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;. Para crear un sitio web hay que crear un repositorio de código fuente con un archivo &lt;em&gt;.gitlab-ci.yml&lt;/em&gt; y una tarea de nombre &lt;em&gt;pages&lt;/em&gt; que contiene los comandos para construir el sitio web.&lt;/p&gt;

&lt;p&gt;Es posible asignar a los sitios web de &lt;em&gt;pages&lt;/em&gt; un dominio propio y añadirles seguridad con el protocolo HTTPS. En &lt;a href=&#34;https://gitlab.com/pages&#34;&gt;estos repositorios&lt;/a&gt; hay ejemplos de como generar un sitio web del proyecto con varios de los más populares generadores de sitios web estáticos. Dependiendo de si el sitio web es para el proyecto o del usuario o grupo el sitio estará accesible en la dirección u otra.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.gitlab.com/ee/user/project/pages/index.html#gitlab-pages-documentation&#34;&gt;GitLab Pages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En resumen, ya con esta pequeña serie de artículos queda claro que GitLab es una herramienta muy completa y que incluye las funcionalidades de varias que son suficientes para la mayoría de los casos sin tener que recurrir a Jira, Jenkins, MediaWiki o un servidor web. Además, con la muy completa &lt;a href=&#34;https://docs.gitlab.com/ce/api/&#34;&gt;API de GitLab&lt;/a&gt; es posible hacer desarrollos a medida y según las necesidades que se tengan.&lt;/p&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/GitLab&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;docker-compose -f docker-compose-all.yml up&lt;/code&gt;.
&lt;/p&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
</feed>

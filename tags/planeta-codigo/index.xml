<?xml version="1.0" encoding="utf-8" standalone="yes"?><feed xmlns="http://www.w3.org/2005/Atom"><id>https://picodotdev.github.io/blog-bitix/tags/planeta-codigo/</id><title type="text">Blog Bitix</title><subtitle>Recent content on Blog Bitix</subtitle><updated>2018-10-05T20:30:00+02:00</updated><author><name>picodotdev</name></author><generator>Hugo</generator><icon>https://picodotdev.github.io/blog-bitix//assets/images/logotipos/hugo.png</icon><logo>https://picodotdev.github.io/blog-bitix//assets/images/logotipos/hugo.png</logo><rights>https://creativecommons.org/licenses/by-sa/4.0/</rights><entry><id>https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/</id><title>Tolerancia a fallos en un cliente de microservicio con Spring Cloud Netflix y Hystrix</title><updated>2018-10-05T20:30:00+02:00</updated><published>2018-10-05T20:30:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/spring.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Spring&#34; title=&#34;Spring&#34;/&gt;
&lt;/div&gt;
&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;
&lt;p&gt;Los microservicios son independientes unos de otros y se comunican mediante operaciones de red. Dado que las operaciones se realizan mediante un medio no confiable como la red, dada su naturaleza efímera y dado que pueden fallar en los microservicios es importante que los clientes estén preparados para posibles fallos.&lt;/p&gt;
&lt;p&gt;Un patrón o técnica que se suele emplear es el &lt;a href=&#34;https://www.martinfowler.com/bliki/CircuitBreaker.html&#34;&gt;Circuit Breaker&lt;/a&gt; en Java y con &lt;a href=&#34;https://spring.io/&#34;&gt;Spring&lt;/a&gt; se ofrece en el proyecto &lt;a href=&#34;https://cloud.spring.io/spring-cloud-netflix/&#34;&gt;Spring Cloud Netflix&lt;/a&gt; mediante &lt;a href=&#34;https://github.com/Netflix/Hystrix&#34;&gt;Hystrix&lt;/a&gt;. Este patrón soluciona varios problemas cuando un microservicio falla.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Uno es que cuando un microservicio empieza a fallar es necesario dejar de hacerle peticiones para permitirle recuperarse si está demasiado saturado. Cuando ocurre un fallo es posible realizar una acción en sustitución de la llamada al microservicio y devolver un valor alternativo.&lt;/li&gt;
&lt;li&gt;Otro problema es que el microservicio aunque no falle tarde demasiado en responder se puede establecer un &lt;em&gt;timeout&lt;/em&gt; que si se supera se deja de esperar la respuesta lo que evita que los microservicios que usan uno que tarda demasiado agote sus recursos y empiecen a fallar o tardar demasiado también si tienen muchas llamadas.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En ambos casos se evita que la cadena de microservicios empiece a fallar y con ello sistema completo.&lt;/p&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/hystrix_hub9140d7d7b18b1dc3937691a78958e9a_86330_650x450_fit_box_2.png&#34; width=&#34;640&#34; height=&#34;225&#34; class=&#34;&#34;/&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;El patrón &lt;em&gt;circuit breaker&lt;/em&gt; se denomina así ya que implementa una lógica similar a un circuito eléctrico. El circuito de forma normal está cerrado y se realizan las llamadas al microservicio servidor de forma normal. Si el microservicio servidor empieza a fallar se llama a la acción alternativa para obtener un valor, si se supera un umbral de errores el circuito pasa a estado abierto y se dejan de hacer llamadas el microservicio servidor. Cada cierto tiempo definido se realiza una llamada para comprobar el estado de microservicio servidor de forma que si empieza a responder correctamente el circuito pasa a estado cerrado y las siguientes llamadas se realizan al microservicio dejándose de utilizar la acción alternativa.&lt;/p&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-diagram_hu4845d342695fc4ba4f8fa8d72c767f7b_90482_2560x1440_fit_box_2.png&#34; title=&#34;Diagrama del patrón circuit breaker&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-diagram_hu4845d342695fc4ba4f8fa8d72c767f7b_90482_300x200_fit_box_2.png&#34; width=&#34;126&#34; height=&#34;200&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-states_hu56e2a01b6636c9453b9193ae50db8c8e_29040_2560x1440_fit_box_2.png&#34; title=&#34;Diagrama de estados&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-states_hu56e2a01b6636c9453b9193ae50db8c8e_29040_300x200_fit_box_2.png&#34; width=&#34;221&#34; height=&#34;200&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/hystrix-fallback_hu341ff0d18f5e14bb81f44a2d6d1769ba_44880_2560x1440_fit_box_2.png&#34; title=&#34;Fallback del patrón circuit breaker&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/hystrix-fallback_hu341ff0d18f5e14bb81f44a2d6d1769ba_44880_300x200_fit_box_2.png&#34; width=&#34;300&#34; height=&#34;196&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;Diagrama del patrón circuit breaker, de estados y método fallback&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;Para utilizar Hystrix como implementación del patrón &lt;em&gt;circuit breaker&lt;/em&gt; en una aplicación Java con &lt;a href=&#34;https://projects.spring.io/spring-boot/&#34;&gt;Spring Boot&lt;/a&gt; el método que realiza la llamada al microservicio servidor ha de anotarse con la anotación &lt;a href=&#34;https://netflix.github.io/Hystrix/javadoc/com/netflix/hystrix/HystrixCommand.html&#34;&gt;@HystrixCommand&lt;/a&gt;, como parámetro se indica el método &lt;em&gt;fallback&lt;/em&gt; para obtener un valor por defecto cuando el microservicio falle, también se puede indicar el &lt;em&gt;tiemout&lt;/em&gt; de espera antes de considerar que la llamada ha fallado con la propiedad &lt;em&gt;execution.isolation.thread.timeoutInMilliseconds&lt;/em&gt;. También se pueden indicar los valores para considerar el circuito abierto con &lt;em&gt;circuitBreaker.requestVolumeThreshold&lt;/em&gt; y &lt;em&gt;circuitBreaker.errorThresholdPercentage&lt;/em&gt;. Y eso es lo básico que hay que hacer para utilizar este patrón de tolerancia a fallos. Tiene &lt;a href=&#34;https://github.com/Netflix/Hystrix/tree/master/hystrix-contrib/hystrix-javanica#configuration&#34;&gt;algunos valores adicionales más que se pueden configurar&lt;/a&gt; para adaptar el patrón a los valores óptimos de la aplicación.&lt;/p&gt;
&lt;p&gt;En el ejemplo el cliente en un bucle realiza las llamadas al servicio con un método &lt;em&gt;get()&lt;/em&gt; anotado con &lt;em&gt;@HystrixCommand&lt;/em&gt;. En este método se encapsula la petición HTTP que puede fallar utilizando la librería &lt;a href=&#34;https://jersey.java.net/&#34;&gt;Jersey&lt;/a&gt; obtenida la ubicación de una instancia del servicio a su vez del servicio de registro y descubrimiento &lt;a href=&#34;https://github.com/Netflix/eureka&#34;&gt;Eureka&lt;/a&gt;.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/7d1de9a669612dce06d3a5a35e4831d7.js?file=ClientService.java&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/7d1de9a669612dce06d3a5a35e4831d7.js?file=Main.java&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/7d1de9a669612dce06d3a5a35e4831d7.js?file=build.gradle&#34;&gt;&lt;/script&gt;
&lt;p&gt;El circuito se abre cuando el número de llamadas supera un umbral y el porcentaje de fallo se supera, se han de dar las dos condiciones, si el número de llamadas que se realizan no superan el umbral aunque todas fallen el circuito permanece cerrado. Ambos valores son personalizables con las propiedades &lt;em&gt;circuitBreaker.requestVolumeThreshold&lt;/em&gt; y &lt;em&gt;circuitBreaker.errorThresholdPercentage&lt;/em&gt;. El circuito permanece abierto durante el tiempo indicado por &lt;em&gt;metrics.rollingStats.timeInMilliseconds&lt;/em&gt;. Por otro lado, el tiempo de &lt;em&gt;timeout&lt;/em&gt; se puede indicar en la anotación por cada llamada a servicio o en el archivo de configuración de la aplicación en la propiedad &lt;em&gt;hystrix.command.get.execution.isolation.thread.timeoutInMilliseconds&lt;/em&gt; donde &lt;em&gt;get&lt;/em&gt; es el nombre del comando obtenido por defecto del nombre del método anotado.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/7d1de9a669612dce06d3a5a35e4831d7.js?file=DefaultController.java&#34;&gt;&lt;/script&gt;
&lt;p&gt;En la aplicación ejemplo hay un microservicio servidor y un microservicio cliente, iniciando una instancia de microservicio servidor y una instancia del microservicio cliente que implementa el patrón &lt;em&gt;circuit breaker&lt;/em&gt; inicialmente las peticiones se realizarán correctamente si no ocurre un &lt;em&gt;timeout&lt;/em&gt;. Si se finaliza el proceso del microservicio servidor de forma inesperada las peticiones del cliente al servidor empezarán a fallar y obtener el valor alternativo del método &lt;em&gt;fallback&lt;/em&gt;, si se supera el umbral de llamadas el circuito pasa a estado abierto. Si el servicio servidor se inicia de nuevo pasado unos instantes después de que esté disponible se cerrará el circuito y a obtener los valores devueltos por el microservicio.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/7d1de9a669612dce06d3a5a35e4831d7.js?file=System.out&#34;&gt;&lt;/script&gt;
&lt;p&gt;Para monitorizar el estado del sistema y de los circuitos se puede visualizar en un &lt;em&gt;dashboard&lt;/em&gt;. El número de peticiones que se están realizando, las fallidas, el estado de los circuitos, las que fallan por &lt;em&gt;timeout&lt;/em&gt; o las que fallan con error. Para tener acceso a esta página hay que incluir la dependencia &lt;em&gt;org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard&lt;/em&gt;. La página &lt;em&gt;dashoard&lt;/em&gt; está disponible en la dirección &lt;em&gt;http://localhost:8085/hystrix&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-closed_huce59696db4bb781bd0e709b415bf52e8_382684_2560x1440_fit_box_2.png&#34; title=&#34;Circuit breaker cerrado&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-closed_huce59696db4bb781bd0e709b415bf52e8_382684_300x200_fit_box_2.png&#34; width=&#34;300&#34; height=&#34;182&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-open_huce59696db4bb781bd0e709b415bf52e8_384418_2560x1440_fit_box_2.png&#34; title=&#34;Circuit breaker abierto&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-open_huce59696db4bb781bd0e709b415bf52e8_384418_300x200_fit_box_2.png&#34; width=&#34;300&#34; height=&#34;182&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;Estados del circuit breaker&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/7d1de9a669612dce06d3a5a35e4831d7.js?file=.%2fgradle-run.sh&#34;&gt;&lt;/script&gt;
&lt;p&gt;
El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradle-run.sh&lt;/code&gt;.
&lt;/p&gt;
&lt;div class=&#34;reference&#34;&gt;
Referencia:&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.martinfowler.com/bliki/CircuitBreaker.html&#34;&gt;CircuitBreaker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cloud.spring.io/spring-cloud-static/spring-cloud-netflix/2.0.1.RELEASE/single/spring-cloud-netflix.html#_circuit_breaker_hystrix_clients&#34;&gt;Circuit Breaker: Hystrix Clients&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Netflix/Hystrix/tree/master/hystrix-contrib/hystrix-javanica#configuration&#34;&gt;Hyxtrix Configuration (1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Netflix/Hystrix/wiki/Configuration&#34;&gt;Hyxtrix Configuration (2)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javamagazine.mozaicreader.com/SeptemberOctober2018/Twitter&#34;&gt;Java Mgazine Sep/Oct 2018&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;
El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradle-run.sh&lt;/code&gt;.
&lt;/p&gt;</content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/</id><title>Almacenar cifrados los valores de configuración sensibles en Spring Cloud Config</title><updated>2018-09-30T01:40:00+02:00</updated><published>2018-09-30T01:30:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/spring.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Spring&#34; title=&#34;Spring&#34;/&gt;
&lt;/div&gt;
&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;
&lt;p&gt;Para no tener que hacer cambios en el código que implica recompilar la aplicación y generar de nuevos los artefactos al cambiar algunos valores de la aplicación se utilizan los archivos de configuración. Los archivos de configuración son archivos de texto plano que pueden seguir algún formato como &lt;em&gt;properties&lt;/em&gt;, &lt;em&gt;xml&lt;/em&gt; o &lt;em&gt;yaml&lt;/em&gt;, externos a la aplicación pero que lee sus propiedades al iniciarse. Algunas propiedades de configuración de ejemplo pueden ser la cadena de conexión a una base de datos, el usuario y contraseña.&lt;/p&gt;
&lt;p&gt;Dado que algunos valores de configuración son sensibles como en el ejemplo anterior la cadena de conexión, usuario y contraseña es recomendable por mayor seguridad almacenar estos valores cifrados y que la aplicación los descifre con la clave correspondiente al necesitar su valor original.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cloud.spring.io/spring-cloud-config/&#34;&gt;Spring Cloud Config&lt;/a&gt; permite guardar los archivos de configuración con algunos valores cifrados. Hay varias posibilidades de configuración para guardar los datos cifrados: mediante clave simétrica, clave privada-pública, guardarlos en el servicio externo &lt;a href=&#34;https://www.vaultproject.io/&#34;&gt;Vault&lt;/a&gt; de [Hasicorp][hasicorp], mantenerlos cifrados solo en el almacenamiento persistente o transmitirlos cifrados y que sea el cliente el que los descifre.&lt;/p&gt;
&lt;p&gt;Utilizando la forma más simple para mantener los datos cifrados con una clave simétrica en el servicio de configuración hay que mantener en una propiedad de configuración la clave simétrica para cifrar y descifrar los datos, &lt;em&gt;encrypt.key&lt;/em&gt;. En este ejemplo la clave simétrica y las propiedades cifradas están en archivos de configuración diferentes pero incluidos en el mismo servidor de configuración. Esto no parece que aporte mucha seguridad ya que si se tiene acceso al archivo de configuración de un servicio con una propiedad cifrada probablemente se tenga acceso al archivo con la clave cifrada y la medida de seguridad no es útil. Sin embargo, esto permite al estar separados los archivos de configuración añadir el archivo con la propiedad cifrada a un repositorio público sin peligro siempre y cuando la clave de cifrado se mantenga en secreto. Los archivos de configuración de los servicios en el servidor de configuración se podrían añadir a un repositorio de Git.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/caccab2d4558ec75babab6ef71808f37.js?file=bootstrap.yml&#34;&gt;&lt;/script&gt;
&lt;p&gt;Definida la clave simétrica e iniciado el servidor de configuración este ofrece dos &lt;em&gt;endpoints&lt;/em&gt; para cifrar y descifrar datos. Utilizando el de cifrado se obtiene el valor cifrado del dato sensible que se quiere proteger. Con el &lt;em&gt;endpoint&lt;/em&gt; de descifrado se puede descifrar. Se observa que utilizando varias veces el &lt;em&gt;endpoint&lt;/em&gt; de cifrado se devuelve en cada una un valor distinto, sin embargo, descifrando cada uno de estos valores con el &lt;em&gt;endpoint&lt;/em&gt; de descifrado siempre se obtiene el valor original. Esto es debido seguramente a que en la operación de cifrado se utiliza la técnica del &lt;em&gt;salt&lt;/em&gt; para que a los valores cifrados se les pueda aplicar un ataque de diccionario, el &lt;em&gt;salt&lt;/em&gt; es incluido en el valor devuelto para que la operación de descifrado devuelva el valor original.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/caccab2d4558ec75babab6ef71808f37.js?file=curl-1.sh&#34;&gt;&lt;/script&gt;
&lt;p&gt;El valor cifrado obtenido por este &lt;em&gt;endpoint&lt;/em&gt; se puede guardar en los archivos de configuración entrecomillándolo y precediéndolo con la cadena &lt;em&gt;{cipher}&lt;/em&gt;.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/caccab2d4558ec75babab6ef71808f37.js?file=client.yml&#34;&gt;&lt;/script&gt;
&lt;p&gt;En este caso el servicio al iniciarse obtiene su configuración del servicio de configuración, los datos se transmiten en forma plana sin cifrar y el cifrado utilizando en el servidor de configuración es transparente para el cliente. Accediendo al &lt;em&gt;endpoint&lt;/em&gt; del servidor de configuración que devuelve la configuración de un servicio con una propiedad cifrada se observa que al obtener el valor se devuelve en texto plano al cliente, esta petición es la misma que hace el servicio para obtener su configuración, de modo que aunque la información está cifrada en el servidor de configuración se transmite al servicio sin cifrar en texto plano. En este ejemplo se utiliza el protocolo inseguro HTTP, lo recomendable es utilizar el protocolo HTTPS para cifrar el tráfico entre el servidor de configuración y el cliente de modo que los valores sensibles queden protegidos también en la transmisión.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/caccab2d4558ec75babab6ef71808f37.js?file=curl-2.sh&#34;&gt;&lt;/script&gt;
&lt;p&gt;Iniciado el servicio de descubrimiento, el de configuración y un servicio que tiene un dato cifrado de configuración el valor que obtiene está ya descifrado. En este caso el servicio &lt;em&gt;client&lt;/em&gt; obtiene el valor de la propiedad &lt;em&gt;config.password&lt;/em&gt; descifrado con el valor &lt;em&gt;secret&lt;/em&gt;.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/caccab2d4558ec75babab6ef71808f37.js?file=gradlew-run.sh&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/caccab2d4558ec75babab6ef71808f37.js?file=System.out&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/caccab2d4558ec75babab6ef71808f37.js?file=Main.java&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/caccab2d4558ec75babab6ef71808f37.js?file=DefaultConfiguration.java&#34;&gt;&lt;/script&gt;
&lt;p&gt;
El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradle-run.sh &amp;amp;&amp;amp; ./curl-1.sh&lt;/code&gt;.
&lt;/p&gt;</content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/</id><title>Novedades y nuevas características de Java 11</title><updated>2018-09-29T14:00:00+02:00</updated><published>2018-09-28T21:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/"/><author><name>picodotdev</name></author><content type="html">
&lt;p&gt;&lt;strong&gt;Java 11 es la primera versión de soporte extendido publicada o LTS bajo el nuevo ciclo de publicaciones que adoptó Java en la versión 9. Añade varias novedades importantes en cuanto a seguridad y elimina otras que en versiones anteriores ya fueron marcadas como desaconsejadas.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;
&lt;p&gt;En la plataforma Java era habitual que entre versión y versión mayor pasasen varios años normalmente 3 o más. Este ciclo de publicaciones no se adapta a las necesidades de todas las empresas, organizaciones y usuarios. Algunas empresas y usuarios desean ciclos de publicaciones más cortos quizá con no tantas novedades en cada uno de ellos pero sí de forma más constante incorporando mejoras. Otras organizaciones necesitan confiar en una versión que tenga un ciclo de soporte largo para sus aplicaciones.&lt;/p&gt;
&lt;p&gt;Para adaptarse a ambos requerimientos Java a partir de Java 9 adoptó un nuevo ciclo de publicaciones siendo cada seis meses para los que desean mejoras de forma regular y cada tres años para los que necesitan soporte extendido. &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/09/novedades-de-java-9-mas-alla-de-la-modularidad/&#34;&gt;Java 9 incorporó la esperada modularización&lt;/a&gt; que cambia la forma de desarrollo de las aplicaciones con numerosas mejoras. &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/03/novedades-de-java-10/&#34;&gt;Java 10 añadío la inferencia de tipos para variables locales&lt;/a&gt; con la palabra reservada &lt;em&gt;var&lt;/em&gt;. Ahora Java 11 siendo una versión de soporte extendido o LTS, el soporte de Java 11 está planificado que dure hasta 2023 y hasta 2026 de forma extendida lo que son 8 años de soporte.&lt;/p&gt;
&lt;p&gt;En esta nueva versión de Java 11 publicada el 25 de septiembre de 2018 las novedades no son tan relevantes como lo fuero Java 8 con las &lt;em&gt;lambadas&lt;/em&gt; y Java 9 con los módulos pero continúa con las mejoras incrementales y proporciona una versión LTS en la que empresas grandes confiarán como base para sus desarrollos.&lt;/p&gt;
&lt;p&gt;La lista más relevante de &lt;a href=&#34;http://openjdk.java.net/projects/jdk/11/&#34;&gt;novedades de Java 11&lt;/a&gt; es la siguiente:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;181: &lt;a href=&#34;http://openjdk.java.net/jeps/181&#34;&gt;Nest-Based Access Control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;309: &lt;a href=&#34;http://openjdk.java.net/jeps/309&#34;&gt;Dynamic Class-File Constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;315: &lt;a href=&#34;http://openjdk.java.net/jeps/315&#34;&gt;Improve Aarch64 Intrinsics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;318: &lt;a href=&#34;http://openjdk.java.net/jeps/318&#34;&gt;Epsilon: A No-Op Garbage Collector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;320: &lt;a href=&#34;http://openjdk.java.net/jeps/320&#34;&gt;Remove the Java EE and CORBA Modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;321: &lt;a href=&#34;http://openjdk.java.net/jeps/321&#34;&gt;HTTP Client (Standard)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;323: &lt;a href=&#34;http://openjdk.java.net/jeps/323&#34;&gt;Local-Variable Syntax for Lambda Parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;324: &lt;a href=&#34;http://openjdk.java.net/jeps/324&#34;&gt;Key Agreement with Curve25519 and Curve448&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;327: &lt;a href=&#34;http://openjdk.java.net/jeps/327&#34;&gt;Unicode 10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;328: &lt;a href=&#34;http://openjdk.java.net/jeps/328&#34;&gt;Flight Recorder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;329: &lt;a href=&#34;http://openjdk.java.net/jeps/329&#34;&gt;ChaCha20 and Poly1305 Cryptographic Algorithms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;330: &lt;a href=&#34;http://openjdk.java.net/jeps/330&#34;&gt;Launch Single-File Source-Code Programs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;331: &lt;a href=&#34;http://openjdk.java.net/jeps/331&#34;&gt;Low-Overhead Heap Profiling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;332: &lt;a href=&#34;http://openjdk.java.net/jeps/332&#34;&gt;Transport Layer Security (TLS) 1.3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;333: &lt;a href=&#34;http://openjdk.java.net/jeps/333&#34;&gt;ZGC: A Scalable Low-Latency Garbage Collector (Experimental)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;335: &lt;a href=&#34;http://openjdk.java.net/jeps/335&#34;&gt;Deprecate the Nashorn JavaScript Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;336: &lt;a href=&#34;http://openjdk.java.net/jeps/336&#34;&gt;Deprecate the Pack200 Tools and API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;eliminación-de-módulos-java-ee-y-corba&#34;&gt;Eliminación de módulos Java EE y CORBA&lt;/h3&gt;
&lt;p&gt;Se eliminan del JDK paquetes ya desaconsejados hace varias versiones anteriores y que no eran muy usados en cualquier caso. Estos paquetes son los de CORBA una forma de llamada a procedimientos remotos que se utilizó como alternativa a RMI pero que nunca tuvo un uso extendido prefiriéndose SOAP o más recientemente interfaces REST.&lt;/p&gt;
&lt;p&gt;La lista de paquetes eliminados son los siguientes.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;java.xml.ws&lt;/em&gt; (JAX-WS, plus the related technologies SAAJ and Web Services Metadata)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;java.xml.bind&lt;/em&gt; (JAXB)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;java.activation&lt;/em&gt; (JAF)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;java.xml.ws.annotation&lt;/em&gt; (Common Annotations)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;java.corba&lt;/em&gt; (CORBA)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;java.transaction&lt;/em&gt; (JTA)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;java.se.ee&lt;/em&gt; (Aggregator module for the six modules above)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;jdk.xml.ws&lt;/em&gt; (Tools for JAX-WS)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;jdk.xml.bind&lt;/em&gt; (Tools for JAXB)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sintaxis-de-variables-locales-para-parámetros-en-lambdas&#34;&gt;Sintaxis de variables locales para parámetros en lambdas&lt;/h3&gt;
&lt;p&gt;Ahora los parámetros de una lambda pueden declararse con &lt;em&gt;var&lt;/em&gt; con inferencia de tipos. Esto proporciona uniformidad en el lenguaje al declarar los parámetros permite usar anotaciones en los parámetros de la función lambda como &lt;em&gt;@NotNull&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Esta funcionalidad tiene algunas restricciones. No se puede mezclar el uso y no uso de &lt;em&gt;var&lt;/em&gt; y no se puede mezclar el uso de &lt;em&gt;var&lt;/em&gt; y tipos en &lt;em&gt;lambdas&lt;/em&gt; explícitas. Son consideradas ilegales por el compilador y producirá un error en tiempo de compilación.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/4ffa2721e4d7a3487ff8ff048a7f98fd.js?file=Lambda.java&#34;&gt;&lt;/script&gt;
&lt;div class=&#34;media media-video&#34; style=&#34;text-align: center;&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/0eWgRyanQI0?rel=0&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h3 id=&#34;cliente-http&#34;&gt;Cliente HTTP&lt;/h3&gt;
&lt;p&gt;En Java 9 se incorporó de forma experimental un cliente HTTP con soporte para HTTP/2 en el propio JDK. En Java 11 alcanza la categoría de estable. Este cliente HTTP es una forma sencilla de hacer llamadas a servicios web ya sean REST o &lt;a href=&#34;http://graphql.org/&#34;&gt;GraphQL&lt;/a&gt;. Las clases del nuevo cliente se encuentran en el paquete &lt;a href=&#34;https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/package-summary.html&#34;&gt;java.net.http&lt;/a&gt;. Al estar este cliente HTTP incorporado en el JDK no será necesario depender de librerías de terceros.&lt;/p&gt;
&lt;div class=&#34;media media-video&#34; style=&#34;text-align: center;&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/sZSdWq490Vw?rel=0&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h3 id=&#34;ejecución-desde-archivo-de-código-fuente-único&#34;&gt;Ejecución desde archivo de código fuente único&lt;/h3&gt;
&lt;p&gt;Para ejecutar un programa Java es necesario compilarlo a &lt;em&gt;bytecode&lt;/em&gt; y posteriormente ejecutarlos. Se necesitan dos pasos. Para facilitar la ejecución de los programas que se componen de un único archivo de código fuente se añade la posibilidad de lanzar un programa desde el archivo de código fuente. Esto es útil par programas pequeños o para los casos de estar aprendiendo el lenguaje.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/4ffa2721e4d7a3487ff8ff048a7f98fd.js?file=HelloWorld.java&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/4ffa2721e4d7a3487ff8ff048a7f98fd.js?file=java-helloworld.sh&#34;&gt;&lt;/script&gt;
&lt;p&gt;Esta funcionalidad es compatible con los &lt;em&gt;shebang&lt;/em&gt; de los sistemas Unix.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/4ffa2721e4d7a3487ff8ff048a7f98fd.js?file=helloworld.sh&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/4ffa2721e4d7a3487ff8ff048a7f98fd.js?file=hello.sh&#34;&gt;&lt;/script&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/images/java-helloworld_huaa51cd775853ec98b86099eb2028f7dc_95828_2560x1440_fit_box_2.png&#34; title=&#34;Java 11 HelloWorld!&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/images/java-helloworld_huaa51cd775853ec98b86099eb2028f7dc_95828_6500x450_fit_box_2.png&#34; width=&#34;700&#34; height=&#34;450&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;Java 11 HelloWorld!&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;h3 id=&#34;unicode-10&#34;&gt;Unicode 10&lt;/h3&gt;
&lt;p&gt;Tratar texto es una parte importante casi de cualquier aplicación, este soporte de Unicode 10 añade 16018 nuevos caracteres soportados, 128 nuevos emojis y 19 símbolos nuevos para el estándar en televisiones 4K.&lt;/p&gt;
&lt;h3 id=&#34;tls-1-3&#34;&gt;TLS 1.3&lt;/h3&gt;
&lt;p&gt;Algunas de las versiones anteriores de TLS ya no se consideran seguras añadir soporte para la versión más reciente TLS 1.3 permite a las aplicaciones Java ser más compatibles y más seguras. El protocolo TLS 1.3 proporciona dos beneficios principalmente, es más seguro y más rápido que sus versiones anteriores.&lt;/p&gt;
&lt;div class=&#34;media media-video&#34; style=&#34;text-align: center;&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/HxDb5nwvN_Y?rel=0&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h3 id=&#34;otras-mejoras&#34;&gt;Otras mejoras&lt;/h3&gt;
&lt;p&gt;Se añaden implementaciones específicas para la arquitectura Aarch64 para un mejor rendimiento en la plataforma &lt;a href=&#34;https://www.arm.com/&#34;&gt;ARM&lt;/a&gt; en algunas funciones. Se añade de forma experimental un nuevo recolector de basura ZGC con pausas para recolectar basura menores capaz de manejar cantidades de memoria pequeñas de megabytes y grandes de terabytes. Al mismo tiempo se añade un recolector de basura Epsilon que no reclama la memoria. Se añade soporte para los algoritmos criptográficos &lt;em&gt;ChaCha20&lt;/em&gt; y &lt;em&gt;Poly1305&lt;/em&gt; junto con otras funcionalidades criptográficas &lt;em&gt;RSASSA-PSS&lt;/em&gt;, &lt;em&gt;AES Encryption with HMAC-SHA2 for Kerberos 5&lt;/em&gt;, &amp;hellip;&lt;/p&gt;
&lt;p&gt;Se añaden varios métodos a la clase &lt;a href=&#34;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html&#34;&gt;String&lt;/a&gt; muy utilizados con los que no será necesario recurrie a librerías de terceros. Estos métodos son &lt;a href=&#34;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#repeat(int)&#34;&gt;repeat&lt;/a&gt;, &lt;a href=&#34;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#isBlank()&#34;&gt;isBlank&lt;/a&gt;, &lt;a href=&#34;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#strip()&#34;&gt;strip&lt;/a&gt;, &lt;a href=&#34;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#stripLeading()&#34;&gt;stripLeading&lt;/a&gt;, &lt;a href=&#34;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#stripTrailing()&#34;&gt;stripTrailing&lt;/a&gt;, &lt;a href=&#34;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#lines()&#34;&gt;lines&lt;/a&gt;. En otras clases de la API también se han añadido nuevos métodos.&lt;/p&gt;
&lt;p&gt;Java que tradicionalmente marcaba como &lt;em&gt;deprecarted&lt;/em&gt; características pero que las seguía manteniendo por compatibilidad hacia atrás parece que ha empezado a eliminar varias de esas características desaconsejadas de forma más agresiva. No solo se añaden nuevas características, también se eliminan algunas y se desaconseja el uso de otras entre ellas el visor de &lt;em&gt;applets&lt;/em&gt;, eliminación de &lt;em&gt;Unsafe.defineClass&lt;/em&gt;, &lt;em&gt;Thread.destroy()&lt;/em&gt; y &lt;em&gt;Thread.stop(Throwable)&lt;/em&gt;, eliminación de las funcionalidades de despliegue de &lt;em&gt;Java Plugin&lt;/em&gt; y &lt;em&gt;Java Web Start&lt;/em&gt; que se marcaron como desaconsejadas en Java 9 y para eliminación en Java 10 finalmente en Java 11 se han eliminado sin reemplazo.&lt;/p&gt;
&lt;p&gt;Oracle ya no ofrece el entorno de ejecución JRE ni versiones de 32 bits para Windows. JavaFX ya no está incluído en el JDK pero seguirá siendo utilizable como librería independiente.&lt;/p&gt;
&lt;p&gt;Las anteriores son las funcionalidades que he considerado más destacables para todos los usuarios., También hay otras funcionalidades añadidas, soporte eliminado para funciones específicas o de funcionamiento interno.&lt;/p&gt;
&lt;div class=&#34;reference&#34;&gt;
Referencia:&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.oracle.com/java/java11&#34;&gt;Introducing Java SE 11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.oracle.com/technetwork/java/javase/11-relnote-issues-5012449.html&#34;&gt;JDK 11 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/en/java/javase/11/&#34;&gt;Java 11 Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/en/java/javase/11/docs/api/index.html&#34;&gt;Java 11 Javadoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.oracle.com/java-platform-group/introducing-java-se-11&#34;&gt;Introducing Java SE 11 (blog)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.oracle.com/java-platform-group/oracle-jdk-releases-for-java-11-and-later&#34;&gt;Oracle JDK Releases for Java 11 and Later&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.takipi.com/java-11-will-include-more-than-just-features/&#34;&gt;Java 11 Will Include More Than Just Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.azul.com/90-new-features-and-apis-in-jdk-11/&#34;&gt;90 New Features (and APIs) in JDK 11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://4comprehension.com/java-11-string-api-updates/&#34;&gt;Java 11 String API Updates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/eclipse/jetty.project/issues/2487&#34;&gt;Java 11 removes EE and Corba packages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/java/status/1044609723012665344&#34;&gt;Java Mission Control - Now serving OpenJDK binaries too!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/en/java/javase/11/migrate/index.html&#34;&gt;Oracle JDK 11 Migration Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.java-countdown.xyz/&#34;&gt;Countdown to Java Release Date&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content><category term="blog"/><category term="java"/><category term="planeta-codigo"/><category term="programacion"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/</id><title>Recargar sin reiniciar la configuración de una aplicación Spring Boot con Spring Cloud Config</title><updated>2018-09-23T00:50:00+02:00</updated><published>2018-09-23T00:15:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/spring.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Spring&#34; title=&#34;Spring&#34;/&gt;
&lt;/div&gt;
&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;
&lt;p&gt;No es raro la necesidad de querer cambiar algunos valores de la configuración de una aplicación sin ningún cambio adicional en el código. Normalmente la configuración se externaliza en un archivo de texto en un determinado formato como &lt;em&gt;properties&lt;/em&gt; o &lt;em&gt;yaml&lt;/em&gt; que se lee al iniciarse la aplicación pero que al querer hacer cambios y hacerlos efectivos requiere reiniciar la aplicación.&lt;/p&gt;
&lt;p&gt;Para evitar la caída de servicio en un reinicio de aplicación requiere tener varias instancias de la aplicación, ir sacando del balanceador las instancias para que no le soliciten nuevas peticiones, reiniciarlas y añadirlas de nuevo al balanceador si se hace balanceo de carga en el servidor o reiniciar las aplicaciones progresivamente si se hace en el cliente. Y esto con todas las instancias del servicio. &lt;a href=&#34;https://cloud.spring.io/spring-cloud-config/&#34;&gt;Spring Cloud Config&lt;/a&gt; y &lt;a href=&#34;https://projects.spring.io/spring-boot/&#34;&gt;Spring Boot&lt;/a&gt; entre sus funcionalidades de configuración posee una que consiste en recargar la configuración o ciertas partes de la misma. Para ello &lt;a href=&#34;https://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#production-ready&#34;&gt;Spring Boot Actuator&lt;/a&gt; ofrece un &lt;em&gt;endpoint&lt;/em&gt; con el que disparar la recarga.&lt;/p&gt;
&lt;p&gt;En el siguiente ejemplo de microservicio que posee una clase de configuración con algunas propiedades. El valor de estas propiedades se utilizan para el resultado de una acción en un &lt;em&gt;endpoint&lt;/em&gt; del servicio.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/c8304298f6f6a0aa64b69b25ad2f886e.js?file=DefaultConfiguration.java&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/c8304298f6f6a0aa64b69b25ad2f886e.js?file=DefaultController.java&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/c8304298f6f6a0aa64b69b25ad2f886e.js?file=service.yml&#34;&gt;&lt;/script&gt;
&lt;p&gt;Iniciada la aplicación que requiere iniciar previamente el servicio de registro y descubrimiento y el servidor de configuración, la aplicación al iniciarse obtiene su configuración del servidor de configuración. Si se cambia la configuración de la variable &lt;em&gt;config.key&lt;/em&gt; la aplicación no obtendrá el valor actualizado hasta que se invoque el &lt;em&gt;endpoint&lt;/em&gt; &lt;em&gt;http://localhost:8080/actuator/refresh&lt;/em&gt;. Para que Spring Boot recargue la configuración es necesario anotar con &lt;em&gt;@RefreshScope&lt;/em&gt; la clase de configuración. Invocado el &lt;em&gt;endpoint&lt;/em&gt; de recarga de configuración la aplicación toma de nuevo los nuevos valores del servicio de configuración.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/c8304298f6f6a0aa64b69b25ad2f886e.js?file=gradle-run-1.sh&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/c8304298f6f6a0aa64b69b25ad2f886e.js?file=curl-1.sh&#34;&gt;&lt;/script&gt;
&lt;p&gt;En una aplicación orientada microservicios es muy posible que haya múltiples instancias del mismo servicio y para recargar la configuración de cada uno de ellos hay que hacerlo de forma individual con su &lt;em&gt;endpoint&lt;/em&gt; de recarga de configuración. Dado el número de microservicios y su ubicación distribuida hacerlo de forma individual es un inconveniente.&lt;/p&gt;
&lt;p&gt;Para resolver este inconveniente integrando &lt;a href=&#34;https://cloud.spring.io/spring-cloud-bus/&#34;&gt;Spring Cloud Bus&lt;/a&gt; en las aplicaciones es posible recargar la configuración de todos los microservicios haciendo una única llamada al &lt;em&gt;endpoint&lt;/em&gt; &lt;em&gt;http://localhost:8090/monitor&lt;/em&gt; indicando el servicio a actualizar su configuración lo que es independiente del número de instancias y de su ubicación. Integrar Spring Clud Bus requiere disponer de una instancia de mensajes como &lt;a href=&#34;https://www.rabbitmq.com/&#34;&gt;RabbitMQ&lt;/a&gt; e incluir como dependencia tanto en el servidor de configuración como en el servicio la dependencia &lt;em&gt;spring-cloud-starter-bus-amqp&lt;/em&gt;. Para esta comunicación de mensajes Spring Cloud Config crea en RabbitMQ una cola de mensajes que empieza por &lt;em&gt;springCloudBus&lt;/em&gt;.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/c8304298f6f6a0aa64b69b25ad2f886e.js?file=configserver.gradle&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/c8304298f6f6a0aa64b69b25ad2f886e.js?file=service.gradle&#34;&gt;&lt;/script&gt;
&lt;p&gt;Los pasos para probar estas funcionalidades con Spring Cloud Bus en una o varias varias instancias son iniciar una instancia o más del servidor de registro y descubrimiento, iniciar una o más instancias del servidor de configuración, iniciar una o varias instancias del servicio todas las instancias en un puerto y terminal diferente, invocar el servicio cuyo valor de respuesta depende de una propiedad de configuración, modificar el valor de la propiedad de configuración, recargar la configuración e invocar de nuevo el servicio para comprobar que el nuevo valor se ha hecho efectivo.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/c8304298f6f6a0aa64b69b25ad2f886e.js?file=gradle-run-2.sh&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/c8304298f6f6a0aa64b69b25ad2f886e.js?file=curl-2.sh&#34;&gt;&lt;/script&gt;
&lt;p&gt;
El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradle-run-1.sh &amp;amp;&amp;amp; ./curl-1.sh&lt;/code&gt;.
&lt;/p&gt;
&lt;div class=&#34;reference&#34;&gt;
Referencia:&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cloud.spring.io/spring-cloud-static/spring-cloud-bus/2.0.0.RELEASE/single/spring-cloud-bus.html#_quick_start&#34;&gt;Spring Cloud Bus - Quick Start&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.0.1.RELEASE/single/spring-cloud-config.html#_push_notifications_and_spring_cloud_bus&#34;&gt;Spring CloudBus - Push Notifications and Spring Cloud Bus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-configuration-classes.html&#34;&gt;Spring Boot - Configuration Classes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/</id><title>Desempaquetado y análisis de teclado y ratón inalámbrico V7 CKW200</title><updated>2018-09-21T21:00:00+02:00</updated><published>2018-09-21T17:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/videoseven.png&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Videoseven&#34; title=&#34;Videoseven&#34;/&gt;
&lt;/div&gt;
&lt;p&gt;Aún estoy esperando a que &lt;a href=&#34;https://www.intel.es&#34;&gt;Intel&lt;/a&gt; comercialice en España como decía en un artículo anterior &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/06/decidido-a-comprar-un-intel-nuc-entre-las-opciones-que-he-evaluado/&#34;&gt;entre las opciones que he evaluado los Intel NUC Bean Canyon&lt;/a&gt; para comprar nuevo equipo. La espera se me está haciendo un poco larga pero en teoría a mediados de octubre los empezarán a enviar desde la página especializada &lt;a href=&#34;https://simplynuc.co.uk/&#34;&gt;SimplyNUC&lt;/a&gt; y posiblemente hasta noviembre o diciembre no aparezcan a la venta en &lt;a href=&#34;https://amzn.to/2flFhHA&#34;&gt;Amazon&lt;/a&gt; que es donde en principio lo compraré o más o menos al mismo tiempo en &lt;a href=&#34;https://www.pccomponentes.com/&#34;&gt;PcComponentes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Pero mientras tanto otras cosas que necesito es un monitor 2K de 27 pulgadas que como primera opción tengo el &lt;a href=&#34;https://amzn.to/2xCE2tP&#34;&gt;Benq PD2700Q&lt;/a&gt; con un precio de 337€ pero lo he visto en algunos momentos a 275€, si lo vuelvo a ver a ese precio será el que compre aún no teniendo todavía el NUC. Ese monitor u otro modelo muy similar de &lt;a href=&#34;https://amzn.to/2O06ikl∫&#34;&gt;Benq GW2765HT&lt;/a&gt; la mayor diferencia entre estos dos monitores es que este último no ofrece puertos USB pero tiene conexión VGA aunque no le veo mucho sentido en un monitor 2K por ser menor que la nativa del monitor ya que el VGA solo ofrece como máximo una resolución de 1920x1080.&lt;/p&gt;
&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
&lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01K2210GS&amp;linkId=930604874c5c52f2c31549109cfd682b&#34;&gt;&lt;/iframe&gt;
&lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00M913DVG&amp;linkId=560005b7fb75dd9d22d6549dc3fc3b52&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;Aparte de la memoria, el SSD para el NUC y tras cosas de menor importancia que ya comentaré otras piezas que me faltan son un teclado y un ratón que finalmente ya he adquirido. He visto bastantes modelos con diferentes características entre ellos principalmente los de la marca &lt;a href=&#34;https://www.logitech.com/es-es&#34;&gt;Logitech&lt;/a&gt; por ser una marca de reconocido prestigio en cuanto a periféricos para ordenadores. Tenía pensado adquirir un modelo de teclado y ratón con cable muy básico aunque suficiente para mis usos el &lt;a href=&#34;https://amzn.to/2xEo4PH&#34;&gt;Logitech MK120&lt;/a&gt; pero finalmente me he decidido por uno muy similar aunque inalámbrico, el &lt;a href=&#34;https://amzn.to/2xqrINW&#34;&gt;Videoseven (V7) modelo CKW200&lt;/a&gt; que también está disponible en &lt;a href=&#34;https://amzn.to/2NyBaZX&#34;&gt;formato con cable&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Pasados unos meses de uso veré si ha sido buena decisión por su fiabilidad y el incordio que supone cambiar de pilas si es muy habitualmente, con las recargables no me supondrá un gasto adicional recurrente que hay que tener en cuenta en el coste del teclado y ratón, también al precio de las pilas no recargables o regarcables si se le suma el del cargador aunque como uso pilas recargables para otro tipo de aparatos electrónicos (relojes, mandos a distancia, &amp;hellip;) este último es un gasto compartido.&lt;/p&gt;
&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
&lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00564GWEI&amp;linkId=32d37ac4289e4cc6001d3442d8a448e1&#34;&gt;&lt;/iframe&gt;
&lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B0758DMHZG&amp;linkId=22f1206a79c0eb63d39b94ca6b26ee80&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h3 id=&#34;con-cable-o-inalámbrico&#34;&gt;Con cable o inalámbrico&lt;/h3&gt;
&lt;p&gt;Salvo por la diferencia de cable e inalámbrico tanto el de Logitech como de &lt;a href=&#34;http://www.v7world.com/es/&#34;&gt;Videoseven&lt;/a&gt; son muy similares y el precio del V7 solo es unos pocos euros superior y ambos muy económicos. Las razones por la que finalmente he optado por un inalámbrico han sido tres: no tener cables que molesten en la mesa por comodidad y al mismo tiempo para facilitar la limpieza de la mesa, dado que el NUC solo tiene 4 puertos USB ocupar solo uno con el receptor de radio frecuencia de teclado y ratón en vez de dos si fuesen con cable y tener algo de movilidad o mayor libertad de movimiento ya que quizá vea alguna película desde la cama en vez desde la mesa de escritorio y así pueda manejar el ordenador desde algo más de distancia. La marca Videoseven no la conocía hasta hace poco que me he encontrado con algunos de sus productos, en Amazon todavía para el teclado y ratón no tiene comentarios ni he encontrado un desempaquetado ni &lt;em&gt;unboxing&lt;/em&gt; en &lt;a href=&#34;https://www.youtube.com/&#34;&gt;YouTube&lt;/a&gt; para conocer más detalles, creo que seré el primero en evaluar el producto.&lt;/p&gt;
&lt;p&gt;En principio evalué teclado y ratón con cable más que inalámbrico por la fiabilidad de la conexión, según la experiencia de algunos usuarios en los comentarios de Amazon varios son los que indican que la conectividad a veces se pierde y es molesto al teclear y manejar el ratón. Llevo usando un &lt;a href=&#34;https://www.apple.com/es/shop/product/MLA02ZM/A/rat%C3%B3n-magic-mouse-2-plata&#34;&gt;Magic Mouse 2&lt;/a&gt; de &lt;a href=&#34;https://www.apple.com/&#34;&gt;Apple&lt;/a&gt; que funciona por &lt;a href=&#34;https://es.wikipedia.org/wiki/Bluetooth&#34;&gt;Bluetooth&lt;/a&gt; perfectamente sin haber experimentado hasta el momento ningún tipo de fallo por conectividad, esto me daba cierta confianza en que los inalámbricos funcionasen bien. Otro aspecto a tener en cuenta sobre los inalámbricos es que requieren de baterías en forma de pilas AA y AAA que según el fabricante duran entre 8 y 12 meses para el teclado y 6 meses para el ratón.&lt;/p&gt;
&lt;p&gt;Hay teclados y ratones que funcionan por Bluetooth pero no funcionan hasta que se inicia el sistema operativo lo que les hace no aptos para modificar los valores de la BIOS/UEFI. La ventaja que tienen es que los Bluetooth no requieren receptor y son utilizables por tablets o televisión. Los basados en radio frecuencia son más comunes para ordenadores.&lt;/p&gt;
&lt;p&gt;Supongo que depende del uso, el Magic Mouse 2 que tiene una batería recargable de casi 2000 mAh me dura unas 3-4 semanas usándolo de forma intensiva todos los días tanto para trabajar entre semana como el fin de semana entre 5 y 9 horas diarias. Una &lt;a href=&#34;https://amzn.to/2QRoefk&#34;&gt;pila recargable AA de Amazon Basics&lt;/a&gt; que es la que usan tanto el ratón de Logitech como el de Videoseven tiene una capacidad de 1900 mAh. Con el uso que le doy la pila del ratón supongo que me durará algo más de tiempo que una carga del Magic Mouse 2 pero no creo que me dure esos 6 meses que indica el fabricante, el Magic Mouse lo uso para trabajar y el ratón solo a nivel personal lo que es durante menos tiempo. Una vez lo use mediré lo que dura la pila de ratón. Por la duración de las pilas del teclado no me preocupo tanto ya que en este las pilas sí durarán varios meses.&lt;/p&gt;
&lt;p&gt;En cuanto a usabilidad no noto retraso en las acciones por el hecho de que sean inalámbricos, la respuesta en la acción es instantánea tal como lo es en un teclado y ratón con cable. Es muy cómodo poder mover o levantar el teclado o ratón sin la ataduría del cable. Habiéndolo probado en un Mac el teclado y ratón son reconocidos sin ningún tipo de problema incluyendo la disposición de teclas de la disposición español y multimedia, en otros sistemas operativos es igual y no requiere ningún tipo de configuración en el sistema, es conectar el adaptador USB y usar.&lt;/p&gt;
&lt;p&gt;No se por que hay que elegir entre con cable o inalámbrico, ¿no hay todavía un modelo de teclado y ratón que soporte los dos modos de funcionamiento y que sea el usuario el que decida como quiere usarlos? Si con la fiabilidad del cable o con la comodidad del inalámbrico en cada momento.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.windowscentral.com/wired-or-wireless-which-mouse-right-you&#34;&gt;Wired or wireless: which mouse is right for you?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.lifewire.com/wired-or-wireless-mouse-2640091&#34;&gt;Wired or Wireless Mouse?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lifehacker.com/5865351/how-to-choose-the-perfect-mouse-and-keyboard&#34;&gt;How to Choose the Perfect Mouse and Keyboard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;el-teclado-ckw200&#34;&gt;El teclado CKW200&lt;/h3&gt;
&lt;p&gt;El teclado CKW200 es un teclado completo tradicional con teclado numérico y teclas dedicadas Inicio, Fin, Avance Página, Retroceso Página, Suprimir e Insertar muy útiles al manejar documentos y editar archivos de texto que en muchos teclados de portátiles y más compactos no poseen por ahorrar espacio. También posee teclas dedicadas de flechas que en los portátiles suelen tener un tamaño más pequeño y son más incómodas de pulsar. Como programador estas teclas me resultan muy útiles para seleccionar código desde la posición del cursor al inicio o final, mover el cursor al final de la linea o al inicio, etc&amp;hellip; También posee teclas especiales de función para silenciar, bajar y subir el volumen, teclas multimedia y de aplicaciones muy cómodas para hacer esas funciones directamente desde el teclado sin usar la interfaz gráfica del entorno de escritorio, el Logitech MK120 no posee estas teclas de función y es otro motivo por haberme decantado por el modelo de V7.&lt;/p&gt;
&lt;p&gt;Las teclas no son en forma de isla sino que son como en la generación anterior de teclados y tienen el inconveniente de que entre los huecos de las teclas se suele acumular suciedad y polvo y no son muy fáciles de limpiar, en los teclados en formato isla se acumula menos suciedad. No posee florituras adicionales como retroiluminación para las teclas útil en condiciones de baja luz ni tampoco adornos como teclas RBG con efectos lumínicos, a un teclado con este precio no se le pueden pedir esas cosas hay que ir a teclados de mayor precio para encontrar esas funciones si se echan de menos que no son más que un añadido estético.&lt;/p&gt;
&lt;p&gt;Un detalle importante de este teclado es que los caracteres y símbolos de las teclas está impresas mediante el proceso &lt;a href=&#34;https://en.wikipedia.org/wiki/UV_coating&#34;&gt;UV coating&lt;/a&gt; que consiste en que están impresas o protegidas mediante un proceso de luz ultravioleta. Esto es una gran característica ya que evita que en el caso de ser pintura el dibujo de las telas desaparezca por el uso debido a la grasa de los dedos y suciedad. Varios usuarios se quejan de esto en algunos modelos incluso de los que están en los primeros puestos de ventas en Amazon.&lt;/p&gt;
&lt;p&gt;El teclado posee un indicador de batería entre los LED indicadores de estado, se enciende al conectar las pilas no se si indicará también el nivel bajo de las dos pilas AAA que usa.&lt;/p&gt;
&lt;h3 id=&#34;el-ratón-ckw200&#34;&gt;El ratón CKW200&lt;/h3&gt;
&lt;p&gt;El ratón posee tres botones, izquierdo, derecho y el de la rueda de desplazamiento pero no posee botones de desplazamiento lateral. Es de tamaño normal no reducido, ergonómico con la palma de la mano y simétrico apto para diestros y zurdos. Dado que V7 es una empresa nueva en el mercado su modelo de teclado es del 2017 más reciente que otros muchos modelos que pueden ser incluso tan viejos como del 2013, 2015 o 2016.&lt;/p&gt;
&lt;p&gt;El ratón posee botón de encendido y apagado pero el teclado no. El ratón posee una función de ahorro de energía con la que al cabo de un minuto la luz óptica que detecta el movimiento empieza a parpadear cada medio segundo, al cabo de 8 minutos la luz se paga completamente y el ratón entra en reposo para ahorrar batería y que dure más tiempo. Con solo hacer clic el ratón sale del estado de reposo y el sensor de movimiento se enciende. Por otro lado si el ratón detecta que el ordenador se ha apagado también entra en modo reposo lo que es muy útil para ni siquiera tener que apagar el ratón manualmente con su interruptor.&lt;/p&gt;
&lt;p&gt;El ratón entre una pila AA y el sensor de movimiento posee un hueco para insertar el adaptador USB de como una forma de guardarlo y que no se pierda si se transporta.&lt;/p&gt;
&lt;h3 id=&#34;desempaquetado&#34;&gt;Desempaquetado&lt;/h3&gt;
&lt;p&gt;Una vez más al igual que en otros análisis de productos que hago incluyo fotos mejores que las que proporciona el propio fabricante hechas por mi ya antiguo móvil. Me parece increíble que a estas alturas den tan poca importancia a esto ya que los usuarios utilizan la red para informarse en los productos con comentarios de Ámazon y vídeos de YouTube, fotos del fabricante que debería tener la información más fiable y detallada, incluyendo fotos de gran calidad y numerosas. No indica dimensiones reales del teclado y ratón, solo del paquete.&lt;/p&gt;
&lt;p&gt;El teclado tiene una dimensiones de 45x14,5 centímetros de ancho y largo respectivamente, el ratón 7x12 centímetros de ancho y largo. Tanto el teclado como ratón y pilas estaban en la caja protegidos con una bolsa de plástico para evitar rayaduras. El adaptador para que el ordenador reciba la señal de teclado y ratón es muy pequeño y pasa casi despercibido conectado en el puerto USB. Se incluye en la caja una pila AA y dos AAA para poder usar el teclado y ratón desde el primer momento lo cual es de agradecer.&lt;/p&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-1_hu5759c6ecc153d088d9c37cb65defffdf_787307_2560x1440_fit_q90_box.jpg&#34; title=&#34;La caja&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-1_hu5759c6ecc153d088d9c37cb65defffdf_787307_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;71&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-2_hu4b77011dbb1f5ab98d7af80b73be1bff_662713_2560x1440_fit_q90_box.jpg&#34; title=&#34;La caja&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-2_hu4b77011dbb1f5ab98d7af80b73be1bff_662713_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;72&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-3_hud79e571e37e826ff7bd8ba86c460ca72_883005_2560x1440_fit_q90_box.jpg&#34; title=&#34;La caja&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-3_hud79e571e37e826ff7bd8ba86c460ca72_883005_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;117&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-4_hu7e45dd5d51e682617f3a528ec466ab34_571156_2560x1440_fit_q90_box.jpg&#34; title=&#34;La caja&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-4_hu7e45dd5d51e682617f3a528ec466ab34_571156_200x150_fit_q90_box.jpg&#34; width=&#34;163&#34; height=&#34;150&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-6_hu8e18980ea9bd25779d5a70f1bda04cd2_825643_2560x1440_fit_q90_box.jpg&#34; title=&#34;La caja&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-6_hu8e18980ea9bd25779d5a70f1bda04cd2_825643_200x150_fit_q90_box.jpg&#34; width=&#34;150&#34; height=&#34;150&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-7_hua92ab4c5b5b635f1c20553c39c9c6c99_528810_2560x1440_fit_q90_box.jpg&#34; title=&#34;La caja&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-7_hua92ab4c5b5b635f1c20553c39c9c6c99_528810_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;54&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-8_hu15bfe1cb22b9a35d59619f047c6d9ceb_769082_2560x1440_fit_q90_box.jpg&#34; title=&#34;La caja&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-8_hu15bfe1cb22b9a35d59619f047c6d9ceb_769082_200x150_fit_q90_box.jpg&#34; width=&#34;161&#34; height=&#34;150&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-9_hu7aa20208010d4510370b54e1bce0cacc_510998_2560x1440_fit_q90_box.jpg&#34; title=&#34;La caja&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-9_hu7aa20208010d4510370b54e1bce0cacc_510998_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;147&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;La caja, manual y pilas incluídas&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-11_hu99228cf1ca42bd3e8b35a6b59639e1f5_663025_2560x1440_fit_q90_box.jpg&#34; title=&#34;El teclado&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-11_hu99228cf1ca42bd3e8b35a6b59639e1f5_663025_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;66&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-15_hu7790aacf5cf49a4574b972b520f21b70_915714_2560x1440_fit_q90_box.jpg&#34; title=&#34;El teclado&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-15_hu7790aacf5cf49a4574b972b520f21b70_915714_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;67&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-26_huf9c248e1a519054bbc4c84a977ed1a5a_1703465_2560x1440_fit_q90_box.jpg&#34; title=&#34;El teclado&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-26_huf9c248e1a519054bbc4c84a977ed1a5a_1703465_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;117&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-16_hu8edb707ee68fffd1577096b5f951858d_1025911_2560x1440_fit_q90_box.jpg&#34; title=&#34;El teclado&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-16_hu8edb707ee68fffd1577096b5f951858d_1025911_200x150_fit_q90_box.jpg&#34; width=&#34;133&#34; height=&#34;150&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-17_hudfca1fdf385d0131de2a80757eefd52b_1125098_2560x1440_fit_q90_box.jpg&#34; title=&#34;El teclado&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-17_hudfca1fdf385d0131de2a80757eefd52b_1125098_200x150_fit_q90_box.jpg&#34; width=&#34;161&#34; height=&#34;150&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-18_hued301737ad8bb2155be6ddf5b95f7e7a_749941_2560x1440_fit_q90_box.jpg&#34; title=&#34;El teclado&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-18_hued301737ad8bb2155be6ddf5b95f7e7a_749941_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;107&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-19_hu41f4521d616c0248962135eb5429fa34_827953_2560x1440_fit_q90_box.jpg&#34; title=&#34;El teclado&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-19_hu41f4521d616c0248962135eb5429fa34_827953_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;132&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;El teclado&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-20_hu162d1414f7fdc7b377f901d8133ffb92_958111_2560x1440_fit_q90_box.jpg&#34; title=&#34;El ratón&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-20_hu162d1414f7fdc7b377f901d8133ffb92_958111_200x150_fit_q90_box.jpg&#34; width=&#34;93&#34; height=&#34;150&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-21_hu83e6b2a0c5a4ff644c65d80399fac054_971015_2560x1440_fit_q90_box.jpg&#34; title=&#34;El ratón&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-21_hu83e6b2a0c5a4ff644c65d80399fac054_971015_200x150_fit_q90_box.jpg&#34; width=&#34;86&#34; height=&#34;150&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-22_hudc5d6dbeef530270215aef9248e90145_853246_2560x1440_fit_q90_box.jpg&#34; title=&#34;El ratón&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-22_hudc5d6dbeef530270215aef9248e90145_853246_200x150_fit_q90_box.jpg&#34; width=&#34;151&#34; height=&#34;150&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-25_hudd44d8429177a62528fe8491dc1e7a47_636288_2560x1440_fit_q90_box.jpg&#34; title=&#34;El ratón&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-25_hudd44d8429177a62528fe8491dc1e7a47_636288_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;76&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-27_hue20ec1cd39f8ad57153d61686ded7eef_160650_2560x1440_fit_q90_box.jpg&#34; title=&#34;El adaptador USB&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-27_hue20ec1cd39f8ad57153d61686ded7eef_160650_200x150_fit_q90_box.jpg&#34; width=&#34;178&#34; height=&#34;150&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-24_hub92be097db1989c7e355936ba8775b22_183417_2560x1440_fit_q90_box.jpg&#34; title=&#34;El adaptador USB&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-24_hub92be097db1989c7e355936ba8775b22_183417_200x150_fit_q90_box.jpg&#34; width=&#34;143&#34; height=&#34;150&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;El ratón y el adaptador USB&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;h3 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h3&gt;
&lt;p&gt;Es un teclado y ratón básico pero yo no le pido más, de plástico pero con un buen acabado, estética cuidada sin ninguna extrabagancia y ligero. Posee pestañas para aumentar la inclinación de las teclas. Por lo que he probado hasta el momento durante unos días el teclado y ratón funciona correctamente la mayor parte del tiempo sin embargo en algún momento puntual el teclado y ratón han perdido la conexión algunas veces. La mayor parte de las veces la conexión se recupera sola en unos pocos segundos, el ratón queda como muerto ya que la luz óptima de movimiento se apaga. Si su funcionamiento es como hasta ahora estaré contento con la compra y habrá sido buena pero si las conexiones son frecuentes y no se recupera pronto me será un poco molesto y no acabaré tan contento.&lt;/p&gt;
&lt;p&gt;Llevo usándolo unos días pero se me está haciendo más cómodo el teclado completo que el reducido por ahorrar espacio de los portátiles, sobre todo las teclas de las flechas y de inicio, fin, avance página y retroceso página, también la tecla de suprimir y borrar. El adaptador USB no se calienta y según se enciende el ordenador el teclado y ratón son usables. Quitando las desconexiones en su uso normal funciona perfectamente. Las pulsaciones de teclas y clic del ratón hace algo de ruido pero nada fuera de lo normal. No hay retraso entre la pulsación de la tecla y movimiento del ratón y la detección en el ordenador.&lt;/p&gt;
&lt;p&gt;Como defectos están las desconexiones esporádicas que he tenido y que el ratón solo es de tres botones y no de 5, no tiene desplazamiento horizontal que otros ratones tienen moviendo la rueda el ratón hacia los lados. Quizá el ratón estaría mejor que tuviese dos pilas AA en vez de solo una para que la batería le durase más tiempo y hubiese que cambiar las pilas con menor frecuencia. Esto haría que el ratón pesase más pero no creo que fuese un inconveniente grande, con una pila es bastante ligero. Es curioso que el teclado que gasta menos pilas tenga dos AAA (de 750 mAh si son recargables) y el ratón solo una.&lt;/p&gt;
&lt;p&gt;Por el motivo de la perdida de conexión no lo recomiendo para los juegos pero ni este modelo ni ningún otro inalámbrico que quizá funcionen más fiablemente pero no serán perfectos en este sentido, para los juegos es más recomendable un teclado y ratón con cable.&lt;/p&gt;
&lt;p&gt;Según está indicado en la descripción de los huecos para las pilas el teclado y ratón funcionan con pilas de 1,5v pero los estoy usando con las pilas recargables de Amazon Basics que son de 1,2v y están funcionado sin problema.&lt;/p&gt;
&lt;h3 id=&#34;alfombrilla-para-teclado-y-ratón&#34;&gt;Alfombrilla para teclado y ratón&lt;/h3&gt;
&lt;p&gt;Al mismo tiempo que he comprado el teclado y ratón he comprado una &lt;a href=&#34;https://amzn.to/2Dm7me3&#34;&gt;alfombrilla de 70cm de ancho por 30 cm de alto&lt;/a&gt; en la que colocar tanto ratón como teclado que está ribeteada con hilo para mayor duración, esto protegerá la mesa del movimiento de ratón que con el tiempo se desgastaría.&lt;/p&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-10_huefaf6703abffe59020bff61b87ff7e0a_700256_2560x1440_fit_q90_box.jpg&#34; title=&#34;Alfombrilla, teclado y ratón&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-10_huefaf6703abffe59020bff61b87ff7e0a_700256_200x150_fit_q90_box.jpg&#34; width=&#34;200&#34; height=&#34;88&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;Alfombrilla, teclado y ratón&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
&lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01KC4DR1C&amp;linkId=a9e97138ccb3a59af838861eb2156d10&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h3 id=&#34;pilas-recargables-y-cargador&#34;&gt;Pilas recargables y cargador&lt;/h3&gt;
&lt;p&gt;Para no incurrir en mayores gastos adicionales por tener que sustituir pilas cada cierto tiempo, sobre todo para el ratón, usaré &lt;a href=&#34;https://amzn.to/2QRoefk&#34;&gt;pilas recargables de Amazon Basics tanto AA&lt;/a&gt; como &lt;a href=&#34;https://amzn.to/2NuWAXF&#34;&gt;AAA&lt;/a&gt; y un &lt;a href=&#34;https://amzn.to/2QMzp9b&#34;&gt;cargador con pantalla similar a este&lt;/a&gt; que adquirí hace tiempo para cargarlas, posee un indicador de la carga de la pila a medida que se carga y soporta múltiples tipos de pilas. &lt;a href=&#34;https://amzn.to/2NwgXna&#34;&gt;Amazon Basics tiene un cargador sencillo&lt;/a&gt; pero aconsejo adquirir uno equivalente al que tengo yo con pantalla o mejor aún con la función de descarga de pila para prolongar más tiempo la vida útil de las pilas, no son mucho más caros que el de Amazon y la pantalla resulta muy útil. Unas pilas las usaré y tendré otras en reserva para poner de repuesto en cuanto las que estoy usando se gasten así no tendré que esperar mucho a que se carguen ya que tardan varias horas.&lt;/p&gt;
&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
&lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00CWNMR5Y&amp;linkId=4b82c9473891e7e300af6af12e499a3b&#34;&gt;&lt;/iframe&gt;
&lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00CWNMW1S&amp;linkId=7a974f6747d38d7ceae51b4c2a524820&#34;&gt;&lt;/iframe&gt;
&lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B000WILI42&amp;linkId=f0dfe3ea4927ccc35e11f2b0177346b3&#34;&gt;&lt;/iframe&gt;
&lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07CZHQCRQ&amp;linkId=bb4d81865fcbd6b22a0142a2375402fc&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h3 id=&#34;otras-opciones-según-preferencias&#34;&gt;Otras opciones según preferencias&lt;/h3&gt;
&lt;p&gt;Modelos de teclados y ratones hay muchos, hay paquetes que incluyen ambos o se venden por separado. Si no tienes las preferencias claras puedes empezar por consultar la &lt;a href=&#34;https://amzn.to/2xtwXwa&#34;&gt;clasificación de los teclados y ratones según el número de ventas&lt;/a&gt; que puede ser un indicador de popularidad y buena relación calidad/precio. Como decía hay con cable, inalámbricos, formato isla, gota, ergonómico, compactos, teclados completos, ligeros con panel táctil integrado, adaptados para Smart TV, más económicos, de precio significativo, &amp;hellip; aquí pongo algunos de los otros que he mirado.&lt;/p&gt;
&lt;p&gt;De entre todos estos y otros de la lista de más vendidos por una cosa u otra al final elegí el Videoseven CKW200 de este artículo, ya sea por los comentarios de los clientes de Amazon o por su diseño y estética.&lt;/p&gt;
&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
&lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B006LNTSP8&amp;linkId=d83fcfb5b254583b4923a15aee46b182&#34;&gt;&lt;/iframe&gt;
&lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01C4HCV58&amp;linkId=96032d684a9a1e19798dbac1b6dd7200&#34;&gt;&lt;/iframe&gt;
&lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00D2PX8C2&amp;linkId=462e180975e635483e5ef4deb5cfc240&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
&lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07CSMZ9NC&amp;linkId=fef22f9dceaf02ca8fe23b2285cd5b39&#34;&gt;&lt;/iframe&gt;
&lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B079ZZG71M&amp;linkId=3888acfe30769c40b25d1ad2a5d4c46c&#34;&gt;&lt;/iframe&gt;
&lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07FY9TNY2&amp;linkId=2128ae4eb526f24ba89b82cb7b4109fa&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</content><category term="hardware"/><category term="planeta-codigo"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/09/el-comando-fork-bomb-explicado/</id><title>El comando fork bomb explicado</title><updated>2018-09-16T11:00:00+02:00</updated><published>2018-09-16T11:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/09/el-comando-fork-bomb-explicado/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/gnu.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;GNU&#34; title=&#34;GNU&#34;/&gt;
&lt;/div&gt;
&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/linux.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Linux&#34; title=&#34;Linux&#34;/&gt;
&lt;/div&gt;
&lt;p&gt;El siguiente aparente, gracioso e inocente conjunto de caracteres que parecen una colección de varios extraños &lt;em&gt;emojis&lt;/em&gt; es un comando que si se ejecuta en una terminal de GNU/Linux crea gran cantidad de procesos de forma continua hasta que los recursos del sistema se agotan causando que sea inusable haya que reiniciarlo generando los problemas que de ello se deriven si el reinicio es forzado, este comando es el comando &lt;a href=&#34;https://en.wikipedia.org/wiki/Fork_bomb&#34;&gt;fork bomb&lt;/a&gt; para el intérprete de comandos &lt;a href=&#34;https://es.wikipedia.org/wiki/Bash&#34;&gt;bash&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;:(){ :|:&amp;amp; };:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Analizando detalladamente este conjunto de caracteres es un comando &lt;em&gt;bash&lt;/em&gt; que se compone de la definición de una función de nombre &lt;em&gt;:&lt;/em&gt;, los paréntesis &lt;em&gt;( )&lt;/em&gt; definen la función, que en su cuerpo entre las llaves &lt;em&gt;{ }&lt;/em&gt; recursivamente se llama a si misma dos veces con un &lt;em&gt;pipeline |&lt;/em&gt; que ejecuta el primer comando enviando su salida al segundo, con el caracter &lt;em&gt;&amp;amp;&lt;/em&gt; no se espera a que termine y los pone en segundo plano de modo no se puedan terminar con lo que seguirán consumiendo recursos. Cada uno de los procesos de la función se llama de nuevo a la función recursivamente y repitiendo el proceso. Como consecuencia el número de procesos del sistema crece de forma exponencial que en poco tiempo termina por agotar los recursos del sistema.&lt;/p&gt;
&lt;p&gt;A continuación de la función se encuentra el comando &lt;em&gt;:&lt;/em&gt; que realiza la primera llamada a la función que desencadena el &lt;em&gt;fork bomb&lt;/em&gt;. Esta llamada inicial está separada por el caracter &lt;em&gt;;&lt;/em&gt; que sirve para escribir varios comandos uno a continuación de otro en una misma línea. El primer comando es la definición de la función y el segundo hace la llamada a la función e inicia el &lt;em&gt;fork bomb&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Este &lt;em&gt;fork bomb&lt;/em&gt; crea procesos en el sistema de forma exponencial (1, 2, 4, 8, 16, 32, &amp;hellip;, 2^n) hasta que el sistema agota los recursos de procesador o memoria en un periodo de tiempo muy corto, menos de unos pocos segundos desde su inicio dada la capacidad de procesamiento de los sistemas actuales. Como consecuencia el sistema requerirá un reinicio.&lt;/p&gt;
&lt;p&gt;Dado el problema que causa este aparente comando u otro similar una buena recomendación a seguir es no ejecutar ningún comando obtenido de internet que no se sepa lo que hace y de igual modo ningún programa o &lt;em&gt;script&lt;/em&gt; de &lt;em&gt;shell&lt;/em&gt; no obtenido de una fuente de confianza. En las distribuciones &lt;a href=&#34;https://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;/&lt;a href=&#34;https://www.linux.com/&#34;&gt;Linux&lt;/a&gt; la fuentes confiables son los repositorios oficiales.&lt;/p&gt;
&lt;p&gt;Para GNU/Linux y los sistemas operativos en general uno de sus requisitos es que sean seguros e implementan medidas para que así sean incluso con el apoyo de los procesadores a nivel de hardware pero hacen lo que se les dice y no están a salvo de las estupideces por desconocimiento que pueda cometer el usuario.&lt;/p&gt;
&lt;div class=&#34;media media-video&#34; style=&#34;text-align: center;&#34;&gt;
&lt;iframe width=&#34;640&#34; height=&#34;360&#34; src=&#34;https://www.youtube.com/embed/Q9Mdy7H8Qmc&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;div class=&#34;reference&#34;&gt;
Referencia:&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Fork_bomb&#34;&gt;Fork Bomb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content><category term="gnu-linux"/><category term="planeta-codigo"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/</id><title>Servicio de configuración para microservicios con Spring Cloud Config</title><updated>2018-09-15T19:30:00+02:00</updated><published>2018-09-15T16:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/spring.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Spring&#34; title=&#34;Spring&#34;/&gt;
&lt;/div&gt;
&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;
&lt;p&gt;Al igual que un servicio de registro y descubrimiento es esencial para los microservicios un servicio de obtención de configuración de donde puedan obtener su configuración es también básico. Dado el gran número de microservicios de los que puede estar compuesta una aplicación, su carácter efímero, los varios entornos de ejecución (desarrollo, pruebas, producción, &amp;hellip;) mantener centralizada la configuración en un único sitio hace las cosas mucho más sencillas cuando hay que cambiar el valor de alguna propiedad, en vez de la alternativa aún externalizada del artefacto del microservicio en el sistema de archivos del entorno de ejecución.&lt;/p&gt;
&lt;p&gt;Dado que este servicio de configuración es esencial para que los microservicios puedan obtener su configuración sin la cual no podrían proporcionar su funcionalidad hay que configurarlo de tal manera que sea tolerante a fallos. Una de las medidas para hacerlo tolerante a fallos es iniciar varias instancias de servidores de configuración, estas instancias se autoregistran en el servicio de descubrimiento para que los microservicios puedan descubrirlos y obtener su configuración al iniciarse.&lt;/p&gt;
&lt;p&gt;Con el comando &lt;code&gt;./gradlew configserver:run &amp;ndash;args=&amp;ldquo;&amp;ndash;port=8090&amp;rdquo;&lt;/code&gt; se inicia una instancia de servicio de configuración en el puerto &lt;em&gt;8090&lt;/em&gt;, cambiando el número de puerto se puede iniciar otra instancia en el puerto especificado. Una vez iniciadas varias instancias en el &lt;em&gt;dashboard&lt;/em&gt; del servicio de descubrimiento se observa como se autoregistran y su estado.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/b7583293e05ad6f1fcf7bb959da3cad1.js?file=gradlew-run.sh&#34;&gt;&lt;/script&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/images/spring-eureka-2_hub1cbfdfec6fa7e0b16e220ff391ac48f_114116_2560x1440_fit_box_2.png&#34; title=&#34;Servicios registrados en el servicio de registro y descubrimiento&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/images/spring-eureka-2_hub1cbfdfec6fa7e0b16e220ff391ac48f_114116_300x200_fit_box_2.png&#34; width=&#34;244&#34; height=&#34;200&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;Servicios y su estado registrados en el servicio de registro y descubrimiento&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;Dado que los servicios de configuración no pueden confiar en obtener su configuración de una instancia de su servicio de configuración ha de establecerse en el propio microservicio los nombres de &lt;em&gt;host&lt;/em&gt; de las instancias de registro y descubrimiento en las que registrarse, en la propiedad &lt;em&gt;eureka.client.serviceUrl.defaultZone&lt;/em&gt;.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/b7583293e05ad6f1fcf7bb959da3cad1.js?file=bootstrap.yml&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/b7583293e05ad6f1fcf7bb959da3cad1.js?file=application.yml&#34;&gt;&lt;/script&gt;
&lt;p&gt;Los archivos de configuración para los microservicios en este ejemplo están en el directorio &lt;em&gt;misc/config&lt;/em&gt; donde siguiendo algunas convenciones para asignar el nombre a los archivos se pueden personalizar las configuraciones de los microservicios según el entorno y perfil con el que se active. En este caso se utiliza lo que &lt;a href=&#34;https://cloud.spring.io/spring-cloud-config/&#34;&gt;Spring Cloud Config&lt;/a&gt; denomina un &lt;em&gt;filesystem backend&lt;/em&gt;, sin embargo, hay otras disponibles como un repositorio de &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; el cual ofrece varias ventajas propias de un repositorio de código como historial, ramas de trabajo y hacer cambios con un &lt;em&gt;commit&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Un microservicio o aplicación de &lt;a href=&#34;https://spring.io/&#34;&gt;Spring&lt;/a&gt; que use un servidor de Spring Cloud Config una de las primeras acciones que realiza al iniciarse es obtener su configuración en función del nombre del microservicio y perfil con el que se inicie. Dado que la configuración se obtiene en el inicio en base a su nombre y perfil tanto el nombre del microservicio y su perfil de configuración se ha de configurar en el archivo &lt;em&gt;bootstrap.yml&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;El proceso de configuración de un microservicio está formado por dos pasos, en el primero el servicio se conecta al servicio de registro y descubrimiento obtiene los servicios registrados de configuración y en el segundo paso solicita a uno de ellos su configuración.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/b7583293e05ad6f1fcf7bb959da3cad1.js?file=bootstrap-service.yml&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/b7583293e05ad6f1fcf7bb959da3cad1.js?file=service.yml&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/b7583293e05ad6f1fcf7bb959da3cad1.js?file=client.yml&#34;&gt;&lt;/script&gt;
&lt;p&gt;El servicio de configuración es accesible mediante una interfaz REST. Para obtener la configuración del servicio &lt;em&gt;service&lt;/em&gt; y del servicio &lt;em&gt;client&lt;/em&gt; de este ejemplo las URLs para obtenerlas son las siguientes. Estos &lt;em&gt;endpoints&lt;/em&gt; devuelven en formato &lt;em&gt;json&lt;/em&gt; un documento con los valores de las propiedades principalmente están en el mapa &lt;em&gt;source&lt;/em&gt; entre otros datos que Spring al iniciar la aplicación con ellos configura la aplicación.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/b7583293e05ad6f1fcf7bb959da3cad1.js?file=curl.sh&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/b7583293e05ad6f1fcf7bb959da3cad1.js?file=service-config.json&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/b7583293e05ad6f1fcf7bb959da3cad1.js?file=client-config.json&#34;&gt;&lt;/script&gt;
&lt;p&gt;En otro artículo relacionado con la configuración de los microservicios comentaré &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/recargar-la-configuracion-sin-reiniciar-una-aplicacion-spring-boot-con-spring-cloud-config/&#34;&gt;como recargar la configuración de los microservicios sin necesidad de reiniciarlos&lt;/a&gt; y &lt;em&gt;como almacenar datos sensibles de forma cifrada&lt;/em&gt; para mayor seguridad.&lt;/p&gt;
&lt;p&gt;
El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew run:configserver --args=&amp;#34;port=8090&amp;#34;&lt;/code&gt;.
&lt;/p&gt;
&lt;div class=&#34;reference&#34;&gt;
Referencia:&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.0.1.RELEASE/single/spring-cloud-config.html#_git_backend&#34;&gt;Spring Cloud Config, Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.0.1.RELEASE/single/spring-cloud-config.html#vault-backend&#34;&gt;Spring Cloud Config, Vault&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.0.1.RELEASE/single/spring-cloud-config.html#_jdbc_backend&#34;&gt;Spring Cloud Config, JDBC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.spring.io/spring-boot/docs/2.0.4.RELEASE/reference/htmlsingle/#boot-features-external-config&#34;&gt;Spring Cloud Config, Externalized Configuration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/09/el-editor-de-archivos-e-ide-minimalista-visual-studio-code/</id><title>El editor de archivos e IDE minimalista Visual Studio Code</title><updated>2018-09-09T11:00:00+02:00</updated><published>2018-09-09T11:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/09/el-editor-de-archivos-e-ide-minimalista-visual-studio-code/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/visual-studio-code.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Visual Studio Code&#34; title=&#34;Visual Studio Code&#34;/&gt;
&lt;/div&gt;
&lt;p&gt;Para trabajar y desde que empecé a usar un generador estático para el blog primero con &lt;a href=&#34;http://octopress.org/&#34;&gt;Octopress&lt;/a&gt; y luego con &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; he necesitado un editor de archivos de texto y de código fuente. Uno de los más conocidos es &lt;a href=&#34;https://www.sublimetext.com/&#34;&gt;Sublime Text&lt;/a&gt; con numerosas funcionalidades y atajos de teclado para realizar muchas acciones únicamente pulsado unas pocas teclas y sin necesidad de ratón en gran medida. Sublime Text está muy bien pero no es gratuito por lo que después de un tiempo empecé a usar &lt;a href=&#34;https://atom.io/&#34;&gt;Atom&lt;/a&gt;, sin embargo, al estar este basado en &lt;a href=&#34;https://electronjs.org/&#34;&gt;Electron&lt;/a&gt; que en realidad es un navegador &lt;a href=&#34;https://www.google.es/chrome/browser/desktop/&#34;&gt;Chrome&lt;/a&gt; y &lt;a href=&#34;https://es.wikipedia.org/wiki/JavaScript&#34;&gt;JavaScript&lt;/a&gt; con &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node&lt;/a&gt; su rendimiento se nota pobre. Buscando más alternativas la gente mencionaba bastante a menudo &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt;, lo probé, es el que más me ha gustado de todos y el que uso ahora.&lt;/p&gt;
&lt;p&gt;Visual Studio Code es un editor de archivos de texto avanzado orintado a desarrolladores sin llegar a ser un IDE pero con algunas funcionalidades de estos. Visual Studio Code se nota mucho más rápido que Atom y soporta al igual que Sublime Text varias combinaciones de teclas para trabajar rápido con los archivos. Soporta numerosos formatos de archivos con resaltado de sintaxis entre ellos &lt;a href=&#34;https://es.wikipedia.org/wiki/Markdown&#34;&gt;Markdown&lt;/a&gt;, &lt;a href=&#34;http://www.yaml.org/&#34;&gt;Yaml&lt;/a&gt;, HTML, CSS, imágenes &lt;em&gt;png&lt;/em&gt; y fotos &lt;em&gt;jpg&lt;/em&gt; que son los formatos de archivo que utilizo para crear los artículos del blog. Permite visualizar imágenes y fotos sin necesidad de ir a la aplicación del sistema operativo para visualizarlas. Dada la popularidad que está alcanzando soporta un gran número de complementos o &lt;em&gt;plugins&lt;/em&gt; que entre otros añaden resaltado de sintaxis para otros formatos de archivos que por defecto no soporta, como &lt;a href=&#34;http://www.oracle.com/technetwork/java/index.html&#34;&gt;Java&lt;/a&gt;. En el caso del &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=redhat.java&#34;&gt;&lt;em&gt;plugin&lt;/em&gt; para Java&lt;/a&gt; también permite asistencia de código y detectar errores de compilación, aunque no llegue a las capacidades de un IDE como &lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;IntelliJ&lt;/a&gt;, &lt;a href=&#34;https://eclipse.org&#34;&gt;eclipse&lt;/a&gt; o &lt;a href=&#34;https://www.visualstudio.com/&#34;&gt;Visual Studio&lt;/a&gt; sirve para editar ocasionalmente archivos de código fuente Java sin necesidad de abrir el IDE y su proyecto. Hay complementos para &lt;a href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt;, &lt;a href=&#34;https://www.ruby-lang.org/es/&#34;&gt;Ruby&lt;/a&gt;, &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt;, &lt;a href=&#34;https://www.rust-lang.org/es-ES/&#34;&gt;Rust&lt;/a&gt; o &lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle&lt;/a&gt; entre otros muchos, y por supuesto JavaScript o &lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;TypeScript&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/el-editor-de-archivos-e-ide-minimalista-visual-studio-code/images/visual-studio-code-1_hu8172c8a741f24521f7cd7f3616353770_673782_2560x1440_fit_box_2.png&#34; title=&#34;Visual Studio Code&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/el-editor-de-archivos-e-ide-minimalista-visual-studio-code/images/visual-studio-code-1_hu8172c8a741f24521f7cd7f3616353770_673782_300x200_fit_box_2.png&#34; width=&#34;300&#34; height=&#34;183&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/el-editor-de-archivos-e-ide-minimalista-visual-studio-code/images/visual-studio-code-2_hu8172c8a741f24521f7cd7f3616353770_704519_2560x1440_fit_box_2.png&#34; title=&#34;Visual Studio Code&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/el-editor-de-archivos-e-ide-minimalista-visual-studio-code/images/visual-studio-code-2_hu8172c8a741f24521f7cd7f3616353770_704519_300x200_fit_box_2.png&#34; width=&#34;300&#34; height=&#34;183&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;Visual Studio Code&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;Incluye una &lt;a href=&#34;https://code.visualstudio.com/docs/editor/integrated-terminal&#34;&gt;terminal integrada&lt;/a&gt; para ejecutar comandos sin necesidad de salir del editor a la terminal del sistema. Soporta &lt;a href=&#34;https://code.visualstudio.com/docs/editor/emmet&#34;&gt;Emmet&lt;/a&gt; para crear código con &lt;em&gt;snippets&lt;/em&gt; en los tipos de archivos que los soporten entre ellos HTML y CSS. También incluye soporte para el sistema de &lt;a href=&#34;https://code.visualstudio.com/docs/editor/versioncontrol&#34;&gt;control de versiones Git&lt;/a&gt; y otros con &lt;em&gt;plugins&lt;/em&gt; que permiten ver las modificaciones realizadas en los archivos y los archivos modificados, hay gran cantidad de complementos.&lt;/p&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/el-editor-de-archivos-e-ide-minimalista-visual-studio-code/images/git_hu8172c8a741f24521f7cd7f3616353770_1363988_2560x1440_fit_box_2.png&#34; title=&#34;Git integrado&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/el-editor-de-archivos-e-ide-minimalista-visual-studio-code/images/git_hu8172c8a741f24521f7cd7f3616353770_1363988_300x200_fit_box_2.png&#34; width=&#34;300&#34; height=&#34;183&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;Git integrado&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;Con la combinación &lt;code&gt;Ctrl + P&lt;/code&gt; se abre una ventana emergente para abrir archivos por su nombre. Introduciendo &lt;code&gt;?&lt;/code&gt; se obtienen las posibles acciones que se pueden realizar. Otra muy utilizada es &lt;code&gt;Ctrl + G&lt;/code&gt; para ir a una línea específica del archivo, también se puede hacer desde la ventana emergente e introduciendo el carácter &lt;code&gt;:&lt;/code&gt;. Con &lt;code&gt;Ctrl + Shift + O&lt;/code&gt; se va a los símbolos detectados por editor según el tipo de archivo. Posee una buena &lt;a href=&#34;https://code.visualstudio.com/docs&#34;&gt;documentación&lt;/a&gt; con la que ir aprendiendo a medida que se usa el mayor provecho posible.&lt;/p&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/el-editor-de-archivos-e-ide-minimalista-visual-studio-code/images/ventana-emergente_hu8172c8a741f24521f7cd7f3616353770_1615659_2560x1440_fit_box_2.png&#34; title=&#34;Ventana emergente de acciones rápidas&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/el-editor-de-archivos-e-ide-minimalista-visual-studio-code/images/ventana-emergente_hu8172c8a741f24521f7cd7f3616353770_1615659_300x200_fit_box_2.png&#34; width=&#34;300&#34; height=&#34;183&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;Ventana emergente de acciones rápidas&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;En definitiva tiene una buena cantidad de opciones que como desarrolladores son muy útiles. Otras funcionalidades que tiene son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Minimapa del archivo abierto.&lt;/li&gt;
&lt;li&gt;Ajuste de linea.&lt;/li&gt;
&lt;li&gt;Buscar y reemplazar usando expresiones regulares.&lt;/li&gt;
&lt;li&gt;Espacios de trabajo con mútiples directorios raíz.&lt;/li&gt;
&lt;li&gt;Ampliar, reducir el tamaño del texto y ajuste automático de linea.&lt;/li&gt;
&lt;li&gt;Diseño de archivos abiertos en columnas, filas y rejilla.&lt;/li&gt;
&lt;li&gt;Soporte de secuancía final de línea Windows y Unix, con soporte para UTF-8.&lt;/li&gt;
&lt;li&gt;Depurador de código.&lt;/li&gt;
&lt;li&gt;Tiene un ritmo de actualización muy alto y en cada nueva versión se añaden numerosas funcionalidades o se mejoran las existentes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Por otro lado ocupa menos que los 260 MiB de Atom contra los 180 MiB de Visual Studio Code y está disponible en las plataformas más utilizadas &lt;a href=&#34;https://www.microsoft.com/es-es/windows/&#34;&gt;Windows&lt;/a&gt;, &lt;a href=&#34;https://store.apple.com/es/mac&#34;&gt;Mac&lt;/a&gt; e incluso &lt;a href=&#34;https://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;/&lt;a href=&#34;https://www.linux.com/&#34;&gt;Linux&lt;/a&gt; aún siendo un producto de &lt;a href=&#34;https://www.microsoft.com/&#34;&gt;Microsoft&lt;/a&gt;. Microsoft proporcionando software para la plataforma del pingüino, quien lo diría hace unas décadas.&lt;/p&gt;
&lt;p&gt;En los sistemas Unix habrá gente que prefiera &lt;a href=&#34;https://www.vim.org/&#34;&gt;Vim&lt;/a&gt; por sus enormes posibilidades, bajo consumo de memoria y exprimir al máximo cada megaherzio del procesador pero este requiere un tiempo de aprendizaje elevado inicial comparado con cualquiera de los editores anteriores.&lt;/p&gt;
&lt;div class=&#34;reference&#34;&gt;
Referencia:&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/setup/setup-overview&#34;&gt;Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/editor/codebasics&#34;&gt;Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/Docs/editor/tasks&#34;&gt;Tasks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/editor/editingevolved&#34;&gt;Edition evolved&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/editor/integrated-terminal&#34;&gt;Integrated terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/editor/emmet&#34;&gt;Emmet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/editor/extension-gallery&#34;&gt;Extension gallery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/java/java-tutorial&#34;&gt;Java tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content><category term="planeta-codigo"/><category term="programacion"/><category term="software"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/</id><title>Registro y descubrimiento de servicios con Spring Cloud Netflix</title><updated>2018-09-07T19:00:00+02:00</updated><published>2018-09-07T19:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/spring.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Spring&#34; title=&#34;Spring&#34;/&gt;
&lt;/div&gt;
&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;
&lt;p&gt;Los microservicios en una aplicación con una arquitectura de microservicios son efímeros, se crean, se escalan para atender picos de mayor demanda, pueden desaparecer por problemas de la red de comunicaciones que no es fiable y volverse a crear en una ubicación diferente. Por esta naturaleza efímera es necesario un servicio con el cual los clientes de los microservicios puedan encontrarlos y que los microservicios utilizan para registrarse cuando se inician.&lt;/p&gt;
&lt;p&gt;Este servicio de registro y descubrimiento es esencial y crítico en una aplicación orientada a microservicios ya que sin él los clientes no pueden encontrar los servicios que necesitan. Dado que es un servicio esencial es necesario que esté siempre disponible y para ello es recomendable crear un cluster de servicios de registro y descubrimiento para que en caso de que una instancia de este servicio falle estén disponibles otras instancias para los clientes.&lt;/p&gt;
&lt;p&gt;Una &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/01/registro-y-descubrimiento-de-servicios-con-spring-cloud-y-consul/&#34;&gt;implementación de registro y descubrimiento es Consul&lt;/a&gt;, &lt;a href=&#34;https://www.consul.io/&#34;&gt;Consul&lt;/a&gt; es un servicio externo creado por &lt;a href=&#34;https://www.hashicorp.com/&#34;&gt;Hashicorp&lt;/a&gt;. &lt;a href=&#34;https://projects.spring.io/spring-cloud/&#34;&gt;Spring Cloud&lt;/a&gt; entre sus proyectos, &lt;a href=&#34;https://cloud.spring.io/spring-cloud-netflix/&#34;&gt;Spring Cloud Netflix&lt;/a&gt;, proporciona una implementación con &lt;a href=&#34;https://github.com/Netflix/eureka&#34;&gt;Eureka&lt;/a&gt; de servicio de registro y descubrimiento que se pueden embeber en una aplicación de &lt;a href=&#34;https://projects.spring.io/spring-boot/&#34;&gt;Spring Boot&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para crear un servidor Eureka con Spring y Spring Boot hay que crear una aplicación con las dependencias adecuadas y la anotación &lt;em&gt;@EnableEurekaServer&lt;/em&gt; para habilitar el inicio del servidor de registro y descubrimiento. Además, establecer las propiedades de configuración adecuadas para que el cluster de servidores Eureka se forme. Este microservicio es el primero que ha de iniciarse en una aplicación orientada a microservicios.&lt;/p&gt;
&lt;p&gt;Utilizando &lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle&lt;/a&gt; las dependencias y la anotación &lt;em&gt;@EnableEurekaServer&lt;/em&gt; a añadir a la clase principal de la aplicación son las siguientes.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/12a3a40bdec8c3c36a0ec0eddfe81d58.js?file=build.gradle&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/12a3a40bdec8c3c36a0ec0eddfe81d58.js?file=Main.java&#34;&gt;&lt;/script&gt;
&lt;p&gt;La propiedad de configuración principal para formar el cluster es &lt;em&gt;eureka.client.serviceURL.defaultZone&lt;/em&gt; donde se especifica una lista &lt;em&gt;hostnames&lt;/em&gt; donde están los servidores de registro y descubrimiento. Para dar a cada servidor en local un nombre de dominio distinto he usado el servicio de DNS &lt;a href=&#34;http://xip.io/&#34;&gt;xip.io&lt;/a&gt; que resuleve el nombre de dominio a la dirección IP indicada en el propio nombre de dominio, así &lt;em&gt;ds1.127.0.0.1.xip.io&lt;/em&gt; se resuelve a &lt;em&gt;127.0.0.1&lt;/em&gt; que es la dirección para la propia máquina local al igual que &lt;em&gt;ds2.127.0.0.1.xip.io&lt;/em&gt; y &lt;em&gt;ds3.127.0.0.1.xip.io&lt;/em&gt;. El servicio de xip.io evita tener que crear en el archivo de &lt;em&gt;hosts&lt;/em&gt; local una correspondencia entre nombre de &lt;em&gt;hostname&lt;/em&gt; y la dirección IP de &lt;em&gt;loopback&lt;/em&gt; de la propia máquina local.&lt;/p&gt;
&lt;p&gt;En el archivo de configuración hay tres perfiles distintos que varían algunas propiedades según sea el perfil que se active al iniciar la instancia del servicio. En el perfil &lt;em&gt;ds1&lt;/em&gt; el puerto donde se inicia el servicio es &lt;em&gt;8761&lt;/em&gt;, con el perfil &lt;em&gt;ds2&lt;/em&gt; el servicio se inicia en el puerto &lt;em&gt;8762&lt;/em&gt; y con &lt;em&gt;ds3&lt;/em&gt; en el &lt;em&gt;8763&lt;/em&gt;, además se cambia el &lt;em&gt;hostname&lt;/em&gt; para que la instancia sepa cual es.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/12a3a40bdec8c3c36a0ec0eddfe81d58.js?file=application.yml&#34;&gt;&lt;/script&gt;
&lt;p&gt;Los comandos para arrancar tres instancias de servidor de registro y descubrimiento utilizando varios perfiles de configuración de Spring son los siguientes.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/12a3a40bdec8c3c36a0ec0eddfe81d58.js?file=run-discoveryserver.sh&#34;&gt;&lt;/script&gt;
&lt;p&gt;Estando disponible el servicio de registro y descubrimiento ya se puede iniciar el servicio de configuración. Con estos dos servicios de infraestructura iniciados los que sería un servicio de la aplicación ya puede iniciarse que consiste en este caso en obtener una referencia de una instancia del servicio de configuración registada en el servicio de registro y descubrimiento, con esta referencia obtiene su configuración y se inicia.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/12a3a40bdec8c3c36a0ec0eddfe81d58.js?file=run-configserver.sh&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/12a3a40bdec8c3c36a0ec0eddfe81d58.js?file=run-service.sh&#34;&gt;&lt;/script&gt;
&lt;p&gt;Una vez iniciados los servidores de descubrimiento en la página &lt;em&gt;dashboard&lt;/em&gt; de cualquiera de ellos cambiando el puerto de la dirección &lt;em&gt;http://ds1.127.0.0.1.xip.io:8761/&lt;/em&gt; se observan varias propiedades como la lista de servidores del cluster, las réplicas registradas y disponibles y los servicios registrados con su ubicación y puerto. En este caso hay tres instancias del servicio de registro y descubrimiento, una de servidor de configuración y dos instancias de un servicio.&lt;/p&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/images/spring-eureka-1_hucbae4859ed8e1c01a78ce54eb118f2fc_101099_2560x1440_fit_box_2.png&#34; title=&#34;Cluster del servicio de registro y descubrimiento&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/images/spring-eureka-1_hucbae4859ed8e1c01a78ce54eb118f2fc_101099_300x200_fit_box_2.png&#34; width=&#34;258&#34; height=&#34;200&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/images/spring-eureka-2_hub1cbfdfec6fa7e0b16e220ff391ac48f_114116_2560x1440_fit_box_2.png&#34; title=&#34;Servicios registrados en el servicio de registro y descubrimiento&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/images/spring-eureka-2_hub1cbfdfec6fa7e0b16e220ff391ac48f_114116_300x200_fit_box_2.png&#34; width=&#34;244&#34; height=&#34;200&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;Servicios y su estado registrados en el servicio de registro y descubrimiento&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;
El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew discoveryserver:run --args=&amp;#34;--spring.profiles.active=ds1&amp;#34;&lt;/code&gt;.
&lt;/p&gt;</content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/08/aplicaciones-basadas-en-microservicios/</id><title>Aplicaciones basadas en microservicios</title><updated>2018-09-02T12:00:00+02:00</updated><published>2018-08-31T18:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/08/aplicaciones-basadas-en-microservicios/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/spring.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Spring&#34; title=&#34;Spring&#34;/&gt;
&lt;/div&gt;
&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;
&lt;p&gt;La arquitectura de las aplicaciones está cambiando en lo que era lo habitual hace no tanto. Con el desarrollo de las redes de comunicación entre computadoras tanto en una red local con ethernet como en internet con el protocolo TCP/IP se desarrollaron las primeras aplicaciones cliente/servidor como es un servidor web y un navegador o una base de datos y una aplicación.&lt;/p&gt;
&lt;p&gt;A las páginas HTML de los servidores web, estáticas hasta entonces, se les añadió lógica de servidor para procesar datos y generar el contenido dinámicamente, se crearon las aplicaciones web ejecutadas en el servidor en un principio en lo que ahora denominamos monolitos en forma de &lt;a href=&#34;https://es.wikipedia.org/wiki/C%C3%B3digo_espagueti&#34;&gt;código espagueti&lt;/a&gt; o más estructurado con los denominados &lt;em&gt;frameworks&lt;/em&gt; del lenguaje de programación de turno empleando el &lt;a href=&#34;https://es.wikipedia.org/wiki/Programaci%C3%B3n_por_capas&#34;&gt;modelo de tres capas&lt;/a&gt; formadas por la presentación, lógica y base de datos.&lt;/p&gt;
&lt;p&gt;Más recientemente con las nuevas posibilidades de la virtualización, los contenedores, la computación en nube con la flexibilidad que aporta de reservar recursos de computación bajo demanda en minutos y para evitar varios problemas que presentan los monolitos se evoluciona hacia microservicios. Esto no quiere decir que los monolitos con este nombre con cierto matiz peyorativo que ha adquirido no sigan siendo perfectamente válidos en algunos contextos en los que ahora se usan sin embargo en el contexto de la computación en la nube y servicio para un gran número de peticiones, usuarios o aplicación funcionalmente grande los microservicios son una mejor adaptación.&lt;/p&gt;
&lt;p&gt;Los problemas que presentan las aplicaciones monolíticas donde toda la lógica está en una aplicación en un servidor son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Son grandes y difíciles de modificar.&lt;/li&gt;
&lt;li&gt;Realizan múltiples funcionalidades.&lt;/li&gt;
&lt;li&gt;Hay un único punto de fallo, un error puede afectar al sistema entero.&lt;/li&gt;
&lt;li&gt;Requieren escalar el monolito entero lo que es poco eficiente.&lt;/li&gt;
&lt;li&gt;Hacen muy difícil emplear la tecnología más adecuada para cada problema de la aplicación o adoptar nuevas.&lt;/li&gt;
&lt;li&gt;Los despliegues de nuevas versiones pueden ser problemáticos por el tamaño de la aplicación.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/08/aplicaciones-basadas-en-microservicios/images/monolith_hub198199ec8a492668d0853105928e4f9_159372_2560x1440_fit_box_2.png&#34; title=&#34;Arquitectura basada en 3 capas&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/08/aplicaciones-basadas-en-microservicios/images/monolith_hub198199ec8a492668d0853105928e4f9_159372_600x450_fit_box_2.png&#34; width=&#34;600&#34; height=&#34;219&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;Arquitectura basada en 3 capas&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;Los microservicios surgen como alternativa tratando de resolver los problemas de las aplicaciones monolíticas aunque planteando nuevos retos pero también varios beneficios:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Las aplicaciones basadas en microservicios se componen de múltiples aplicaciones cada una con un contexto delimitado pequeño que se comunican mediante la red.&lt;/li&gt;
&lt;li&gt;Son más pequeños con una base de código menor y por tanto más fáciles de modificar o en su caso reemplazar siempre se implemente la misma interfaz o contrato.&lt;/li&gt;
&lt;li&gt;No son tan dependientes de la tecnología pudiendo elegir la más adecuada en cada uno de ellos.&lt;/li&gt;
&lt;li&gt;Al ser más pequeños se pueden escalar más fácilmente horizontalmente si no mantienen estado, basta con escalar el servicio que lo requiera.&lt;/li&gt;
&lt;li&gt;Arrancan más rápido y son más fáciles de desplegar.&lt;/li&gt;
&lt;li&gt;Cada microservicio puede estar desarrollado por un equipo diferente centrado en ese servicio.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pueden ser una aplicación que ofrezca una API en forma de REST, &lt;a href=&#34;http://graphql.org/&#34;&gt;GraphQL&lt;/a&gt; o RPC para una determinada funcionalidad o una aplicación que consuma otros microservicios y proporcione la interfaz para un navegador web.&lt;/p&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/08/aplicaciones-basadas-en-microservicios/images/microservices_huec52a617b10c65603c9de79792885935_24996_2560x1440_fit_box_2.png&#34; title=&#34;Arquitectura basada en microservicios&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/08/aplicaciones-basadas-en-microservicios/images/microservices_huec52a617b10c65603c9de79792885935_24996_600x450_fit_box_2.png&#34; width=&#34;600&#34; height=&#34;290&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;Arquitectura basada en microservicios&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;Algunos nuevos retos de los microservicios son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Añaden complejidad. Son más numerosos y requieren más procesos para su ejecución. Esto obliga a automatizar su gestión para que sea manejable con el menor número de tareas manuales posibles. Forman un sistema distribuido.&lt;/li&gt;
&lt;li&gt;Difícil integrar cambios si afectan a varios servicios.&lt;/li&gt;
&lt;li&gt;Cada microservicio al ser responsable de sus propios datos y formar un sistema de información distribuido plantea problemas en como compartirlos y dificultando la transaccionalidad y consistencia del sistema, se suele optar por una eventual consistencia. Al estar los datos distribuidos se plantea la dificultad de elaborar informes, una posibilidad es consolidar los datos en un única base de datos para la tarea mediante exportaciones de las bases de datos origen.&lt;/li&gt;
&lt;li&gt;Como centralizar los registros de trazas.&lt;/li&gt;
&lt;li&gt;Como centralizar los accesos.&lt;/li&gt;
&lt;li&gt;Obtener métricas y monitorización, a nivel de microservicio (cpu, memoria, espacio disco, red, &amp;hellip;) y de negocio (eventos, operaciones, transacciones, &amp;hellip;).&lt;/li&gt;
&lt;li&gt;Como hacer que los microservicios se descubran entre ellos.&lt;/li&gt;
&lt;li&gt;Si un microservicios falla los que dependan de él fallarán, al comunicarse por un medio no totalmente fiable como la red se pueden producir errores. El sistema se ha de hacer tolerante a fallos.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para modelar los microservicios y definir que funcionalidad contiene cada uno de los que forman el sistema se opta por utilizar &lt;em&gt;bounded contex&lt;/em&gt; y &lt;em&gt;domain driven design&lt;/em&gt;. Cada microservicio debe ser altamente cohesivo donde toda su funcionalidad esté relacionada y realizar una o muy pocas tareas siendo propietario de los datos de su contexto delimitado.&lt;/p&gt;
&lt;p&gt;En el ámbito Java el proyecto &lt;a href=&#34;https://spring.io/&#34;&gt;Spring&lt;/a&gt; se compone de varios adaptados a la nueva realidad de los microservicios y &lt;a href=&#34;http://www.oracle.com/technetwork/java/javaee/overview/index.html&#34;&gt;Java EE&lt;/a&gt; a partir de la versión 8 ahora denominada &lt;a href=&#34;https://jakarta.ee/&#34;&gt;Jakarta EE&lt;/a&gt; y &lt;a href=&#34;https://microprofile.io/&#34;&gt;Microprofile&lt;/a&gt; proporcionan funcionalidades más adaptadas a las necesidades de las arquitecturas basadas en microservicios.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://projects.spring.io/spring-boot/&#34;&gt;Spring Boot&lt;/a&gt; como una forma de embeber en una aplicación Java con un servidor web de forma que la aplicación sea autocontenida y no requiera un servidor web preinstalado.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloud.spring.io/spring-cloud-config/&#34;&gt;Spring Cloud Config&lt;/a&gt; para gestionar la configuración.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://projects.spring.io/spring-session/&#34;&gt;Spring Session&lt;/a&gt; para hacer que los microservicios web no mantengan estado y sean escalables.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#production-ready&#34;&gt;Spring Boot Actautor&lt;/a&gt; para monitorización y métricas.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Netflix/eureka&#34;&gt;Eureka&lt;/a&gt; para registro y descubrimiento de servicios.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Netflix/Hystrix&#34;&gt;Hystrix&lt;/a&gt; con una implementación del patrón &lt;em&gt;circuit breaker&lt;/em&gt; para proporcionar resilencia.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;De varios de estos proyectos ya he escrito varios artículos pero escribiré algunos más para completar varias áreas que aún no he comentado. Algunos de ellos serán:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Como hacer el &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/&#34;&gt;descubrimiento de servicios con Spring Cloud utilizando el servidor Eureka&lt;/a&gt; mostrando incluso como crear un &lt;em&gt;cluster&lt;/em&gt; de servicios de descubrimiento para mayor disponibilidad y tolerancia a fallos, esto útil al mismo tiempo que de gran importancia ya que este servicio es crítico para el correcto funcionamiento de los microservicios.&lt;/li&gt;
&lt;li&gt;Como crear un &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/&#34;&gt;servicio de configuración del cual los microservicios obtengan su configuración&lt;/a&gt; por ejemplo según el entorno o para mantenerla centralizada, este servicio también es crítico y requiere de varias instancias de este servicio.&lt;/li&gt;
&lt;li&gt;Como &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/09/recargar-la-configuracion-sin-reiniciar-una-aplicacion-spring-boot-con-spring-cloud-config/&#34;&gt;cambiar la configuración de los microservicios sin necesidad de reiniciarlos&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Como mantener cifrada partes sensibles de la configuración como son las contraseñas, &lt;em&gt;bearers&lt;/em&gt; de autenticación, URLs de conexión u otra información especialmente sensible para la seguridad.&lt;/li&gt;
&lt;li&gt;Un cliente que realiza balanceo de carga entre múltiples instancias de los servicios utilizando Ribbon.&lt;/li&gt;
&lt;li&gt;Un cliente de microservicio que implementa el patrón &lt;em&gt;circuit breaker&lt;/em&gt; con la librería Hystrix y &lt;em&gt;timeouts&lt;/em&gt; para ser tolerante a fallos al llamar a otros microservicios.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Según vaya escribiendo y publicando los artículos aparecerán en la lista de la serie de artículos. El ejemplo en el que me basaré para estos lo añado a continuación.&lt;/p&gt;
&lt;p&gt;
El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;.
&lt;/p&gt;
&lt;div class=&#34;reference&#34;&gt;
Referencia:&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://articles.microservices.com/monolithic-vs-microservices-architecture-5c4848858f59&#34;&gt;Monolithic vs. Microservices Architecture&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content><category term="planeta-codigo"/><category term="programacion"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/08/los-fragmentos-en-graphql/</id><title>Los fragmentos en GraphQL</title><updated>2018-08-25T19:00:00+02:00</updated><published>2018-08-25T19:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/08/los-fragmentos-en-graphql/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/graphql.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;GraphQL&#34; title=&#34;GraphQL&#34;/&gt;
&lt;/div&gt;
&lt;p&gt;Los fragmentos en el contexto de &lt;a href=&#34;http://graphql.org/&#34;&gt;GraphQL&lt;/a&gt; pueden ser de dos tipos, definidos previamente o definidos en linea. Los primeros permiten simplificar las consultas definiendo en un bloque una colección de datos a recuperar si tener que indicarlos explícitamente individualmente, lo que resulta útil para no repetir el mimo grupo de datos si se utiliza en varias consultas diferentes. Los fragmentos en línea permiten recuperar unos datos u otros en función del tipo de la instancia de la cual se quieren recuperar.&lt;/p&gt;
&lt;p&gt;Teniendo dos consultas que recuperan los datos de una colección de libros sin los fragmentos habría que definir los mismos datos a recuperar dos veces en ambas consultas. En estas consultas de ejemplo se recupera una lista de libros y un libro determinado. Si en ambas se recuperan los datos &lt;em&gt;id&lt;/em&gt;, &lt;em&gt;title&lt;/em&gt; y &lt;em&gt;date&lt;/em&gt; hay que indicar los campos a recuperar dos veces.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/fe3ba84b227100bb23b87fbd9af76a95.js?file=query-1.graphql&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/fe3ba84b227100bb23b87fbd9af76a95.js?file=query-1.json&#34;&gt;&lt;/script&gt;
&lt;p&gt;Con un fragmento se definen esos campos comunes a recuperar en las consultas una sola vez. Si posteriormente cambian los datos a recuperar solo es necesario cambiarlo en un único punto. Los fragmentos definidos son una forma de simplificar las consultas y evitar tener que cambiar varias consultas si el grupo de datos cambia en todas ellas. Los datos obtenidos son los mismos que en el caso sin utilizar el fragmento.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/fe3ba84b227100bb23b87fbd9af76a95.js?file=query-1-fragment.graphql&#34;&gt;&lt;/script&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/08/los-fragmentos-en-graphql/images/query-1_huf7f7d97dfa0480aa0b5d479924a9ddad_449281_2560x1440_fit_box_2.png&#34; title=&#34;Consultas sin utilizar un fragmento&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/08/los-fragmentos-en-graphql/images/query-1_huf7f7d97dfa0480aa0b5d479924a9ddad_449281_300x200_fit_box_2.png&#34; width=&#34;255&#34; height=&#34;200&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/08/los-fragmentos-en-graphql/images/query-1-fragment_huf7f7d97dfa0480aa0b5d479924a9ddad_461346_2560x1440_fit_box_2.png&#34; title=&#34;Consultas con un fragmento&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/08/los-fragmentos-en-graphql/images/query-1-fragment_huf7f7d97dfa0480aa0b5d479924a9ddad_461346_300x200_fit_box_2.png&#34; width=&#34;255&#34; height=&#34;200&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;Consultas sin y con un fragmento&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;Los fragmentos en línea o &lt;em&gt;inline&lt;/em&gt; permiten por otra parte una funcionalidad adicional y es recuperar diferentes datos según el tipo de la entidad. En el ejemplo he añadido una nueva entidad &lt;em&gt;Magazine&lt;/em&gt; además de la ya existente &lt;em&gt;Book&lt;/em&gt;, en el código Java ambas heredan de &lt;em&gt;Publication&lt;/em&gt;. Las entidades &lt;em&gt;Book&lt;/em&gt; y &lt;em&gt;Magazine&lt;/em&gt; no comparten las mismas propiedades dado que son entidades diferentes por lo que en la consulta es necesario tener un mecanismo con el cual poder recuperar los datos en función del tipo.&lt;/p&gt;
&lt;p&gt;Estas son las definiciones de las entidades resumidas y la consulta &lt;em&gt;publications&lt;/em&gt; que devuelve las publicaciones que incluye libros y revistas. Con la definición de una &lt;em&gt;union&lt;/em&gt; se establece que una &lt;em&gt;Publication&lt;/em&gt; puede ser un &lt;em&gt;Book&lt;/em&gt; o &lt;em&gt;Magazine&lt;/em&gt;.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/fe3ba84b227100bb23b87fbd9af76a95.js?file=library.graphqls&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/fe3ba84b227100bb23b87fbd9af76a95.js?file=fragment-inline.graphql&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/fe3ba84b227100bb23b87fbd9af76a95.js?file=fragment-inline.json&#34;&gt;&lt;/script&gt;
&lt;p&gt;Para las publicaciones del tipo &lt;em&gt;Book&lt;/em&gt; en este ejemplo se recuperan los campos &lt;em&gt;id&lt;/em&gt;, &lt;em&gt;title&lt;/em&gt; y &lt;em&gt;date&lt;/em&gt;. Para las publicaciones de tipo &lt;em&gt;Magazine&lt;/em&gt; se recuperan los campos &lt;em&gt;id&lt;/em&gt;, &lt;em&gt;name&lt;/em&gt; y &lt;em&gt;pages&lt;/em&gt;. Las publicaciones &lt;em&gt;Muy interesante&lt;/em&gt; y &lt;em&gt;PC Actual&lt;/em&gt; son dos &lt;em&gt;Magazine&lt;/em&gt; y el resto de publicaciones son del tipo &lt;em&gt;Book&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/08/los-fragmentos-en-graphql/images/fragment-inline_hu65f3c18cd22adde4c0d76d2c15b7c917_498202_2560x1440_fit_box_2.png&#34; title=&#34;Consulta con fragmentos en linea&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/08/los-fragmentos-en-graphql/images/fragment-inline_hu65f3c18cd22adde4c0d76d2c15b7c917_498202_300x200_fit_box_2.png&#34; width=&#34;240&#34; height=&#34;200&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;Consulta con fragmentos en linea&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;Si es necesario hay que añadir la clases Java que representan a los tipos de GraphQL a la lista de clases del diccionario en la definición del esquema.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/fe3ba84b227100bb23b87fbd9af76a95.js?file=Main.java&#34;&gt;&lt;/script&gt;
&lt;p&gt;Para cada entidad hay una clase Java que la representa y un repositorio que contiene la consulta para obtener las publicaciones que no hace más que añadir en una lista el conjunto de libros y revistas en la librería.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/fe3ba84b227100bb23b87fbd9af76a95.js?file=Book.java&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/fe3ba84b227100bb23b87fbd9af76a95.js?file=Magazine.java&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/fe3ba84b227100bb23b87fbd9af76a95.js?file=Publication.java&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/fe3ba84b227100bb23b87fbd9af76a95.js?file=LibraryRepository.java&#34;&gt;&lt;/script&gt;
&lt;p&gt;
El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/GraphQL&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew run&lt;/code&gt;. Requiere Java 9&amp;#43; o Docker.
&lt;/p&gt;
&lt;div class=&#34;reference&#34;&gt;
Referencia:&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://graphql.org/learn/queries/#fragments&#34;&gt;Fragments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://graphql.org/learn/queries/#inline-fragments&#34;&gt;Inline Fragments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.howtographql.com/advanced/2-more-graphql-concepts/&#34;&gt;More GraphQL Concepts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/08/usando-directivas-en-graphql/</id><title>Usando directivas en GraphQL</title><updated>2018-08-24T08:00:00+02:00</updated><published>2018-08-24T08:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/08/usando-directivas-en-graphql/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/graphql.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;GraphQL&#34; title=&#34;GraphQL&#34;/&gt;
&lt;/div&gt;
&lt;p&gt;En &lt;a href=&#34;http://graphql.org/&#34;&gt;GraphQL&lt;/a&gt; construyendo la consulta adecuada se recuperan exclusivamente los datos solicitados.&lt;/p&gt;
&lt;p&gt;Por ejemplo, si de un libro solo se requieren las propiedades el &lt;em&gt;id&lt;/em&gt;, &lt;em&gt;title&lt;/em&gt; y &lt;em&gt;date&lt;/em&gt; de entre todas las que tienen la consulta sería en este caso la siguiente para una consulta que devuelve los datos de un conjunto de libros.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/5a60d7e3d64c62e04fb850e824469257.js?file=query-1.graphql&#34;&gt;&lt;/script&gt;
&lt;p&gt;Si se desea recuperar solo el &lt;em&gt;id&lt;/em&gt; y &lt;em&gt;title&lt;/em&gt; sin el &lt;em&gt;date&lt;/em&gt; la consulta debe ser diferente.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/5a60d7e3d64c62e04fb850e824469257.js?file=query-2.graphql&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/5a60d7e3d64c62e04fb850e824469257.js?file=library.graphqls&#34;&gt;&lt;/script&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/08/usando-directivas-en-graphql/images/image-1_hu3c329f116d7853227603ad333a0604de_396651_2560x1440_fit_box_2.png&#34; title=&#34;Consulta id, title y date&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/08/usando-directivas-en-graphql/images/image-1_hu3c329f116d7853227603ad333a0604de_396651_300x200_fit_box_2.png&#34; width=&#34;276&#34; height=&#34;200&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/08/usando-directivas-en-graphql/images/image-2_hu3c329f116d7853227603ad333a0604de_358582_2560x1440_fit_box_2.png&#34; title=&#34;Consulta id y title&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/08/usando-directivas-en-graphql/images/image-2_hu3c329f116d7853227603ad333a0604de_358582_300x200_fit_box_2.png&#34; width=&#34;276&#34; height=&#34;200&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;Consultas diferentes que devuelven diferentes datos&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;Esto obliga en principio a tener dos consultas diferentes según los datos recuperar. En principio, ya que las &lt;a href=&#34;https://graphql.org/learn/queries/#directives&#34;&gt;directivas &lt;em&gt;skip&lt;/em&gt; e &lt;em&gt;include&lt;/em&gt;&lt;/a&gt; definidas en la especificación de GraphQL permiten tener la misma consulta y parametrizar si un determinado dato ha de incluirse o no en el resultado.&lt;/p&gt;
&lt;p&gt;Las directivas se definen en el lenguaje de consulta de GraphQL con el caracter &lt;em&gt;@&lt;/em&gt; y pueden recibir parámetros. La directiva &lt;em&gt;skip&lt;/em&gt; permite omitir un dato según el valor de un booleano, si es &lt;em&gt;true&lt;/em&gt; se omite y si es &lt;em&gt;false&lt;/em&gt; se incluye, el comportamiento de &lt;em&gt;include&lt;/em&gt; es el mismo pero con el valor contrario del booleano, si es &lt;em&gt;true&lt;/em&gt; se incluye y si es &lt;em&gt;false&lt;/em&gt; se omite.&lt;/p&gt;
&lt;p&gt;Esta sería la consulta parametrizada para obtener los datos de los libros omitiendo o incluyendo su fecha en función de una variable utilizando la directiva &lt;em&gt;include&lt;/em&gt;. Cuando el valor de la variable es &lt;em&gt;true&lt;/em&gt; se incluye el dato fecha, cuando el valor de la variable es &lt;em&gt;false&lt;/em&gt; no se incluye.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/5a60d7e3d64c62e04fb850e824469257.js?file=query-3.graphql&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/5a60d7e3d64c62e04fb850e824469257.js?file=variables-1.graphql&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/5a60d7e3d64c62e04fb850e824469257.js?file=variables-2.graphql&#34;&gt;&lt;/script&gt;
&lt;p&gt;Utilizando &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/08/el-editor-explorador-e-ide-graphiql-para-una-api-con-graphql/&#34;&gt;el editor GraphiQL&lt;/a&gt; para construir y ejecutar consultas de una API de GraphQL se obtienen los resultados.&lt;/p&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/08/usando-directivas-en-graphql/images/image-3_hu3c329f116d7853227603ad333a0604de_421199_2560x1440_fit_box_2.png&#34; title=&#34;Consulta con directiva include&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/08/usando-directivas-en-graphql/images/image-3_hu3c329f116d7853227603ad333a0604de_421199_300x200_fit_box_2.png&#34; width=&#34;276&#34; height=&#34;200&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/08/usando-directivas-en-graphql/images/image-4_hu3c329f116d7853227603ad333a0604de_386576_2560x1440_fit_box_2.png&#34; title=&#34;Consulta con directiva include&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/08/usando-directivas-en-graphql/images/image-4_hu3c329f116d7853227603ad333a0604de_386576_300x200_fit_box_2.png&#34; width=&#34;276&#34; height=&#34;200&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;Misma consulta con directiva include que devuelve diferentes datos&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;Con un comando &lt;em&gt;curl&lt;/em&gt; se realizan las mismas consultas.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/5a60d7e3d64c62e04fb850e824469257.js?file=curl-1.sh&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/5a60d7e3d64c62e04fb850e824469257.js?file=data-1.json&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/5a60d7e3d64c62e04fb850e824469257.js?file=curl-2.sh&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/5a60d7e3d64c62e04fb850e824469257.js?file=data-2.json&#34;&gt;&lt;/script&gt;
&lt;p&gt;
El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/GraphQL&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew run&lt;/code&gt;. Requiere Java 9&amp;#43; o Docker.
&lt;/p&gt;</content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/08/el-editor-explorador-e-ide-graphiql-para-una-api-con-graphql/</id><title>El editor, explorador e IDE GraphiQL para una API con GraphQL</title><updated>2018-08-19T11:00:00+02:00</updated><published>2018-08-19T11:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/08/el-editor-explorador-e-ide-graphiql-para-una-api-con-graphql/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/graphql.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;GraphQL&#34; title=&#34;GraphQL&#34;/&gt;
&lt;/div&gt;
&lt;p&gt;Hace ya un tiempo escribí una &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/graphql/&#34;&gt;serie de artículos sobre GraphQL&lt;/a&gt; para desarrollar una API en una aplicación como alternativa a desarrollarla basada en REST. En esa serie de artículos explicaba varios conceptos básicos e introductorios pero suficientes para desarrollar una API completamente funcional con &lt;a href=&#34;http://graphql.org/&#34;&gt;GraphQL&lt;/a&gt; usando el lenguaje de programación Java. Sin embargo, sobre algunos otros conceptos y posibilidades de GraphQL no había escrito.&lt;/p&gt;
&lt;p&gt;Uno de esas posibilidades de GraphQL es la herramienta &lt;a href=&#34;https://github.com/graphql/graphiql&#34;&gt;GraphiQL&lt;/a&gt; que es un editor interactivo para construir consultas y explorar la API. Una de sus mayores ventajas es que ofrece asistencia contextual y proporciona mensajes de error en caso de que la sintaxis de la consulta sea errónea. En los artículos que escribí con anterioridad los ejemplos los hice usando el comando &lt;em&gt;curl&lt;/em&gt;. Ahora que he visto y aprendido algunas pocas cosas más de GraphQL en este artículo explico como usar la herramienta GraphiQL como alternativa a &lt;em&gt;curl&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;GraphiQL en casi un IDE para crear consultas de GraphQL, está basado en JavaScript, se ejecutan en el navegador y para su funcionamiento solo hay que proporcionarle el &lt;em&gt;endpoint&lt;/em&gt; de la API a probar.&lt;/p&gt;
&lt;p&gt;En la página de este tutorial se explica cual es el &lt;a href=&#34;https://www.howtographql.com/graphql-java/2-queries/&#34;&gt;código HTML necesario para el editor GraphiQL&lt;/a&gt;. Básicamente es un HTML que hay colocar en el caso de una aplicación Java en el directorio web de la aplicación, utilizando la página por defecto &lt;em&gt;index.html&lt;/em&gt; se carga al acceder a la dirección &lt;em&gt;http://localhost:8080/&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;En el código del archivo &lt;em&gt;index.html&lt;/em&gt; del ejemplo he tenido que cambiar estas dos cosas, una de ellas es utilizar un CDN para los recursos de GraphiQL y la otra en la función &lt;em&gt;graphQLFetcher&lt;/em&gt; es que en este ejemplo el &lt;em&gt;endpoint&lt;/em&gt; es &lt;em&gt;/library&lt;/em&gt; en vez de &lt;em&gt;/graphql&lt;/em&gt;.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/04cc7e8f50db18023c8938d0fa0f1182.js?file=index-1.html&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/04cc7e8f50db18023c8938d0fa0f1182.js?file=index-2.html&#34;&gt;&lt;/script&gt;
&lt;p&gt;Varias de las mismas consultas que hacía con &lt;em&gt;curl&lt;/em&gt; en otros artículos es posible lanzarlas con GraphiQL. Es posible formatear correctamente una consulta con el botón &lt;em&gt;prettify&lt;/em&gt;. Con en el enlace de documentación se puede explorar los tipos definidos en la API. Con funciones similares a un IDE ofrece errores de sintaxis, asistencia contextual e historial de consultas, en definitiva es una gran mejora sobre &lt;em&gt;curl&lt;/em&gt; y su incorporación a la aplicación es muy sencilla.&lt;/p&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/08/el-editor-explorador-e-ide-graphiql-para-una-api-con-graphql/images/graphiql-1_hucac16e54b2bfb255dd15191d618a8dae_290445_2560x1440_fit_box_2.png&#34; title=&#34;Consulta&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/08/el-editor-explorador-e-ide-graphiql-para-una-api-con-graphql/images/graphiql-1_hucac16e54b2bfb255dd15191d618a8dae_290445_300x200_fit_box_2.png&#34; width=&#34;300&#34; height=&#34;162&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/08/el-editor-explorador-e-ide-graphiql-para-una-api-con-graphql/images/graphiql-2_hu8bfa70ed84f47638ca2afb95500f4f95_206206_2560x1440_fit_box_2.png&#34; title=&#34;Asistencia contextual&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/08/el-editor-explorador-e-ide-graphiql-para-una-api-con-graphql/images/graphiql-2_hu8bfa70ed84f47638ca2afb95500f4f95_206206_300x200_fit_box_2.png&#34; width=&#34;300&#34; height=&#34;162&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/08/el-editor-explorador-e-ide-graphiql-para-una-api-con-graphql/images/graphiql-3_hu5452a9f36f12efd7105147445eb4ed33_372372_2560x1440_fit_box_2.png&#34; title=&#34;Explorador del esquema&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/08/el-editor-explorador-e-ide-graphiql-para-una-api-con-graphql/images/graphiql-3_hu5452a9f36f12efd7105147445eb4ed33_372372_300x200_fit_box_2.png&#34; width=&#34;300&#34; height=&#34;162&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;El editor GraphiQL para una API con GraphQL&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;
El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/GraphQL&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew run&lt;/code&gt;. Requiere Java 9&amp;#43; o Docker.
&lt;/p&gt;</content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/08/sobre-las-competiciones-deportivas-de-videojuegos-o-esports/</id><title>Sobre las competiciones deportivas de videojuegos o eSports</title><updated>2018-08-15T22:30:00+02:00</updated><published>2018-08-15T10:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/08/sobre-las-competiciones-deportivas-de-videojuegos-o-esports/"/><author><name>picodotdev</name></author><content type="html">
&lt;p&gt;El sector de los videojuegos es una industria que mueve miles de millones de euros en todo el mundo mayor que sectores con más historia como la industria del cine, los juegos triple AAA poseen inversiones y desarrollos cinematográficos. Los computadores y aparatos electrónicos están muy relacionados con los videojuegos ya desde hace mucho tiempo desde que aparecieran en 1947 el &lt;a href=&#34;https://es.wikipedia.org/wiki/Primer_videojuego#1947:_Dispositivo_de_Entretenimiento_de_Tubos_de_Rayos_Cat%C3%B3dicos&#34;&gt;primer videojuego&lt;/a&gt;. En la actualidad los videojuegos son unos programas informáticos de los que en la computación personal más de cómputo requieren a los ordenadores, una buena parte de la presión para mejorar los computadores proviene de los videojuegos con tarjetas gráficas muy potentes, cantidades de memoria consideradas enormes hasta hace una década, procesadores más potentes en &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/08/despues-de-la-guerra-del-numero-de-nucleos-en-los-procesadores-vendra-la-guerra-de-la-computacion-heterogenea-o-manycores/&#34;&gt;la guerra actual por añadir más núcleos a las CPU&lt;/a&gt;. Recientemente los sistemas operativos y entornos de escritorio han empezado a aprovechar de las capacidades de las tarjetas gráficas o GPU para proporcionar efectos visuales y acelerar algunas operaciones de cálculo más eficientemente que en la CPU.&lt;/p&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/08/sobre-las-competiciones-deportivas-de-videojuegos-o-esports/images/1_hu99dd7ef0f4c18cbe11b2e0a0f41d7dc4_12601_2560x1440_fit_q90_box.jpg&#34; title=&#34;Primer videojuego&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/08/sobre-las-competiciones-deportivas-de-videojuegos-o-esports/images/1_hu99dd7ef0f4c18cbe11b2e0a0f41d7dc4_12601_300x200_fit_q90_box.jpg&#34; width=&#34;266&#34; height=&#34;200&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/08/sobre-las-competiciones-deportivas-de-videojuegos-o-esports/images/2_hubd7d40f12653b45bda688b1790567627_19000_2560x1440_fit_q90_box.jpg&#34; title=&#34;Pong&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/08/sobre-las-competiciones-deportivas-de-videojuegos-o-esports/images/2_hubd7d40f12653b45bda688b1790567627_19000_300x200_fit_q90_box.jpg&#34; width=&#34;266&#34; height=&#34;200&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/08/sobre-las-competiciones-deportivas-de-videojuegos-o-esports/images/3_hu1eac3cda1af1c15a5977c0936ff349a8_24837_2560x1440_fit_q90_box.jpg&#34; title=&#34;3 en raya&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/08/sobre-las-competiciones-deportivas-de-videojuegos-o-esports/images/3_hu1eac3cda1af1c15a5977c0936ff349a8_24837_300x200_fit_q90_box.jpg&#34; width=&#34;266&#34; height=&#34;200&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;Primeros videojuegos&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;Esta es una muestra de la evolución gráfica que han experimentado los juegos desde 1995 hasta 2018, dos décadas en este caso con el juego de ación y aventuras Tomb Raider.&lt;/p&gt;
&lt;div class=&#34;media media-video&#34; style=&#34;text-align: center;&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/D-P-smim5gQ&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;La industria de juego sigue creciendo con las nuevas generaciones ya siendo nativos digitales. Desde hace un tiempo se están organizando competiciones deportivas en diferentes juegos populares y se están retransmitiendo en internet en la plataforma especializada en videojuegos &lt;a href=&#34;https://www.twitch.tv/&#34;&gt;Twitch&lt;/a&gt;. Estas competiciones promovidas por actores importantes del hardware interesados en potenciar el sector como &lt;a href=&#34;http://www.nvidia.es/page/home.html&#34;&gt;Nvidia&lt;/a&gt;, &lt;a href=&#34;https://www.intel.es&#34;&gt;Intel&lt;/a&gt;, &lt;a href=&#34;https://www.amd.com/es&#34;&gt;AMD&lt;/a&gt; u otros fabricantes de hardware y estudios de desarrollo de videojuegos como [Blizzar][blizzar] ofrecen a los finalistas y campeones importantes premios económicos. Tanto que algunas personas se están dedicando ya como profesionalmente con absoluta dedicación a competir y entrenar aprovechando sus habilidades y conocimiento profundo de los juegos en los que están especializados.&lt;/p&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
&lt;figure&gt;
&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2018/08/sobre-las-competiciones-deportivas-de-videojuegos-o-esports/images/4_hu413e93d4b8876abc767000c1e5f4e442_86753_2560x1440_fit_q90_box.jpg&#34; title=&#34;Estadio de una final de League of legends&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/2018/08/sobre-las-competiciones-deportivas-de-videojuegos-o-esports/images/4_hu413e93d4b8876abc767000c1e5f4e442_86753_600x450_fit_q90_box.jpg&#34; width=&#34;600&#34; height=&#34;337&#34;/&gt;&lt;/a&gt;
&lt;figcaption&gt;Estadio de una final de League of legends&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;Algunos de los juegos actuales en los que se realizan competiciones son &lt;a href=&#34;https://playhearthstone.com/es-es/&#34;&gt;Hearthstone&lt;/a&gt;, &lt;a href=&#34;https://play.euw.leagueoflegends.com/es_ES&#34;&gt;League of legends&lt;/a&gt;, &lt;a href=&#34;https://clashroyale.com/es/&#34;&gt;Clash Royale&lt;/a&gt;, &amp;hellip; que han sido diseñados no solo como para el entretenimiento como los juegos de hace unas pocas décadas para competir entre humano e inteligencia artificial más o menos inteligente o automática de la máquina sino para ser jugados de forma competitiva entre humanos principalmente.&lt;/p&gt;
&lt;div class=&#34;media media-video&#34; style=&#34;text-align: center;&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://gaming.youtube.com/embed/lBWgRCRH1Gs&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;div class=&#34;media media-video&#34; style=&#34;text-align: center;&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://gaming.youtube.com/embed/NpVXLpkjUCc&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;div class=&#34;media media-video&#34; style=&#34;text-align: center;&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://gaming.youtube.com/embed/MUb8dGKpuEE&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;Es plausible que en un futuro estas competiciones se conviertan en eventos deportivos con el potencial de ser el equivalente en los &lt;em&gt;eSports&lt;/em&gt; como hoy lo son la liga de campeones europea, la copa del mundo de fútbol, la Super Bowl o las finales de la NBA ya sea en modalidades de por equipos o de selecciones por país.&lt;/p&gt;
&lt;p&gt;Hace unas semanas veía en directo una final del juego para móvil Clash Royale, estaba muy bien organizada con un escenario muy cuidado y locutores en directo retransmitiendo en directo la final. Igual que ver una final de fútbol es entretenido y emocionante ver una final de un juego de ordenador en una competición tiene varios de los mismos ingredientes para ser igual de entretenido. Es difícil pronosticar que lleguen al nivel de una Champions League, mundial o europeo de fútbol pero dentro de unos años los gustos pueden cambiar más aún si los señores feudales que dirigen el fútbol tratan de ordeñar a los aficionados con la televisión de pago dejando al margen a muchas personas que no se lo pueden permitir, en cualquier caso es muy posible que los &lt;em&gt;eSports&lt;/em&gt; sigan creciendo en popularidad solo está por ver a que ritmo.&lt;/p&gt;
&lt;p&gt;Este es un documental sobre lo que rodea a las competiciones deportivas en equipos y sobre los &lt;em&gt;eSports&lt;/em&gt;. El documental se titula «De chico solitario a estrella», aunque el documental se titula así añado que no tiene por que ser ese estereotipo de chico, joven, solitario y poco social ni siquiera chico.&lt;/p&gt;
&lt;div class=&#34;media media-video&#34; style=&#34;text-align: center;&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/qul_4hlQBCM&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;div class=&#34;reference&#34;&gt;
Referencia:&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://esports.xataka.com/&#34;&gt;Xataka eSports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.elconfidencial.com/tecnologia/2017-06-06/gamerswalk-esports-twitch-amazon_1394223/&#34;&gt;Los &amp;lsquo;eSports&amp;rsquo; se calientan: 600.000€ para la alternativa española a Twitch (Amazon)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.elconfidencial.com/empresas/2017-05-13/deportes-electronicos-esports-regulacion-situacion-espana-jugadores-deporte-ligas_1381822/&#34;&gt;&amp;lsquo;eSports&amp;rsquo;: los bufetes se calzan las botas para jugar un partido de 600 millones de euros&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content><category term="opinion"/><category term="planeta-codigo"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/08/personalizar-el-mensaje-emitido-de-un-objeto-en-log4j/</id><title>Personalizar el mensaje emitido de un objeto en log4j</title><updated>2018-08-10T18:00:00+02:00</updated><published>2018-08-10T18:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/08/personalizar-el-mensaje-emitido-de-un-objeto-en-log4j/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right &#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;
&lt;p&gt;Usar una librería como &lt;a href=&#34;https://logging.apache.org/log4j/2.x/&#34;&gt;log4j&lt;/a&gt; es probablemente indispensable en una aplicación para obtener información de su funcionamiento, mensajes informativos, advertencias, errores o excepciones que se están produciendo o se han producido. Los mensajes que se emiten contienen información útil para monitorización en tiempo real o su inspección pasado un tiempo.&lt;/p&gt;
&lt;p&gt;En cada punto de la aplicación en la que se desea emitir una traza es necesario proporcionar el formato del mensaje y sus parámetros extraídos de las propiedades de los objetos con la intención obtener una traza con los valores de determinadas propiedades. Si es habitual emitir una traza de ciertas clases para evitar poner la misma traza en diferentes puntos de la aplicación log4j posee una funcionalidad para transformar en objeto en un mensaje personalizado como se comenta en su &lt;a href=&#34;https://logging.apache.org/log4j/2.x/manual/messages.html&#34;&gt;documentación para mensajes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;El método &lt;em&gt;toString()&lt;/em&gt; muy posiblemente no es la mejor solución para transformar un objeto a un &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/lang/String.html&#34;&gt;String&lt;/a&gt; de modo que sea emitido por log4j, quizá su valor no sea lo desedeado, se use este método para otro tipo de funcionalidad y no sirve en el caso de querer diferentes mensajes en diferentes lugares de la aplicación.&lt;/p&gt;
&lt;p&gt;En log4j implementando una clase de tipo &lt;a href=&#34;http://logging.apache.org/log4j/log4j-2.3/log4j-api/apidocs/org/apache/logging/log4j/message/Message.html&#34;&gt;Message&lt;/a&gt; se transforman esas instancias en el mensaje de información personalizado. En el caso de la implementación de &lt;em&gt;Message&lt;/em&gt; en &lt;em&gt;SimpleProductMessage&lt;/em&gt; genera una traza con solo su identificativo y su nombre para la clase &lt;em&gt;Product&lt;/em&gt;. En el caso de &lt;em&gt;ProductMessage&lt;/em&gt; genera una traza más completa con su identificativo, nombre y color.&lt;/p&gt;
&lt;p&gt;El método heredado de &lt;a href=&#34;http://logging.apache.org/log4j/log4j-2.3/log4j-api/apidocs/org/apache/logging/log4j/message/Message.html#getFormattedMessage()&#34;&gt;getFormattedMessage()&lt;/a&gt; es el encargado de generar la traza en este caso utilizando como apoyo los métodos también heredados &lt;a href=&#34;http://logging.apache.org/log4j/log4j-2.3/log4j-api/apidocs/org/apache/logging/log4j/message/Message.html#getFormat()&#34;&gt;getFormat()&lt;/a&gt; que contiene el patrón del mensaje y &lt;a href=&#34;http://logging.apache.org/log4j/log4j-2.3/log4j-api/apidocs/org/apache/logging/log4j/message/Message.html#getParameters()&#34;&gt;getParameters()&lt;/a&gt; que devuelve como parámetros para el patrón del mensaje los valores de las propiedades.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/5bb6211d0e2e9e9dba94bbc1faf6fbde.js?file=SimpleProductMessage.java&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/5bb6211d0e2e9e9dba94bbc1faf6fbde.js?file=ProductMessage.java&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/5bb6211d0e2e9e9dba94bbc1faf6fbde.js?file=Product.java&#34;&gt;&lt;/script&gt;
&lt;p&gt;En los siguientes casos se utilizan diferentes formas para emitir la traza. En el primer caso se utiliza la forma habitual de proporcionar el patrón y sus parámetros, el segundo caso utiliza el método &lt;em&gt;toString()&lt;/em&gt; del objeto. En el tercer y cuarto caso se utilizan las clases que implementan la interfaz &lt;em&gt;Message&lt;/em&gt; emitiendo un mensaje diferente cada una de ellas sin tener que proporcionar el patrón ni extraer las propiedades de la clase &lt;em&gt;Producto&lt;/em&gt; ya que son estas implementaciones en las que se delega esto.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/5bb6211d0e2e9e9dba94bbc1faf6fbde.js?file=Main.java&#34;&gt;&lt;/script&gt;
&lt;p&gt;En todos estos casos las trazas emitidas son las mismas salvo en el caso de &lt;em&gt;ProductMessage&lt;/em&gt; que muestra una traza con más información.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/5bb6211d0e2e9e9dba94bbc1faf6fbde.js?file=System.out&#34;&gt;&lt;/script&gt;
&lt;p&gt;En la &lt;a href=&#34;https://logging.apache.org/log4j/2.x/log4j-api/apidocs/index.html&#34;&gt;API de log4j&lt;/a&gt; hay multitud de clases &lt;a href=&#34;https://logging.apache.org/log4j/2.x/log4j-api/apidocs/index.html&#34;&gt;Message&lt;/a&gt; ya implementadas, por ejemplo, &lt;a href=&#34;https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/message/MapMessage.html&#34;&gt;MapMessage&lt;/a&gt; para objetos del tipo &lt;a href=&#34;https://docs.oracle.com/javase/10/docs/api/java/util/Map.html&#34;&gt;Map&lt;/a&gt; entre otros muchos.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/5bb6211d0e2e9e9dba94bbc1faf6fbde.js?file=build.gradle&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/picodotdev/5bb6211d0e2e9e9dba94bbc1faf6fbde.js?file=log4j2.yaml&#34;&gt;&lt;/script&gt;
&lt;p&gt;
El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/Log4j&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew run&lt;/code&gt;.
&lt;/p&gt;</content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/></entry></feed>

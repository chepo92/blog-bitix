<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://picodotdev.github.io/blog-bitix/tags/software-libre/</id>
    <title type="text">Blog Bitix</title>
    <subtitle>Recent content on Blog Bitix</subtitle>
    <updated>2016-09-09T13:00:00+02:00</updated>
    <author><name>pico.dev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix//assets/images/custom/logotipos/hugo.png</icon>
    <logo>https://picodotdev.github.io/blog-bitix//assets/images/custom/logotipos/hugo.png</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/09/articulo-2-de-yo-apoyo-al-software-libre/</id>
        <title>Artículo #2 de Yo apoyo al software libre</title>        
        <updated>2016-09-09T23:00:00+02:00</updated>
        <published>2016-09-09T13:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/09/articulo-2-de-yo-apoyo-al-software-libre/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Recibidas nuevas transferencias de Google y Amazon por la publicidad AdSense y los enlaces de afiliado respectivamente que incluyo en esta bitácora he realizado unas pequeñas nuevas donaciones económicas a varios proyectos de software libre que uso habitualmente.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/firefox.png&#34; class=&#34;right&#34; alt=&#34;Firefox&#34; title=&#34;Firefox&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/wikipedia.png&#34; class=&#34;right&#34; alt=&#34;Wikipedia&#34; title=&#34;Wikipedia&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;En diciembre de 2015 escribía un &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/12/yo-apoyo-al-software-libre-tu-tambien/&#34;&gt;artículo sobre la primera donación económica&lt;/a&gt; que hacía un proyecto de software libre. En esa primera donación compré un par de camisetas a la &lt;a href=&#34;https://fsfe.org/index.en.html&#34;&gt;Free Software Foundation Europe&lt;/a&gt; o FSFE. Pasados ocho nuevos meses desde entonces me llegó una nueva transferencia de Google por la publicidad AdSense que incluyo en esta bitácora de alrededor de 80€, hace unos meses recibí otra por los enlaces de afiliado de Amazon que en este caso fue de alrededor de 25€. Como la bitácora no me genera ningún tipo de gasto ni para el hospedaje ni para el dominio (salvo buena parte de mi tiempo, que no es poco) me planteo hacer una nueva donación a algún proyecto o algunos proyectos.&lt;/p&gt;

&lt;p&gt;Pensando que proyectos serían los siguientes y que cantidad me he decidido por los siguientes &lt;a href=&#34;https://wiki.archlinux.org&#34;&gt;Arch Linux&lt;/a&gt;, &lt;a href=&#34;http://archlinuxarm.org/&#34;&gt;Arch Linux ARM&lt;/a&gt;, &lt;a href=&#34;https://www.mozilla.org/es-ES/firefox/new/&#34;&gt;Firefox&lt;/a&gt; y &lt;a href=&#34;https://es.wikipedia.org/wiki/Wikipedia:Portada&#34;&gt;Wikipedia&lt;/a&gt; con 10€ cada uno para un total de 40€, que al final solo han sido 20€ porque el medio para hacer el pago utilizando de &lt;a href=&#34;http://spi-inc.org/&#34;&gt;Software in the Public Interest&lt;/a&gt; tanto en Arch Linux como en Arch Linux ARM por algún motivo no me acepta la tarjeta bancaria virtual, en la siguiente donación quizá lo intente de nuevo o de otra forma por ejemplo comprando una camiseta en &lt;a href=&#34;https://www.freewear.org/?page=list_items&amp;amp;org=Archlinux&#34;&gt;FreeWear&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Como sistema sistema operativo uso GNU/Linux y la distribución Arch Linux tanto a modo personal en mi portátil y en el trabajo y a pesar de ser una distribición &lt;em&gt;rolling release&lt;/em&gt; o en constante actualización raras han sido las veces que he tenido algún problema desde hace ya más de 6 años. Esta es la distribución con la que al final personalmente he acabado más contento después de pasar por &lt;a href=&#34;https://fedoraproject.org/&#34;&gt;Fedora&lt;/a&gt;, &lt;a href=&#34;https://www.debian.org/&#34;&gt;Debian&lt;/a&gt; y &lt;a href=&#34;http://www.ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt;. Arch Linux ARM lo utilizo en una Raspberry Pi 1 modelo B (la que tiene 256 MiB de memoria) para hacer descargas y también muy contento ya que tampoco me da problemas. Firefox es el navegador de mi preferencia después de una no muy extensa época usando &lt;a href=&#34;https://www.chromium.org/&#34;&gt;Chromium&lt;/a&gt;, lo uso a modo personal y en el trabajo como desarrollador web. Finalmente, aunque no sea un proyecto de software libre es un proyecto colaborativo de libre acceso y desde hace tiempo una gran fuente de conocimiento acumulada de la que suelo incluir muchos enlaces en esta bitácora, es la Wikipedia.&lt;/p&gt;

&lt;p&gt;Las cantidades que he donado no son muy elevadas pero espero que ayuden a estos proyectos a continuar su desarrollo y seguir mejorando. Esta de las pocas veces que «pago» algo por el software que utilizo exceptuando las veces en las que lo he hecho por el &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2011/05/impuesto-windows.html&#34;&gt;impuesto Windows&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Hubo una época que usaba el sistema operativo de Microsoft sin licencia de Windows XP. Hoy en día &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/01/windows-10-y-office-2016-tan-faciles-de-usar-sin-licencia-como-siempre/&#34;&gt;Windows 10 y Office 2016 siguen siendo fáciles de usar sin licencia&lt;/a&gt; un buen porcentaje de usuarios tampoco pagará por el software que usa lo que en realidad afecta negativamente al software libre ya que le impide ganar cuota de uso. El software libre no es sinónimo de gratis, aunque en la mayoría de los casos lo es, sino que proporciona a sus usuarios las 4 libertades explicadas en &lt;a href=&#34;https://www.gnu.org/philosophy/free-sw.es.html&#34;&gt;¿Qué es el software libre?&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Estas son las pruebas fehacientes que muestran las donaciones que he hecho a los dos proyectos anteriores.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/177/donacion-mozilla.png&#34; title=&#34;Donación Mozilla&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/177/donacion-mozilla-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/177/donacion-mozilla-email.png&#34; title=&#34;Donación Mozilla&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/177/donacion-mozilla-email-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Comprobantes donación Mozilla&lt;/figcaption&gt;
&lt;/figure&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/177/donacion-wikipedia.png&#34; title=&#34;Donación Wikipedia&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/177/donacion-wikipedia-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/177/donacion-wikipedia-email.png&#34; title=&#34;Donación Wikipedia&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/177/donacion-wikipedia-email-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Comprobantes donación Wikipedia&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Probablemente dentro de alrededor de otros 8 meses cuando reciba nuevas transferencias de Google y Amazon haré una nueva donación a otra serie de proyectos que uso quizá en ese caso a &lt;a href=&#34;http://www.libreoffice.org/&#34;&gt;LibreOffice&lt;/a&gt;, &lt;a href=&#34;http://www.videolan.org/vlc/&#34;&gt;VLC&lt;/a&gt;, &lt;a href=&#34;http://gnome.org/&#34;&gt;GNOME&lt;/a&gt;, &lt;a href=&#34;https://www.gimp.org/&#34;&gt;GIMP&lt;/a&gt;, &amp;hellip; o lo intente de nuevo con Arch Linux. Y estos serán proyectos muy conocidos que no necesiten tanta colaboración económica seguro que hay muchos proyectos menos conocidos pero muy importantes que también necesitan financiación.&lt;/p&gt;

&lt;p&gt;Puede que ni siquiera uses GNU/Linux o software libre pero al visitar esta bitácora puedes considerar que tú también has colaborado con el software libre ;) y simplemente usarlo o promocionarlo ya es una buena forma de apoyarlo. Si lo hicieses, ¿a que proyectos harías tú una donación?&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.gnu.org/&#34;&gt;Yo apoyo al software libre&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wikimediafoundation.org/wiki/Donaciones&#34;&gt;Donaciones Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.mozilla.org/Donate&#34;&gt;Donaciones Mozilla&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/</id>
        <title>Jugar a videojuegos clásicos y míticos de arcade con Mame en GNU/Linux</title>        
        <updated>2016-08-15T23:00:00+02:00</updated>
        <published>2016-08-15T12:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/mame.jpg&#34; class=&#34;right&#34; alt=&#34;MAME&#34; title=&#34;MAME&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/linux.png&#34; class=&#34;right&#34; alt=&#34;Linux&#34; title=&#34;Linux&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;http://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;/&lt;a href=&#34;http://www.linux.com/&#34;&gt;Linux&lt;/a&gt; no es la plataforma preferida por las empresas de desarrollo de videojuegos para lanzar sus juegos triple A. Esto hace que los juegos más destacados no esté disponibles en GNU/Linux o sea con un tiempo de retraso notable de meses y años. Pero esto no quiere decir que en la plataforma del pingüino no haya juegos algunos que ya he comentado como el &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-ajedrez-en-gnu-linux-con-gnome/&#34;&gt;ajedrez&lt;/a&gt;, &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-clasico-de-estrategia-de-tablero-go-en-gnu-linux/&#34;&gt;go&lt;/a&gt;, &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/&#34;&gt;juegos ofrecidos en el entorno del escritorio GNOME&lt;/a&gt; y otros de diferentes géneros como estrategia, &lt;em&gt;arcade&lt;/em&gt; o simulación.&lt;/p&gt;

&lt;p&gt;Los juegos actuales de las consolas y PC poseen una calidad gráfica muy notable y han evolucionado al juego en red con otros jugadores como &lt;abbr title=&#34;Massively Multiplayer Online&#34;&gt;MMO&lt;/abbr&gt; siendo más sociales. Hace una décadas las máquinas de &lt;em&gt;arcade&lt;/em&gt; y las consolas más modestas como la &lt;a href=&#34;https://es.wikipedia.org/wiki/Nintendo_Entertainment_System&#34;&gt;NES de Nintendo&lt;/a&gt; o los juegos &lt;a href=&#34;https://es.wikipedia.org/wiki/Neo-Geo&#34;&gt;Neo Geo&lt;/a&gt; eran la norma y a pesar de que no se pueden comparar con el realismo de las tres dimensiones proporcionados por las potentes tarjetas gráficas en los juegos actuales su aspecto &lt;a href=&#34;https://es.wikipedia.org/wiki/Pixel_art&#34;&gt;pixel-art&lt;/a&gt; es muy notable pero sobre todo la diversión que proporcionan no tiene que envidiar a cualquier juego actual.&lt;/p&gt;

&lt;p&gt;Juegos míticos como 1942, 1943, 1944, Ghouls &amp;amp; Ghosts, Double Dragon, Super Mario 3, Golden Axe, Pengo, Amidar, Donkey Kong, Metal Slug, Rainbow Islands, Track &amp;amp; Field, The Legend of Zelda, &amp;hellip; y me dejo muchísimos The NewZealand Story, Super Glob, Q*bert, Jump Bug, Bagman, &amp;hellip; que en los que andamos entre los 35 y 50 forman parte de nuestro recuerdos de infancia, solo hay que buscar en la &lt;a href=&#34;http://www.mamedb.com&#34;&gt;base de datos de juegos MAME&lt;/a&gt;. Quizá sea por estos recuerdos que la comunidad de juegos retro sigue vigente hoy en día y que organiza eventos de encuentro para fans de las consolas viejas que no obsoletas e informática antigua. Quizá dentro de unas décadas los que hoy está en su infancia con la &lt;a href=&#34;http://www.raspberrypi.org/&#34;&gt;Raspberry Pi&lt;/a&gt; dentro de unas décadas recuerden este pequeño ordenador de 40€ como hoy algunos consideran a la &lt;a href=&#34;https://es.wikipedia.org/wiki/MSX&#34;&gt;MSX&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Voy a explicar como instalar &lt;a href=&#34;http://www.mame.net/&#34;&gt;Mame&lt;/a&gt; para emular esos sistemas antiguos y con las ROMs de los juegos jugar a ellos en un sistema GNU/Linux. Si nos hacemos con un controlador de consola con la típica cruceta y cuatro o  más botones la experiencia será mejor que con el teclado y más real a la original de la máquina de &lt;em&gt;arcade&lt;/em&gt; o consola. El número de  &lt;a href=&#34;http://www.progettoemma.net/mess/sysset.php&#34;&gt;sistemas soportados por Mame&lt;/a&gt; llega a más de 2000 entre ellos &lt;a href=&#34;https://en.wikipedia.org/wiki/Amiga&#34;&gt;Amiga&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Amstrad&#34;&gt;Amstrad&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Atari&#34;&gt;Atari&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Commodore_International&#34;&gt;Commodore&lt;/a&gt;, &lt;a href=&#34;https://es.wikipedia.org/wiki/Nintendo_Entertainment_System&#34;&gt;Famicon (NES)&lt;/a&gt;, &lt;a href=&#34;https://es.wikipedia.org/wiki/Master_System&#34;&gt;Master System&lt;/a&gt;, &lt;a href=&#34;https://es.wikipedia.org/wiki/Neo-Geo&#34;&gt;Neo Geo&lt;/a&gt; o &lt;a href=&#34;https://es.wikipedia.org/wiki/Sinclair_ZX_Spectrum&#34;&gt;ZX Spectrum&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Deberemos instalar el paquete del &lt;a href=&#34;https://www.archlinux.org/packages/community/x86_64/sdlmame/&#34;&gt;emulador Mame&lt;/a&gt; y un lanzador que en este caso usaré &lt;a href=&#34;https://www.archlinux.org/packages/community/x86_64/qmc2/&#34;&gt;QMC2&lt;/a&gt;. Posteriormente deberemos obtener las ROMs de los juegos de algunas de las muchas páginas que existen en internet. En &lt;a href=&#34;https://wiki.archlinux.org&#34;&gt;Arch Linux&lt;/a&gt; los paquetes del emulador Mame y el lanzador QMC2 los instalamos con el siguiente comando:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/f61b598b7e63472ab592f9c3d98c48cd.js?file=pacman.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/f61b598b7e63472ab592f9c3d98c48cd/raw/pacman.sh&#34;&gt;pacman.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Instalados estos paquetes y descargada una ROM de ejemplo como la de &lt;a href=&#34;http://www.emuparadise.me/M.A.M.E._-_Multiple_Arcade_Machine_Emulator_ROMs/Ghouls&#39;n_Ghosts_(World&#34;&gt;Ghouls &amp;amp; Gosht&lt;/a&gt;/13191) de &lt;a href=&#34;http://www.emuparadise.me&#34;&gt;EMUPARADISE&lt;/a&gt; y colocada en un directorio (no hace falta descomprimir el archivo de la ROM) iniciamos el lanzador QMC2. QMC2 inicialmente nos pedirá donde se encuentra el binario del emulador y el directorio donde están las ROMs. Configurado QMC2 buscaremos el juego por su nombre del que hayamos descargado la ROM.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/qmc2.png&#34; title=&#34;Lanzador QMC2&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/qmc2-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/qmc2-config.png&#34; title=&#34;Configuración de QMC2&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/qmc2-config-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Lanzador QMC2 de juegos MAME y su configuración&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Si hay varios resultados para el mismo nombre de juego iremos probando a iniciarlos uno a uno hasta que se abra una ventana emergente con el juego. Las teclas por defecto del primer jugador son las flechas del teclado, la tecla &lt;kbd&gt;Alt-izquierda&lt;/kbd&gt; para el botón 1, &lt;kbd&gt;Ctrl-izquierdo&lt;/kbd&gt; para el botón 2 y la &lt;kbd&gt;barra espaciadora&lt;/kbd&gt; para el botón 3. Iniciado sdlmame en la sección de &lt;em&gt;Input &amp;gt; Player 1&lt;/em&gt; podremos configurar las teclas. Las teclas &lt;kbd&gt;1&lt;/kbd&gt; y &lt;kbd&gt;2&lt;/kbd&gt; nos permitirá seleccionar entre uno y dos jugadores y la tecla &lt;kbd&gt;5&lt;/kbd&gt; introducir monedas o créditos.&lt;/p&gt;

&lt;p&gt;Esta es una pequeña lista no completa de los juegos míticos que recuerdo de mi época.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/amidar.png&#34; title=&#34;Amidar&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/amidar-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/dark-seal.png&#34; title=&#34;Dark Seal&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/dark-seal-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Amidar y Dark Seal&lt;/figcaption&gt;
&lt;/figure&gt;    
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/donkey-kong.png&#34; title=&#34;Donkey Kong&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/donkey-kong-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/donkey-kong-jr.png&#34; title=&#34;Donkey Kong Jr.&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/donkey-kong-jr-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Donkey Kong y Donkey Kong Jr.&lt;/figcaption&gt;
&lt;/figure&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/ghosts-and-goblins.png&#34; title=&#34;Ghosts and Goblins&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/ghosts-and-goblins-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/ghouls-and-ghosts.png&#34; title=&#34;Ghouls and Ghosts&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/ghouls-and-ghosts-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Ghosts and Goblins y Ghouls and Ghosts&lt;/figcaption&gt;
&lt;/figure&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/hyper-sports.png&#34; title=&#34;Hyper Sports&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/hyper-sports-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/metal-slug.png&#34; title=&#34;Metal Slug&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/metal-slug-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Hyper Sports y Metal Slug&lt;/figcaption&gt;
&lt;/figure&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/meikyu-jima.png&#34; title=&#34;Meikyu Jima&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/meikyu-jima-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/new-rally-x.png&#34; title=&#34;New Rally X&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/new-rally-x-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Meikyu Jima y New Rally X&lt;/figcaption&gt;
&lt;/figure&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/pang.png&#34; title=&#34;Pang&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/pang-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/pengo.png&#34; title=&#34;Pengo&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/pengo-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Pang y Pengo&lt;/figcaption&gt;
&lt;/figure&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/puck-man.png&#34; title=&#34;Puck Man&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/puck-man-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/rainbow-islands.png&#34; title=&#34;Rainbow Islands&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/rainbow-islands-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Puck Man y Rainbow Islands&lt;/figcaption&gt;
&lt;/figure&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/rygar.png&#34; title=&#34;Rygar&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/rygar-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/squash.png&#34; title=&#34;Squash&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/squash-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Rygar y Squash&lt;/figcaption&gt;
&lt;/figure&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/super-mario-bros.png&#34; title=&#34;Super Mario Bros&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/super-mario-bros-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/super-mario-bros-3.png&#34; title=&#34;Super Mario Bros 3&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/super-mario-bros-3-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Super Mario Bros y Super Mario Bros 3&lt;/figcaption&gt;
&lt;/figure&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/super-volleyball.png&#34; title=&#34;Super Volleyball&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/super-volleyball-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/tetris.png&#34; title=&#34;Tetris&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/tetris-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Super Volleyball y Tetris&lt;/figcaption&gt;
&lt;/figure&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/toki.png&#34; title=&#34;Toki&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/toki-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/track-and-field.png&#34; title=&#34;Track and Field&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/track-and-field-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Toki y Track and Field&lt;/figcaption&gt;
&lt;/figure&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/traverse.png&#34; title=&#34;Traverse&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/traverse-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/willow.png&#34; title=&#34;Willow&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/willow-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Traverse y Willow&lt;/figcaption&gt;
&lt;/figure&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/wonder-boy.png&#34; title=&#34;Wonder Boy&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/wonder-boy-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/world-rally.png&#34; title=&#34;World Rally&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/world-rally-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Wonder Boy y World Rally&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Ya solo nos queda buscar con tu buscador preferido algún artículo que recopile las mejores ROMs o aquellas que recuerdes y descargarlas en el directorio de las ROMS. Algunos emuladores deberemos previamente &lt;a href=&#34;http://www.emuparadise.me/M.A.M.E._-_Multiple_Arcade_Machine_Emulator_ROMs/Neo-Geo/15030&#34;&gt;descargar su ROM de emulador como en el caso de Neo-Geo&lt;/a&gt; para esta plataforma y colocarla también en el directorio de las ROMs.&lt;/p&gt;

&lt;p&gt;Para jugar a los juegos de la NES de Nintendo con QMC2 no he conseguido ejecutarlos, he tenido que introducir el comando &lt;code&gt;sdlmame nes&lt;/code&gt; en la terminal buscar la ROM navegando por los directorios, seleccionarla y usar la opción de &lt;em&gt;reset&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/sdlmame-nes.png&#34; title=&#34;sdlmame NES&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/sdlmame-nes-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/sdlmame-nes-supermariobros3.png&#34; title=&#34;sdlmame Super Mario Bros 3&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/170/sdlmame-nes-supermariobros3-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Ejecución de un juego NES con sdlmame&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Si no usamos Linux tanto Mame como QMC2 están disponibles tanto para &lt;a href=&#34;http://www.microsoft.com/es-es/windows/&#34;&gt;Windows&lt;/a&gt; como para &lt;a href=&#34;http://www.apple.com/osx/&#34;&gt;Mac OS X&lt;/a&gt; en sus secciones de descarga:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mame.net/&#34;&gt;http://www.mame.net/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qmc2.batcom-it.net/&#34;&gt;http://qmc2.batcom-it.net/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Incluso con una &lt;a href=&#34;http://amzn.to/2bjieY2&#34;&gt;Raspberry Pi 3&lt;/a&gt; podremos jugar usando como pantalla una televisión. Con un &lt;a href=&#34;http://amzn.to/2bjiYN8&#34;&gt;mando inalámbrico de arcade&lt;/a&gt; (no he probado si funcionará) tendremos una experiencia muy parecida a una consola. Instalando en la RPi una distribución como &lt;a href=&#34;https://retropie.org.uk/&#34;&gt;Retropie&lt;/a&gt; o &lt;a href=&#34;http://www.libretro.com/&#34;&gt;Libretro&lt;/a&gt; emularemos los juegos en este pequeño computador multipropósito.&lt;/p&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01CD5VC92&amp;linkId=a79bf1bb391f6591c039b7696a22e9ef&amp;internal=1&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B013B61SCS&amp;linkId=61b4a105bc7d42ff174de961aaab0e67&amp;internal=1&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Ya solo nos queda disfrutar y pasar un buen rato con nuestros juegos preferidos, nada que envidiar en cuanto a diversión a una Play Station 4 ;), ah y no ocupan 20 GiB sino menos de 1 MiB.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.emuparadise.me&#34;&gt;Emuparadise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mamedb.com&#34;&gt;MAME Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.xataka.com/videojuegos/emuladores-roms-y-el-debate-entre-la-nostalgia-el-amor-a-lo-retro-y-la-ilegalidad&#34;&gt;Emuladores, ROMs y el debate entre la nostalgia, el amor a lo retro y la ilegalidad&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-linux"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/</id>
        <title>Juegos incluidos en el entorno de escritorio GNOME</title>        
        <updated>2016-08-07T01:00:00+02:00</updated>
        <published>2016-08-07T01:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/gnome.png&#34; class=&#34;right&#34; alt=&#34;GNOME&#34; title=&#34;GNOME&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/linux.png&#34; class=&#34;right&#34; alt=&#34;Linux&#34; title=&#34;Linux&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Además de los clásicos juegos de estrategia y de pensar como son el &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-ajedrez-en-gnu-linux-con-gnome/&#34;&gt;ajedrez&lt;/a&gt; y &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-clasico-de-estrategia-de-tablero-go-en-gnu-linux/&#34;&gt;go&lt;/a&gt; que disponemos para instalar en &lt;a href=&#34;http://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;/&lt;a href=&#34;http://www.linux.com/&#34;&gt;Linux&lt;/a&gt;, en el entorno de escritorio &lt;a href=&#34;http://gnome.org/&#34;&gt;GNOME&lt;/a&gt; tenemos otros juegos más casuales la mayoría también de pensar. En todos su mecánica es sencilla y nos servirán como pasatiempo.&lt;/p&gt;

&lt;p&gt;Son los siguientes juegos con una pequeña descripción de cada uno, alguna captura de pantalla y su manual de usuario.&lt;/p&gt;

&lt;h3 id=&#34;aisleriot&#34;&gt;Aisleriot&lt;/h3&gt;

&lt;p&gt;Es una colección de más de 80 modos de solitario de cartas fáciles de jugar con la ayuda de un ratón. Cada modo de juego tiene sus propias reglas y disposición de cartas.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://library.gnome.org/users/aisleriot/stable/&#34;&gt;Manual&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/aisleriot.png&#34; title=&#34;Juego aisleriot&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/aisleriot-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Juego aisleriot&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;cinco-o-mas&#34;&gt;Cinco o mas&lt;/h3&gt;

&lt;p&gt;El objetivo del juego es alinear 5 o más objetos del mismo color y forma haciéndolos desaparecer, con cada movimiento aparecerán nuevos objetos que nos dificultará alinearlos, el objetivo es poder jugar el máximo tiempo posible .&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://library.gnome.org/users/five-or-more/stable/&#34;&gt;Manual&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/five-or-more.png&#34; title=&#34;Juego cinco o más&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/five-or-more-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Juego cinco o más&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;cuatro-en-raya&#34;&gt;Cuatro en raya&lt;/h3&gt;

&lt;p&gt;El objetivo de 4 en raya es construir una línea de cuatro fichas mientras intentamos que el oponente (humano o computadora) construya su línea de 4 en raya. Una línea puede ser horizontal, vertical o diagonal.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://library.gnome.org/users/four-in-a-row/stable/&#34;&gt;Manual&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/four-in-a-row.png&#34; title=&#34;Juego cuatro en raya&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/four-in-a-row-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Juego cuatro en raya&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;hitori&#34;&gt;Hitori&lt;/h3&gt;

&lt;p&gt;Hitori es similar al juego de puzles Sudoku pero en el que se trata de ir eliminando números cumpliendo las restricciones del juego en vez de ir poniéndolos. Posee varios tamaños de tablero.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Hitori&#34;&gt;Manual&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/hitori.png&#34; title=&#34;Juego hitori&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/hitori-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Juego hitori&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;iagno&#34;&gt;Iagno&lt;/h3&gt;

&lt;p&gt;Iango es una versión para computadora del &lt;a href=&#34;https://es.wikipedia.org/wiki/Reversi&#34;&gt;juego Reversi&lt;/a&gt;, más comúnmente conocido como Othello. Es un juego para dos jugadores con ciertos parecidos a &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-clasico-de-estrategia-de-tablero-go-en-gnu-linux/&#34;&gt;Go&lt;/a&gt; en el que hay que capturar las fichas del oponente y dominar el tablero. El tablero es de 8 por 8 con baldosas que son blancas por un lado y negras por el otros. El objetivo de Iango es voltear tantas baldosas del oponente como sea posible sin que el oponente voltee las nuestras. El volteo se realiza atrapando las baldosas del oponente entre dos baldosas de nuestro color.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://library.gnome.org/users/iagno/stable/&#34;&gt;Manual&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/iagno.png&#34; title=&#34;Juego iagno&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/iagno-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Juego iagno&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;klotski&#34;&gt;Klotski&lt;/h3&gt;

&lt;p&gt;El objetivo es mover el bloque marcado al área con bordes verdes utilizando un menor número de movimientos para una mejor puntuación.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://library.gnome.org/users/gnome-klotski/stable/&#34;&gt;Manual&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/klotski.png&#34; title=&#34;Juego klotski&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/klotski-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Juego klotski&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;luces-fuera&#34;&gt;Luces fuera&lt;/h3&gt;

&lt;p&gt;Luces fuera es un juego de puzle donde el objetivo es apagar todas las baldosas del tablero. Cada clic intercambia el estado de la baldosa clicada y sus vecinos no diagonales.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://help.gnome.org/users/lightsoff/stable/&#34;&gt;Manual&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/lights-off.png&#34; title=&#34;Juego luces fuera&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/lights-off-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Juego luces fuera&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;mahjongg&#34;&gt;Mahjongg&lt;/h3&gt;

&lt;p&gt;Mahjongg es un solitario para un jugador donde el objetivo es seleccionar baldosas iguales que hacerlo son eliminadas del tablero. Dado el parecido de los dibujos de algunas fichas es necesario un poco de agudeza visual y memoria fotográfica.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://wiki.gnome.org/Apps/Mahjongg&#34;&gt;Manual&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/mahjongg.png&#34; title=&#34;Juego mahjongg&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/mahjongg-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Juego mahjongg&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;minas&#34;&gt;Minas&lt;/h3&gt;

&lt;p&gt;Mines es un juego de puzle donde hay que localizar las minas flotando en un océano usando solo tu cerebro y un poco de suerte. El juego empieza con una rejilla de cuadrados cubiertos sin idea de donde están las minas. Si descubres una casilla vacía sobrevives y tienes otra oportunidad. Se proporciona un poco de ayuda, al encontrar una casilla vacía se muestra un número que dirá cuántas minas hay en las casillas adyacentes (o sin numero si no hay minas cerca). Una vez localices unas pocas casillas vacías puedes empezar a deducir que casillas tiene minas y cuáles no. Ganas el juego una vez hayas revelado todas las minas sin minas y marcado todas las casillas con minas.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://library.gnome.org/users/gnome-mines/stable/&#34;&gt;Manual&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/mines.png&#34; title=&#34;Juego minas&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/mines-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Juego minas&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;nibbles&#34;&gt;Nibbles&lt;/h3&gt;

&lt;p&gt;En Nibbles es un juego donde controlas una serpiente. La serpiente se mueve alrededor del tablero comiendo diamantes a la vez que esquivando los muros de alrededor. Posee un modo de juego en red y hasta seis gusanos oponentes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://library.gnome.org/users/gnome-nibbles/stable/&#34;&gt;Manual&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/nibbles.png&#34; title=&#34;Juego nibbles&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/nibbles-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Juego nibbles&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;quadrapassel&#34;&gt;Quadrapassel&lt;/h3&gt;

&lt;p&gt;Es similar al clásico &lt;a href=&#34;https://es.wikipedia.org/wiki/Tetris&#34;&gt;juego Tetris&lt;/a&gt;. El objetivo del juego es crear una línea horizontal completa de bloques que desaparecerán. Los bloques se colocan en fichas de seis formas hechas de cuatro bloques cada una: una recta, dos en forma de L, un cuadrado y dos en forma de S. Los bloques caen desde arriba de la pantalla en orden aleatorio. Rotando los bloques y moviéndolos para conseguir líneas completas de bloques y consiguiendo puntos. A medida que el marcador es mayor el nivel del juego y la velocidad de caída de los bloques será mayor.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://library.gnome.org/users/quadrapassel/stable/&#34;&gt;Manual&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/quadrapassel.png&#34; title=&#34;Juego quadrapassel&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/quadrapassel-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Juego quadrapassel&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;robots&#34;&gt;Robots&lt;/h3&gt;

&lt;p&gt;Debes evitar una horda de robots que intentarán alcanzarte. En cada paso que des se acercarán más a ti. Afortunadamente no son muy listos y se destruirán si chocan entre ellos además de que que tendrás una aparato de teleportación de gran ayuda.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://help.gnome.org/users/gnome-robots/stable/&#34;&gt;Manual&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/robots.png&#34; title=&#34;Juego robots&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/robots-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Juego robots&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;sudoku&#34;&gt;Sudoku&lt;/h3&gt;

&lt;p&gt;Sudoku es un juego de lógica japonés donde iremos colocando números que no se han de repetir ni en la misma fila horizontal ni vertical ni en las diagonales centrales ni en su recuadro.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://library.gnome.org/users/gnome-sudoku/stable/&#34;&gt;Manual&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/sudoku.png&#34; title=&#34;Juego sudoku&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/sudoku-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Juego sudoku&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;swell-foop&#34;&gt;Swell Foop&lt;/h3&gt;

&lt;p&gt;Es un juego de tipo puzle cuyo objetivo es eliminar los objetos del mismo color y figura adyacentes en el menor número de movimientos posible o la mayor cantidad de ellos en cada movimiento. Los objetos restantes colapsarán para rellenar los huecos vacíos y se formarán nuevos grupos. No se pueden eliminar objetos individuales.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://library.gnome.org/users/swell-foop/stable/&#34;&gt;Manual&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/swell-foop.png&#34; title=&#34;Juego swell foop&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/swell-foop-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Juego swell foop&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;tali&#34;&gt;Tali&lt;/h3&gt;

&lt;p&gt;Es un juego de tipo poker con dados y menos dinero. Lanzas los dados tres veces intentando crear la mejor mano. Los dos relanzamientos incluyen ninguno o todos los datos.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://help.gnome.org/users/tali/stable/&#34;&gt;Manual&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/tali.png&#34; title=&#34;Juego tali&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/tali-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Juego tali&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;tetravex&#34;&gt;Tetravex&lt;/h3&gt;

&lt;p&gt;Es un juego tipo puzle donde las piezas han de posicionarse de modo que los mismo números estén adyacentes entre si. El juego es cronometrado y los tiempos almacenados en un marcador global al sistema.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://help.gnome.org/users/gnome-tetravex/stable/&#34;&gt;Manual&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/tetravex.png&#34; title=&#34;Juego tetravex&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/tetravex-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Juego tetravex&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;ajedrez&#34;&gt;Ajedrez&lt;/h3&gt;

&lt;p&gt;Es el clásico juego de ajedrez donde las partidas pueden ser jugadas contra un humano o una computadora. He escrito un &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-ajedrez-en-gnu-linux-con-gnome/&#34;&gt;artículo sobre el juego de ajedrez&lt;/a&gt; de GNOME.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/chess.png&#34; title=&#34;Juego ajedrez&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/167/chess-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Juego ajedrez&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-linux"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/08/como-y-por-que-redirigir-trafico-web-del-dominio-raiz-al-subdominio-www/</id>
        <title>Cómo y por que redirigir tráfico web del dominio raíz al subdominio www (o viceversa)</title>        
        <updated>2016-08-05T18:00:00+02:00</updated>
        <published>2016-08-05T17:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/08/como-y-por-que-redirigir-trafico-web-del-dominio-raiz-al-subdominio-www/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;La redirección del dominio raíz al subdominio es una de las cosas básicas que es recomendable realizar en todo dominio, para ello hay que añadir algo de configuración propia de cada servidor para realizar la redirección. Junto con usar el uso del protocolo HTTPS y forzar su uso con otra redirección mejoraremos el SEO y evitaremos penalizaciones por contenido duplicado.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/html.png&#34; class=&#34;right&#34; alt=&#34;HTML&#34; title=&#34;HTML&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;El nombre de un dominio está formado por varios subdominios separados por un caracter punto. Están los dominios de nivel superior, los genéricos y más antiguos &lt;em&gt;.com&lt;/em&gt;, &lt;em&gt;.org&lt;/em&gt;, &lt;em&gt;.info&lt;/em&gt;, &lt;em&gt;.net&lt;/em&gt;, los propios de cada país o territoriales &lt;em&gt;.es&lt;/em&gt;, &lt;em&gt;.fr&lt;/em&gt;, &lt;em&gt;.de&lt;/em&gt; y más recientemente un montón de &lt;a href=&#34;https://es.wikipedia.org/wiki/Dominio_de_nivel_superior&#34;&gt;nuevos dominios de nivel superior&lt;/a&gt; (&lt;em&gt;.futbol&lt;/em&gt;, &lt;em&gt;.arte&lt;/em&gt;, &lt;em&gt;.blog&lt;/em&gt;, &lt;em&gt;.madrid&lt;/em&gt;, &amp;hellip;) aunque significativamente más caros. Después del dominio de nivel superior está el subdominio de la empresa, marca o personal, por ejemplo, &lt;em&gt;empresa.com&lt;/em&gt; que es realmente lo que compramos cuando solicitamos registrar un dominio. En nuestro dominio &lt;em&gt;empresa.com&lt;/em&gt; podemos administrar múltiples subdominios los clásicos son &lt;em&gt;www.empresa.com&lt;/em&gt; para el servidor web, &lt;em&gt;smpt.empresa.com&lt;/em&gt; para el correo electrónico, &lt;em&gt;ftp.empresa.com&lt;/em&gt; para la transferencia de archivos y otros cualesquiera que deseemos.&lt;/p&gt;

&lt;p&gt;En el caso del tráfico web debemos evitar que el servidor y la página o aplicación sea accedida por &lt;em&gt;empresa.com&lt;/em&gt; y &lt;em&gt;www.empresa.com&lt;/em&gt; ya que los buscadores tratarán a la página como dos diferentes y posiblemente detectando contenido duplicado que afectará negativamente o penalizando al SEO de la web. Lo que se suele hacer es hacer una &lt;a href=&#34;https://es.wikipedia.org/wiki/HTTP_301&#34;&gt;redirección permanente&lt;/a&gt; (cuyo código de estado HTTP para la respuesta es 301) a nivel de servidor que redirija el tráfico de &lt;em&gt;empresa.com&lt;/em&gt; a &lt;em&gt;www.empresa.com&lt;/em&gt; cuando el usuario acceda con su navegador con la primera.&lt;/p&gt;

&lt;p&gt;Esta es una de las cosas básicas que debemos realizar cuando instalemos un servidor web, otras cosas recomendadas para mejorar el SEO y la seguridad de los usuarios es &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/02/configurar-http-2-en-nginx-apache-httpd-wildfly-o-jetty/&#34;&gt;configurar el servidor web para usar el protocolo seguro HTTPS&lt;/a&gt; y &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/06/como-redirigir-peticiones-de-http-a-https-en-nginx-apache-tomcat-jetty-y-wildfly/&#34;&gt;configurar el servidor web para forzar el uso de HTTPS&lt;/a&gt; también haciendo una redirección cuando la petición use el protocolo no cifrado HTTP entre otras cosas que indico en la &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/web/&#34;&gt;serie web&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Dependiendo del servidor web que utilicemos la configuración a añadir para hacer la redirección será distinta, a continuación indicaré como hacerlo en dos de los servidores web más populares como son &lt;a href=&#34;http://nginx.org/&#34;&gt;Nginx&lt;/a&gt; y &lt;a href=&#34;http://httpd.apache.org/&#34;&gt;Apache HTTPD&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;nginx&#34;&gt;Nginx&lt;/h3&gt;

&lt;p&gt;Usando Docker y el archivo de configuración completo podemos probar que funciona en local sin necesidad de instalar o cambiar la configuración de Nginx si tenemos instalado su paquete.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/82d3c361c947d57a25b346b386bdf3a9.js?file=docker-run-nginx.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/82d3c361c947d57a25b346b386bdf3a9/raw/docker-run-nginx.sh&#34;&gt;docker-run-nginx.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/82d3c361c947d57a25b346b386bdf3a9.js?file=nginx.conf&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/82d3c361c947d57a25b346b386bdf3a9/raw/nginx.conf&#34;&gt;nginx.conf&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/166/nginx.png&#34; title=&#34;Dominio antes de acceder al sitio&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/166/nginx-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/166/nginx-www.png&#34; title=&#34;Dominio después de acceder al sitio&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/166/nginx-www-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Dominio antes y después de acceder al sitio con Nginx&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;apache&#34;&gt;Apache&lt;/h3&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/82d3c361c947d57a25b346b386bdf3a9.js?file=docker-run-httpd.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/82d3c361c947d57a25b346b386bdf3a9/raw/docker-run-httpd.sh&#34;&gt;docker-run-httpd.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/82d3c361c947d57a25b346b386bdf3a9.js?file=httpd.conf&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/82d3c361c947d57a25b346b386bdf3a9/raw/httpd.conf&#34;&gt;httpd.conf&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/166/httpd.png&#34; title=&#34;Dominio antes de acceder al sitio&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/166/httpd-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/166/httpd-www.png&#34; title=&#34;Dominio después de acceder al sitio&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/166/httpd-www-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Dominio antes y después de acceder al sitio con Apache HTTPD&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Si prefieriesemos hacer la redirección al revés, del subdominio www al dominio, variaríamos los valores de los nombres del servidor y los valores de las directivas de redirección. En los enlaces de referencia se incluye un ejemplo de esta configuración.&lt;/p&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/RedirigirSubdiminio&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;Referencia:
&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://easyengine.io/tutorials/nginx/www-non-www-redirection/&#34;&gt;Nginx config for www to non-www and non-www to www redirection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.thesitewizard.com/apache/redirect-domain-www-subdomain.shtml&#34;&gt;How to Redirect URLs from Your Root Domain to the WWW Subdomain and Vice Versa&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/configurar-nginx-para-cachear-respuestas-del-servidor-de-aplicaciones/</id>
        <title>Configurar Nginx para cachear respuestas del servidor de aplicaciones</title>        
        <updated>2016-07-31T01:00:00+02:00</updated>
        <published>2016-07-30T13:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/07/configurar-nginx-para-cachear-respuestas-del-servidor-de-aplicaciones/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Las caches son un recurso utilizado para aumentar el rendimiento y evitar malgastar recursos. Si una petición es muy costosa pero que no cambia muy a menudo o no se necesitan que los datos estén totalmente actualizados cachear el resultado de esa petición evitará tener que recalcularla para cada petición, si se realizan muchas peticiones el aumento de rendimiento será drásticamente mejor usando además un menor número de recursos de los sistemas. Hay soluciones específicas para cacheo pero si nuestra necesidades no son extremadamente avanzadas el cacheo ofrecido por Nginx probablemente sea suficiente.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/nginx.png&#34; class=&#34;right&#34; alt=&#34;Nginx&#34; title=&#34;Nginx&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Los servidores web son muy eficientes devolviendo al cliente archivos estáticos. Tradicionalmente el contenido estático formado por hojas de estilo, archivos JavaScript, imágenes o vídeos de una página o aplicación web han sido devueltos por un servidor web evitando que el servidor de aplicaciones tenga que procesar una gran cantidad de peticiones, aún hoy se sigue haciendo. En caso de que los recursos estáticos estén alojados en el servidor de aplicaciones en vez de en el servidor web, porque los recursos estáticos se empaquetan con la aplicación, el servidor web puede cachearlos evitando que peticiones lleguen al servidor de aplicaciones. En este artículo comentaré cual es la configuración necesaria a añadir en el servidor web &lt;a href=&#34;http://nginx.org/&#34;&gt;Nginx&lt;/a&gt; que hace de &lt;em&gt;proxy&lt;/em&gt; para que cachee el resultado de las peticiones así indicadas del servidor de aplicaciones, la aplicación genera el contenido y establece las cabeceras de cache indicando como quiere que se cachee el contenido devuelto.&lt;/p&gt;

&lt;p&gt;Para que el servidor web realice el cacheo de los recursos en la aplicación esta ha de devolver en las cabeceras de respuesta como quiere que los recursos sean cacheados usando las cabeceras &lt;em&gt;Last-Modified&lt;/em&gt;, &lt;em&gt;Expires&lt;/em&gt;, &lt;em&gt;Cache-Control&lt;/em&gt; quizá &lt;em&gt;Etag&lt;/em&gt;. &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/las-cabeceras-de-cache-del-protocolo-http/&#34;&gt;Las cabeceras de cache del protocolo HTTP&lt;/a&gt; establecen el comportamiento deseado para la cache.&lt;/p&gt;

&lt;p&gt;Hay que modificar el archivo de configuración de Nginx para que cachee el contenido. La directiva &lt;em&gt;proxy_cache_path&lt;/em&gt; indica donde se guardarán el contenido cacheado, cual es el tamaño de los metadatos de la caché y el tiempo de inactividad para cachear pasado el cual los recursos serán descartables. La directiva &lt;em&gt;proxy_cache_key&lt;/em&gt; permite diferenciar los recursos en la cache, &lt;em&gt;add_header X-Proxy-Cache&lt;/em&gt; añade una cabecera para la respuesta de Nginx con el resultado de cache que nos permite conocer si se produjo un acierto en la caché, un fallo o se ignoró la cache. Lo que es útil para depurar la aplicación u obtener información. Con &lt;em&gt;proxy_pass&lt;/em&gt; hacemos que Nginx haga de &lt;em&gt;proxy&lt;/em&gt; para el servidor de aplicaciones o la aplicación.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/9bc353ad2c84bfd320c4819f2a91b98c.js?file=nginx.conf&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/9bc353ad2c84bfd320c4819f2a91b98c/raw/nginx.conf&#34;&gt;nginx.conf&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/9bc353ad2c84bfd320c4819f2a91b98c.js?file=docker-compose.yml&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/9bc353ad2c84bfd320c4819f2a91b98c/raw/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;La siguiente pequeña aplicación Java que usa el &lt;a href=&#34;http://spark.apache.org/&#34;&gt;framework Spark&lt;/a&gt; expone dos recursos para probar el funcionamiento de cache de Nginx, un recurso añade cabeceras de cacheo para la respuesta y otro no añade las cabeceras de respuesta. Atendiendo a las cabeceras establecidas por la aplicación y Nginx configurado para hacer de &lt;em&gt;proxy&lt;/em&gt; y cache devolverá el contenido deseado de su cache o solicitándolo a la aplicación y cacheándolo si así se indica en las cabeceras de respuesta.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/9bc353ad2c84bfd320c4819f2a91b98c.js?file=Main.java&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/9bc353ad2c84bfd320c4819f2a91b98c/raw/Main.java&#34;&gt;Main.java&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;La primera petición que se realiza al recurso &lt;em&gt;cache&lt;/em&gt; devuelve un &lt;a href=&#34;https://es.wikipedia.org/wiki/Anexo:C%C3%B3digos_de_estado_HTTP#2xx:_Peticiones_correctas&#34;&gt;código de estado 200 de HTTP&lt;/a&gt; y Nginx en la cabecera &lt;em&gt;X-Proxy-Cache&lt;/em&gt; indica que se ha producido un &lt;em&gt;MISS&lt;/em&gt; o fallo en la cache, la segunda petición realizada antes de que pase el minuto del tiempo de expiración devuelve un &lt;a href=&#34;https://es.wikipedia.org/wiki/Anexo:C%C3%B3digos_de_estado_HTTP#3xx:_Redirecciones&#34;&gt;código de estado 304&lt;/a&gt; y Nginx en la cabecera &lt;em&gt;X-Proxy-Cache&lt;/em&gt; un &lt;em&gt;HIT&lt;/em&gt; o acierto en la cache, finalmente pasado más de un minuto del tiempo de expiración se devuelve un código de estado 200 y Nginx en la cabecera &lt;em&gt;X-Proxy-Cache&lt;/em&gt; un &lt;em&gt;EXPIRED&lt;/em&gt;. En las trazas de Nginx vemos las peticiones que se producen sus códigos de estado y después de este los bytes transferidos de contenido, nótese que en los casos de los 304 los bytes transferidos son 0, bytes de datos ahorrados y evitado que la petición llegue a la aplicación que son unos de los objetivos de las caches. En el recurso &lt;em&gt;nocache&lt;/em&gt; de la aplicación Nginx no cachea el contenido devuelto ya que en este no se establecen las cabeceras de cache en la respuesta.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/165/nginx-cache-peticion-miss.png&#34; title=&#34;Fallo en la cache de Nginx&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/165/nginx-cache-peticion-miss-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/165/nginx-cache-peticion-hit.png&#34; title=&#34;Acierto en la cache de Nginx&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/165/nginx-cache-peticion-hit-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/165/nginx-cache-peticion-expired.png&#34; title=&#34;Expiración en la cache de Nginx&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/165/nginx-cache-peticion-expired-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/165/curl-cache-miss-hit-expired.png&#34; title=&#34;Fallo, acierto y expiración en la cache de Nginx con curl&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/165/curl-cache-miss-hit-expired-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Fallo, acierto y expiración que produce en la cache de Nginx al realizar peticiones&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/9bc353ad2c84bfd320c4819f2a91b98c.js?file=nginx.out&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/9bc353ad2c84bfd320c4819f2a91b98c/raw/nginx.out&#34;&gt;nginx.out&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/9bc353ad2c84bfd320c4819f2a91b98c.js?file=curl-cache.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/9bc353ad2c84bfd320c4819f2a91b98c/raw/curl-cache.sh&#34;&gt;curl-cache.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Hay servidores específicos para realizar tareas de cache como &lt;a href=&#34;https://varnish-cache.org/&#34;&gt;Varnish&lt;/a&gt; con más opciones de las que ofrece Nginx. Para los casos no complicados usando Nginx evitamos añadir una nueva pieza a la arquitectura de la aplicación. Entre los productos que ofrece Amazon está &lt;a href=&#34;https://aws.amazon.com/es/cloudfront/&#34;&gt;Cloudfront&lt;/a&gt; que es una cache para recursos estáticos con el añadido de que de forma automática está distribuida geográficamente de forma que los recursos se sirven por un servidor más cercano al cliente evitando un mal rendimiento por la latencia. En el artículo &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/07/servir-recursos-estaticos-desde-un-cdn-en-apache-tapestry/&#34;&gt;servir recursos estáticos de un CDN en Apache Tapestry&lt;/a&gt; comento como usar esta red de distribución de contenido ofrecida por Amazon.&lt;/p&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/NginxCache&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew build &amp;amp;&amp;amp; cd docker &amp;amp;&amp;amp; docker-compose up&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/07/servir-recursos-estaticos-desde-un-cdn-en-apache-tapestry/&#34;&gt;Servir recursos estáticos desde un CDN en Apache Tapestry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://serversforhackers.com/nginx-caching&#34;&gt;Nginx Caching&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-clasico-de-estrategia-de-tablero-go-en-gnu-linux/</id>
        <title>Jugar al clásico de estrategia de tablero Go en GNU/Linux</title>        
        <updated>2016-07-23T13:00:00+02:00</updated>
        <published>2016-07-23T13:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-clasico-de-estrategia-de-tablero-go-en-gnu-linux/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;En esta serie de artículos sobre juegos vamos a ver que en GNU/Linux también hay juegos a los que podemos jugar en nuestra plataforma preferida. Otro de ellos es el clásico de estrategia Go.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/linux.png&#34; class=&#34;right&#34; alt=&#34;Linux&#34; title=&#34;Linux&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/gnu.png&#34; class=&#34;right&#34; alt=&#34;GNU&#34; title=&#34;GNU&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Otro de los juegos clásicos junto con el ajedrez también para dos personas que requiere pensar y evaluar gran cantidad de posibles movimientos es el juego de origen chino Go. En &lt;a href=&#34;http://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;/&lt;a href=&#34;http://www.linux.com/&#34;&gt;Linux&lt;/a&gt; e instalado el paquete &lt;a href=&#34;https://www.archlinux.org/packages/extra/x86_64/gnugo/&#34;&gt;gnugo&lt;/a&gt; podremos jugar a este antiguo juego de estrategia tan o más complicado que el propio ajedrez por las diferentes estrategias que se pueden desarrollar.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/8c078a5ff56706bdc066311218935b76.js?file=pacman.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/8c078a5ff56706bdc066311218935b76/raw/pacman.sh&#34;&gt;pacman.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Dado que en esta versión para computadora el juego Go se basa en modo texto podremos jugarlo en cualquier sistema GNU/Linux dados su bajos requerimientos que son despreciables para cualquier computadora actual, incluso para una &lt;a href=&#34;http://www.raspberrypi.org/&#34;&gt;Raspberry Pi&lt;/a&gt; u otros sistemas como la familia &lt;a href=&#34;https://es.wikipedia.org/wiki/Berkeley_Software_Distribution&#34;&gt;BSD&lt;/a&gt; e incluso &lt;a href=&#34;http://www.minix3.org/&#34;&gt;Minix&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;El tablero clásico se compone de una matriz de 19 por 19 en el que en las intersecciones se irán colocando las fichas de forma alternativa entre cada jugador tratando de capturar las fichas del oponente rodeándolas con las que nosotros pongamos o de dominar la mayor cantidad del tablero. Cuando se da el juego por terminado se realiza el cálculo del marcador según el territorio dominado por las fichas y las piezas capturadas del oponente en el transcurso del mismo.&lt;/p&gt;

&lt;p&gt;En el juego de computadora el siguiente movimiento se hace introduciendo la coordenada del tablero donde queremos colocar la siguiente piedra que se compone de una letra para la coordenada horizontal y un número para la coordenada vertical.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/163/tablero-go.jpg&#34; title=&#34;Tablero tradicional de Go&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/163/tablero-go-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/163/tablero-gnugo.png&#34; title=&#34;Tablero de Gnugo&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/163/tablero-gnugo-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Tablero tradicional de juego y tablero de Gnugo&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;En la wikipedia está documentado de forma bastante extensa las &lt;a href=&#34;https://es.wikipedia.org/wiki/Go#Reglas_del_go&#34;&gt;reglas del juego Go&lt;/a&gt;, las diferentes formas de &lt;a href=&#34;https://es.wikipedia.org/wiki/Go#Puntuaci.C3.B3n&#34;&gt;calcular el marcador al final del juego&lt;/a&gt; y las &lt;a href=&#34;https://es.wikipedia.org/wiki/Go#T.C3.A1ctica&#34;&gt;tácticas&lt;/a&gt; y &lt;a href=&#34;https://es.wikipedia.org/wiki/Go#Estrategia_b.C3.A1sica&#34;&gt;estrategias&lt;/a&gt; para jugar de la forma más efectiva que podamos.&lt;/p&gt;

&lt;p&gt;Como una partida puede durar una buena cantidad de tiempo podemos salvar una partida a medias y cargarla de nuevo con los siguientes comandos:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/8c078a5ff56706bdc066311218935b76.js?file=save-commands.txt&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/8c078a5ff56706bdc066311218935b76/raw/save-commands.txt&#34;&gt;save-commands.txt&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Con el comando &lt;code&gt;help&lt;/code&gt; obtendremos una lista completa de los comandos a nuestra disposición como volver un movimiento hacia atrás si nos hemos equivocado al introducir el siguiente movimiento.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/8c078a5ff56706bdc066311218935b76.js?file=help.out&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/8c078a5ff56706bdc066311218935b76/raw/help.out&#34;&gt;help.out&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;En Amazon hay algunos libros como &lt;a href=&#34;http://amzn.to/2anENOU&#34;&gt;El Go, un juego oriental milenario&lt;/a&gt; y &lt;a href=&#34;http://amzn.to/29ULTWQ&#34;&gt;GO para principiantes&lt;/a&gt;, en la librería libre también hay algunos como &lt;a href=&#34;https://openlibra.com/es/book/manual-del-juego-del-go&#34;&gt;Manual del Juego del Go&lt;/a&gt; y &lt;a href=&#34;https://openlibra.com/es/book/go-utilizando-las-36-estrategias-chinas&#34;&gt;GO: Utilizando las 36 estrategias chinas&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B015ENSU18&amp;linkId=210d272021d815869d2c44e1503b904e&amp;internal=1&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=8415211945&amp;linkId=f7342910d70bf91cda078a1ce3abbbc0&amp;internal=1&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Go_(game)&#34;&gt;Juego Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Rules_of_go&#34;&gt;Rules of go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/gnugo/&#34;&gt;GNU Go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-linux"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/las-cabeceras-de-cache-del-protocolo-http/</id>
        <title>Las cabeceras de cache del protocolo HTTP</title>        
        <updated>2016-07-24T22:00:00+02:00</updated>
        <published>2016-07-22T18:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/07/las-cabeceras-de-cache-del-protocolo-http/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Establecer directivas de cacheo en los recursos devueltos en una página o aplicación web tiene las ventajas de reducir el número de peticiones que llegan al servidor mejorando la latencia y el rendimiento pudiendo atender a más usuarios y mejora los tiempos de carga de las páginas. Usando varias directivas de cacheo la aplicación es capaz de determinar cómo quiere que el contenido devuelto o los recursos sean cacheados por los clientes o servidores de cache intermedios.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/html.png&#34; class=&#34;right&#34; alt=&#34;HTML&#34; title=&#34;HTML&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Cachear aquella información que es costosa de generar y es muy solicitada consigue por un lado evitar que el servidor sea capaz de atender todo el tráfico reduciendo la cantidad de capacidad necesaria del servidor y por otro lado consigue que la información sea devuelta en menor tiempo. Para aquella información que no necesite estar completamente actualizada o que no cambia cada poco tiempo es candidata a cachearla en caso necesario. La cache se puede realizar en los navegadores guardando estos recursos como imágenes y hojas de estilos que consiguen reducir el número de peticiones al servidor y mostrando la página más rápidamente al usuario. La cache también se puede hacer en el lado del servidor usando soluciones específicas como &lt;a href=&#34;https://varnish-cache.org/&#34;&gt;Varnish&lt;/a&gt;, &lt;a href=&#34;http://memcached.org/&#34;&gt;memcached&lt;/a&gt; o para los casos más habituales que serán la mayoría las funcionalidades incorporadas en el servidor web como en el caso de &lt;a href=&#34;http://nginx.org/&#34;&gt;Nginx&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;El cacheo o almacenamiento temporal de datos puede hacerse a diferentes niveles sin ser exclusivos y de diferentes tipos de información. En la base de datos, en la aplicación, a nivel de página, con servidor intermedio o en el cliente.&lt;/p&gt;

&lt;p&gt;Según la cantidad de tiempo de expiración que establezcamos como cache para el contenido conseguiremos variar el número de aciertos en la cache, aumentando el tiempo unos pocos segundos el tiempo que almacenamos en la cache el contenido conseguimos aumentar el porcentaje de aciertos en mayor medida. Con un tiempo de cache de un minuto ya se consiguen porcentajes elevados de aciertos según el número de peticiones realizadas en ese periodo de tiempo.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/162/cache-hit.png&#34; title=&#34;Petición con acierto en cache&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/162/cache-hit-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/162/cache-miss.png&#34; title=&#34;Petición con fallo en cache&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/162/cache-miss-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Petición con acierto y fallo en la cache&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;En el protocolo HTTP 1.1 se definieron tres mecanismos para las caches:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Validez: permite usar un recurso sin hacer ninguna comprobación con el servidor ni para revalidarlo. Por ejemplo, la cabecera &lt;em&gt;Expires&lt;/em&gt; indica en que momento el recurso puede haberse quedado obsoleto y se debería revalidar. La cabecera &lt;em&gt;Cache-Control: max-age&lt;/em&gt; indica durante cuanto tiempo el recurso puede considerarse válido. Esto evita hacer peticiones al servidor si los recursos se consideran válidos.&lt;/li&gt;
&lt;li&gt;Validación: una vez que un recurso se considera que puede ser obsoleto se debería comprobar haciendo una petición al servidor para conocer si sigue siendo válido y si no lo es obtener una nueva versión. Usando las cabeceras &lt;em&gt;If-Modified-Since&lt;/em&gt; o &lt;em&gt;Etag&lt;/em&gt; puede comprobarse si el recurso ha sido modificado con posterioridad a una fecha o ha variado. Se ha de hacer una petición para comprobar la validez del recurso pero los casos que sigan siendo válidos no hará falta descargarlos de nuevo. Si el recurso sigue siendo válido el servidor responde con el &lt;a href=&#34;https://es.wikipedia.org/wiki/Anexo:C%C3%B3digos_de_estado_HTTP#3xx:_Redirecciones&#34;&gt;código de estado 304&lt;/a&gt; y sin el contenido en la respuesta.&lt;/li&gt;
&lt;li&gt;Invalidación: las peticiones que usen los métodos &lt;em&gt;PUT&lt;/em&gt;, &lt;em&gt;POST&lt;/em&gt; y &lt;em&gt;DELETE&lt;/em&gt; pueden invalidar recursos ya que modifican el estado del servidor.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;El servidor especifica como quiere que el contenido o recursos que devuelve sean cacheados a través de varias directivas del protocolo HTTP, establecidas como cabeceras en la respuesta cuando se solicita el contenido o recurso. Algunas cabeceras realizan funciones similares habiendo cierto solapamiento de funcionalidad. Son las siguientes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cache-Control: private | public, no-cache, no-store, max-age, s-maxage, must-revalidate, no-transform, proxy-revalidate

&lt;ul&gt;
&lt;li&gt;El valor &lt;em&gt;private&lt;/em&gt; indica que el recurso es privado para el usuario y no debería ser cacheado. Esto no hace el recurso más seguro ya que la información no se transmite cifrada para ello hay que &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/02/configurar-ssl-en-un-servidor-tomcat-jboss-wildfly-lighttpd-nginx-apache/&#34;&gt;usar un protocolo seguro con TLS/SSL&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;no-cache&lt;/em&gt; el recurso no debería ser cacheado.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;no-store&lt;/em&gt; el recurso no debería ser almacenado.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;max-age&lt;/em&gt; normalmente se ha usado la directiva &lt;em&gt;Expires&lt;/em&gt; pero esta permite establecer el máximo tiempo especificado en segundos a cachear un recurso.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;s-maxage&lt;/em&gt; similar a max-age pero para las caches intermedias entre el cliente y el servidor.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;must-revalidate&lt;/em&gt; cuando un recurso se queda obsoleto no se debe usar sin antes validar contra el servidor si sigue siendo válido.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;no-transform&lt;/em&gt; indica que el contenido original no debe ser modificado, por ejemplo, modificando el recurso para optimizarlo si por ejemplo se trata de una imagen.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;proxy-revalidate&lt;/em&gt; lo mismo que &lt;em&gt;must-revalidate&lt;/em&gt; pero para las caches intermedias.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;If-Modified-Since: si el recurso solicitado con su variante no ha sido modificado con posterioridad a una fecha se devolverá un código de estado 304 sin el contenido.&lt;/li&gt;
&lt;li&gt;Expires: es una marca de tiempo que indica cuando el recurso expira, dado que se basa en el tiempo no es muy precisa ya que los relojes de cada ordenador no están perfectamente sincronizados y hay variaciones incluso de minutos. Preferiblemente es mejor usar &lt;em&gt;Etag&lt;/em&gt; o &lt;em&gt;max-age&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://es.wikipedia.org/wiki/HTTP_ETag&#34;&gt;Etag&lt;/a&gt;: &lt;em&gt;entity-tag&lt;/em&gt; o &lt;em&gt;etag&lt;/em&gt; es un código &lt;em&gt;hash&lt;/em&gt; único del contenido que permite conocer si el recurso ha cambiado. Si el recurso no ha cambiado no hace falta devolver el recurso, si ha cambiado se devuelve en la misma petición. Al no depender de una marca de tiempo como &lt;em&gt;Expires&lt;/em&gt; o &lt;em&gt;max-age&lt;/em&gt; es más fiable.&lt;/li&gt;
&lt;li&gt;Vary: indica que el recurso varía según alguna cabecera proporcionada por el cliente como por ejemplo &lt;em&gt;User-Agent&lt;/em&gt; o &lt;em&gt;Accept-Encoding&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Pragma: esta es una directiva antigua que indicada como &lt;em&gt;pragma: no-cache&lt;/em&gt;, se interpreta como &lt;em&gt;cache-control: no-cache&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://dev.mobify.com/blog/beginners-guide-to-http-cache-headers/&#34;&gt;A Beginner&amp;rsquo;s Guide to HTTP Cache Headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html&#34;&gt;Header Field Definitions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://librosweb.es/libro/symfony_2_x/capitulo_14.html&#34;&gt;Capítulo 14. La caché de HTTP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://librosweb.es/libro/symfony_2_x/capitulo_14/introduccion_a_la_cache_de_http.html&#34;&gt;14.3. Introducción a la caché de HTTP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://librosweb.es/libro/symfony_2_x/capitulo_14/caducidad_y_validacion_http.html&#34;&gt;14.4. Caducidad y validación HTTP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/como-crear-vistas-previas-de-imagenes-con-imagemagick/</id>
        <title>Cómo crear vistas previas de imágenes con ImageMagick</title>        
        <updated>2016-07-17T12:00:00+02:00</updated>
        <published>2016-07-17T12:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/07/como-crear-vistas-previas-de-imagenes-con-imagemagick/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/linux.png&#34; class=&#34;right&#34; alt=&#34;Linux&#34; title=&#34;Linux&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/gnu.png&#34; class=&#34;right&#34; alt=&#34;GNU&#34; title=&#34;GNU&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;En una página web es útil utilizar imágenes más pequeñas en tamaño que las originales para reducir la cantidad de kilobytes transferidos al acceder a una página consiguiendo además que cargue más rápido en conexiones lentas. Algunas imágenes en alta calidad pueden ocupar varios &lt;em&gt;megas&lt;/em&gt;, es poco eficiente cargar una imagen que posteriormente en el navegador se visualizará en un tamaño más pequeño, ya que la imagen se descargará en su tamaño original pero posteriormente el navegador al visualizarla la escalará al tamaño en que la muestre.&lt;/p&gt;

&lt;p&gt;Si previamente hacemos el escalado podremos ahorrar una buena cantidad de ancho de banda que se notará en mayor medida en los dispositivos móviles que usen las redes de operadores de telefonía y ahorrará datos en aquellos usuarios que tengan algún límite de transferencia mensual en su tarifa. También afecta al SEO, el tiempo de carga de una página Google es un criterio que tiene en cuenta su algoritmo para ordenar los resultados en su página.&lt;/p&gt;

&lt;p&gt;Si tenemos unas pocas imágenes y no es algo que hagamos a menudo podemos usar una herramienta de retoque fotográfico como &lt;a href=&#34;https://www.gimp.org/&#34;&gt;GIMP&lt;/a&gt; pero si tenemos muchas imágenes o es algo que hacemos de forma regular es conveniente automatizar la tarea, nos ahorraremos bastante tiempo de algo que es tedioso hacer de forma manual.&lt;/p&gt;

&lt;p&gt;Al igual que podemos &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2012/11/convertir-imagenes-entre-formatos-y.html&#34;&gt;convertir imágenes entre diferentes formatos&lt;/a&gt; o &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2011/05/anadir-marcas-de-agua-con-imagemagick.html&#34;&gt;añadir marcas de agua a imágenes&lt;/a&gt; de forma automatizada con &lt;a href=&#34;http://www.imagemagick.org&#34;&gt;Image Magick&lt;/a&gt; podemos escalar imágenes para generar vistas previas o &lt;em&gt;thumbnails&lt;/em&gt; más pequeñas para que ocupen menos. El comando para escalar todas las imágenes de una extensión &lt;em&gt;jpg&lt;/em&gt; en este caso a un tamaño original de 1600 de ancho y 1067 de alto en pixeles conservando la proporción de la imagen es el siguiente:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/e09f72974e4fe881019837fdd3be2836.js?file=convert.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/e09f72974e4fe881019837fdd3be2836/raw/convert.sh&#34;&gt;convert.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;El primero de los comandos sirve para haceer cambios de tamaño de forma individual a cada foto y el segundo de forma masiva usando &lt;a href=&#34;https://es.wikipedia.org/wiki/Bash&#34;&gt;Bash&lt;/a&gt;. Crean nuevos archivos con las vistas previas añadiendo al nombre de cada vista previa la terminación &lt;em&gt;_thumb&lt;/em&gt;, además con la opción &lt;em&gt;-strip&lt;/em&gt; elimina la metainformación de la foto o imagen que se hubiera almacenado junto con ella como hacen los teléfonos móviles y cámaras.&lt;/p&gt;

&lt;p&gt;En Blog Bitix para mostrar la vista previa uso la librería de JavaScript &lt;a href=&#34;https://blueimp.github.io/Bootstrap-Image-Gallery/&#34;&gt;Bootstrap Image Gallery&lt;/a&gt;. Este sería una ejemplo de la imagen que tengo como fondo de escritorio. Su tamaño original ocupa 1 MB, la vista previa aproximadamente 210 KB en tamaño 650x450 y 50 KB en tamaño de 300x200. Una reducciónd de tamaño considerable.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/161/201607.jpg&#34; title=&#34;&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/161/201607-thumb%20%28650x450%29.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/161/201607.jpg&#34; title=&#34;&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/161/201607-thumb%20%28300x200%29.jpg&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Previsualización de imagen en tamaño 650x450 y 300x200 del original 1600x1067&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2011/05/anadir-marcas-de-agua-con-imagemagick.html&#34;&gt;Añadir marcas de agua a imágenes con ImageMagick&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2012/11/convertir-imagenes-entre-formatos-y.html&#34;&gt;Convertir imágenes entre formatos y cambiar tamaño con ImageMagick&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-linux"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-ajedrez-en-gnu-linux-con-gnome/</id>
        <title>Jugar al ajedrez en GNU/Linux con GNOME</title>        
        <updated>2016-07-16T12:00:00+02:00</updated>
        <published>2016-07-16T12:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-ajedrez-en-gnu-linux-con-gnome/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/gnome.png&#34; class=&#34;right&#34; alt=&#34;GNOME&#34; title=&#34;GNOME&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;http://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;/&lt;a href=&#34;http://www.linux.com/&#34;&gt;Linux&lt;/a&gt; no es la plataforma primaria de los juegos triple A, pero existen multitud de juegos libres y gratuitos que igualmente nos hacen pasar muy buenos ratos. Hoy en día los juegos tienen unos gráficos en tres dimensiones espectaculares cada vez más realistas para lo que hasta hace unos pocos años atrás era posible. Aún así algunos juegos no tan avanzados gráficamente son tan o más adictivos y divertidos que cualquier juego triple AAA y con la ventaja de que no requieren tener la última tarjeta gráfica con al última tecnología, gran cantidad de memoria y se pueden jugar en un portátil sin el riesgo de sobrecalentarlo.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/160/gnome-chess.png&#34; title=&#34;Icono del juego de ajedrez de GNOME&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/160/gnome-chess-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Icono del juego de ajedrez de GNOME&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Un juego clásico es el ajedrez y en GNU/Linux y con el entorno de escritorio &lt;a href=&#34;http://gnome.org/&#34;&gt;GNOME&lt;/a&gt; podemos jugar contra un oponente humano o la propia computadora que en el nivel fácil ya nos pondrá en muchas dificultades si es que conseguimos ganarla. Para instalar el juego de ajedrez deberemos instalar el &lt;a href=&#34;https://www.archlinux.org/packages/extra/x86_64/gnome-chess/&#34;&gt;paquete gnome-chess&lt;/a&gt; y si queremos que el oponente sea la computadora instalar el &lt;a href=&#34;https://www.archlinux.org/packages/community/x86_64/gnuchess/&#34;&gt;paquete gnuchess&lt;/a&gt;. Usando &lt;a href=&#34;https://wiki.archlinux.org&#34;&gt;Arch Linux&lt;/a&gt; y su gestor de paquetes los instalamos de la siguiente forma:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/3f805cfbd1c41a3e8d3680d8b5b66864.js?file=pacman.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/3f805cfbd1c41a3e8d3680d8b5b66864/raw/pacman.sh&#34;&gt;pacman.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Iniciado el juego veremos el tablero de 8 por 8 casillas con las fichas posicionadas en las casillas de inicio.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/160/gnome-chess-tablero.png&#34; title=&#34;Juego de ajedrez de GNOME&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/160/gnome-chess-tablero-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Juego de ajedrez de GNOME&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;En la sección de preferencias del juego configuramos si el oponente es otro humano o la computadora, en caso de ser la computadora su nivel de inteligencia o dificultad, si queremos jugar con las fichas blancas o negras si queremos establecer un tiempo límite para la partida para cada jugador y el tipo de reloj para el tiempo límite. En el apartado del aspecto podemos cambiar la apariencia de las fichas, el formato de la última jugada, la orientación del tablero, si queremos numeración y si queremos sugerencias.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/160/gnome-chess-preferencias-juego.png&#34; title=&#34;Preferencias de juego de ajedrez de GNOME&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/160/gnome-chess-preferencias-juego-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/160/gnome-chess-preferencias-aspecto.png&#34; title=&#34;Preferencias de aspecto de ajedrez de GNOME&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/160/gnome-chess-preferencias-aspecto-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Preferencias del juego&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;También podemos guardar la partida para continuarla con posterioridad. Solo nos queda practicar la diferentes aperturas que forman una parte esencial de juego seguir alguna estrategia para el juego medio y como finalizar la partida con las piezas que no hayan sido eliminadas por el oponente. En la wikipedia hay algún &lt;a href=&#34;https://es.wikipedia.org/wiki/Ajedrez&#34;&gt;buen artículo introductorio al ajedrez&lt;/a&gt; y &lt;a href=&#34;https://es.wikipedia.org/wiki/Apertura_(ajedrez)&#34;&gt;algunos artículos sobre las aperturas&lt;/a&gt; donde encontratremos las más conocidas y seguro que otras muchas que no conocíamos e incluso si estamos aprendiendo la &lt;a href=&#34;https://es.wikipedia.org/wiki/Leyes_del_ajedrez&#34;&gt;reglas del juego&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;En Amazon hay varios libros que serán más didácticos sobre estrategia para el juego del ajedrez como &lt;a href=&#34;http://amzn.to/29Cj30T&#34;&gt;Ajedrez para niños&lt;/a&gt; o &lt;a href=&#34;http://amzn.to/29CiOTD&#34;&gt;El ajedrez de torneo&lt;/a&gt; y en la biblioteca libre &lt;a href=&#34;https://openlibra.com&#34;&gt;OpenLibra&lt;/a&gt; hay algunos de libre acceso como &lt;a href=&#34;https://openlibra.com/es/book/ajedrez-y-su-ensenanza-libro-de-aperturas&#34;&gt;Ajedrez y su Enseñanza: Libro de Aperturas&lt;/a&gt;. Leyendo alguno de estos libros obtendremos pautas y tácticas que podemos emplear para mejorar nuestras jugadas.&lt;/p&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=8425517893&amp;linkId=c1e1fc606e2606fec91e2db08cadcfa7&amp;internal=1&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=842450397X&amp;linkId=b78575ac7587361ca5bb1405a9a2de99&amp;internal=1&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-linux"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/como-crear-un-proxy-inverso-entre-el-servidor-web-nginx-y-un-servidor-de-aplicaciones-java/</id>
        <title>Cómo crear un proxy inverso entre el servidor web Nginx y un servidor de aplicaciones Java</title>        
        <updated>2016-07-16T13:30:00+02:00</updated>
        <published>2016-07-15T18:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/07/como-crear-un-proxy-inverso-entre-el-servidor-web-nginx-y-un-servidor-de-aplicaciones-java/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Continuando la serie de artículos sobre varios aspectos realizados muy comúnmente en las aplicaciones y servidores web en este artículo explicaré como hacer que un servidor web nginx haga de &lt;em&gt;proxy&lt;/em&gt; inverso para un servidor de aplicaciones Java en este caso Tomcat.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/nginx.png&#34; class=&#34;right&#34; alt=&#34;Nginx&#34; title=&#34;Nginx&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/tomcat.png&#34; class=&#34;right&#34; alt=&#34;Tomcat&#34; title=&#34;Tomcat&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Las aplicaciones web dinámicas Java se despliegan en un contenedor de servlets o un &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/02/servidor-de-aplicaciones-jboss-slash-wildfly/&#34;&gt;servidor de aplicaciones como WildFly&lt;/a&gt; que implementa las &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/03/introduccion-y-nuevas-caracteristicas-de-java-ee-7/&#34;&gt;especificaciones de los estándares de Java EE&lt;/a&gt; pero es habitual que los usuarios no accedan directamente al contenedor de aplicaciones Java sino que se ponga delante un servidor web como &lt;a href=&#34;http://httpd.apache.org/&#34;&gt;Apache&lt;/a&gt; o &lt;a href=&#34;http://nginx.org/&#34;&gt;Nginx&lt;/a&gt; con la tarea de que realice algunas tareas. Las tareas que puede realizar un servidor web son varias como:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/02/configurar-ssl-en-un-servidor-tomcat-jboss-wildfly-lighttpd-nginx-apache/&#34;&gt;Realizar la conexión TLS/SSL&lt;/a&gt; sin necesidad de que llegue al servidor de aplicaciones.&lt;/li&gt;
&lt;li&gt;Servir el contenido estático.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/configurar-nginx-como-balanceador-de-carga/&#34;&gt;Balanceo de carga&lt;/a&gt; con la que podremos tener varios servidores de aplicaciones Java en caso de que la aplicación deba soportar muchos usuarios.&lt;/li&gt;
&lt;li&gt;Cacheo de páginas y contenido.&lt;/li&gt;
&lt;li&gt;Redirecciones y reescritura de URL.&lt;/li&gt;
&lt;li&gt;Seguridad.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/08/forzar-el-uso-del-protocolo-https-en-apache-tapestry/&#34;&gt;Forzar el uso del protocolo seguro HTTPS&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/02/configurar-http-2-en-nginx-apache-httpd-wildfly-o-jetty/&#34;&gt;Ofrecer el protocolo HTTP/2&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/159/reverse-proxy.png&#34; title=&#34;Esquema de un proxy inverso&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/159/reverse-proxy.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Un proxy inverso recibe las peticiones de internet y las reenvía a los servidores de una red interna sin necesidad de que los clientes conozcan la red interna&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Para que un servidor web como Nginx actúe como &lt;em&gt;proxy&lt;/em&gt; inverso o &lt;em&gt;reverse proxy&lt;/em&gt; para un servidor de aplicaciones debemos añadir unas pocas directivas al archivo de configuración del servidor web. En el caso de Nginx usando la directiva &lt;em&gt;proxy_pass&lt;/em&gt; donde indicamos para una localización la URL del servidor de aplicaciones a la que se le solicitará el contenido, en el ejemplo usando un servidor &lt;a href=&#34;http://tomcat.apache.org/&#34;&gt;Tomcat&lt;/a&gt;.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/6dd14f54a22db38e07e9935189461a27.js?file=nginx.conf&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/6dd14f54a22db38e07e9935189461a27/raw/nginx.conf&#34;&gt;nginx.conf&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Una forma fácil de probarlo es usando &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; y &lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;Docker Compose&lt;/a&gt; que en varios artículos introductorios siendo el primero el &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/11/inicio-basico-de-docker/&#34;&gt;inicio básico de Docker&lt;/a&gt; comento como empezar a usarlo y en que consiste esta nueva forma de ejecución para las aplicaciones. Con el siguiente archivo de Docker Compose creamos dos contenedores uno para Nginx en el que proporcionamos su configuración personalizada y otro contenedor para Tomcat.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/6dd14f54a22db38e07e9935189461a27.js?file=docker-compose.yml&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/6dd14f54a22db38e07e9935189461a27/raw/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Al hacer un &lt;em&gt;proxy&lt;/em&gt; inverso debemos tener en cuenta que el servidor Tomcat si devuelve URL absolutas las haga siendo las del servidor web por las que se accede a la aplicación, si únicamente genera URL relativas no deberemos hacer nada pero en el caso de absolutas el servidor Tomcat deberá conocer el protocolo usado en el servidor web (HTTP o HTTPS) y el puerto del servidor web que suele ser 80 para HTTP y 443 para HTTPS pero que en el servidor Tomcat suele ser 8080 para HTTP y 8443 para HTTPS. Si el protocolo y puerto usado en el servidor web y servidor de aplicaciones es diferente y una aplicación genera URL absolutas el servidor de aplicaciones deberá tener esto en cuenta que es lo que se usa el en servidor web.&lt;/p&gt;

&lt;p&gt;En la documentación se comentan varios &lt;a href=&#34;https://tomcat.apache.org/tomcat-8.0-doc/config/http.html&#34;&gt;parámetros de configuración de Tomcat&lt;/a&gt; como &lt;em&gt;proxyPort&lt;/em&gt; y &lt;em&gt;scheme&lt;/em&gt; que ajustan la información devuelta por los métodos &lt;em&gt;request.getServerPort()&lt;/em&gt; y &lt;em&gt;request.getScheme()&lt;/em&gt; y que nos servirá en caso de tener que generar URLs absolutas.&lt;/p&gt;

&lt;p&gt;Arrancado los contenedores con el comando &lt;em&gt;docker-compose up&lt;/em&gt; accediendo al servidor web veremos que el contenido proporcionado es el ofrecido por Tomcat, que con la configuración del ejemplo es la página de inicio de Tomcat. En las cabeceras de respuesta Nginx añade una, &lt;em&gt;Server&lt;/em&gt;, indicando su versión.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/159/nginx-tomcat.png&#34; title=&#34;Nginx configurado como proxy inverso de un servidor de aplicaciones Tomcat&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/159/nginx-tomcat-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Nginx configurado como proxy inverso de un servidor de aplicaciones Tomcat&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;En la &lt;a href=&#34;https://www.nginx.com/resources/admin-guide/reverse-proxy/&#34;&gt;documentación sobre &lt;em&gt;reverse proxy&lt;/em&gt; de Nginx&lt;/a&gt; se explican algunas directivas más para pasar al servidor Tomcat la dirección IP del usuario usando cabeceras HTTP, en la configuración de Nginx usando &lt;em&gt;proxy_set_header&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/NginxReverseProxy&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;docker-compose up&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nginx.com/resources/admin-guide/reverse-proxy/&#34;&gt;NGINX Reverse Proxy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2011/02/unir-apache-httpd-y-tomcat-mediante-un.html&#34;&gt;Unir Apache HTTPD y Tomcat mediante un reverse proxy &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/guia-basica-del-interprete-de-comandos-bash/</id>
        <title>Guía básica del intérprete de comandos Bash</title>        
        <updated>2016-07-10T11:00:00+02:00</updated>
        <published>2016-07-10T11:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/07/guia-basica-del-interprete-de-comandos-bash/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;La línea de comandos sigue siendo una poderosa herramienta que aunque menos intuitiva que una interfaz gráfica permite hacer las tareas de forma más sencilla, directa y que se puede automatizar. Conocer las opciones del intérprete de comandos es básico para aprovechar su máximo potencial. Desde las combinaciones de teclas hasta los &lt;em&gt;scripts&lt;/em&gt; o archivos de lotes. Tuberías y redirecciones, comandos con ejecución condicional, variables, interpolación de cadenas, &lt;em&gt;scrtips&lt;/em&gt;, argumentos, funciones, &lt;em&gt;for&lt;/em&gt;, &lt;em&gt;switch&lt;/em&gt;, &lt;em&gt;if&lt;/em&gt;, comparaciones, &amp;hellip;&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/linux.png&#34; class=&#34;right&#34; alt=&#34;Linux&#34; title=&#34;Linux&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/gnu.png&#34; class=&#34;right&#34; alt=&#34;GNU&#34; title=&#34;GNU&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Automatizar las tareas que realizamos permite ahorrarnos el tiempo de tener que hacerlo manualmente y evita los errores que se puede producir. En &lt;a href=&#34;http://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;/&lt;a href=&#34;http://www.linux.com/&#34;&gt;Linux&lt;/a&gt; el uso de la terminal no es algo extraño y muchas tareas son realizadas más fácil y rápido con un comando que con un programa con interfaz gráfica, además tiene la ventaja de que puede automatizarse creando un &lt;em&gt;script&lt;/em&gt; &lt;a href=&#34;https://es.wikipedia.org/wiki/Bash&#34;&gt;Bash&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;El intérprete de comandos Bash junto con la combinación de otros programas proporcionados por la parte GNU de los sistemas Linux presentes en la mayoría de las distribuciones por defecto es suficiente para automatizar la mayor parte de tareas que necesitemos. Conociendo las posibilidades que ofrece junto con &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/06/combinacion-de-teclas-para-copiar-y-pegar-en-la-terminal/&#34;&gt;las combinaciones de teclas del intérprete Bash y del emulador de la terminal&lt;/a&gt; junto con &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/07/comandos-basicos-de-gnu-linux/&#34;&gt;los comandos básicos de GNU&lt;/a&gt; subiremos un nivel en el manejo de los sistemas GNU/Linux.&lt;/p&gt;

&lt;h3 id=&#34;tuberías-y-redirecciones&#34;&gt;Tuberías y redirecciones&lt;/h3&gt;

&lt;p&gt;Al ejecutar un comando podemos querer encadenar la salida de un comando con la entrada de otro, mediante una tubería. Uno de los puntos de la filosofía de los programas de los sistemas Unix es que realicen una o pocas tareas pero que lo hagan muy bien. Usando varios programas especializados en una tarea podemos juntarlos como si fuese piezas de Lego para realizarla tarea compleja que necesitamos, encadenando la salida de un comando como la entrada del siguiente.&lt;/p&gt;

&lt;p&gt;Una de las cosas buenas de Bash es que está presente por defecto en la mayoría de las distribuciones Linux y si no es este intérprete de comandos será otro similar por lo que no necesitamos instalar nada más adicional para usarlo. Aún así si necesitaremos algo más potente que Bash como lenguaje de programación podemos optar por un lenguaje de programación como &lt;a href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt; para realizar los &lt;em&gt;scripts&lt;/em&gt; aunque necesitaremos instalar su paquete y las dependencias que los &lt;em&gt;scripts&lt;/em&gt; usen.&lt;/p&gt;

&lt;p&gt;Por ejemplo, dada una lista de concursantes habilitados en un sorteo podemos obtener 3 ganadores de forma aleatoria con la combinación de los siguientes comandos. El comando &lt;code&gt;grep&lt;/code&gt; permite aplicar una expresión regular a cada línea de un fichero que si la cumple es enviada a la salida, &lt;code&gt;shuf&lt;/code&gt; reordena las líneas de forma aleatoria y con la opción &lt;code&gt;-n 3&lt;/code&gt; emite las 3 primeras. Los comandos proporcionados por GNU en los sistemas Linux proporcionan multitud de comandos como estos muy útiles, combinándolos conseguimos tareas más capaces que lo que son los comandos individualmente.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/428d17cec6b14283ca7cf48174d41ad2.js?file=sorteo-1.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/428d17cec6b14283ca7cf48174d41ad2/raw/sorteo-1.sh&#34;&gt;sorteo-1.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/158/sorteo.png&#34; title=&#34;Sorteo implementado con dos comandos de GNU/Linux&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/158/sorteo-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Sorteo implementado con dos comandos de GNU/Linux&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Por defecto la salida estándar de un comando es la terminal pero podemos redirigirla a un fichero con la opción &lt;code&gt;&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/428d17cec6b14283ca7cf48174d41ad2.js?file=sorteo-2.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/428d17cec6b14283ca7cf48174d41ad2/raw/sorteo-2.sh&#34;&gt;sorteo-2.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Además de la salida estándar los programas tienen la salida de errores que podemos redirigir con &lt;code&gt;2&amp;gt;&lt;/code&gt;, si queremos redirigir la salida estándar y la de error podemos usar la redirección &lt;code&gt;&amp;amp;&amp;gt;&lt;/code&gt;. Tanto la opción &lt;code&gt;&amp;gt;&lt;/code&gt; y &lt;code&gt;2&amp;gt;&lt;/code&gt; crean un fichero con la salida redirigida, si en vez de sobreescribir el contenido del archivo queremos añadirlo al final podemos hacer la redirección con &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/428d17cec6b14283ca7cf48174d41ad2.js?file=sorteo-3.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/428d17cec6b14283ca7cf48174d41ad2/raw/sorteo-3.sh&#34;&gt;sorteo-3.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;h3 id=&#34;múltiples-comandos&#34;&gt;Múltiples comandos&lt;/h3&gt;

&lt;p&gt;Si necesitamos ejecutar dos comandos seguidos podemos introducirlos en la misma línea en vez de individualmente, ejecutar un comando si el anterior se ha ejecutado correctamente con &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; o al contrario ejecutar un comando si el anterior ha fallado con &lt;code&gt;||&lt;/code&gt;. Si en la ubicación de trabajo que estamos existe un directorio no se podrá crear otro con el mismo nombre, dependiendo de las opciones de encadenamiento según el resultado del comando anterior se ejecutará o no el siguiente comando.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/428d17cec6b14283ca7cf48174d41ad2.js?file=multiples-comandos.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/428d17cec6b14283ca7cf48174d41ad2/raw/multiples-comandos.sh&#34;&gt;multiples-comandos.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/158/multiples-comandos.png&#34; title=&#34;Múltiples comandos en la misma línea&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/158/multiples-comandos-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Múltiples comandos en la misma línea&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;variables-e-interpolación-de-cadenas&#34;&gt;Variables e interpolación de cadenas&lt;/h3&gt;

&lt;p&gt;Podemos definir variables locales en el &lt;em&gt;script&lt;/em&gt; o exportarlas para que estén accesibles en otros procesos e incluso interpolarlas en cadenas de la siguiente forma:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/428d17cec6b14283ca7cf48174d41ad2.js?file=variables-1.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/428d17cec6b14283ca7cf48174d41ad2/raw/variables-1.sh&#34;&gt;variables-1.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;También podemos interpolar la salida de un comando dentro de una cadena:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/428d17cec6b14283ca7cf48174d41ad2.js?file=variables-2.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/428d17cec6b14283ca7cf48174d41ad2/raw/variables-2.sh&#34;&gt;variables-2.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/158/variables.png&#34; title=&#34;Interpolación en cadenas de variables y comandos&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/158/variables-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Interpolación en cadenas de variables y comandos&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;invocaciones-de-comandos-anteriores&#34;&gt;Invocaciones de comandos anteriores&lt;/h3&gt;

&lt;p&gt;Con el comando &lt;em&gt;history&lt;/em&gt; podemos ver el historial completo de comandos que hemos ejecutado con anterioridad. Al lado de cada comando vemos un identificador numérico que podemos usar para ejecutarlo de nuevo con &lt;code&gt;![identificador]&lt;/code&gt;. Con el siguiente historial podemos ejecutar el comando con identificador 512 indicando una exclamación y el identificador, &lt;code&gt;!512&lt;/code&gt;. Si queremos ejecutar el último comando introducido podemos usar la doble exclamación &lt;code&gt;!!&lt;/code&gt;. Si queremos ejecutar el último comando completo de cierto comando podemos usar &lt;code&gt;![comando]&lt;/code&gt; en vez de su identificador.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/158/history.png&#34; title=&#34;Historial de comandos&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/158/history-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Historial de comandos&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Hay más &lt;a href=&#34;http://www.softpanorama.org/Scripting/Shellorama/bash_command_history_reuse.shtml&#34;&gt;formas de ejecutar comandos del historial&lt;/a&gt;. Si quisieramos invocar un comando del historial cambiando algún argumento podemos hacer una búsqueda en orden inverso con &lt;kbd&gt;Ctrl+r&lt;/kbd&gt;.&lt;/p&gt;

&lt;h3 id=&#34;scripts&#34;&gt;Scripts&lt;/h3&gt;

&lt;p&gt;Los &lt;em&gt;scritps&lt;/em&gt; son archivos de texto con permisos de ejecución interpretados por Bash u otro intérprete que ejecuta los comandos del &lt;em&gt;script&lt;/em&gt;, es la forma de automatizar varios comandos. Al inicio de los &lt;em&gt;scripts&lt;/em&gt; se suele incluir el &lt;a href=&#34;https://es.wikipedia.org/wiki/Shebang&#34;&gt;shebang&lt;/a&gt; donde se indica el programa encargado de interpretar el &lt;em&gt;script&lt;/em&gt;, puede ser Bash o un programa escrito en un lenguaje de programación como &lt;a href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt;. Se puede indicar de varias formas pero las preferidas son las siguientes:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/428d17cec6b14283ca7cf48174d41ad2.js?file=scripts-1.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/428d17cec6b14283ca7cf48174d41ad2/raw/scripts-1.sh&#34;&gt;scripts-1.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Una vez escrito el &lt;em&gt;script&lt;/em&gt; antes de ejecutarlo debemos darle permisos de ejecución con el comando &lt;code&gt;chmod&lt;/code&gt;:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/428d17cec6b14283ca7cf48174d41ad2.js?file=scripts-2.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/428d17cec6b14283ca7cf48174d41ad2/raw/scripts-2.sh&#34;&gt;scripts-2.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;h3 id=&#34;argumentos&#34;&gt;Argumentos&lt;/h3&gt;

&lt;p&gt;Al igual que los comandos pueden recibir opciones y argumentos los &lt;em&gt;scripts&lt;/em&gt; también, hacer uso de ellos son mediante las siguientes variables:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;$0: contiene nombre del &lt;em&gt;script&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;$1: primer argumento, $2 segundo argumento, &amp;hellip;&lt;/li&gt;
&lt;li&gt;$#: número de argumentos al invocar el &lt;em&gt;script&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;$*: todos los argumentos al invocar el &lt;em&gt;script&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;$?: valor del estado de salida del último comando ejecutado. Normalmente se usa &lt;em&gt;0&lt;/em&gt; para los comandos ejecutados correctamente y &lt;em&gt;1&lt;/em&gt; para los que han terminado incorrectamente.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;funciones-for-switch-if-comparaciones&#34;&gt;Funciones, &lt;em&gt;for&lt;/em&gt;, &lt;em&gt;switch&lt;/em&gt;, &lt;em&gt;if&lt;/em&gt;, comparaciones&lt;/h3&gt;

&lt;p&gt;En los &lt;em&gt;scripts&lt;/em&gt; Bash se pueden definir funciones para reutilizar parte del &lt;em&gt;script&lt;/em&gt;. Pueden incluir argumentos.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/428d17cec6b14283ca7cf48174d41ad2.js?file=funciones-1.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/428d17cec6b14283ca7cf48174d41ad2/raw/funciones-1.sh&#34;&gt;funciones-1.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/158/opciones.png&#34; title=&#34;Opciones de un script&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/158/opciones-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Opciones de un script&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/428d17cec6b14283ca7cf48174d41ad2.js?file=funciones-2.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/428d17cec6b14283ca7cf48174d41ad2/raw/funciones-2.sh&#34;&gt;funciones-2.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Los &lt;em&gt;scripts&lt;/em&gt; de Bash suelen manejar ficheros y disponemos de una buena cantidad de opciones para comparar:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[ -a FILE ]: verdadero si el fichero existe.&lt;/li&gt;
&lt;li&gt;[ -d FILE ]: verdadero si el fichero existe y es un directorio.&lt;/li&gt;
&lt;li&gt;[ -e FILE ]: verdadero si el fichero existe.&lt;/li&gt;
&lt;li&gt;[ -f FILE ]: verdadero si el fichero existe y es un fichero regular.&lt;/li&gt;
&lt;li&gt;[ -h FILE ]: verdadero si el fichero existe y es un enlace simbólico.&lt;/li&gt;
&lt;li&gt;[ -r FILE ]: verdadero si el fichero existe y se puede leer.&lt;/li&gt;
&lt;li&gt;[ -s FILE ]: verdadero si el fichero existe y su tamaño es mayor que cero.&lt;/li&gt;
&lt;li&gt;[ -w FILE ]: verdadero si el fichero existe y se puede escribir.&lt;/li&gt;
&lt;li&gt;[ -x FILE ]: verdadero si el fichero existe y se puede ejecutar.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[ -N FILE ]: verdadero si el fichero existe y ha sido modificado desde la última lectura.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[ FILE1 -nt FILE2 ]: verdadero si &lt;em&gt;FILE1&lt;/em&gt; ha sido modificado más recientemente que &lt;em&gt;FILE2&lt;/em&gt; o si &lt;em&gt;FILE1&lt;/em&gt; existe y &lt;em&gt;FILE2&lt;/em&gt; no.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[ FILE1 -ot FILE2 ]: verdadero si &lt;em&gt;FILE2&lt;/em&gt; ha sido modificado más recientemente que &lt;em&gt;FILE1&lt;/em&gt; o si &lt;em&gt;FILE2&lt;/em&gt; existe y &lt;em&gt;FILE1&lt;/em&gt; no.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[ FILE1 -ef FILE2 ]: verdadero si &lt;em&gt;FILE1&lt;/em&gt; y &lt;em&gt;FILE2&lt;/em&gt; se refieren al mismo dispositivo y número de inodo.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Y otros menos comunes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[ -S FILE ]: verdadero si el fichero existe y es un &lt;em&gt;socket&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;[ -b FILE ]: verdadero si el fichero existe y es un fichero especial de bloques.&lt;/li&gt;
&lt;li&gt;[ -c FILE ]: verdadero si el fichero existe y es un fichero especial de caracteres.&lt;/li&gt;
&lt;li&gt;[ -g FILE ]: verdadero si el fichero existe y su bit &lt;em&gt;SGID&lt;/em&gt; está establecido.&lt;/li&gt;
&lt;li&gt;[ -k FILE ]: verdadero si el fichero existe y su bit &lt;em&gt;sticky&lt;/em&gt; está establecido.&lt;/li&gt;
&lt;li&gt;[ -p FILE ]: verdadero si el fichero existe y es una tubería con nombre (FIFO).&lt;/li&gt;
&lt;li&gt;[ -t FD ]: verdadero si el descriptor de fichero está abierto y refiere a una terminal.&lt;/li&gt;
&lt;li&gt;[ -u FILE ]: verdadero si el fichero existe y su bit &lt;em&gt;SUID&lt;/em&gt; está establecido.&lt;/li&gt;
&lt;li&gt;[ -O FILE ]: verdadero si el fichero existe y el ID del usuario efectivo es su propietario.&lt;/li&gt;
&lt;li&gt;[ -G FILE ]: verdadero si el fichero existe y el ID del grupo efectivo es su propietario.&lt;/li&gt;
&lt;li&gt;[ -L FILE ]: verdadero si el fichero existe y es un enlace simbólico.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Y algunos otros:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[ -o OPTIONNAME ]: verdadero si la copión &lt;em&gt;OPTIONNAME&lt;/em&gt; está activa.&lt;/li&gt;
&lt;li&gt;[ -z STRING ]: verdadero si la longitud de &lt;em&gt;STRING&lt;/em&gt; es cero.&lt;/li&gt;
&lt;li&gt;[ -n STRING ] o [ STRING ]: verdadero si la longitud de &lt;em&gt;STRING&lt;/em&gt; no es cero.&lt;/li&gt;
&lt;li&gt;[ STRING1 == STRING2 ]: verdadero si las cadenas son iguales.&lt;/li&gt;
&lt;li&gt;[ STRING1 != STRING2 ]: verdadero si las cadenas no son iguales.&lt;/li&gt;
&lt;li&gt;[ STRING1 &amp;lt; STRING2 ]: verdadero si léxicamente &lt;em&gt;STRING1&lt;/em&gt; se ordena antes que &lt;em&gt;STRING2&lt;/em&gt; en el &lt;em&gt;locale&lt;/em&gt; actual.&lt;/li&gt;
&lt;li&gt;[ STRING1 &amp;gt; STRING2 ]: verdadero si léxicamente &lt;em&gt;STRING1&lt;/em&gt; se ordena después que &lt;em&gt;STRING2&lt;/em&gt; en el &lt;em&gt;locale&lt;/em&gt; actual.&lt;/li&gt;
&lt;li&gt;[ ARG1 OP ARG2 ]: donde &lt;em&gt;OP&lt;/em&gt; es un operador de entre &lt;em&gt;-eq&lt;/em&gt;, &lt;em&gt;-ne&lt;/em&gt;, &lt;em&gt;-lt&lt;/em&gt;, &lt;em&gt;-le&lt;/em&gt;, &lt;em&gt;-gt&lt;/em&gt; o &lt;em&gt;-ge&lt;/em&gt;. Estas operaciones aritméticas binarias retornan verdadero si &lt;em&gt;ARG1&lt;/em&gt; es igual a, no igual a, menor que, menor que o igual, mayor que o mayor que o igual que &lt;em&gt;ARG2&lt;/em&gt;, respectivamente. &lt;em&gt;ARG1&lt;/em&gt; y &lt;em&gt;ARG2&lt;/em&gt; son valores enteros.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Las expresiones anteriores se pueden combinar:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[ ! EXPR ]: verdadero si &lt;em&gt;EXPR&lt;/em&gt; es false.&lt;/li&gt;
&lt;li&gt;[ ( EXPR ) ]: retorna el valor de &lt;em&gt;EXPR&lt;/em&gt;, puede usarse para cambiar la precedencia de operadores.&lt;/li&gt;
&lt;li&gt;[ EXPR1 -a EXPR2 ]: verdadero si ambas &lt;em&gt;EXPR1&lt;/em&gt; y &lt;em&gt;EXPR2&lt;/em&gt; son verdadero, operador &lt;em&gt;and&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;[ EXPR1 -o EXPR2 ]: verdadero si alguna de &lt;em&gt;EXPR1&lt;/em&gt; y &lt;em&gt;EXPR2&lt;/em&gt; son verdadero, operador &lt;em&gt;or&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;control-de-trabajos&#34;&gt;Control de trabajos&lt;/h3&gt;

&lt;p&gt;El comando &lt;code&gt;jobs&lt;/code&gt; obtenemos una lista de trabajos que se está ejecutando junto con su identificador y estado, con la combinación de teclas &lt;kbd&gt;Ctrl+z&lt;/kbd&gt; dejamos el proceso actual detenido y en segundo plano, con &lt;code&gt;fg&lt;/code&gt; lo devolvemos a primer plano y si estaba detenido se continua su ejecución, con &lt;code&gt;bg&lt;/code&gt; si estaba detenido continua su ejecución en segundo plano.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/158/trabajos.png&#34; title=&#34;Trabajos en primer y segundo plano&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/158/trabajos-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Trabajos en primer y segundo plano&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Esta guía es parte de un tema de los explicados en el completo libro sobre la administración sobre sistemas Unix, &lt;a href=&#34;http://amzn.to/29vctVP&#34;&gt;UNIX and Linux System Administration Handbook&lt;/a&gt;. Un libro con cantidad de temas para conocer más en detalle nuestros sistemas basados en la filosofía Unix. Casi 1300 páginas de documentación con información básica y detallada que deberíamos obligarnos a conocer. Redes, seguridad, virtualización, hospedaje web, copias de seguridad, procesos periódicos, instalación de software, control de procesos y muchos temas más. Otros buenos documentos son &lt;a href=&#34;http://www.tldp.org/LDP/abs/html/index.html&#34;&gt;Advanced Bash-Scripting Guide&lt;/a&gt; y
el siguiente &lt;a href=&#34;http://bash.cyberciti.biz/guide/Main_Page&#34;&gt;manual de Bash&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0131480057&amp;linkId=28302f39b86c5d07ee3db2bc5752c2ed&amp;internal=1&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.howtogeek.com/howto/44997/how-to-use-bash-history-to-improve-your-command-line-productivity/&#34;&gt;How To Use Bash History to Improve Your Command-Line Productivity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/configurar-nginx-como-balanceador-de-carga/</id>
        <title>Configurar Nginx como balanceador de carga</title>        
        <updated>2016-07-09T11:00:00+02:00</updated>
        <published>2016-07-08T17:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/07/configurar-nginx-como-balanceador-de-carga/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Para escalar horizontalmente los servidores de aplicaciones, aumentar el rendimiento, disminuir la latencia, conseguir tolerancia a fallos y aumentar la disponibilidad podemos usar el servidor web Nginx como balanceador de carga entre varios servidores de aplicaciones. En este ejemplo muestro la configuración necesaria para añadir la funcionalidad de balanceador de carga a Nginx entre varios servidores de aplicaciones Tomcat usando además Docker.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/nginx.png&#34; class=&#34;right&#34; alt=&#34;Nginx&#34; title=&#34;Nginx&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Un balanceador de carga distribuye las peticiones que llegan al servidor entre varios servidores para que las atiendan consiguiendo optimizar el uso de los recursos, aumentar el número de peticiones atendidas por unidad de tiempo, reducir la latencia y proporcionar tolerancia a fallos. Escalar un servidor que deba procesar un gran número de peticiones llegado un límite es más barato escalar horizontalmente añadiendo más servidores que escalar verticalmente usando servidores más potentes.&lt;/p&gt;

&lt;p&gt;Distribuir las peticiones ha de hacerse eficientemente para que un servidor no reciba todas las peticiones pesadas y se sature mientras hay servidores que tienen poca carga. Usando varios servidores para atender las peticiones evita que haya un único punto de fallo en la aplicación proporcionando tolerancia a fallos, si un servidor sufre un fallo el resto de servidores se encargarán de atender las peticiones. Una mejor tolerancia a fallos aumentará la disponibilidad del servicio sin que haya caídas de servicio.&lt;/p&gt;

&lt;p&gt;Hay soluciones específicas para balancear la carga como &lt;a href=&#34;http://www.haproxy.org/&#34;&gt;HAProxy&lt;/a&gt; pero para los casos sencillos que son los más habituales y para no añadir una pieza más a la arquitectura de la aplicación &lt;a href=&#34;http://nginx.org/&#34;&gt;Nginx&lt;/a&gt; es capaz de hacer las funciones de balanceo de carga entre varios servidores de aplicaciones.&lt;/p&gt;

&lt;p&gt;Hay tres estrategias para balancear o distribuir la carga:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;round-robin&lt;/em&gt;: las peticiones son distribuidas entre los servidores de forma cíclica. Cabe la posibilidad de que las peticiones más pesadas sean procesadas por el mismo servidor, distribuye las peticiones de forma ecuánime pero la carga no.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;least-connected&lt;/em&gt;: la siguiente petición es atendida por el servidor con menos conexiones activas.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;ip-hash&lt;/em&gt;: se selecciona el servidor que atenderá la petición en base a algún dato como la dirección IP, de esta forma todas las peticiones de un usuario son atendidas por el mismo servidor.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Esta es la configuración básica con la estrategia &lt;em&gt;round-robin&lt;/em&gt;. Los servidores balanceados se definen con la directiva &lt;em&gt;upstream&lt;/em&gt; a los que se hace de &lt;em&gt;proxy&lt;/em&gt; inverso con la directiva &lt;em&gt;proxy_pass&lt;/em&gt;.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/c202119fe96523b3bc6db4a742fda55b.js?file=nginx.conf&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/c202119fe96523b3bc6db4a742fda55b/raw/nginx.conf&#34;&gt;nginx.conf&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Para usar la estrategia &lt;em&gt;least-coneccted&lt;/em&gt; hay que indicar la directiva &lt;em&gt;least_conn&lt;/em&gt; en la directiva &lt;em&gt;upstream&lt;/em&gt;.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/c202119fe96523b3bc6db4a742fda55b.js?file=nginx-least_conn.conf&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/c202119fe96523b3bc6db4a742fda55b/raw/nginx-least_conn.conf&#34;&gt;nginx-least_conn.conf&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Hay que tener en cuenta que en las estrategias &lt;em&gt;round-robin&lt;/em&gt; y &lt;em&gt;least-conected&lt;/em&gt; cada petición probablemente sea atendida por un servidor diferente de modo que si los servidores no comparten las sesiones se producirán comportamientos erráticos. Usando la estrategia &lt;em&gt;ip_hash&lt;/em&gt; se usará la dirección IP para redirigir todas las peticiones al mismo servidor que se conoce como &lt;em&gt;sticky session&lt;/em&gt;.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/c202119fe96523b3bc6db4a742fda55b.js?file=nginx-ip_hash.conf&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/c202119fe96523b3bc6db4a742fda55b/raw/nginx-ip_hash.conf&#34;&gt;nginx-ip_hash.conf&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Para que los servidores compartan la sesión y evitar usar &lt;em&gt;sticky session&lt;/em&gt; podemos &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/03/datos-de-sesion-externalizados-con-spring-session/&#34;&gt;usar Redis como sistema de información para guardar las sesiones de los servidores&lt;/a&gt;, si un servidor de aplicaciones deja de funcionar las sesiones que mantuviese no se perderán y las peticiones podrán ser atendida por cualquier servidor. Si hay un servidor que queremos procese más peticiones porque tiene más capacidad podemos dar más peso a este. En esta configuración de cada 5 peticiones 3 serán atendidas por el servidor &lt;em&gt;app1&lt;/em&gt;, 1 por el &lt;em&gt;app2&lt;/em&gt; y otra por &lt;em&gt;app3&lt;/em&gt;.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/c202119fe96523b3bc6db4a742fda55b.js?file=nginx-weight.conf&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/c202119fe96523b3bc6db4a742fda55b/raw/nginx-weight.conf&#34;&gt;nginx-weight.conf&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Cuando un servidor falla al servir una petición Nginx lo marca como en estado erróneo y deja de enviarle peticiones, los chequeos de salud se hacen de forma pasiva según el resultado de las peticiones que se envían. Con &lt;em&gt;max_fails&lt;/em&gt; se establece el máximo número de fallos antes de considerar un servidor con estado erróneo, tiene un valor por defecto de 1. Con &lt;em&gt;fail_timeout&lt;/em&gt; se establece el tiempo que un servidor se considera que está en estado erróneo antes de enviar una nueva petición, si enviada una nueva petición responde correctamente se vuelve a considerar en estado correcto. Con la directiva &lt;em&gt;health_check&lt;/em&gt; se puede configurar las comprobaciones de estado que hace Nginx para determinar si el servidor de aplicaciones está funcionando correctamente.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/c202119fe96523b3bc6db4a742fda55b.js?file=nginx-misc.conf&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/c202119fe96523b3bc6db4a742fda55b/raw/nginx-misc.conf&#34;&gt;nginx-misc.conf&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Si queremos que el cliente conozca que servidor atendió la petición podemos añadir la &lt;a href=&#34;http://nginx.org/en/docs/http/ngx_http_headers_module.html#add_header&#34;&gt;directiva &lt;em&gt;add_header&lt;/em&gt;&lt;/a&gt; usando una de las &lt;a href=&#34;http://nginx.org/en/docs/http/ngx_http_upstream_module.html#variables&#34;&gt;variables añadidas por el módulo  &lt;em&gt;ngx_http_upstream&lt;/em&gt;&lt;/a&gt;, nos servirá para depurar la aplicación en tiempo de desarrollo.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/157/nginx-load-balancer-1.png&#34; title=&#34;Servidor balanceado 172.17.0.2:8080&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/157/nginx-load-balancer-1-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/157/nginx-load-balancer-2.png&#34; title=&#34;Servidor balanceado 172.17.0.3:8080&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/157/nginx-load-balancer-2-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/157/nginx-load-balancer-3.png&#34; title=&#34;Servidor balanceado 172.17.0.4:8080&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/157/nginx-load-balancer-3-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Nginx balanceando la carga entre 3 servidores de aplicaciones Tomcat&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;En el ejemplo de configuración usaré &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; para crear un servidor web Nginx que haga de balanceador de carga entre tres servidores de aplicaciones Tomcat. Con Docker hacer esta prueba es mucho más sencilla que instalar tres Tomcats y un servidor Nginx a travbés de los paquetes del sistema o descargando binarios, puedes leer los &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/docker/&#34;&gt;artículos de la serie Docker&lt;/a&gt; que he escrito para conocer como usarlo y que ofrece esta útil herramienta. El archivo de &lt;em&gt;docker-compose.yml&lt;/em&gt; completo es el siguiente:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/c202119fe96523b3bc6db4a742fda55b.js?file=docker-compose.yml&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/c202119fe96523b3bc6db4a742fda55b/raw/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/NginxLoadBalancer&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;docker-compose up&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://nginx.org/en/docs/http/load_balancing.html&#34;&gt;Using NGINX as HTTP load balancer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nginx.com/blog/load-balancing-with-nginx-plus/&#34;&gt;Load Balancing with NGINX and NGINX Plus, Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nginx.com/blog/load-balancing-with-nginx-plus-part2/&#34;&gt;Load Balancing with NGINX and NGINX Plus, Part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nginx.com/resources/admin-guide/load-balancer/&#34;&gt;NGINX Load Balancing - HTTP Load Balancer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/comandos-basicos-de-gnu-linux/</id>
        <title>Comandos básicos de GNU/Linux</title>        
        <updated>2016-07-10T10:00:00+02:00</updated>
        <published>2016-07-03T12:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/07/comandos-basicos-de-gnu-linux/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Conociendo los comandos y sus opciones podemos realizar una tarea que nos ahorre una gran cantidad de tiempo si lo hubiésemos hecho manualmente o con una interfaz gráfica. La parte GNU de las mayoría distribuciones Linux proporcionan una buena cantidad de comandos útiles interesantes de conocer que están a nuestra disposición para cuando los necesitemos.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/linux.png&#34; class=&#34;right&#34; alt=&#34;Linux&#34; title=&#34;Linux&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/gnu.png&#34; class=&#34;right&#34; alt=&#34;GNU&#34; title=&#34;GNU&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;El proyecto &lt;abbr title=&#34;GNU Is Not Unix&#34;&gt;&lt;a href=&#34;http://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;&lt;/abbr&gt; promovido por la &lt;abbr title=&#34;Free Software Foundation&#34;&gt;&lt;a href=&#34;https://www.fsf.org/&#34;&gt;FSF&lt;/a&gt;&lt;/abbr&gt; y que se usa en la mayoría de las distribuciones Linux proporciona muchos comandos útiles. Las más modernas interfaces gráficas no superan a la línea de comandos para realizar las tareas de forma rápida, directa y con la posibilidad de automatización. Conociendo las &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/06/atajos-de-teclado-basicos-de-la-terminal-en-gnu-linux/&#34;&gt;combinaciones de teclas de nuestro emulador de terminal y del intérprete de comandos&lt;/a&gt; dominaremos aún más el uso de la consola, también mejoraremos si conocemos las posibilidades que ofrece un &lt;a href=&#34;https://www.gnu.org/software/bash/manual/bashref.html&#34;&gt;intérprete de comandos como bash&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;En la colección de &lt;a href=&#34;https://www.gnu.org/software/coreutils/manual/coreutils.html&#34;&gt;utilidades que forman el núcleo de GNU&lt;/a&gt; hay una lista completa junto con su documentación. A continuación una lista no exhaustiva de algunos comandos que disponemos pero son de los más utilizados (algunos más que otros) que tengamos que usar directamente o en &lt;em&gt;scripts&lt;/em&gt; de bash. En orden alfabético.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;apropos&lt;/em&gt;: muestra una lista de comandos relacionados con una palabra.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;at&lt;/em&gt;: programa una tarea a una determinada hora.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;cal&lt;/em&gt;: emite en la terminal un calendario.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;cat&lt;/em&gt;: concatena archivos y emite sus contenidos en la salida.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;cd&lt;/em&gt;: cambia el directorio de trabajo actual de la terminal.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;chgrp&lt;/em&gt;: cambia el grupo propietario del archivo.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;chmod&lt;/em&gt;: cambia los permisos del archivo.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;chown&lt;/em&gt;: cambia el usuario propietario del archivo.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;cp&lt;/em&gt;: copia el contenido de un fichero a otro nuevo o sobrescribiendo uno existente.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;date&lt;/em&gt;: muestra la fecha del sistema.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;df&lt;/em&gt;: muestra el uso del disco.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;du&lt;/em&gt;: estima el espacio usado por los archivos.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;echo&lt;/em&gt;: emite un mensaje en la salida.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;find&lt;/em&gt;: busca archivos en la jerarquía de directorios.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;free&lt;/em&gt;: muestra el estado de la memoria del sistema.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;grep&lt;/em&gt;: aplica expresiones regulares al contenido y filtra las que que no la cumplen.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;head&lt;/em&gt;: muestra el principio del contenido.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;history&lt;/em&gt;: lista el historial de comandos introducidos con anterioridad.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;htop&lt;/em&gt;: monitor de procesos similar a &lt;em&gt;top&lt;/em&gt; un poco más avanzado y más personalizable.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;kill&lt;/em&gt;: envía una señal a un proceso, por ejemplo de terminación.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;less&lt;/em&gt;: permite el movimiento adelante y atrás del contenido a visualizar cuando es más grande que el tamaño de la terminal.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;ln&lt;/em&gt;: crea enlaces simbólicos.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;lsblk&lt;/em&gt;: lista los dispositivos de bloques.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;ls&lt;/em&gt;: lista ficheros y directorios del sistema de ficheros. Con diferentes opciones podremos visualizar además de los nombres más información como permisos, fecha de última modificación y tamaño.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;man&lt;/em&gt;: muestra la página de manual de un comando. En las páginas de manual incluye una descripción de lo que hace el comando, sus opciones, parámetros y en algunos casos ejemplos de uso.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;md5sum&lt;/em&gt;: calcula el &lt;em&gt;hash&lt;/em&gt; &lt;em&gt;md5&lt;/em&gt; de un contenido.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;mkdir&lt;/em&gt;: crea un directorio opcionalmente con toda la ruta de carpetas hasta él si no existen.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;mv&lt;/em&gt;: renombra un archivo y/ lo cambia de directorio.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;printf&lt;/em&gt;: formatea un mensaje y lo emite en la salida.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;ps&lt;/em&gt;: lista los procesos del sistema e información relacionada.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;pwd&lt;/em&gt;: emite en la salida el directorio actual de trabajo.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;rmdir&lt;/em&gt;: elimina un directorio&lt;/li&gt;
&lt;li&gt;&lt;em&gt;sha1sum&lt;/em&gt;: calcula el &lt;em&gt;hash&lt;/em&gt; &lt;em&gt;sh1&lt;/em&gt; de un contenido.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;shuf&lt;/em&gt;: emite las líneas de entrada en la salida de forma aleatoria.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;sort&lt;/em&gt;: ordena líneas de texto.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;tail&lt;/em&gt;: muestra el final del contenido pudiendo verlo en tiempo real cuando se añade más. Útil para monitorizar la salida de un archivo de trazas.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;tar&lt;/em&gt;: guarda varios archivos en uno solo.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;tmux&lt;/em&gt;: permite ver varias terminales dividiendo el área disponible verticalmente u horizontalmente, desconectarse de una terminal sin dejar de ejecutar los comandos que estuviesen corriendo y volver a conectarse de nuevo.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;top&lt;/em&gt;: monitor de procesos del sistema. Muestra el uso de cada núcleo del procesador, memoria usada, libre, procesos del sistema y su consumo de recursos de CPU y memoria. Un poco más básico que &lt;em&gt;htop&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;touch&lt;/em&gt;: cambia la fecha de acceso y modificación a la actual del sistema, opcionalmente si el fichero no existe se crea con contenido vacío.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;uniq&lt;/em&gt;: informa o emite las ocurrencias repetidas.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;vim&lt;/em&gt;: es un editor de texto avanzado.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;xargs&lt;/em&gt;: construye comandos y los ejecuta con las líneas de la entrada.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;yes&lt;/em&gt;: repite indefinidamente el mensaje &lt;em&gt;yes&lt;/em&gt; en la salida hasta que se finaliza. Útil para ejecutar comandos de forma desatendida que requieren la intervención del usuario.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;zip&lt;/em&gt;: crea un archivador comprimiendo el contenido de los archivos.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En sus respectivas páginas de manual, &lt;code&gt;man [comando]&lt;/code&gt;, podemos conocer las opciones que permite cada uno de ellos junto con algunos ejemplos de uso. Estos comandos se pueden combinar haciendo que la salida de un comando sea la entrada del siguiente mediante tuberías, por ejemplo, para ordenar un fichero de texto y mostrar las 5 primeras líneas con los comandos &lt;em&gt;sort&lt;/em&gt; y &lt;em&gt;head&lt;/em&gt; usaríamos &lt;code&gt;sort fichero.txt | head -5&lt;/code&gt;. Precisamente el comando &lt;em&gt;sort&lt;/em&gt; es lo que he utilizado para ordenar alfabéticamente la lista de comandos anterior.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/156/comandos-gnu-linux.png&#34; title=&#34;Uso de comandos GNU/Linux&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/156/comandos-gnu-linux-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/156/man-grep.png&#34; title=&#34;Página de manual de grep&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/156/man-grep-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Uso de comandos GNU/Linux y página del manual de grep&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/coreutils/manual/coreutils.html&#34;&gt;Manual GNU Coreutils&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/bash/manual/bashref.html&#34;&gt;Manual de referencia bash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.tecmint.com/useful-linux-commands-for-newbies/&#34;&gt;20 Useful Commands for Linux Newbies&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/como-optimizar-un-sitio-web-con-compresion-gzip-en-nginx-y-apache-httpd/</id>
        <title>Cómo optimizar un sitio web con compresión GZIP en Nginx y Apache HTTPD</title>        
        <updated>2016-07-02T12:30:00+02:00</updated>
        <published>2016-07-02T12:30:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/07/como-optimizar-un-sitio-web-con-compresion-gzip-en-nginx-y-apache-httpd/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Comprimir el contenido es de utilidad para aquellos usuarios a los que se les factura por los datos transmitidos o tienen límites de transferencia en sus contratos con los proveedores de banda ancha o red móvil. Modificando la configuración del servidor web que usemos haremos que nuestra página o aplicación web comprima el contenido que envía a los navegadores de los usuarios reduciendo los datos transferidos y optimizando el sitio web.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/nginx.png&#34; class=&#34;right&#34; alt=&#34;Nginx&#34; title=&#34;Nginx&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/apache-httpd.png&#34; class=&#34;right&#34; alt=&#34;Apache HTTPD&#34; title=&#34;Apache HTTPD&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Con las velocidades de transferencia que proporciona la fibra, el ADSL incluso el 4G o 3G de los móviles transmitir el contenido de una web desde el servidor al cliente ya no es el factor más determinante en el tiempo de carga de una página, lo es más la latencia de la red y el establecimiento de múltiples conexiones. Aún así hay usuarios que por una red de baja calidad o que esté saturada pueden tener tasas de transferencia bajas o puede que al usuario se le facture por la cantidad de datos que transmite. Por estos motivos aún hoy es buena idea activar en el servidor la compresión GZIP para que los datos transmitidos se compriman y reduzcan de forma significativa. La compresión GZIP es una optimización que podemos realizar para cualquier página web. Para mejorar la latencia en el establecimiento de conexiones es aconsejable &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/02/configurar-http-2-en-nginx-apache-httpd-wildfly-o-jetty/&#34;&gt;configurar HTTP/2 en el servidor web&lt;/a&gt; para mejorar la velocidad de carga de la página.&lt;/p&gt;

&lt;p&gt;Dependiendo del servidor web la configuración que deberemos añadir será diferente, en este artículo mostraré la configuración a usar para dos de los servidores web más populares en internet, que son &lt;a href=&#34;http://nginx.org/&#34;&gt;Nginx&lt;/a&gt; y &lt;a href=&#34;http://httpd.apache.org/&#34;&gt;Apache HTTPD&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;nginx&#34;&gt;Nginx&lt;/h3&gt;

&lt;p&gt;Usando varias &lt;a href=&#34;http://nginx.org/en/docs/http/ngx_http_gzip_module.html&#34;&gt;directivas de Nginx para la compresión&lt;/a&gt; la activamos, establecemos el nivel de compresión, el tamaño de los &lt;em&gt;buffers&lt;/em&gt; dedicados a la compresión y finalmente los &lt;em&gt;mimetypes&lt;/em&gt; de los archivos que queremos sean comprimidos antes de enviarse al cliente (el texto plano, contenido CSS, JSON, XML, RSS y JavaScript). El &lt;em&gt;mimetype&lt;/em&gt; &lt;em&gt;text/html&lt;/em&gt; no hace falta indicarlo porque siempre está activo y para los formatos de archivos que ya están comprimidos es innecesario como fotos o vídeos.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/7f5410f69c6c1e959cdce47484baff8d.js?file=nginx.conf&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/7f5410f69c6c1e959cdce47484baff8d/raw/nginx.conf&#34;&gt;nginx.conf&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Para probarlo usaré un contenedor de &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; en el que personalizaré la configuración y usaré mi propia bitácora como página web a servir. Para conocer Docker puedes consultar otra &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/docker/&#34;&gt;serie de artículos sobre Docker&lt;/a&gt; dedicados a esta tecnología de contenedores. Escrito el archivo de configuración, el contenedor se inicia con:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/7f5410f69c6c1e959cdce47484baff8d.js?file=docker-nginx.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/7f5410f69c6c1e959cdce47484baff8d/raw/docker-nginx.sh&#34;&gt;docker-nginx.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;En la siguiente captura se aprecia que Nginx devuelve la cabecera de respuesta &lt;em&gt;Content-Enconfing: gzip&lt;/em&gt; indicando que el contenido ha sido comprimido antes de su transmisión por la red. Haciendo que Nginx haga de servidor web para mi propia bitácora se pueden apreciar la significativa diferencia en kilobytes transmitidos entre el tamaño que tienen y lo transferido para algunos recursos. Por ejemplo, el HTML de la página de inicio tiene un tamaño sin comprimir de 34,11 KB y comprimido un tamaño mucho menor 8,38 KB, una diferencia de 25,73 KB aproximadamente un ratio de compresión del 75%. Para el recurso &lt;em&gt;bootstrap.min.css&lt;/em&gt; que ya está minificado eliminando caracteres innecesarios es aún más significativo de 118,43 KB a 23,36, 95,04 KB menos un 80% de reducción.&lt;/p&gt;

&lt;p&gt;Unos pocos kilobytes no son mucho para un único recurso pero si tenemos en cuenta que una página tiene varias docenas y hacemos una multiplicación por cada acceso a una página la cantidad de datos ahorrados en la transferencia es notable.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/155/nginx-no-gzip.png&#34; title=&#34;Nginx configurado sin compresión GZIP&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/155/nginx-no-gzip-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/155/nginx-gzip.png&#34; title=&#34;Nginx configurado con compresión GZIP&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/155/nginx-gzip-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Nginx configurado sin y con compresión GZIP&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;apache-httpd&#34;&gt;Apache HTTPD&lt;/h3&gt;

&lt;p&gt;Activado el módulo para realizar la compresión al igual que el caso de Nginx podemos establecer la cantidad de memoria reservada para la compresión, el nivel de compresión y los &lt;em&gt;mimetypes&lt;/em&gt; del contenido a comprimir. Con las &lt;a href=&#34;http://httpd.apache.org/docs/current/mod/mod_deflate.html&#34;&gt;directivas adicionales de la documentación&lt;/a&gt; se puede personalizar aún más el proceso de compresión.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/7f5410f69c6c1e959cdce47484baff8d.js?file=httpd.conf&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/7f5410f69c6c1e959cdce47484baff8d/raw/httpd.conf&#34;&gt;httpd.conf&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/7f5410f69c6c1e959cdce47484baff8d.js?file=docker-httpd.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/7f5410f69c6c1e959cdce47484baff8d/raw/docker-httpd.sh&#34;&gt;docker-httpd.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Vemos una reducción en la transferencia similar a la conseguida en Nginx. En Apache el recurso a servir ha de tener cierto tamaño siendo de unos pocos bytes opta por servirlo sin comprimir ya que considerará que no producirá un ahorro significativo.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/155/apache-httpd-no-gzip.png&#34; title=&#34;Apache HTTPD configurado sin compresión GZIP&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/155/apache-httpd-no-gzip-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/155/apache-httpd-gzip.png&#34; title=&#34;Apache HTTPD configurado con compresión GZIP&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/155/apache-httpd-gzip-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Apache HTTPD configurado sin y con compresión GZIP&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;La compresión se hace en cada petición que se hace al servidor que con los avanzados procesadores actuales con eficientes instrucciones específicas para la tarea implementadas en el hardware salvo un tráfico muy elevado no tiene por que notarse en gran medida el procesado de cada recurso. Si el tráfico fuese elevado y la carga de compresión se notase Nginx y Apache ofrecen la posibilidad de &lt;a href=&#34;http://nginx.org/en/docs/http/ngx_http_gzip_static_module.html&#34;&gt;precomprimir los recursos&lt;/a&gt; y de forma similar &lt;a href=&#34;http://httpd.apache.org/docs/current/mod/mod_deflate.html#precompressed&#34;&gt;precomprimir los recursos en apache&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;La compresión es otra de las configuraciones básicas aconsejable hacer en un servidor web junto con:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Añadir cifrado y autenticación con TLS/SSL.&lt;/li&gt;
&lt;li&gt;Añadir el soporte para el protocolo HTTP/2 que ya incluyen los navegadores.&lt;/li&gt;
&lt;li&gt;Redirigir el tráfico del dominio raíz al subdominio www.&lt;/li&gt;
&lt;li&gt;Redirigir el tráfico de HTTP a HTTPS.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Estas funcionalidades las puedes consultar en el resto de artículos de la &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/web/&#34;&gt;serie web&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/CompresionGzip&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./docker-nginx.sh o ./docker-httpd.sh&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://nginx.org/en/docs/http/ngx_http_gzip_module.html&#34;&gt;Module ngx_http_gzip_module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://httpd.apache.org/docs/current/mod/mod_deflate.html&#34;&gt;Apache Module mod_deflate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://betterexplained.com/articles/how-to-optimize-your-site-with-gzip-compression/&#34;&gt;How To Optimize Your Site With GZIP Compression&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/hemeroteca-9/</id>
        <title>Hemeroteca #9</title>        
        <updated>2016-07-02T12:00:00+02:00</updated>
        <published>2016-07-01T13:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/07/hemeroteca-9/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;6 meses más y 35 nuevos artículos escritos sobre temas de programación, java, software libre y opinión. No son muchos artículos pero tampoco son artículos breves sobre noticias efímeras, en cada artículo trato de compartir no solo información sino conocimiento en los que además suelo incluir el código completo de un ejemplo totalmente funcional.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;p&gt;Como cada seis meses en Blog Bitix hago una recopilación de los artículos que he publicado durante este tiempo, comento sobre que he escrito y comparto cómo ha evolucionado esta bitácora. Durante estas 26 primeras semanas del año he escrito 35 nuevos artículos siguiendo mi ritmo de publicación no muy prolífico pero muy constante al ritmo de uno por semana, algunas publicando dos artículos casi siempre durante el fin de semana.&lt;/p&gt;

&lt;p&gt;Los temas de los artículos han sido los habituales programación, GNU/Linux, Java, JavaScript, unos pocos de opinión y algún desempaquetado de producto que he comprado y he usado.&lt;/p&gt;

&lt;p&gt;En la categoría de programación están los siguientes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/01/introduccion-y-ejemplo-basico-sobre-vertx/&#34;&gt;Introducción y ejemplo básico sobre Vert.x&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/01/aplicacion-web-con-spark-framework-y-java/&#34;&gt;Aplicación web con Spark Framework y Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/02/introduccion-al-protocolo-http-2/&#34;&gt;Introducción al protocolo HTTP/2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/02/configurar-http-2-en-nginx-apache-httpd-wildfly-o-jetty/&#34;&gt;Configurar HTTP/2 en nginx, Apache HTTPD, WildFly o Jetty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/03/introduccion-y-nuevas-caracteristicas-de-java-ee-7/&#34;&gt;Introducción y nuevas características de Java EE 7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/03/como-ejecutar-un-proceso-del-sistema-con-java/&#34;&gt;Cómo ejecutar un proceso del sistema con Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/03/como-firmar-correos-electronicos-con-gpg-y-javamail/&#34;&gt;Cómo firmar correos electrónicos con GPG y JavaMail&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/04/aplicacion-de-ejemplo-usando-varias-especificaciones-de-java-ee-7/&#34;&gt;Aplicación de ejemplo usando varias especificaciones de Java EE 7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/04/usar-twitter-desde-java-con-twitter4j/&#34;&gt;Usar Twitter desde Java con twitter4j&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/04/el-componente-grid-de-apache-tapestry/&#34;&gt;El componente Grid de Apache Tapestry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/05/extraer-elementos-de-una-cadena-con-una-expresion-regular/&#34;&gt;Extraer elementos de una cadena con una expresión regular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/05/que-es-el-concepto-de-heap-pollution-en-java/&#34;&gt;Qué es el concepto de Heap Pollution en Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/05/la-clase-threadlocal-de-java-y-usos-practicos/&#34;&gt;La clase ThreadLocal de Java y usos prácticos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/05/incluir-informacion-de-la-version-en-el-artefacto-distribuible-con-gradle/&#34;&gt;Incluir información de la versión en el artefacto distribuible con Gradle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/05/ejemplo-sencillo-de-como-crear-un-excel-en-java-con-apache-poi/&#34;&gt;Ejemplo sencillo de como crear un excel en Java con Apache POI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/06/ofrecer-contenido-personalizado-al-usuario-basado-en-su-ubicacion/&#34;&gt;Ofrecer contenido personalizado al usuario basado en su ubicación&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/06/moment-js-libreria-javascript-para-fechas/&#34;&gt;Moment.js, librería JavaScript para fechas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/06/como-redirigir-peticiones-de-http-a-https-en-nginx-apache-tomcat-jetty-y-wildfly/&#34;&gt;Cómo redirigir peticiones de HTTP a HTTPS en Nginx, Apache, Tomcat, Jetty y WildFly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En la categoría de GNU/Linux y software libre están los siguientes artículos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/02/como-recuperar-archivos-eliminados-o-de-una-unidad-corrupta-en-gnu-linux/&#34;&gt;Cómo recuperar archivos eliminados o de una unidad corrupta en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/02/cifrar-unidad-usb-completamente-con-dm-crypt-y-luks-en-gnu-linux/&#34;&gt;Cifrar unidad USB completamente con dm-crypt y LUKS en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/02/cifrar-archivos-con-encfs-en-gnu-linux/&#34;&gt;Cifrar archivos con EncFS en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/03/como-eliminar-de-forma-segura-archivos-con-wipe-y-dd-en-gnu-linux/&#34;&gt;Cómo eliminar de forma segura archivos con wipe y dd en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/03/cambiar-el-formato-de-archivos-de-musica-o-audio-en-gnu-linux/&#34;&gt;Cambiar el formato de archivos de música o audio en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/04/cambiar-el-formato-de-archivos-de-video-o-peliculas-en-gnu-linux/&#34;&gt;Cambiar el formato de archivos de vídeo o películas en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/05/3-opciones-ofimaticas-alternativas-a-microsoft-office/&#34;&gt;3 opciones ofimáticas alternativas a Microsoft Office&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/05/como-realizar-copias-de-seguridad-en-windows-con-freefilesync/&#34;&gt;Cómo realizar copias de seguridad en Windows con FreeFileSync&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/06/atajos-de-teclado-basicos-de-la-terminal-en-gnu-linux/&#34;&gt;Atajos de teclado básicos de la terminal en GNU/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/06/combinacion-de-teclas-para-copiar-y-pegar-en-la-terminal/&#34;&gt;Combinación de teclas para copiar y pegar en la terminal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Un trío de artículos de opinión:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/01/windows-10-y-office-2016-tan-faciles-de-usar-sin-licencia-como-siempre/&#34;&gt;Windows 10 y Office 2016 tan fáciles de usar sin licencia como siempre&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/06/la-siguiente-disrupcion-tecnologica-la-convergencia/&#34;&gt;La siguiente disrupción tecnológica, la convergencia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/06/el-lenguaje-de-programacion-framework-y-librerias-importan/&#34;&gt;El lenguaje de programación, framework y librerías importan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finalmente, un desempaquetado de una aspiradora que compré, un resumen de las presentaciones a las que asistí de la conferencia BilboStack y el sexto aniversario desde que empecé la bitácora:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/01/desempaquetado-y-analisis-de-aspiradora-dyson-dc37c-advanced-allergy/&#34;&gt;Desempaquetado y análisis de aspiradora Dyson DC37c Advanced Allergy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/01/conferencia-bilbostack-2016/&#34;&gt;Conferencia BilboStack 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/02/6o-aniversario-del-blog/&#34;&gt;6º aniversario del blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Acabo de empezar dos series de artículos una &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/terminal/&#34;&gt;serie sobre la terminal de GNU/Linux&lt;/a&gt; y completando con otros cuantos artículos otra serie sobre varios temas de &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/web/&#34;&gt;servidores y desarrollo web&lt;/a&gt; que aún tengo pendiente de continuar con algunos más. Además y aunque no he escrito ningún artículo hablando sobre ellos publiqué una nueva actualización del &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;libro PlugIn Tapestry&lt;/a&gt; con nuevo contenido y otro tanto revisado y actualizado.&lt;/p&gt;

&lt;p&gt;Con algunos artículos he quedado bastante satisfecho como en los que he hablado de Microsoft Windows y Microsoft Office pero también varios sobre Java, Java EE y HTTP/2. Sin embargo, algo que no falla es escribir algo de JavaScript y recibir unos cuantos &lt;em&gt;retweets&lt;/em&gt; y favoritos cuando lo publico en Twitter aunque tenga la sensación de no ser lo de lo mejor que haya escrito parece que es lo que más llama la atención posiblemente ya que la mayoría de la gente lo usa de una u otra forma. Por otro lado tengo la sensación de que escribo para Google ya que recibo pocos comentarios seguramente por la forma en la que escribo ya que no suelo personalizar los artículos poniendo información personal o intercalando algunos chistes, más bien me centro en el aspecto técnico del que estoy escribiendo pero tampoco pasa nada, compartir el poco o más conocimiento que tengo y otro que voy aprendiendo ya es suficiente recompensa para mi si además veo que cuanto más tiempo pasa el número de visitas crecen algo me mantiene con motivación para seguir escribiendo y publicando contenido.&lt;/p&gt;

&lt;p&gt;En cuanto a como han evolucionado las visitas siempre es motivante ver que con el nuevo contenido añadido y poco a poco las visitas y número de páginas vistas aumentan algo, en cualquier caso siguen siendo pocas con las que seguramente tengan otras bitácoras de temática similar pero también seguramente más que otros cuantas. De casi aproximadamente 7000 sesiones al mes que tenía en enero ahora en junio Analytics me contabiliza unas 11000, en el mismo periodo de tiempo he pasado de 9000 páginas vistas a casi 13500. La mayor parte de esta mejora ha sido por unos pocos artículos que se habrán posicionado bien en los primeros meses del año en el buscador Google fuente de la que provienen la mayor parte de las visitas.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/154/analytics.png&#34; title=&#34;Evolución de sesiones mensuales en Blog Bitix&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/154/analytics-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Evolución de sesiones mensuales en Blog Bitix&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Durante este tiempo en la bitácora he realizado algunos cambios haciendo el tamaño de letra más pequeña de las secciones de referencia y series de artículos así como en las series de artículos numerar los artículos. He añadido publicidad a nivel de página para los dispositivos móviles soportados que desde no hace mucho ofrece Google AdSense. He añadido un buscador con la tecnología de Google para buscar contenido en Blog Bitix y he minimizado el HTML con la intención de que la cantidad de datos descargados al acceder al &lt;em&gt;blog&lt;/em&gt; sean unos cuantos kilobytes menos. También he añadido un mensaje para aquellos usuarios que usen AdBlock y lo tengan activado instándolos a considerar que lo desactiven en Blog Bitix ya que la publicidad que incluyo en el &lt;em&gt;blog&lt;/em&gt; es amable y poco intrusiva.&lt;/p&gt;

&lt;p&gt;Con la publicidad que incluyo y los enlaces de afiliación para Amazon de mayoritariamente libros haré alguna nueva donación a algún proyecto de software libre que use o me resulte de interés. Con las enlaces de Amazon recibí una nueva transferencia de unos 25€ y con la publicidad de AdSense estoy a punto de recibir la correspondiente transferencia de aproximadamente 70€ al superar el límite mínimo, cuando la reciba me plantearé hacer la o las donaciones. No serán muy elevadas pero con ellas espero contribuir y devolver algo al software libre que uso a diario tanto de forma personal como en el trabajo. La primera donación que hice fue &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/12/yo-apoyo-al-software-libre-tu-tambien/&#34;&gt;comprando una par de camisetas a la FSFE&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Tengo muchos artículos escritos pero pendientes de publicar y muchas ideas de artículos que me permitirían seguir escribiendo a mi ritmo de publicación durante más de un año o dos sin ocurrírseme ninguna nueva idea de artículo aunque algunas ideas que he apuntado más tarde las deseche. Más que tiempo para escribir me falta tiempo para editar y publicar los artículos, compaginarlo con el trabajo me absorbe gran parte del tiempo libre que me queda.&lt;/p&gt;

&lt;p&gt;Y por mi esto ha sido todo durante estos seis meses pasados. ¡A por los siguientes 6 meses con nuevos artículos!&lt;/p&gt;



        </content>
        
            
                <category term="blog"/>
            
                <category term="blog-stack"/>
            
                <category term="hemeroteca"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="tapestry"/>
            
                <category term="gnu-linux"/>
            
        
    </entry>
    
</feed>
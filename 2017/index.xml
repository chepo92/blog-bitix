<?xml version="1.0" encoding="utf-8"?>
<feed version="2.0" xmlns="http://www.w3.org/2005/Atom">
    <id>https://picodotdev.github.io/blog-bitix/2017/</id>
    <title type="text">Blog Bitix</title>
    <subtitle>Recent content on Blog Bitix</subtitle>
    <updated>2017-12-30T09:30:00+01:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/images/logotipos/hugo.png</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/logotipos/hugo.png</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/12/hemeroteca-12/</id>
        <title>Hemeroteca #12</title>        
        <updated>2018-01-13T11:35:00+01:00</updated>
        <published>2017-12-30T09:30:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/12/hemeroteca-12/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<p>Cuarto año de Blog Bitix y en febrero serán ocho desde que empecé con <a href="https://elblogdepicodev.blogspot.com.es">El blog del pico.dev</a>. En los últimos seis meses he seguido publicando casi a dos artículos por semana y durante el 2017 ha sido casi siempre así, en este semestre han sido 48 artículos, que juntos con los 39 del primero son 87 durante el año 2017, mi mayor tasa de publicación en un año.</p>
<p>En estas hemerotecas siempre repaso cual es la evolución de visitas e ingresos de AdSense que quizá a alguien más le resulte de interés. En Junio y Julio alcance unas 50K páginas vistas el mayor pico de visitas, aunque en meses posteriores han descendido, al principio lo achacaba a los meses vacacionales de verano pero luego se han mantenido no se si por alguna penalización de Google o algún artículo que recibía muchas visitas y haya descendido en su posicionamiento. En cualquier caso en los últimos meses del año las visitas han tenido una tendencia ascendente, de unas 40K páginas vistas y superior respecto a las de hace una año que comparándolas han sido de 25K en 2016 y de 38K en 2017 un crecimiento de un 85%. No está mal, si el año siguiente fuese igual me daría por muy satisfecho.</p>
<p>En el apartado de ingresos por la publicidad AdSense, algunos artículos patrocinados y enlaces de afiliación también ha estado bien. En estos momentos por AdSense es raro el día que no recibo al menos un euro y algún día excepcional he recibido 8, otros algo menos de 2 y 3, mensualmente ya es habitual que esté en un rango de 30 y 45€, los ingresos de AdSense se relacionan en gran medida con el número de visitas. Al final el artículo que publiqué sobre los <a href="https://picodotdev.github.io/blog-bitix/2017/02/cursos-de-formacion-de-keepcoding/index-amp.html">cursos de formación de KeepCoding</a> han merecido la pena como artículo patrocinado con la compra de dos usuario de tres cursos (aunque la mayoría de gente se registran a los cursos gratuitos), pero esto junto con los artículos patrocinados es más esporádico y por el momento poco habitual para mi.</p>
<p>En alguna ocasión me han comentado que me donarían algo por los artículos que escribo, una posibilidad sería usar <a href="https://www.patreon.com/">Patreon</a> o <a href="https://www.paypal.com/">PayPal</a>, sin embargo, no me convence mucho la donación directa por ser demasiado generosa y he preferido añadir una <a href="https://picodotdev.github.io/blog-bitix/series/donacion/">página con ciertos productos tecnológicos y <em>gamers</em> seleccionados</a> para que si alguien le gusta mis artículos, se acuerda y quiere donarme algo lo haga a través de estos enlaces de afiliación. Al que compra le cuesta lo mismo pero yo recibo una comisión. Esto me recuerda que debería hacer alguna nueva donación a proyectos de software libre y estoy pensando en <a href="https://lineageos.org/">Lineage OS</a> y <a href="https://www.replicant.us/">Replicant</a>.</p>
<p>Quien crea que es mucho que pruebe a crearse una bitácora, un canal en <a href="https://www.youtube.com/">YouTube</a> o un <em>podcast</em> y verá rápidamente que o se acierta en la temática y se es muy bueno creando contenido que genera interés o primero verá que han de pasar dos años y dedicar una ingente cantidad de horas a crear ese contenido para llegar a estas cifras que tampoco son altas, no en vano muchos de estos proyectos son abandonados al cabo de unos meses, por algo será.</p>
<div class="media">
<figure>
<p><img src="url=resource:analytics-2017.png,size=300x200,gallery=true" alt="" title="Analytics 2017 de Blog Bitix" />
<img src="url=resource:gadsense-2017.png,size=300x200,gallery=true" alt="" title="AdSense 2017 de Blog Bitix" /></p>
<figcaption>Evolución visitas e ingresos en 2017</figcaption>
</figure>
</div>
<p>Pero por otra parte he recibido buenos comentarios sobre lo que escribo en Blog Bitix, por algunas personas vía <a href="https://twitter.com/">Twitter</a> y otras en algún comentario que me anima a seguir escribiendo y compartiendo como hasta ahora lo que voy aprendiendo e investigando que algún día espero utilizar en algún trabajo antes de que me jubile o pruebe ser un jardinero o barrendero.</p>
<p>Este <a href="https://picodotdev.github.io/blog-bitix/2017/">año 2017 he escrito los artículos</a> y este semestre me propuse publicar una mayor cantidad de artículos relacionados con el lenguaje de programación Java con motivo de la pasada publicación de Java 9. Pero primero empecé con un par de artículos sobre <em>portlets</em> y <a href="https://tapestry.apache.org/">Apache Tapestry</a> que en algún momento espero añadirlos en alguna sección del libro <a href="https://picodotdev.github.io/blog-bitix/2014/08/actualizacion-del-libro-plugin-tapestry/index-amp.html">PlugIn Tapestry</a>. Por supuesto, varios artículos comentando las novedades más relevantes de Java 9 publicado en septiembre entre ellas la modularidad y otras no menos notables.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/07/introduccion-a-los-portales-y-ejemplo-de-portlet-con-liferay/index-amp.html">Introducción a los portales y ejemplo de portlet con Liferay</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/07/portlets-con-el-framework-apache-tapestry-y-apache-pluto/index-amp.html">Portlets con el framework Apache Tapestry y Apache Pluto</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/07/iniciar-rapido-un-proyecto-de-java-con-gradle-o-de-spring-con-spring-initializr/index-amp.html">Iniciar rápido un proyecto de Java con Gradle o de Spring con Spring Initializr</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/07/iniciacion-a-la-programacion-concurrente-en-java/index-amp.html">Iniciación a la programación concurrente en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/07/4-formas-de-hacer-un-bucle-for-en-java/index-amp.html">4 formas de hacer un bucle for en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/07/ejecutar-varias-tareas-de-forma-concurrente-en-java/index-amp.html">Ejecutar varias tareas de forma concurrente en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/08/el-antipatron-de-inicializacion-de-variables-con-dobles-llaves-en-java/index-amp.html">El antipatrón de inicialización de variables con dobles llaves en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/08/cache-simple-de-datos-y-con-ehcache-en-java/index-amp.html">Cache simple de datos y con Ehcache en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/09/los-cuantificadores-greedy-reluctant-y-possessive-en-expresiones-regulares/index-amp.html">Los cuantificadores greedy, reluctant y possessive en expresiones regulares</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/09/los-tipos-de-referencias-debiles-soft-weak-y-phantom-en-java/index-amp.html">Los tipos de referencias débiles soft, weak y phantom en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/09/la-herramienta-de-documentacion-javadoc-de-java/index-amp.html">La herramienta de documentación Javadoc de Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/09/como-generar-la-documentacion-javadoc-con-gradle/index-amp.html">Cómo generar la documentación Javadoc con Gradle</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/09/crear-anotaciones-de-javadoc-personalizadas-con-taglets/index-amp.html">Crear anotaciones de Javadoc personalizadas con taglets</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/09/cambiar-y-personalizar-los-estilos-de-la-documentacion-javadoc/index-amp.html">Cambiar y personalizar los estilos de la documentación Javadoc</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/09/novedades-y-nuevas-caracteristicas-de-java-9-los-modulos/index-amp.html">Novedades y nuevas características de Java 9, los módulos</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/09/novedades-de-java-9-mas-alla-de-la-modularidad/index-amp.html">Novedades de Java 9, más allá de la modularidad</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/09/jshell-la-herramienta-repl-incorporada-en-java-9/index-amp.html">JShell la herramienta REPL incorporada en Java 9</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/10/evitar-niveles-de-anidacion-de-sentencias-condicionales-con-guard-clauses/index-amp.html">Evitar niveles de anidación de sentencias condicionales con guard clauses</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/10/ejemplo-con-el-cliente-http-2-de-java/index-amp.html">Ejemplo con el cliente HTTP/2 de Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/10/obtener-el-minimo-o-maximo-de-dos-una-lista-o-stream-de-valores-en-java/index-amp.html">Obtener el mínimo o máximo de dos, una lista o stream de valores en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/10/las-excepciones-del-lenguaje-java/index-amp.html">Las excepciones del lenguaje Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/10/obtener-informacion-de-la-pila-de-las-excepciones/index-amp.html">Obtener información de la pila de las excepciones</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/10/implementar-funcionalidades-comunes-en-java-con-la-libreria-lombok/index-amp.html">Implementar funcionalidades comunes en Java con la librería Lombok</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/10/visualizar-datos-y-generar-graficas-en-java-con-jfreechart/index-amp.html">Visualizar datos y generar gráficas en Java con JFreeChart</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/11/ordenar-alfabeticamente-cadenas-con-la-clase-collator-en-java/index-amp.html">Ordenar alfabéticamente cadenas con la clase Collator en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/12/introduccion-a-la-programacion-funcional-con-java-y-la-libreria-vavr/index-amp.html">Introducción a la programación funcional con Java y la librería Vavr</a></li>
</ul>
<p>Una serie de artículos sobre <a href="https://graphql.org/">GraphQL</a> como alternativa a una API REST que tiene algunas ventajas. Aún me queda publicar uno de esta serie, en cuanto se acepte un <em>pull request</em> a raíz de una petición que cree con <a href="https://github.com/graphql-java/graphql-java-tools/issues/93">un problema que me encontré</a>.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/index-amp.html">Ejemplo de GraphQL para una interfaz de un servicio con Spring Boot y Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/11/usar-un-resolver-para-recuperar-propiedades-en-graphql/index-amp.html">Usar un resolver para recuperar propiedades en GraphQL</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/11/consultas-con-parametros-para-filtrar-datos-en-graphql/index-amp.html">Consultas con parámetros para filtrar datos en GraphQL</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/11/paginacion-usando-cursores-en-graphql-y-java/index-amp.html">Paginación usando cursores en GraphQL y Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/12/definir-nuevos-tipos-de-datos-escalares-en-graphql/index-amp.html">Definir nuevos tipos de datos escalares en GraphQL</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/11/devolver-mensajes-de-error-descriptivos-en-graphql/index-amp.html">Devolver mensajes de error descriptivos en GraphQL</a></li>
</ul>
<p>De los menos en este semestre están relacionados con el software libre. De <a href="https://about.gitlab.com/">GitLab</a> tengo otro par de artículos por publicar para realizar integración continua y mostrando más en detalles su gestión de peticiones, wiki y páginas. Si estas navidades tienes algún momento para ver la televisión en uno de los siguientes artículos encontrarás varias ideas relacionadas con la tecnología.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/08/instalar-y-renovar-un-certificado-de-lets-encrypt-en-nginx/index-amp.html">Instalar y renovar un certificado de Let's Encrypt en Nginx</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/index-amp.html">El buscador que respeta tu privacidad, DuckDuckGo</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/index-amp.html">Películas sobre tecnología o informática, series, documentales, vídeos, libros, GNU/Linux y software libre</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/12/como-eliminar-metainformacion-de-las-fotos-en-gnu-linux/index-amp.html">Como eliminar metainformación de las fotos en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/index-amp.html">GitLab, la completa herramienta integrada para desarrollo de software</a></li>
</ul>
<p>O de opinión.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/10/la-triste-realidad-de-java-versiones-antiguas/index-amp.html">La triste realidad de Java, versiones antiguas</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/10/consejos-para-empresas-y-gente-de-recursos-humanos-que-busquen-talento/index-amp.html">Consejos para empresas y gente de recursos humanos que busquen talento</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/12/microsoft-does-not-care-if-you-use-windows-or-office-without-a-license/index-amp.html">Microsoft does not care if you use Windows or Office without a license</a></li>
</ul>
<p>Algunos artículos de tema alternativos en la temática principal de este blog pero que también me gusta compartir, comentando el cambio que hice de compañía eléctrica a <a href="https://www.holaluz.com/">Holaluz</a>, de caldera a termo eléctrico y la diferencia en la factura entre tener caldera y tener termo eléctrico. Un par de artículos de los robles que he plantado que espero prosperen, publicaré alguno más. También algún artículo de desempaquetado.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/07/desempaquetado-maletin-herramientas-mannesmann-y-bandejas-melamina-balvi/index-amp.html">Desempaquetado maletín herramientas Mannesmann y bandejas melamina Balvi</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/07/la-busqueda-de-ejemplares-de-roble-comun/index-amp.html">La búsqueda de ejemplares de roble común</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/09/seleccion-de-semillas-de-roble-comun-y-metodos-de-germinacion/index-amp.html">Selección de semillas de roble común y métodos de germinación</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/08/sustituir-caldera-de-gas-por-un-termo-electrico-fleck-duo-7-50/index-amp.html">Sustituir caldera de gas por un termo eléctrico Fleck Duo 7 50</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/11/comparando-la-factura-entre-caldera-de-gas-y-termo-electrico/index-amp.html">Comparando la factura entre caldera de gas y termo eléctrico</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/11/me-cambio-a-la-electrica-holaluz/index-amp.html">Me cambio a la eléctrica Holaluz</a></li>
</ul>
<p>Una buena colección de libros técnicos que he leído durante el último trío de años y me han gustado junto con una selección de productos tecnológicos.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/08/37-buenos-libros-sobre-sobre-java-linux-devops-y-desarrollo-que-he-leido/index-amp.html">37 buenos libros sobre sobre Java, Linux, DevOps y desarrollo que he leído</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/11/8-plus-ideas-de-productos-tecnologicos-para-comprar-o-regalar/index-amp.html">8+ ideas de productos tecnológicos para comprar o regalar</a></li>
</ul>
<p>Espero seguir escribiendo como hasta ahora en el 2018 si el tiempo del que dispongo me lo permite y continuo con motivación. Por lo pronto son unos cuantos artículos que ya tengo escritos a falta de retocar en el momento que los publique. Puedes aprovechar para repasar esta lista y leer alguno si te lo perdiste, por supuesto si aún no lo has hecho, suscríbete con tu lector preferido al <a href="https://picodotdev.github.io/blog-bitix/index.xml"><em>feed</em> a Blog Bitix</a>. Finalmente, ya solo me queda desearos con la siguiente imagen linuxera de <a href="http://www.klowner.com/">Klouner</a>&hellip; ¡Buen <strike>2016</strike> 2018!</p>
<div class="media">
<figure>
<p><img src="url=resource:christmas-tux-2017.jpg,size=600x450,gallery=true" alt="" title="¡Buen 2018!" /></p>
<figcaption>¡Buen 2018! Fuente: klowner.com</figcaption>
</figure>
</div>
]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="tapestry"/>
            
                <category term="gnu-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/</id>
        <title>GitLab, la completa herramienta integrada para desarrollo de software</title>        
        <updated>2018-01-14T02:00:00+01:00</updated>
        <published>2017-12-23T10:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
          <![CDATA[<p><strong>Al desarrollar software una herramienta de control de versiones como Git y otras como un gestor de peticiones, una herramienta de integración continua o despliegue contínuo o una wiki para documentación son necesarias. Hay productos específicos para cada uno de ellos pero GitLab proporciona en una único producto todas estas facilitando su instalación y administración estando integradas en el mismo producto.</strong></p>]]>
        
        <![CDATA[<div class="logotypes" style="min-width: 200px;">
<p><img src="url=logotype:gitlab.svg,size=1.0847457627118644x1,gallery=false,layout=responsive" alt="" title="GitLab" /></p>
</div>
<p>Usar una herramienta de control de versiones para el código fuente de un proyecto o programa es imprescindible para recuperar versiones anteriores de los archivos, comparar y compartir los cambios con el resto de desarrolladores del equipo. Otras herramientas imprescindibles son un gestor de peticiones para documentar cuál es el trabajo a realizar, ver en que se está trabajando, priorizar el trabajo inmediato que se realizará y el estado de cada petición. Por otro lado una herramienta donde recoger documentación del proyecto ayuda a compartir información y hacer que ese conocimiento quede recogido en algún lugar que pueda ser consultado con posterioridad o para futuros desarrolladores. También en estos días es imprescindible una herramienta para automatizar la ejecución de las pruebas unitarias y funcionales en cada <em>commit</em> al repositorio de código fuente.</p>
<p>Para cada una de estas funcionalidades hay herramientas específicas: <a href="https://git-scm.com/">Git</a> para la herramienta de control de versiones, <a href="https://github.com/">GitHub</a> con algunas funciones colaborativas como <em>pull request</em> y revisiones de código, <a href="https://www.atlassian.com/software/jira">Jira</a> para la gestión de peticiones, <a href="https://www.mediawiki.org/">MediaWiki</a> para documentar cierta información o <a href="https://jenkins.io/">Jenkins</a> para la ejecución de las pruebas automatizadas. Instalar estas herramientas individualmente requiere tiempo y dedicación, además de mantenimiento posterior.</p>
<p><a href="https://about.gitlab.com/">GitLab</a> es una herramienta que proporciona estas funcionalidades en un único producto y por tanto más fácil de instalar y administrar. Quizá su gestor de peticiones y wiki no tenga tantas opciones como sus respectivos productos específicos pero para la mayoría de casos son más que suficientes. Y tiene un desarrollo muy activo añadiendo características cada pocas semanas.</p>
<p>Hay varias formas de instalar GitLab, una de ellas es <a href="https://about.gitlab.com/installation/#ubuntu">instalandolo como un paquete de software</a> en la propia máquina, usando una <a href="https://docs.gitlab.com/ce/install/docker.html">imagen de Docker</a> o con una <a href="https://bitnami.com/stack/gitlab">imagen de Bitnami</a>. Siguiendo el artículo de <a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/index-amp.html">Introducción a Bitnami</a> puedes conocer como instalar GitLab en una máquina virtual con <a href="https://www.virtualbox.org/">VirtualBox</a> y con la <a href="https://picodotdev.github.io/blog-bitix/series/docker/">serie de artículos sobre Docker</a> como instalarlo en forma de contenedor y en la web de GitLab se explica como instalarlo como un software más de un sistema.</p>
<p>Usando <a href="https://www.docker.com/">Docker</a> y el siguiente archivo de <a href="https://docs.docker.com/compose/">Docker Compose</a> basta el comando <code>docker-compose up</code> para iniciar GitLab. Instalado GitLab de alguna de las formas anteriores usando un navegador web y con la dirección <em>https://gitlab</em> (configurados los certificados SSL y la ubicación de los volúmenes) se accede a la aplicación de GitLab, donde inicialmente se pide la contraseña del usuario administrador <em>root</em> con la que iniciar sesión y realizar las tareas administrativas como crear otros usuarios y proyectos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-YAML" data-lang="YAML">version<span class="p">:</span><span class="w"> </span><span class="s1">&#39;3.4&#39;</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span>services<span class="p">:</span><span class="w">&#10;</span><span class="w">  </span>gitlab<span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>image<span class="p">:</span><span class="w"> </span><span class="s1">&#39;gitlab/gitlab-ce:latest&#39;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>container_name<span class="p">:</span><span class="w"> </span>gitlab<span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>hostname<span class="p">:</span><span class="w"> </span><span class="s1">&#39;localhost&#39;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>environment<span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>GITLAB_OMNIBUS_CONFIG<span class="p">:</span><span class="w"> </span><span class="sd">|&#10;</span><span class="sd">&nbsp;&nbsp;&nbsp;&nbsp;   </span><span class="sd"> </span><span class="sd">external_url &#39;https://gitlab&#39;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>nginx<span class="p">[</span><span class="s1">&#39;ssl_certificate&#39;</span><span class="p">]</span><span class="w"> </span>=<span class="w"> </span><span class="s1">&#39;/etc/gitlab/ssl/gitlab.crt&#39;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>nginx<span class="p">[</span><span class="s1">&#39;ssl_certificate_key&#39;</span><span class="p">]</span><span class="w"> </span>=<span class="w"> </span><span class="s1">&#39;/etc/gitlab/ssl/gitlab.key&#39;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>ports<span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>-<span class="w"> </span><span class="s1">&#39;8022:22&#39;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>-<span class="w"> </span><span class="s1">&#39;8080:80&#39;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>-<span class="w"> </span><span class="s1">&#39;8443:443&#39;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>volumes<span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>-<span class="w"> </span><span class="s1">&#39;gitlab-config-volume:/etc/gitlab&#39;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>-<span class="w"> </span><span class="s1">&#39;gitlab-log-volume:/var/log/gitlab&#39;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>-<span class="w"> </span><span class="s1">&#39;gitlab-data-volume:/var/opt/gitlab&#39;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>-<span class="w"> </span><span class="s1">&#39;./docker-volumes/gitlab/ssl:/etc/gitlab/ssl&#39;</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span>volumes<span class="p">:</span><span class="w">&#10;</span><span class="w">  </span>gitlab-config-volume<span class="p">:</span><span class="w">&#10;</span><span class="w">  </span>gitlab-log-volume<span class="p">:</span><span class="w">&#10;</span><span class="w">  </span>gitlab-data-volume<span class="p">:</span><span class="w">&#10;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose.yml</span>
    </div>
</div>
<div class="media">
<figure>
<p><img src="url=resource:change-password.png,size=300x200,gallery=true" alt="" title="Contraseña de root" />
<img src="url=resource:sing-in.png,size=300x200,gallery=true" alt="" title="Inicio de sesión" /></p>
<figcaption>Contraseña e inicio de sesión</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><img src="url=resource:welcome.png,size=300x200,gallery=true" alt="" title="Página de bienvenida" /></p>
<figcaption>Página de bienvenida</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><img src="url=resource:profile.png,size=300x200,gallery=true" alt="" title="Perfil de usuario" />
<img src="url=resource:admin-area.png,size=300x200,gallery=true" alt="" title="Área de administración" /></p>
<figcaption>Perfil de usuario y área de administración</figcaption>
</figure>
</div>
<p>Iniciada sesión ya se puede empezar a usar GitLab a crear usuarios con sus claves SSH, repositorios de Git pudiendo importar otros existentes, crear nuevos, páginas de una wiki y peticiones, integración y entrega continua y personalizar el panel <em>kanban</em> con el flujo que deseamos que sigan las peticiones en la organización, por ejemplo, <em>planning</em>, <em>ready</em>, <em>doing</em>, <em>review</em>, <em>merged</em> y <em>deployed</em>.</p>
<div class="media">
<figure>
<p><img src="url=resource:new-proyect.png,size=300x200,gallery=true" alt="" title="Nuevo proyecto" /></p>
<figcaption>Nuevo proyecto</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><img src="url=resource:new-issue.png,size=300x200,gallery=true" alt="" title="Nueva petición" />
<img src="url=resource:issues-board.png,size=300x200,gallery=true" alt="" title="Panel de peticiones" /></p>
<figcaption>Nueva petición y panel de peticiones</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><img src="url=resource:new-wiki-page.png,size=300x200,gallery=true" alt="" title="Nueva página wiki" />
<img src="url=resource:wiki-page.png,size=300x200,gallery=true" alt="" title="Página wiki" /></p>
<figcaption>Página wiki</figcaption>
</figure>
</div>
<p>Creado un proyecto GitLab e introducida la clave pública SSH nos proporciona la dirección URL con la que se puede clonar, convertir una carpeta existente en un repositorio o añadir un repositorio existente. Una vez con el repositorio en el sistema de archivos local se puede empezar a subir, modificar y eliminar archivos del repositorio de control de versiones. Hecho algún <em>commit</em> y subido algún archivo desde GitLab se puede ver el contenido del repositorio de Git.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-bash" data-lang="bash">$ git clone ssh://git@gitlab:8022/root/test.git&#10;$ <span class="nb">cd</span> <span class="nb">test</span>&#10;$ touch README.md&#10;$ git add README.md&#10;$ git commit -m <span class="s2">&#34;add README&#34;</span>&#10;$ git push -u origin master</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>clone-repository.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-bash" data-lang="bash">$ <span class="nb">cd</span> <span class="nb">test</span>&#10;$ git init&#10;$ git remote add origin ssh://git@gitlab:8022/root/test.git&#10;$ git add .&#10;$ git commit -m <span class="s2">&#34;Initial commit&#34;</span>&#10;$ git push -u origin master</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>existing-folder.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="nb">cd</span> <span class="nb">test</span>&#10;git remote rename origin old-origin&#10;git remote add origin ssh://git@gitlab:8022/root/test.git&#10;git push -u origin --all&#10;git push -u origin --tags</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>existing-repository.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><img src="url=resource:project-details-1.png,size=300x200,gallery=true" alt="" title="Detalles de proyecto" />
<img src="url=resource:project-details-2.png,size=300x200,gallery=true" alt="" title="Detalles de proyecto" /></p>
<figcaption>Detalles de proyecto</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><img src="url=resource:source-file.png,size=300x200,gallery=true" alt="" title="Contenido de archivo código fuente" /></p>
<figcaption>Contenido de archivo de código fuente</figcaption>
</figure>
</div>
<p>Otras formas de usar GitLab es desde la nube de <a href="https://aws.amazon.com/es/ec2/">Amazon EC2</a> o de forma SaaS a un coste de entre 39€ y 199€ por usuario y mes pero si la nube no es una opción una de las ventajas de GitLab es que se puede instalar en algún sistema propio de cualquiera de las formas anteriores y tener proyecto privados. GitLab es otra herramienta que a añadiría a <a href="https://picodotdev.github.io/blog-bitix/2015/06/nueva-visita-a-herramientas-para-un-proyecto-java/index-amp.html">Herramientas para un proyecto Java</a>. Hay alguna cosa adicional a conocer <a href="https://docs.gitlab.com/ce/update/README.html">como realizar una actualización</a> cuando se publique una nueva versión o <a href="https://docs.gitlab.com/ce/raketasks/backup_restore.html#creating-a-backup-of-the-gitlab-system">como hacer copias de seguridad y restaurarlas</a>. Lo que he mostrado aqui son solo una introducción a unas pocas de las muchas posibilidades de GitLab.</p>
<p>
    El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/GitLab">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en <a href="https://github.com/">GitHub</a> y probarlo en tu equipo ejecutando el comando <code>docker-compose up</code>. 
</p>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/12/como-eliminar-metainformacion-de-las-fotos-en-gnu-linux/</id>
        <title>Como eliminar metainformación de las fotos en GNU/Linux</title>        
        <updated>2017-12-22T18:00:00+01:00</updated>
        <published>2017-12-22T18:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/12/como-eliminar-metainformacion-de-las-fotos-en-gnu-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes" style="min-width: 200px;">
<p><img src="url=logotype:gnu.svg,size=1.0199203187250996x1,gallery=false,layout=responsive" alt="" title="GNU" /></p>
</div>
<div class="logotypes" style="min-width: 200px;">
<p><img src="url=logotype:linux.svg,size=0.8617283950617284x1,gallery=false,layout=responsive" alt="" title="Linux" /></p>
</div>
<p>En los archivos de las fotos e imágenes además de su información visual gráfica, los millones de píxeles, se guarda información adicional relacionada con la misma, por ejemplo, con que modelo de cámara se realizó, la fecha y la hora a la que se realizó, e incluso la localización si la cámara dispone de GPS u otro medio de ubicación como posicionamiento mediante la red de datos móvil o WIFI.</p>
<p>Compartir la foto en redes sociales ya es compartir mucha información y un peligro para la privacidad pero si además va acompañada de esta metainformación lo es algo más. Esta metainformación, información sobre la información, información sobre la imagen, son los <a href="https://es.wikipedia.org/wiki/Exchangeable_image_file_format">datos EXIF</a> y se guardan embebidos en el propio archivo de la foto.</p>
<p>Podemos obtener la metainformación guardada en la foto de diferentes formas. Una con la herramienta de visualización de imágenes de nuestro entorno de escritorio, en mi caso con el visor de imágenes de <a href="https://www.gnome.org/">GNOME</a> o con las propiedades de archivo de <a href="https://www.microsoft.com/es-es/windows/">Windows</a> (botón derecho del ratón sobre el archivo &gt; Propiedades). Otra es usando la herramienta ImageMagick.</p>
<div class="media">
<figure>
<p><img src="url=resource:visor-imagenes.png,size=300x200,gallery=true" alt="" title="Visor de imágenes de GNOME" />
<img src="url=resource:propiedades-imagen.png,size=300x200,gallery=true" alt="" title="Propiedades de imagen con metadatos" /></p>
<figcaption>Imagen y propiedades con metadatos</figcaption>
</figure>
</div>
<p>Instalado el paquete <a href="https://www.imagemagick.org">ImageMagick</a> de nuestra distribución <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a>, en este caso con <a href="https://www.archlinux.org/">Arch Linux</a> la metainformación de una foto se obtiene con el comando:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt">1&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-bash" data-lang="bash">$ identify -verbose planton-roble.jpg$ identify -verbose planton-roble.jpg&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>identify.sh</span>
    </div>
</div>
<p>Si la foto incluye personas algunas redes sociales como <a href="https://www.facebook.com/">Facebook</a> permiten identificarlas, acompañada de metainformación además informa de con que, con quién, cuando y donde se tomó la foto. Si te importa y quieres proteger tu privacidad un poco es aconsejable eliminar esta metainformación al subir o compartir las fotos en las redes sociales. Con ImageMagick se puede eliminar la metainformación con los siguientes comandos. El primero modifica el archivo original y el segundo crea una copia de la foto sin la metainformación:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-bash" data-lang="bash">$ mogrify -strip *.jpg&#10;$ convert -strip source.jpg destination.jpg </code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>mogrify-convert.sh</span>
    </div>
</div>
<p><a href="https://help.twitter.com/es/using-twitter/tweeting-gifs-and-pictures">Twitter elimina los datos EXIF</a> de las fotos aunque utiliza la ubicación de la foto para realizar sugerencias de ubicaciones. <a href="https://www.facebook.com/">Facebook</a> creo que también elimina los datos EXIF al menos al visualizarlas, también <a href="https://www.whatsapp.com/">WhatsApp</a> y <a href="https://telegram.org/">Telegram</a>. Pero al compartir los archivos de fotos de forma directa como correo electrónico o por algún otro medio los metadatos seguirán estando presentes.</p>
<div class="media">
<figure>
<p><img src="url=resource:planton-roble.jpg,size=300x200,gallery=true" alt="" title="Imagen con datos EXIF" />
<img src="url=resource:planton-roble-noexif.jpg,size=300x200,gallery=true" alt="" title="Imagen sin datos EXIF" /></p>
<figcaption>Imagen izquierda con datos EXIF, imagen derecha sin datos EXIF</figcaption>
</figure>
</div>
<p>¿Puedes averiguar el dispositivo, la fecha en la que hizo la foto y con que software fotográfico se editó?</p>
<p>Independientemente de los datos EXIF al compartir fotos hay que tener un poco de cuidado, si tu privacidad no te importa mucho y compartes cualquier cosa personal tuya y así lo has decidido, tú mismo, eso sí simplemente se respetuoso y respeta la privacidad de las personas de las que tienes intención de compartir fotos. Ten en cuenta que compartir que estás de vacaciones, amigos, familiares y con el resto del historial de tu red social se puede conocer bastante acerca de la vida de una persona.</p>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/12/introduccion-a-la-programacion-funcional-con-java-y-la-libreria-vavr/</id>
        <title>Introducción a la programación funcional con Java y la librería Vavr</title>        
        <updated>2017-12-15T23:00:00+01:00</updated>
        <published>2017-12-15T23:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/12/introduccion-a-la-programacion-funcional-con-java-y-la-libreria-vavr/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
          <![CDATA[<p><strong>Ciertas propiedades de la programación funcional fueron una de las características más destacadas añadidas a Java 8. La librería Javaslang y más tarde renombrada a Vavr basándose en estas nueva características añade algunas otras que no están incluidas en el propio JDK y están presentes en otros lenguajes más recientes y con programación funcional desde sus inicios. En esta breve introducción a la librería Vavr comentaré cuales son las propiedades que proporciona para simplificar algunas aspectos de la tarea de programación.</strong></p>]]>
        
        <![CDATA[<div class="logotypes" style="min-width: 300px;">
<p><img src="url=logotype:vavr.png,size=3.2967032967032965x1,gallery=false,layout=responsive" alt="" title="Vavr" /></p>
</div>
<p>Varv se define a si misma como una librería funcional para Java 8+. Ayuda a reducir la cantidad de código y a incrementar la robustez. Un primer paso hacia la programación funcional es empezar a pensar en valores inmutables. Vavr proporciona colecciones inmutables, las necesarias funciones y estructuras de control para operar estos valores. El resultado es bello y simplemente funciona.</p>
<p>Dicho esto un código no se evalúa únicamente por la cantidad de lineas de código que contiene menos lineas no siempre es mejor si otra variable a tener en cuenta es la legibilidad que facilite la compresión del código a otra persona y a uno mismo en un futuro.</p>
<p>Me parece que ha sido hace mucho menos pero Java 8 fue publicado ya nada más y nada menos que hace casi cuatro años, una de las mayores modificaciones al lenguaje Java desde Java 5. Una de la nuevas características añadidas más destacadas fue la incorporación de las funciones <em>lambda</em> que posibilitan la programación funcional. Las <em>lambdas</em> combinado con los <em>streams</em>, otra de las nuevas características, en las colecciones hacen posible escribir con muchas menos líneas de código y de una forma mucho más natural y legible para la misma funcionalidad que en versiones anteriores. Las <a href="https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/index-amp.html">nuevas características añadidas al lenguaje en Java 8</a> ya por si solas son una gran mejora sin embargo a algunos no les parecen suficientes, una de las librerías Java del momento es <a href="https://www.vavr.io/">Vavr</a> que mejora y añade nuevas funcionalidades basándose en las novedades básicas añadidas al lenguaje en la versión 8.</p>
<p>Java 8 no las incorpora todo lo que podría en el JDK por decisión de los desarrolladores, ya que una de los principios que guían el desarrollo de Java es la compatibilidad hacia atrás e incorporar cosas en el lenguaje o JDK que en un momento determinado hasta que no demuestran que son realmente útiles y beneficiosas. Conservar la compatibilidad hacia atrás es una fortaleza pero que puede dar la sensación que Java siempre va un paso por detrás en incorporar novedades, aún así complementado con librerías como Vavr en el caso de las programación funcional se echa de menos menos otros lenguajes como <a href="https://kotlinlang.org/">Kotlin</a> o <a href="https://clojure.org/">Clojure</a>.</p>
<div class="media">
<figure>
<p><img src="url=resource:vavr-overview.png,size=300x200,gallery=true" alt="" title="Jerarquía de clases de Vavr" /></p>
<figcaption>Jerarquía de clases de Vavr</figcaption>
</figure>
</div>
<p>Los principios que sigue la librería Vavr y que forman la tendencia en la programación y la programación funcional son:</p>
<ul>
<li>Efectos colaterales: los cambios de estado son considerados dañinos si afectan al programa de una forma no deseada.</li>
<li>Transparencia referencial: una función o expresión tiene esta propiedad si puede ser reemplazada por su valor sin afectar al comportamiento del programa. Dicho de otra forma, dados los mismos datos de entrada el resultado de la función o expresión es el mismo. Una función es <em>pura</em> si todas las expresiones que contiene tienen la propiedad de <em>transparencia referencial</em>.</li>
<li>Pensar en valores: los valores más interesantes son aquellos que son inmutables ya que son <em>thread-safe</em> no necesitando mecanismos de sincronización en su acceso o modificación, son estables para las funciones <em>equals</em> y <em>hashCode</em> siendo confiables como claves <em>hash</em> y no necesitan ser clonados.</li>
<li>Estructuras de datos: proporciona una colección rica de estructuras de datos funcionales apoyándose en la funciones <em>lambda</em>. Son un reemplazo para las colecciones estándar de Java, la única interfaz que comparten es <a href="https://docs.oracle.com/javase/9/docs/api/java/lang/Iterable.html">Iterable</a>. Las colecciones de Java ocultan los detalles de implementación y las estructuras de datos internas pero son <em>colecciones mutables</em>. Las <em>colecciones inmutables</em> en Java se proporcionan como envoltorios que lanzan una excepción al intentarlas modificar. La <em>colecciones persistentes</em> son efectivamente inmutables realizando pequeñas modificaciones y conservando las estructuras anteriores y nuevas y permitiendo consultar y modificar cualquiera de sus versiones.</li>
<li>Estructuras de datos funcionales: son aquellas estructuras de datos inmutables, persistentes y los métodos tienen la propiedad de transparencia referencial.</li>
<li>Colecciones: los <em>stream</em> de Java para las colecciones son una forma de recorrerlas, realizar una computación y obtener una nueva colección. Los <em>stream</em> de Vavr no están tan relacionados con las colecciones.</li>
</ul>
<p>Vavr proporciona una representación bien diseñada de algunos de los tipos más básicos que aparentemente están ausentes o son rudimentarios en Java: <em>Tuple</em>, <em>Value</em> y <em>λ</em> (función <em>lambda</em>). Entre las funcionalidades proporcionadas por Vavr están:</p>
<ul>
<li>Tuplas: son una caja para contener varios objetos evitando la necesidad de crear una clase especifica si esta no tiene ningún comportamiento asociado. Vavr proporciona tuplas hasta de 8 elementos, de <a href="http://static.javadoc.io/io.vavr/vavr/0.9.2/io/vavr/Tuple0.html">Tuple0</a> a <a href="http://static.javadoc.io/io.vavr/vavr/0.9.2/io/vavr/Tuple8.html">Tuple8</a>.</li>
<li>Funciones: la programación funcional se basa en los valores y la transformación de esos valores usando funciones. Java 8 proporciona la clase <a href="https://docs.oracle.com/javase/9/docs/api/java/util/function/package-summary.html">Function</a> que acepta solo un parámetro y la clase <a href="https://docs.oracle.com/javase/9/docs/api/java/util/function/package-summary.html">BiFunction</a> que acepta dos. En Vavr las interfaces funcionales van de <a href="http://static.javadoc.io/io.vavr/vavr/0.9.2/io/vavr/Function0.html">Function0</a> hasta <a href="http://static.javadoc.io/io.vavr/vavr/0.9.2/io/vavr/Function8.html">Function8</a>. Es posible aplicar conceptos como <em>composition</em>, <em>lifting</em>, <em>partial application</em>, <em>currying</em> o <em>memoization</em>.</li>
<li>Valores: los valores en Vavr son inmutables. Algunos objetos <a href="http://static.javadoc.io/io.vavr/vavr/0.9.2/io/vavr/Value.html">Value</a> proporcionados son: <a href="http://static.javadoc.io/io.vavr/vavr/0.9.2/io/vavr/control/Option.html">Option</a>, <a href="http://static.javadoc.io/io.vavr/vavr/0.9.2/io/vavr/control/Try.html">Try</a>, <a href="http://static.javadoc.io/io.vavr/vavr/0.9.2/io/vavr/Lazy.html">Lazy</a>, <a href="http://static.javadoc.io/io.vavr/vavr/0.9.2/io/vavr/control/Either.html">Either</a>, <a href="http://static.javadoc.io/io.vavr/vavr/0.9.2/io/vavr/concurrent/Future.html">Future</a>, <a href="http://static.javadoc.io/io.vavr/vavr/0.9.2/io/vavr/control/Validation.html">Validation</a>.</li>
<li>Colecciones: se ha diseñado una nueva librería de colecciones para Java que cumple con los requerimientos de la programación funcional e inmutabilidad. <a href="http://static.javadoc.io/io.vavr/vavr/0.9.2/io/vavr/collection/List.html">List</a>, <a href="http://static.javadoc.io/io.vavr/vavr/0.9.2/io/vavr/collection/Queue.html">Queue</a>, <a href="http://static.javadoc.io/io.vavr/vavr/0.9.2/io/vavr/collection/SortedSet.html">SortedSet</a>, <a href="http://static.javadoc.io/io.vavr/vavr/0.9.2/io/vavr/collection/Seq.html">Seq</a>, <a href="http://static.javadoc.io/io.vavr/vavr/0.9.2/io/vavr/collection/Set.html">Set</a>, <a href="http://static.javadoc.io/io.vavr/vavr/0.9.2/io/vavr/collection/Map.html">Map</a>, <a href="http://static.javadoc.io/io.vavr/vavr/0.9.2/io/vavr/collection/Stream.html">Stream</a>, <a href="http://static.javadoc.io/io.vavr/vavr/0.9.2/io/vavr/collection/Traversable.html">Traversable</a>, &hellip;</li>
</ul>
<div class="media">
<figure>
<p><img src="url=resource:collections-seq.png,size=300x200,gallery=true" alt="" title="Jerarquía de clases de Seq" />
<img src="url=resource:collections-set-map.png,size=300x200,gallery=true" alt="" title="Jerarquía de clases de Set y Map" /></p>
<figcaption>Jerarquía de clases de Seq, Set y Map</figcaption>
</figure>
</div>
<ul>
<li><em>Pattern matching</em>: son una especie de sentencia <em>switch</em> que son evaluadas como una expresión y que retornan un valor.</li>
</ul>
<p>Entre la <a href="http://www.vavr.io/vavr-docs">documentación de Varv</a> hay numerosos ejemplos de código de todo lo anterior que recomiendo leer. En el siguiente ejemplo de código incluyo algunos posibles casos de uso de varias de las funcionalidades anteriores. En definitiva la librería Vavr complementa y añade a Java algunas de las características presentes en la programación funcional de otros lenguajes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span><span class="lnt">75&#10;</span><span class="lnt">76&#10;</span><span class="lnt">77&#10;</span><span class="lnt">78&#10;</span><span class="lnt">79&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.vavr</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">io.vavr.*</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.vavr.Lazy</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.vavr.collection.List</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.vavr.collection.Stream</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.vavr.control.Either</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.vavr.control.Option</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.vavr.control.Try</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.math.BigDecimal</span><span class="o">;</span>&#10;&#10;<span class="kn">import static</span> <span class="nn">io.vavr.API.*</span><span class="o">;</span>&#10;<span class="kn">import static</span> <span class="nn">io.vavr.Predicates.instanceOf</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[</span><span class="o">]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Throwable</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;# Side-Effects&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">CheckedFunction2</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span> <span class="n">Integer</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">divide</span> <span class="o">=</span> <span class="o">(</span><span class="n">Integer</span> <span class="n">dividend</span><span class="o">,</span> <span class="n">Integer</span> <span class="n">divisor</span><span class="o">)</span> <span class="o">-</span><span class="o">&gt;</span> <span class="n">dividend</span> <span class="o">/</span> <span class="n">divisor</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Try</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="o">(</span><span class="o">)</span> <span class="o">-</span><span class="o">&gt;</span> <span class="n">divide</span><span class="o">.</span><span class="na">apply</span><span class="o">(</span><span class="n">4</span><span class="o">,</span> <span class="n">2</span><span class="o">)</span><span class="o">)</span><span class="o">.</span><span class="na">onSuccess</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">:</span><span class="o">:</span><span class="n">println</span><span class="o">)</span><span class="o">.</span><span class="na">onFailure</span><span class="o">(</span><span class="n">e</span> <span class="o">-</span><span class="o">&gt;</span> <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Try</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="o">(</span><span class="o">)</span> <span class="o">-</span><span class="o">&gt;</span> <span class="n">divide</span><span class="o">.</span><span class="na">apply</span><span class="o">(</span><span class="n">4</span><span class="o">,</span> <span class="n">0</span><span class="o">)</span><span class="o">)</span><span class="o">.</span><span class="na">onSuccess</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">:</span><span class="o">:</span><span class="n">println</span><span class="o">)</span><span class="o">.</span><span class="na">onFailure</span><span class="o">(</span><span class="n">e</span> <span class="o">-</span><span class="o">&gt;</span> <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;# Functional Data Structures&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">0</span><span class="o">,</span> <span class="n">2</span><span class="o">,</span> <span class="n">3</span><span class="o">)</span><span class="o">.</span><span class="na">tail</span><span class="o">(</span><span class="o">)</span><span class="o">.</span><span class="na">prepend</span><span class="o">(</span><span class="n">1</span><span class="o">)</span><span class="o">.</span><span class="na">map</span><span class="o">(</span><span class="n">o</span> <span class="o">-</span><span class="o">&gt;</span> <span class="n">o</span> <span class="o">*</span> <span class="n">2</span><span class="o">)</span><span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">:</span><span class="o">:</span><span class="n">println</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;# Collections&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Stream</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">0</span><span class="o">,</span> <span class="n">2</span><span class="o">,</span> <span class="n">3</span><span class="o">)</span><span class="o">.</span><span class="na">tail</span><span class="o">(</span><span class="o">)</span><span class="o">.</span><span class="na">prepend</span><span class="o">(</span><span class="n">1</span><span class="o">)</span><span class="o">.</span><span class="na">toStream</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> <span class="o">(</span><span class="n">Integer</span> <span class="n">i</span> <span class="o">:</span> <span class="n">list</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;# Tuples&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Tuple3</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Integer</span><span class="o">,</span> <span class="n">BigDecimal</span><span class="o">&gt;</span> <span class="n">tuple</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Tuple3</span><span class="o">&lt;</span><span class="o">&gt;</span><span class="o">(</span><span class="s">&#34;El señor de los anillos&#34;</span><span class="o">,</span> <span class="n">1272</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;10.40&#34;</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Titulo: %s, Páginas: %d, Precio: %.2f%n&#34;</span><span class="o">,</span> <span class="n">tuple</span><span class="o">.</span><span class="na">_1</span><span class="o">,</span> <span class="n">tuple</span><span class="o">.</span><span class="na">_2</span><span class="o">,</span> <span class="n">tuple</span><span class="o">.</span><span class="na">_3</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;# Values&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Option</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&#34;foo&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Lazy</span><span class="o">&lt;</span><span class="n">Double</span><span class="o">&gt;</span> <span class="n">lazy</span> <span class="o">=</span> <span class="n">Lazy</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">Math</span><span class="o">:</span><span class="o">:</span><span class="n">random</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">lazy</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">lazy</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">CheckedFunction2</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span> <span class="n">Integer</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">divide</span> <span class="o">=</span> <span class="o">(</span><span class="n">Integer</span> <span class="n">dividend</span><span class="o">,</span> <span class="n">Integer</span> <span class="n">divisor</span><span class="o">)</span> <span class="o">-</span><span class="o">&gt;</span> <span class="n">dividend</span> <span class="o">/</span> <span class="n">divisor</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Either</span><span class="o">&lt;</span><span class="n">Throwable</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">value1</span> <span class="o">=</span> <span class="n">Try</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="o">(</span><span class="o">)</span> <span class="o">-</span><span class="o">&gt;</span> <span class="n">divide</span><span class="o">.</span><span class="na">apply</span><span class="o">(</span><span class="n">4</span><span class="o">,</span> <span class="n">2</span><span class="o">)</span><span class="o">)</span><span class="o">.</span><span class="na">toEither</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Either</span><span class="o">&lt;</span><span class="n">Throwable</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">value2</span> <span class="o">=</span> <span class="n">Try</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="o">(</span><span class="o">)</span> <span class="o">-</span><span class="o">&gt;</span> <span class="n">divide</span><span class="o">.</span><span class="na">apply</span><span class="o">(</span><span class="n">4</span><span class="o">,</span> <span class="n">0</span><span class="o">)</span><span class="o">)</span><span class="o">.</span><span class="na">toEither</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">value1</span><span class="o">.</span><span class="na">right</span><span class="o">(</span><span class="o">)</span><span class="o">.</span><span class="na">peek</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">:</span><span class="o">:</span><span class="n">println</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">value2</span><span class="o">.</span><span class="na">left</span><span class="o">(</span><span class="o">)</span><span class="o">.</span><span class="na">peek</span><span class="o">(</span><span class="n">e</span> <span class="o">-</span><span class="o">&gt;</span> <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">CheckedFunction1</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">curriedDivide</span> <span class="o">=</span> <span class="n">divide</span><span class="o">.</span><span class="na">curried</span><span class="o">(</span><span class="o">)</span><span class="o">.</span><span class="na">apply</span><span class="o">(</span><span class="n">10</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">curriedDivide</span><span class="o">.</span><span class="na">apply</span><span class="o">(</span><span class="n">2</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Function0</span><span class="o">&lt;</span><span class="n">Double</span><span class="o">&gt;</span> <span class="n">hashCache</span> <span class="o">=</span> <span class="n">Function0</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">Math</span><span class="o">:</span><span class="o">:</span><span class="n">random</span><span class="o">)</span><span class="o">.</span><span class="na">memoized</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hashCache</span><span class="o">.</span><span class="na">apply</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hashCache</span><span class="o">.</span><span class="na">apply</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Number</span> <span class="n">number</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Double</span><span class="o">(</span><span class="n">4</span><span class="o">.</span><span class="na">34</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Option</span><span class="o">&lt;</span><span class="n">Number</span><span class="o">&gt;</span> <span class="n">plusOne</span> <span class="o">=</span> <span class="n">Match</span><span class="o">(</span><span class="n">number</span><span class="o">)</span><span class="o">.</span><span class="na">option</span><span class="o">(</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Case</span><span class="o">(</span><span class="n">$</span><span class="o">(</span><span class="n">instanceOf</span><span class="o">(</span><span class="n">Integer</span><span class="o">.</span><span class="na">class</span><span class="o">)</span><span class="o">)</span><span class="o">,</span> <span class="n">i</span> <span class="o">-</span><span class="o">&gt;</span> <span class="n">i</span> <span class="o">+</span> <span class="n">1</span><span class="o">)</span><span class="o">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Case</span><span class="o">(</span><span class="n">$</span><span class="o">(</span><span class="n">instanceOf</span><span class="o">(</span><span class="n">Double</span><span class="o">.</span><span class="na">class</span><span class="o">)</span><span class="o">)</span><span class="o">,</span> <span class="n">d</span> <span class="o">-</span><span class="o">&gt;</span> <span class="n">d</span> <span class="o">+</span> <span class="n">2</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">plusOne</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-plaintext" data-lang="plaintext"># Side-Effects&#10;2&#10;java.lang.ArithmeticException: / by zero&#10;	at io.github.picodotdev.blogbitix.vavr.Main.lambda$main$8fab2fe6$1(Main.java:20)&#10;&#10;	at io.github.picodotdev.blogbitix.vavr.Main.lambda$main$a54cc6af$2(Main.java:22)&#10;# Functional Data Structures&#10;	at io.vavr.control.Try.of(Try.java:75)&#10;	at io.github.picodotdev.blogbitix.vavr.Main.main(Main.java:22)&#10;2&#10;4&#10;6&#10;&#10;# Collections&#10;1&#10;2&#10;3&#10;&#10;# Tuples&#10;Titulo: El señor de los anillos, Páginas: 1272, Precio: 10,40&#10;&#10;# Values&#10;0.9017284202792532&#10;0.9017284202792532&#10;2&#10;java.lang.ArithmeticException: / by zero&#10;	at io.github.picodotdev.blogbitix.vavr.Main.lambda$main$8fab2fe6$2(Main.java:56)&#10;	at io.github.picodotdev.blogbitix.vavr.Main.lambda$main$d82d4ab3$1(Main.java:58)&#10;	at io.vavr.control.Try.of(Try.java:75)&#10;	at io.github.picodotdev.blogbitix.vavr.Main.main(Main.java:58)&#10;5&#10;0.5015851774222647&#10;0.5015851774222647&#10;6.34</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;java&#39;</span>&#10;<span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;application&#39;</span>&#10;&#10;<span class="n">repositories</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">jcenter</span><span class="o">(</span><span class="o">)</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span> <span class="s2">&#34;io.vavr:vavr:0.9.2&#34;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.vavr.Main&#39;</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>La librería Varv es una de las que pongo como ejemplo en el artículo <a href="https://picodotdev.github.io/blog-bitix/2017/10/la-triste-realidad-de-java-versiones-antiguas/index-amp.html">La triste realidad de Java, versiones antiguas</a>, si es útil no usarla puede hacer que programar en Java no sea todo lo placentero que podría ser. Algunas de las críticas que recibe Java no tienen validez usando las herramientas o librerías adecuadas porque en cierta medida las herramientas importan aunque por ahí circule la idea de que las herramientas no importan, para una persona de negocio quizá no sin embargo para un desarrollador sí.</p>
<p>
    El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/Vavr">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en <a href="https://github.com/">GitHub</a> y probarlo en tu equipo ejecutando el comando <code>./gradlew run</code>. 
</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="http://docs.vavr.io/">Documentación de Vavr</a></li>
<li><a href="http://www.javadoc.io/doc/io.vavr/vavr">Javadoc de Vavr</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/</id>
        <title>Películas sobre tecnología o informática, series, documentales, vídeos, libros, GNU/Linux y software libre</title>        
        <updated>2017-12-30T00:05:00+01:00</updated>
        <published>2017-12-07T13:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<p>Si estás interesado en la tecnología, informática en general y en el software libre, código abierto y GNU/Linux estoy más que seguro que las siguientes listas de películas, series, documentales y libros te gustarán bastante. Probablemente algunas ya hayas visto pero otra quizá no conocías o aún no has visto y este artículo te anima a ver. En el momento de escribir esto aún no he visto todo el contenido de este artículo pero con esta lista lo tengo anotado y pendiente de ver.</p>
<h3 id="pelculas">Películas</h3>
<ul>
<li><a href="https://www.filmaffinity.com/es/film399662.html">Piratas de Silicon Valley</a></li>
<li><a href="https://www.filmaffinity.com/es/film689614.html">Trabajo basura (Office Space)</a></li>
<li><a href="https://www.filmaffinity.com/es/film553168.html">Juegos de guerra</a></li>
<li><a href="https://www.filmaffinity.com/es/film358476.html">Blade Runner</a>, <a href="https://www.filmaffinity.com/es/film236626.html">Blade Runner 2049</a></li>
<li><a href="https://www.filmaffinity.com/es/film577699.html">La red social</a></li>
<li><a href="https://www.filmaffinity.com/es/film601423.html">Jobs</a></li>
<li><a href="https://www.filmaffinity.com/es/film480342.html">Steve Jobs</a></li>
<li><a href="https://www.filmaffinity.com/es/film488334.html">TRON</a>, <a href="https://www.filmaffinity.com/es/film589915.html">TRON: Legacy</a></li>
<li><a href="https://www.filmaffinity.com/es/film271983.html">Blackhat. Amenaza en la red</a></li>
<li><a href="https://www.filmaffinity.com/es/film437471.html">Conspiración en la red, AntiTRUST</a></li>
<li><a href="https://www.filmaffinity.com/es/film304107.html">Terminator</a>, <a href="https://www.filmaffinity.com/es/film576352.html">Terminator 2: El juicio final</a>, <a href="https://www.filmaffinity.com/es/film477986.html">Terminator 3: La rebelión de las máquinas</a>, <a href="https://www.filmaffinity.com/es/film517417.html">Terminator Salvation</a>, <a href="https://www.filmaffinity.com/es/film188260.html">Terminator Génesis</a></li>
<li><a href="https://www.filmaffinity.com/es/film233071.html">Los fisgones (Sneakers)</a></li>
<li><a href="https://es.wikipedia.org/wiki/Categor%C3%ADa:Pel%C3%ADculas_sobre_hackers">Otras películas sobre <em>hackers</em></a></li>
</ul>
<div class="media">
<figure>
<p><img src="url=resource:pirates-of-silicon-valley.jpg,size=300x200,gallery=true" alt="" title="Piratas de Silicon Valley" />
<img src="url=resource:office-space.jpg,size=300x200,gallery=true" alt="" title="Trabajo basura" />
<img src="url=resource:wargames.jpg,size=300x200,gallery=true" alt="" title="Juegos de guerra" /></p>
</figure>
</div>
<h3 id="series">Series</h3>
<ul>
<li><a href="https://www.filmaffinity.com/es/film800295.html">Black Mirror</a></li>
<li><a href="https://www.filmaffinity.com/es/film993489.html">Mr Robot</a></li>
<li><a href="https://www.filmaffinity.com/es/film279751.html">Silicon Valley</a></li>
<li><a href="https://www.filmaffinity.com/es/film449215.html">Halt and Catch Fire</a></li>
<li><a href="https://www.filmaffinity.com/es/film914339.html">The IT Crowd</a></li>
<li><a href="https://www.filmaffinity.com/es/film482651.html">Scorpion</a></li>
<li><a href="https://www.filmaffinity.com/es/film752650.html">Odio canibal</a></li>
</ul>
<div class="media">
<figure>
<p><img src="url=resource:black-mirror.jpg,size=300x200,gallery=true" alt="" title="Black Mirror" />
<img src="url=resource:mr-robot.jpg,size=300x200,gallery=true" alt="" title="Mr Robot" />
<img src="url=resource:silicon-valley.jpg,size=300x200,gallery=true" alt="" title="Silicon Valley" /></p>
</figure>
</div>
<h3 id="documentales">Documentales</h3>
<ul>
<li><a href="https://es.wikipedia.org/wiki/El_triunfo_de_los_nerds">El triunfo de los nerds</a></li>
<li><a href="https://www.youtube.com/watch?v=7eOKcLnm0Xo">La historia de la computadora y computación</a></li>
<li><a href="https://www.youtube.com/watch?v=7KreXtq0QoA">La historia secreta de los <em>hackers</em></a></li>
<li><a href="https://www.youtube.com/watch?v=4Q7FTjhvZ7Y">Code Rush</a></li>
<li><a href="https://www.youtube.com/watch?v=9CghMhaNdZI">La revolución virtual</a></li>
<li><a href="https://www.youtube.com/watch?v=YtZvtUWo-bw">Documental Bill Gates</a></li>
<li><a href="https://www.filmaffinity.com/es/film113451.html">La historia de Aaron Swartz. El chico de Internet</a></li>
<li><a href="https://www.youtube.com/watch?v=uuxoThzFPPw">Historia de los primeros videojuegos</a></li>
<li><a href="https://www.youtube.com/watch?v=q_ymzSFjQ0A">La era de los videojuegos</a>, <a href="https://www.youtube.com/watch?v=TFN3SucnNns">II</a>, <a href="https://www.youtube.com/watch?v=9TsPi13AkOo">III</a>, <a href="https://www.youtube.com/watch?v=6WvCfi7AkG0">IV</a></li>
<li><a href="https://www.youtube.com/watch?v=1ao2V4A8Qcc">Atari: Game Over</a></li>
<li><a href="https://www.youtube.com/watch?v=1H9Gl9rLckk&amp;t=1504s">Gameplay - La historia de los videojuegos</a></li>
<li><a href="https://www.youtube.com/watch?v=ZKiLI7XFB9k">Good Copy Bad Copy</a></li>
<li><a href="https://es.wikipedia.org/wiki/Info_wars">Info wars</a></li>
<li><a href="https://www.youtube.com/watch?v=SSbhsPNnVWo">Lo and Behold: Reveries of the Connected World</a></li>
<li><a href="https://en.wikipedia.org/wiki/The_Machine_That_Changed_the_World_(miniseries)">The machine that changed the world</a></li>
<li><a href="https://www.youtube.com/watch?v=Pk2BWphDfvc">Nerds 2.0.1</a>, <a href="https://www.youtube.com/watch?v=EafxrkUEd50">II</a>, <a href="https://www.youtube.com/watch?v=ajn-Ij2AfPs">III</a></li>
<li><a href="https://www.youtube.com/watch?v=Q8BgoYRpGqA&amp;t=485s">Welcome to Macintosh</a></li>
<li><a href="https://www.youtube.com/watch?v=tNL3bDLgkh8">Steve Jobs: One last thing</a></li>
</ul>
<p>En <a href="https://www.youtube.com/">YouTube</a> hay cantidad de documentales más.</p>
<h3 id="documentales-sobre-el-software-libre-y-cdigo-abierto">Documentales sobre el software libre y código abierto</h3>
<ul>
<li><a href="https://www.youtube.com/watch?v=HuoljD3rgVM">El software libre es como el pastel de la abuela</a></li>
<li><a href="https://www.youtube.com/watch?v=Gm6uLgmqqXs">El software libre</a></li>
<li><a href="https://www.youtube.com/watch?v=HyzXwba7r78">Software Libre: La comunidad sin amos</a></li>
<li><a href="https://www.youtube.com/watch?v=EJPE_B0YTPI">Entrevista a maddog</a></li>
<li><a href="https://www.youtube.com/watch?v=ehT9rm1gvNo">¿Qué es el software libre y por que es tan importante para la sociedad?</a></li>
<li><a href="https://www.youtube.com/watch?v=cwptTf-64Uo">Código Linux</a></li>
<li><a href="https://www.youtube.com/watch?v=sujZg7jwKdk">Revolution OS</a></li>
</ul>
<p>Probablemente ya conozcas el software libre, o quizá no, en cualquier caso te recomiendo que veas una de las conferencias de <a href="https://es.wikipedia.org/wiki/Richard_Stallman">Stallman</a> da en numerosos lugares y en las que da a conocer el software libre y promueve su uso. Cuales son los motivos éticos, morales, de seguridad y prácticos por los que preferir software libre en vez de software privativo. Si te convence y usas otros sistemas operativos como <a href="https://www.microsoft.com/es-es/windows/">Windows</a> o <a href="https://www.apple.com/macos/">MacOS</a> puedes empezar a conocer las distribuciones de <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> y <a href="https://picodotdev.github.io/blog-bitix/2016/10/elegir-una-distribucion-gnu-linux-segun-el-usuario-uso-o-equipo/index-amp.html">elegir una distribución GNU/Linux</a> de entre las varias que hay disponibles.</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=f0slZnpELaU">Conferencia Richard Matthew Stallman</a></li>
<li><a href="https://www.youtube.com/watch?v=06pLIUqB6zY">Preguntas Richard Matthew Stallman</a></li>
<li><a href="https://www.youtube.com/watch?v=onrIApj3Cjs">Entrevista en Español con Richard Stallman, «Software Libre»</a></li>
</ul>
<div class="media">
<figure>
<p><img src="url=asset:assets/images/logotypes/gnu.svg,size=200x200,gallery=true" alt="" title="GNU" />
<img src="url=asset:assets/images/logotypes/linux.svg,size=200x200,gallery=true" alt="" title="Linux" /></p>
</figure>
</div>
<h3 id="libros-y-novelas">Libros y novelas</h3>
<ul>
<li>El circulo de <em>Dave Eggers</em></li>
<li>Microsiervos de <em>Douglas Coupland</em></li>
<li>Cuando los administradores de sistemas gobernaron la tierra de <em>Cory Doctorow</em></li>
<li>Criptonomicon de <em>Neal Stephenson</em></li>
<li>Snow Crash de <em>Neal Stephenson</em></li>
<li>Ready Player One de <em>Ernest Cline</em></li>
<li>¿Sueñan los androides con ovejas eléctricas? de <em>Philip K. Dick</em></li>
<li><a href="http://www.proyecto-tic.es/algunas-novelas-sobre-informatica-y-hackers/">Algunas novelas sobre informática y <em>hackers</em></a></li>
</ul>
<div class="media">
<figure>
<p><img src="url=resource:el-circulo.jpg,size=300x200,gallery=true" alt="" title="El circulo" />
<img src="url=resource:microsiervos.jpg,size=300x200,gallery=true" alt="" title="Microsiervos" />
<img src="url=resource:cuando-los-administradores-de-sistemas-gobernaron-tierra.jpg,size=300x200,gallery=true" alt="" title="Cuando los administradores de sistemas gobernaron la tierra" /></p>
</figure>
</div>
<p>¿Conoces alguno imprescindible más que incluir en esta lista?</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://victorhckinthefreeworld.com/2013/06/21/software-libre-la-comunidad-sin-amos/">Software Libre: La comunidad sin amos</a></li>
<li><a href="http://www.xataka.com/historias-de-la-tecnologia/nueve-documentales-sobre-la-historia-de-la-informatica-que-no-te-puedes-perder">Nueve documentales sobre la historia de la informática que no te puedes perder</a></li>
<li><a href="http://www.javipas.com/2015/06/26/documentales-sobre-gnulinux-y-open-source/">Documentales sobre GNU/Linux y Open Source</a></li>
<li><a href="https://es.wikipedia.org/wiki/Categor%C3%ADa:Documentales_sobre_inform%C3%A1tica">Documentales sobre informática</a></li>
<li><a href="http://www.proyecto-tic.es/algunas-peliculas-y-series-sobre-informatica-y-ordenadores/">Algunas películas y series sobre informática y ordenadores</a></li>
<li><a href="http://www.proyecto-tic.es/algunas-novelas-sobre-informatica-y-hackers/">Algunas novelas sobre informática y hackers</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/</id>
        <title>El buscador que respeta tu privacidad, DuckDuckGo</title>        
        <updated>2017-12-07T12:30:00+01:00</updated>
        <published>2017-12-06T12:30:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes" style="min-width: 200px;">
<p><img src="url=logotype:duckduckgo.svg,size=1.003921568627451x1,gallery=false,layout=responsive" alt="" title="DuckDuckGo" /></p>
</div>
<p>En la <abbr title="World Wide Web">WWW</abbr> o simplemente en la web hay una cantidad ingente de información y conocimiento distribuido entre los millones de computadoras interconectados por internet. La creación de la WWW por <a href="https://en.wikipedia.org/wiki/Tim_Berners-Lee">Tim_Berners-Lee</a> en 1989, hace no tanto, y su crecimiento exponencial desde entonces ha hecho que se haya convertido en uno de los recipientes de conocimiento más importantes de la humanidad. La información o conocimiento está ahí, la dificultad radica en que buscar y como encontrarla. Para atender a la necesidad de encontrar la información se han creado los buscadores, a día de hoy el más popular es <a href="https://www.google.es/">Google</a> pero hay otros como <a href="https://www.bing.com/">Bing</a>, <a href="https://www.yahoo.com/">Yahoo</a> o con cierta popularidad en algunas regiones como <a href="https://www.yandex.ru/">Yandex</a> en Rusia o <a href="https://www.baidu.com/">Baidu</a> en China.</p>
<p>Uno de los buscadores que está ganando popularidad es <a href="https://duckduckgo.com/">DuckDuckGo</a> ya que al contrario que otros <a href="https://duckduckgo.com/privacy">respeta la privacidad</a> de los usuarios no rastreando al usuario, no compartiendo las búsquedas realizadas o el historial de búsquedas y no guardando información personal. Pero también porque tiene algunas características únicas como los <a href="https://duckduckgo.com/bang">bang!</a> además de ofrecer una lista de resultados apropiada y relevante a lo que el usuario está buscando. También en cierta medida se puede <a href="https://duckduckgo.com/settings">personalizar el buscador</a> cambiando la apariencia, algunas opciones de privacidad y opciones generales en los resultados de búsqueda. En la siguiente página pueden <a href="https://tosdr.org/">comparar los términos de servicio de los principales proveedores de internet</a> de forma simple y resumida, entre ellos los <a href="https://tosdr.org/#google">términos de servicio de Google</a> y los <a href="https://tosdr.org/#duckduckgo">términos de servicio de DuckDuckGo</a>.</p>
<div class="media">
<figure>
<p><img src="url=resource:duckduckgo.png,size=300x200,gallery=true" alt="" title="DuckDuckGo" /></p>
<figcaption>DuckDuckGo</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><img src="url=resource:duckduckgo-1.png,size=300x200,gallery=true" alt="" title="No guardamos tu información personal" />
<img src="url=resource:duckduckgo-2.png,size=300x200,gallery=true" alt="" title="Nosotros no te perseguimos con anuncios" /></p>
</figure>
</div>
<div class="media">
<figure>
<p><img src="url=resource:duckduckgo-3.png,size=300x200,gallery=true" alt="" title="No rastreamos tu información" />
<img src="url=resource:duckduckgo-4.png,size=300x200,gallery=true" alt="" title="Cámbiate a DuckDuckGo" /></p>
<figcaption>Privacidad de DuckDuckGo</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><img src="url=resource:resultados.png,size=300x200,gallery=true" alt="" title="Resultados" />
<img src="url=resource:resultados-imagenes.png,size=300x200,gallery=true" alt="" title="Resultados de imágenes" /></p>
<figcaption>Resultados de DuckDuckGo</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><img src="url=resource:opciones-general.png,size=300x200,gallery=true" alt="" title="Opciones general" />
<img src="url=resource:opciones-diseno.png,size=300x200,gallery=true" alt="" title="Opciones diseño" /></p>
</figure>
</div>
<div class="media">
<figure>
<p><img src="url=resource:opciones-apariencia.png,size=300x200,gallery=true" alt="" title="Opciones apariencia" />
<img src="url=resource:opciones-privacidad.png,size=300x200,gallery=true" alt="" title="Opciones privacidad" /></p>
<figcaption>Opciones de DuckDuckGo</figcaption>
</figure>
</div>
<p>DuckDuckGo es una empresa con ánimo de lucro pero lo hace respetando la privacidad de sus usuarios. Usa varias formas para ganar dinero, una de ellas es mediante enlaces de afiliación de páginas como <a href="https://amzn.to/2flFhHA">Amazon</a> o <a href="https://www.ebay.es/">eBay</a> con los que si el hace una compra DuckDuckGo obtiene una pequeña comisión, también mostrando en la página de resultados algunos enlaces de publicidad relevantes según la búsqueda realizada.</p>
<p>Los <em>bang!</em> permiten hacer búsquedas en otros sitios directamente desde DuckDuckGo, es muy útil ya que la lista de resultados la proporciona el sitio asociado al <em>bang</em> evitando tener que hacer clic en una página de resultados del buscador para ir al sitio como ocurren en el buscador de Google si queremos buscar un vídeo en <a href="https://www.youtube.com/">YouTube</a>. La sintaxis para hacer una búsqueda de un vídeo en YouTube es <em>!yt gnu linux</em>. <em>!yt</em> sería el <em>bang</em> denominándose así por la exclamación al inicio (o final) de la palabra asociada al sitio al que se redirigirá la búsqueda. DuckDuckGo tiene unos cuantos miles de <a href="https://duckduckgo.com/bang"><em>bangs</em> registrados</a> en varias categorías entre los que está incluidos los más populares. <em>!g</em> es para el buscador de Google que se puede utilizar en caso de que los resultados de DuckDuckGo no nos gusten. Otros son !twitch, !tpb (the pirate bay), !ames (amazon), !so (stackoverflow), !ebay, &hellip;</p>
<p>Para hacer búsquedas efectivas y encontrar la información que se desea es muy útil conocer la <a href="https://duck.co/help/results/syntax">sintaxis del buscador DuckDuckGo</a>. Por ejemplo, se puede utilizar una \ al inicio para ir directamente al primer resultado sin pasar por la página de resultados. Utilizar los <em>bang!</em>. Utilizar expresiones <em>and</em> y <em>or</em>. Encontrar páginas que no tienen un determinado término precediéndolo con un <em>-</em>. Buscar en un determinado sitio con <em>site:picodotdev.github.io</em>, en una determinada región con <em>region:</em> o <em>r:</em>. O hacer búsquedas en el título de la página con <em>intitle:</em> o de forma abreviada <em>t:</em> o por tipo de archivo con <em>filetype:</em> o <em>f:</em> como podría ser <em>pdf</em>, <em>txt</em>, <em>doc</em>, <em>docx</em>, <em>xls</em>, <em>xlsx</em>, <em>ppt</em>, <em>pptx</em> o <em>torrent</em> o en el cuerpo de la página con <em>inbody:</em> o <em>b:</em>.</p>
<p>Firefox tiene la opción de convertir DuckDuckGo en el buscador predeterminado en el apartado de <em>Preferencias</em> y sección <em>Buscar</em>.</p>
<div class="media">
<figure>
<p><img src="url=resource:firefox-duckduckgo.png,size=300x200,gallery=true" alt="" title="Preferencias de buscadores en Firefox" /></p>
<figcaption>Preferencias de buscadores en Firefox</figcaption>
</figure>
</div>
<p>También se pueden hacer búsquedas de imágenes, vídeos o noticias. Los resultados que ofrece DuckDuckGo son bastante buenos, sino mejores que los de Google, y en los casos que no acierte se puede buscar con <em>!g</em> en Google. Desde hace mucho tiempo DuckDuckGo es el único buscador que uso, #ComeToTheDuckSide.</p>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/12/microsoft-does-not-care-if-you-use-windows-or-office-without-a-license/</id>
        <title>Microsoft does not care if you use Windows or Office without a license</title>        
        <updated>2017-12-03T12:00:00+01:00</updated>
        <published>2017-12-03T12:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/12/microsoft-does-not-care-if-you-use-windows-or-office-without-a-license/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
          <![CDATA[<p><strong>If Microsoft wished there would be no Windows users using it without the corresponding license. But they consents, they does not care that for a personal use it pirated. A few days after July 29, Windows 10 will appear on the file sharing networks and download pages, also a few days later a program will appear that avoids the validation system as has happened with previous versions.</strong></p>]]>
        
        <![CDATA[<div class="logotypes" style="min-width: 300px;"> 
<p><img src="url=logotype:microsoft.svg,size=4.654545454545454x1,gallery=false,layout=responsive" alt="" title="Microsoft" /></p>
</div>
<p>Microsoft has released for sale and will pre-install the right-of-use (not product ownership) license of its next operating system, Windows 10. Although most will acquire this license through the <a href="https://en.wikipedia.org/wiki/Bundling_of_Microsoft_Windows#The_.22Windows_tax.22">Windows tax</a> when buying a new computer and although (rarely) it is possible to get their reimbursement it is still with obstacles, the great majority will not request the reimbursement maybe for lack of knowledge that the equipment and its operating system are two different products (many do not know either that it is an operating system), ignorance of the possibility of reimbursement or for not making the effort (I plead guilty) of which the manufacturer is habitual that provides zero information on how to proceed and when it is done is with difficulties. Many of us pay for the Windows license even if we do not want it, and although Microsoft logically prefers you to acquire the license, I think it does not matter that you do not pay it for personal use.</p>
<p>There are few but a few options to purchase a laptop without Windows or with some Linux distribution, good quality, good specifications and reasonably priced, one of them are <a href="https://slimbook.es/">Slimbook</a> laptops. In the blog of <a href="https://www.kdeblog.com/">KDE Blog</a> there is an <a href="https://www.kdeblog.com/slimbook-tu-portatil-linux-de-calidad.html">article about an model of these laptops</a> and <a href="https://www.kdeblog.com/unboxing-de-mi-slimbook-con-kubuntu-15-04-y-plasma-5.html">a video with a <em>unboxing</em></a>.</p>
<div class="media">
<figure>
<p><img src="url=resource:windows-10.png,size=300x200,gallery=true" alt="" title="Windows 10" /></p>
</figure>
</div>
<p>Why do I say that they do not mind not paying the license? Because version after version the measures included in Windows or Office to protect them from an unlicensed use are avoided without apparently many difficulties and after a very short time appear in the pages of downloads the images along with the instructions to follow to install it without any type of problem. And in Windows 10 it will be the same. Why do not the included validation measures prevent unlicensed use? Because it suits Microsoft not to be too restrictive. If they were, some would pay the license, but many would say, what? Does the license cost 119 € (or 199, or 50 depending on what is returned with a new computer)? A third (aprox.) of what the computer cost me?, and that only Windows, if we add Office and other programs the cost of the licenses could far exceed the price of the equipment. Worse still, amount to be disbursed every few years due to obsolescence and new versions. And what would those who could not use Windows or Office do? Find alternatives and &hellip; what do you think they would choose? The expensive competition of <a href="https://www.apple.com/">Apple</a> with its <a href="https://www.apple.com/es/mac/">Macs</a> or some distribution GNU/Linux like <a href="https://www.ubuntu.com/">Ubuntu</a>, <a href="https://www.linuxmint.com/">Linux Mint</a>, <a href="https://www.debian.org/">Debian</a>, <a href="https://fedoraproject.org/">Fedora</a>, <a href="https://www.opensuse.org/">openSUSE</a>, etc &hellip; That people knew and paid the cost of the software licenses would probably be one of the best ways to encourage the use of free software and GNU/Linux.</p>
<div class="media">
<figure>
<p><img src="url=resource:linux-gnu-ditributions.png,size=300x200,gallery=true" alt="" title="Linux, GNU, distribuciones" /></p>
</figure>
</div>
<p>Does anyone believe that a company like Microsoft with the resources and capacity it possesses could not implement a validation that would prevent its misuse, more now where the internet connection is common? No, the answer is that he does not want to and the time has had to prove otherwise. Losing many users in favor of their alternatives would make them able to use those same alternatives at work (including schools and training companies), the business world where Microsoft is easier for them to claim their right legally rather than individually and from where they will get higher income. Doing so would cause Windows usage quota to drop at current monopoly levels and possibly in the long run a risk of their income.</p>
<p>One only has to see the obscene millionades that are adjudicated in contracts for the purchase of licenses in the public administration. Money that comes out of your taxes that many politicians and officials responsible for such awards do not understand (or do not want to understand) that this hefty recurring expense is much better invested in local companies that create jobs in the region and in free software of which anyone can benefit instead of a company that little of its development does in each country where it is used. The cost of the free software can be equally obscene, equally bulging or much smaller but the difference among others is that very probably not by the licenses but by the services of consultancy or development that can be offered by local companies and of which depending on the case any could to benefit.</p>
<div class="media">
<figure>
<p><img src="url=resource:windows-genuine.jpg,size=300x200,gallery=true" alt="" title="Windows Genuine" /></p>
</figure>
</div>
<p>Microsoft knows that you are using your software without the corresponding license and tells you to show you a message from time to time or you remove the wallpaper, a bit annoying but not prevent its use. Voluntary or negligent validation systems built into Windows or Office allow many users to use the Pirated Edition, users who are not willing to pay the considerable cost of the license. Although it will prefer that users buy the license Microsoft allows to a certain extent the use of its software without it, the alternative would be to lose the possibility of convincing some to use the software legally apart from losing use quota in favor of other alternatives, perhaps they prefer a situation where their software is used illegally rather than an alternative is more helpful. Microsoft also commits the injustices that the law leaves or no one demands, pre-installed its undesirable system by some who do not want it at the same time as it does not provide clear information and the process is simple to get its return together with the reimbursement of its cost and in taxes that using tax engineering along with other companies are taken to where they pay least.</p>
<p>A new version of Windows or a new computer is an ideal occasion for instead of migrating to the new version of Windows make the jump to GNU/Linux and stop worrying about being raped by slavering licenses or accepting clauses that most people would read and understood they would not accept it so cheerfully. I did it a few years ago going through various distributions, <a href="https://elblogdepicodev.blogspot.com.es/2010/03/de-windows-arch-linux.htmlindex-amp.html">from Windows to Arch Linux</a>, and after almost six years I still follow Arch, <a href="https://picodotdev.github.io/blog-bitix/2014/08/de-arch-linux-a-arch-linux/index-amp.html">from Arch Linux to Arch Linux</a>.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/04/windows-10-and-office-2016-as-easy-to-use-without-license-as-always/index-amp.html">Windows 10 and Office 2016 as easy to use without license as always</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/04/3-office-alternative-options-to-microsoft-office/index-amp.html">3 office alternative options to Microsoft Office</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="microsoft"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/12/definir-nuevos-tipos-de-datos-escalares-en-graphql/</id>
        <title>Definir nuevos tipos de datos escalares en GraphQL</title>        
        <updated>2019-06-15T01:20:00+02:00</updated>
        <published>2017-12-01T10:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/12/definir-nuevos-tipos-de-datos-escalares-en-graphql/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes" style="min-width: 200px;">
<p><img src="url=logotype:graphql.svg,size=1x1,gallery=false,layout=responsive" alt="" title="GraphQL" /></p>
</div>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/index-amp.html">GraphQL es una alternativa a una interfaz REST</a> con las ventajas de permitir al consumidor obtener únicamente los datos que requiere y realizar varias consultas en una misma petición.</p>
<p><a href="https://graphql.org/">GraphQL</a> por defecto soporta un conjunto de tipos escalares en los datos entre los que están varios numéricos, cadenas, booleanos, enumerados además de los tipos o estructuras de datos definidos en la interfaz del servicio. Sin embargo, si es necesario es posible definir nuevos tipos de datos escalares como podría ser el caso de un tipo de dato para representar una fecha fecha y otro de importe monetario.</p>
<p>El objeto en Java que representa una fecha con Java 8 sería <a href="https://docs.oracle.com/javase/9/docs/api/java/time/LocalDate.html">LocalDate</a> y la clase para el importe monetario podría ser un <a href="https://docs.oracle.com/javase/9/docs/api/java/math/BigDecimal.html">BigDecimal</a> o alguna de <a href="https://picodotdev.github.io/blog-bitix/2015/07/como-trabajar-con-importes-ratios-y-divisas-en-java/index-amp.html">la librería JavaMoney</a>.</p>
<p>Para que GraphQL soporte un nuevo tipo de dato escalar es necesario implementar una clase que realice la conversión. Esta clase se encarga de realizar la conversión entre el escalar añadido a una representación a devolver en las respuestas de las peticiones y la conversión entre la representación en consultas al tipo de dato hay que proporcionar al servicio. La clase debe implementar la interfaz <a href="https://github.com/graphql-java/graphql-java/blob/master/src/main/java/graphql/schema/Coercing.java">Coercing</a> y construyendo un objeto <a href="https://github.com/graphql-java/graphql-java/blob/master/src/main/java/graphql/schema/GraphQLScalarType.java">GraphQLScalarType</a> proporcionárselo a GraphQL en la definición del servicio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql</span><span class="o">;</span>&#10;&#10;<span class="o">.</span><span class="o">.</span><span class="o">.</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">LocalDateCoercing</span> <span class="kd">implements</span> <span class="n">Coercing</span><span class="o">&lt;</span><span class="n">LocalDate</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">DateTimeFormatter</span> <span class="n">formatter</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">LocalDateCoercing</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">(</span><span class="n">DateTimeFormatter</span><span class="o">.</span><span class="na">ISO_DATE</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">LocalDateCoercing</span><span class="o">(</span><span class="n">DateTimeFormatter</span> <span class="n">formatter</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">formatter</span> <span class="o">=</span> <span class="n">formatter</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">serialize</span><span class="o">(</span><span class="n">Object</span> <span class="n">dataFetcherResult</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">LocalDate</span> <span class="n">date</span> <span class="o">=</span> <span class="o">(</span><span class="n">LocalDate</span><span class="o">)</span> <span class="n">dataFetcherResult</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">date</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">formatter</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">throw</span> <span class="k">new</span> <span class="n">CoercingSerializeException</span><span class="o">(</span><span class="n">e</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">LocalDate</span> <span class="nf">parseValue</span><span class="o">(</span><span class="n">Object</span> <span class="n">input</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">parse</span><span class="o">(</span><span class="n">input</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">LocalDate</span> <span class="nf">parseLiteral</span><span class="o">(</span><span class="n">Object</span> <span class="n">input</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">parse</span><span class="o">(</span><span class="n">input</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">LocalDate</span> <span class="nf">parse</span><span class="o">(</span><span class="n">Object</span> <span class="n">input</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">string</span> <span class="o">=</span> <span class="o">(</span><span class="n">String</span><span class="o">)</span> <span class="n">input</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">string</span><span class="o">,</span> <span class="n">formatter</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">throw</span> <span class="k">new</span> <span class="n">CoercingParseValueException</span><span class="o">(</span><span class="n">e</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>LocalDateCoercing.java</span>
    </div>
</div>
<p>Al definir el esquema se proporciona con el método <em>scalars</em> una lista con los tipos de datos escalares adicionales, en este caso una instancia de <em>GraphQLScalarType</em> con una instancia de <em>LocalDateCoercing</em>. Además en el descriptor del esquema hay que declarar el nuevo escalar con la palabra clave <em>scalar</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql</span><span class="o">;</span>&#10;&#10;<span class="o">.</span><span class="o">.</span><span class="o">.</span>&#10;&#10;<span class="nd">@SpringBootApplication</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="n">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">LibraryRepository</span> <span class="nf">buildLibraryRepository</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">LibraryRepository</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">GraphQLSchema</span> <span class="nf">graphQLSchema</span><span class="o">(</span><span class="n">LibraryRepository</span> <span class="n">libraryRepository</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">SchemaParser</span><span class="o">.</span><span class="na">newParser</span><span class="o">(</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">schemaString</span><span class="o">(</span><span class="n">IOUtils</span><span class="o">.</span><span class="na">resourceToString</span><span class="o">(</span><span class="s">&#34;/library.graphqls&#34;</span><span class="o">,</span> <span class="n">Charset</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="s">&#34;UTF-8&#34;</span><span class="o">)</span><span class="o">)</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">resolvers</span><span class="o">(</span><span class="k">new</span> <span class="n">Query</span><span class="o">(</span><span class="n">libraryRepository</span><span class="o">)</span><span class="o">,</span> <span class="k">new</span> <span class="n">Mutation</span><span class="o">(</span><span class="n">libraryRepository</span><span class="o">)</span><span class="o">,</span> <span class="k">new</span> <span class="n">BookResolver</span><span class="o">(</span><span class="n">libraryRepository</span><span class="o">)</span><span class="o">,</span> <span class="k">new</span> <span class="n">MagazineResolver</span><span class="o">(</span><span class="n">libraryRepository</span><span class="o">)</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">scalars</span><span class="o">(</span><span class="n">GraphQLScalarType</span><span class="o">.</span><span class="na">newScalar</span><span class="o">(</span><span class="o">)</span><span class="o">.</span><span class="na">name</span><span class="o">(</span><span class="s">&#34;LocalDate&#34;</span><span class="o">)</span><span class="o">.</span><span class="na">description</span><span class="o">(</span><span class="s">&#34;LocalDate scalar&#34;</span><span class="o">)</span><span class="o">.</span><span class="na">coercing</span><span class="o">(</span><span class="k">new</span> <span class="n">LocalDateCoercing</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">.</span><span class="na">build</span><span class="o">(</span><span class="o">)</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">dictionary</span><span class="o">(</span><span class="n">Magazine</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">(</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">makeExecutableSchema</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="o">.</span><span class="o">.</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[</span><span class="o">]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-graphqls" data-lang="graphqls"><span class="kd">scalar</span><span class="w"> </span><span class="nc">LocalDate</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Book</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">title</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">author</span><span class="p">:</span><span class="w"> </span><span class="nc">Author</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">isbn</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">date</span><span class="p">:</span><span class="w"> </span><span class="nc">LocalDate</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">comments</span><span class="p">(</span><span class="py">after</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="p">,</span><span class="w"> </span><span class="py">limit</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">)</span><span class="p">:</span><span class="w"> </span><span class="nc">CommentsConnection</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">batchedComments</span><span class="p">(</span><span class="py">after</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="p">,</span><span class="w"> </span><span class="py">limit</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">)</span><span class="p">:</span><span class="w"> </span><span class="nc">CommentsConnection</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">...</span><span class="w">&#10;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>library.graphqls</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.repository</span><span class="o">;</span>&#10;&#10;<span class="o">.</span><span class="o">.</span><span class="o">.</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">LibraryRepository</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">long</span> <span class="n">sequence</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">&gt;</span> <span class="n">books</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Comment</span><span class="o">&gt;</span> <span class="n">comments</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Author</span><span class="o">&gt;</span> <span class="n">authors</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Magazine</span><span class="o">&gt;</span> <span class="n">magazines</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">LibraryRepository</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">sequence</span> <span class="o">=</span> <span class="n">0l</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">books</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="o">&gt;</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">comments</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="o">&gt;</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">authors</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="o">&gt;</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">magazines</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="o">&gt;</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Philip K. Dick&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;George R. R. Martin&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Umberto Eco&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a4</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Andreas Eschbach&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a5</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Ernest Cline&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a6</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Anónimo&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">authors</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span><span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">a1</span><span class="o">,</span> <span class="n">a2</span><span class="o">,</span> <span class="n">a3</span><span class="o">,</span> <span class="n">a4</span><span class="o">,</span> <span class="n">a5</span><span class="o">,</span> <span class="n">a6</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">LongStream</span><span class="o">.</span><span class="na">range</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">10</span><span class="o">)</span><span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="n">i</span> <span class="o">-</span><span class="o">&gt;</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Comment</span><span class="o">(</span><span class="n">i</span><span class="o">,</span><span class="s">&#34;Comment &#34;</span> <span class="o">+</span> <span class="n">i</span><span class="o">)</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">books</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Ojo en el cielo&#34;</span><span class="o">,</span> <span class="n">a1</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1957</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">)</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">)</span><span class="o">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Muerte de la luz&#34;</span><span class="o">,</span> <span class="n">a2</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1977</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">)</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">)</span><span class="o">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;El nombre de la rosa&#34;</span><span class="o">,</span> <span class="n">a3</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1980</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">)</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">)</span><span class="o">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Los tejedores de cabellos&#34;</span><span class="o">,</span> <span class="n">a4</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1995</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">)</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">)</span><span class="o">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Ready Player One&#34;</span><span class="o">,</span> <span class="n">a5</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">2011</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">)</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">magazines</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Magazine</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Muy interesante&#34;</span><span class="o">,</span> <span class="n">65L</span><span class="o">)</span><span class="o">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Magazine</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;PC Actual&#34;</span><span class="o">,</span> <span class="n">90L</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="o">.</span><span class="o">.</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>LibraryRepository.java</span>
    </div>
</div>
<p>Añadiendo al tipo <em>Book</em> una fecha de publicación usando este nuevo tipo escalar al realizar una consulta y devolver el dato se realiza la conversión.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-bash" data-lang="bash">$ curl -XPOST -H <span class="s2">&#34;Content-Type: application/json&#34;</span> -d <span class="s1">&#39;{&#34;query&#34;: &#34;query Book{books{title date}}&#34;}&#39;</span> http://localhost:8080/graphql&#10;<span class="o">{</span>&#10;  <span class="s2">&#34;data&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;books&#34;</span>: <span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ojo en el cielo&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;date&#34;</span>: <span class="s2">&#34;1957-01-01&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Muerte de la luz&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;date&#34;</span>: <span class="s2">&#34;1977-01-01&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;El nombre de la rosa&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;date&#34;</span>: <span class="s2">&#34;1980-01-01&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Los tejedores de cabellos&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;date&#34;</span>: <span class="s2">&#34;1995-01-01&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ready Player One&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;date&#34;</span>: <span class="s2">&#34;2011-01-01&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">]</span>&#10;  <span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl.sh</span>
    </div>
</div>
<p>
    El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/GraphQL">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en <a href="https://github.com/">GitHub</a> y probarlo en tu equipo ejecutando el comando <code>./gradlew run</code>. 
</p>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/11/paginacion-usando-cursores-en-graphql-y-java/</id>
        <title>Paginación usando cursores en GraphQL y Java</title>        
        <updated>2019-06-15T01:15:00+02:00</updated>
        <published>2017-11-26T10:30:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/11/paginacion-usando-cursores-en-graphql-y-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes" style="min-width: 200px;">
<p><img src="url=logotype:graphql.svg,size=1x1,gallery=false,layout=responsive" alt="" title="GraphQL" /></p>
</div>
<p>El conjunto de datos de una entidad en algunos casos será grande, miles o cientos de miles de registros, y por tanto no es viable devolverlos todos en una misma consulta por lo que es necesario realizar paginación devolviéndolos en pequeños grupos. La paginación se puede implementar de varias formas, habitualmente con un parámetro que limite el número de elementos a incluir en la página y otro parámetro <em>offset</em> que deseche los primeros elementos hasta el primero deseado. Sin embargo, utilizar los parámetros <em>limit</em> y <em>offset</em> puede producir resultados inesperados si mientras la obtención de una página y la siguiente se insertan nuevos elementos anteriores al <em>offset</em> ocasionando que lo que sería por ejemplo el décimo elemento pase a ser el undécimo.</p>
<p>Si esta situación es importante se suelen utilizar cursores que utilizan un parámetro para indicar el número de elementos a incluir en la página pero en vez de un <em>offset</em> utilizan el identificativo de un registro a partir del cual devolver registros de modo que aunque se inserten registros el primer elemento de la página no cambiará.</p>
<p>En el caso de la <a href="https://graphql.org/learn/pagination/">paginación en GraphQL</a> se proponen varias formas de implementar la paginación, una de ellas los cursores. En la documentación se explica la teoría, para implementarla es necesario <a href="https://picodotdev.github.io/blog-bitix/2017/11/usar-un-resolver-para-recuperar-propiedades-en-graphql/index-amp.html">crear un <em>data fetcher</em> o <em>resolver</em></a> que reciba los parámetros de <em>limit</em> para indicar el número de elementos a devolver en la página y <em>after</em> para indicar a partir de que elemento devolver elementos. También es necesario modificar el esquema de la API para tener en cuenta las nuevas estructuras de datos en las que se devuelven los resultados.</p>
<p>En este ejemplo de una librería para mostrar la paginación he añadido a los libros una lista de comentarios que será en la que soporte paginación. La definición del esquema queda de la siguiente forma siguiendo la <a href="https://facebook.github.io/relay/graphql/connections.htm">especificación de Relay</a> para lo cual se definen los tipos <em>CommentsConnection</em>, <em>CommentEdge</em> (usando <em>generics</em> no sería necesario implementar unas de estas clases por cada entidad paginable) y <em>PageInfo</em>. Los cursores son un dato opaco para el cliente pero que decodificado incluye el identificativo del comentario. La propiedad <em>comments</em> utiliza un <em>resolver</em> con parámetros que se usa para realizar la búsqueda y recuperar los elementos solicitados en la consulta.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-graphqls" data-lang="graphqls"><span class="kd">type</span><span class="w"> </span><span class="nc">Book</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">title</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">author</span><span class="p">:</span><span class="w"> </span><span class="nc">Author</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">isbn</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">comments</span><span class="p">(</span><span class="py">after</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="p">,</span><span class="w"> </span><span class="py">limit</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">)</span><span class="p">:</span><span class="w"> </span><span class="nc">CommentsConnection</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Comment</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">text</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Author</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">input</span><span class="w"> </span><span class="nc">BookFilter</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">title</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">CommentsConnection</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">edges</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="nc">CommentEdge</span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">pageInfo</span><span class="p">:</span><span class="w"> </span><span class="nc">PageInfo</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">CommentEdge</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">node</span><span class="p">:</span><span class="w"> </span><span class="nc">Comment</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">cursor</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">PageInfo</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">startCursor</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">endCursor</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">hasNextPage</span><span class="p">:</span><span class="w"> </span><span class="nc">Boolean</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Query</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">books</span><span class="p">(</span><span class="py">filter</span><span class="p">:</span><span class="w"> </span><span class="nc">BookFilter</span><span class="p">)</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="nc">Book</span><span class="p">]</span><span class="p">!</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">book</span><span class="p">(</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">)</span><span class="p">:</span><span class="w"> </span><span class="nc">Book</span><span class="p">!</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">authors</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="nc">Author</span><span class="p">]</span><span class="p">!</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">author</span><span class="p">(</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">)</span><span class="p">:</span><span class="w"> </span><span class="nc">Author</span><span class="p">!</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Mutation</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">addBook</span><span class="p">(</span><span class="py">title</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="p">,</span><span class="w"> </span><span class="py">author</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">)</span><span class="p">:</span><span class="w"> </span><span class="nc">Book</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">schema</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="kd">query</span><span class="p">:</span><span class="w"> </span><span class="nc">Query</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nc">mutation</span><span class="p">:</span><span class="w"> </span><span class="nc">Mutation</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>library.graphqls</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.type</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.type.CommentEdge</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.stream.Collectors</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CommentsConnection</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">CommentEdge</span><span class="o">&gt;</span> <span class="n">edges</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">PageInfo</span> <span class="n">pageInfo</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">CommentsConnection</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">Comment</span><span class="o">&gt;</span> <span class="n">edges</span><span class="o">,</span> <span class="n">PageInfo</span> <span class="n">pageInfo</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">edges</span> <span class="o">=</span> <span class="n">edges</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="o">)</span><span class="o">.</span><span class="na">map</span><span class="o">(</span><span class="n">o</span> <span class="o">-</span><span class="o">&gt;</span> <span class="k">new</span> <span class="n">CommentEdge</span><span class="o">(</span><span class="n">o</span><span class="o">)</span><span class="o">)</span><span class="o">.</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">pageInfo</span> <span class="o">=</span> <span class="n">pageInfo</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">CommentEdge</span><span class="o">&gt;</span> <span class="nf">getEdges</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">edges</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">PageInfo</span> <span class="nf">getPageInfo</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">pageInfo</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>CommentsConnection.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.type</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">graphql.relay.Relay</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CommentEdge</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Comment</span> <span class="n">comment</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">cursor</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">CommentEdge</span><span class="o">(</span><span class="n">Comment</span> <span class="n">comment</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">comment</span> <span class="o">=</span> <span class="n">comment</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">cursor</span> <span class="o">=</span> <span class="n">toGlobalId</span><span class="o">(</span><span class="n">comment</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Comment</span> <span class="nf">getNode</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">comment</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getCursor</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">cursor</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">toGlobalId</span><span class="o">(</span><span class="n">Comment</span> <span class="n">comment</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">Relay</span><span class="o">(</span><span class="o">)</span><span class="o">.</span><span class="na">toGlobalId</span><span class="o">(</span><span class="n">Comment</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="n">comment</span><span class="o">.</span><span class="na">getId</span><span class="o">(</span><span class="o">)</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="n">Long</span> <span class="nf">fromGlobalId</span><span class="o">(</span><span class="n">String</span> <span class="n">cursor</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">id</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Relay</span><span class="o">(</span><span class="o">)</span><span class="o">.</span><span class="na">fromGlobalId</span><span class="o">(</span><span class="n">cursor</span><span class="o">)</span><span class="o">.</span><span class="na">getId</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Long</span><span class="o">.</span><span class="na">parseLong</span><span class="o">(</span><span class="n">id</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>CommentEdge.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.type</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">PageInfo</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">startCursor</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">endCursor</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">boolean</span> <span class="n">hasNextPage</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">PageInfo</span><span class="o">(</span><span class="n">String</span> <span class="n">startCursor</span><span class="o">,</span> <span class="n">String</span> <span class="n">endCursor</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">hasNextPage</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">startCursor</span> <span class="o">=</span> <span class="n">startCursor</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">endCursor</span> <span class="o">=</span> <span class="n">endCursor</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">hasNextPage</span> <span class="o">=</span> <span class="n">hasNextPage</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getStartCursor</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">startCursor</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getEndCursor</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">endCursor</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isHasNextPage</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">hasNextPage</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>PageInfo.java</span>
    </div>
</div>
<p>En el caso del ejemplo los datos se almacenan en unas listas creadas al iniciar la aplicación y la paginación y la obtención de los datos de la página se realiza usando <em>streams</em> y con código Java para implementar la lógica según los parámetros de la paginación en el método <em>findComments</em>. Si los datos estuvieran almacenados en una base de datos relacional o NoSQL se usarían las facilidades de sus lenguajes u operaciones de consulta como sería generar la sentencia SQL apropiada.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.repository</span><span class="o">;</span>&#10;&#10;<span class="o">.</span><span class="o">.</span><span class="o">.</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">LibraryRepository</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">long</span> <span class="n">sequence</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">&gt;</span> <span class="n">books</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Comment</span><span class="o">&gt;</span> <span class="n">comments</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Author</span><span class="o">&gt;</span> <span class="n">authors</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Magazine</span><span class="o">&gt;</span> <span class="n">magazines</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">LibraryRepository</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">sequence</span> <span class="o">=</span> <span class="n">0l</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">books</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="o">&gt;</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">comments</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="o">&gt;</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">authors</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="o">&gt;</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">magazines</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="o">&gt;</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Philip K. Dick&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;George R. R. Martin&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Umberto Eco&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a4</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Andreas Eschbach&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a5</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Ernest Cline&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a6</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Anónimo&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">authors</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span><span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">a1</span><span class="o">,</span> <span class="n">a2</span><span class="o">,</span> <span class="n">a3</span><span class="o">,</span> <span class="n">a4</span><span class="o">,</span> <span class="n">a5</span><span class="o">,</span> <span class="n">a6</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">LongStream</span><span class="o">.</span><span class="na">range</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">10</span><span class="o">)</span><span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="n">i</span> <span class="o">-</span><span class="o">&gt;</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Comment</span><span class="o">(</span><span class="n">i</span><span class="o">,</span><span class="s">&#34;Comment &#34;</span> <span class="o">+</span> <span class="n">i</span><span class="o">)</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">books</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Ojo en el cielo&#34;</span><span class="o">,</span> <span class="n">a1</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1957</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">)</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">)</span><span class="o">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Muerte de la luz&#34;</span><span class="o">,</span> <span class="n">a2</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1977</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">)</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">)</span><span class="o">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;El nombre de la rosa&#34;</span><span class="o">,</span> <span class="n">a3</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1980</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">)</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">)</span><span class="o">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Los tejedores de cabellos&#34;</span><span class="o">,</span> <span class="n">a4</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1995</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">)</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">)</span><span class="o">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Ready Player One&#34;</span><span class="o">,</span> <span class="n">a5</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">2011</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">)</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">magazines</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Magazine</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Muy interesante&#34;</span><span class="o">,</span> <span class="n">65L</span><span class="o">)</span><span class="o">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Magazine</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;PC Actual&#34;</span><span class="o">,</span> <span class="n">90L</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="o">.</span><span class="o">.</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Comment</span><span class="o">&gt;</span> <span class="nf">findComments</span><span class="o">(</span><span class="n">Long</span> <span class="n">idBook</span><span class="o">,</span> <span class="n">Long</span> <span class="n">idAfter</span><span class="o">,</span> <span class="n">Long</span> <span class="n">limit</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Book</span> <span class="n">book</span> <span class="o">=</span> <span class="n">findBook</span><span class="o">(</span><span class="n">idBook</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Stream</span><span class="o">&lt;</span><span class="n">Comment</span><span class="o">&gt;</span> <span class="n">stream</span> <span class="o">=</span> <span class="n">book</span><span class="o">.</span><span class="na">getComments</span><span class="o">(</span><span class="o">)</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">idAfter</span> <span class="o">!</span><span class="o">=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">stream</span> <span class="o">=</span> <span class="n">stream</span><span class="o">.</span><span class="na">dropWhile</span><span class="o">(</span><span class="n">b</span> <span class="o">-</span><span class="o">&gt;</span> <span class="n">idAfter</span> <span class="o">!</span><span class="o">=</span> <span class="kc">null</span> <span class="o">&amp;</span><span class="o">&amp;</span> <span class="o">!</span><span class="n">b</span><span class="o">.</span><span class="na">getId</span><span class="o">(</span><span class="o">)</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">idAfter</span><span class="o">)</span><span class="o">)</span><span class="o">.</span><span class="na">skip</span><span class="o">(</span><span class="n">1</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">limit</span> <span class="o">!</span><span class="o">=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">stream</span> <span class="o">=</span> <span class="n">stream</span><span class="o">.</span><span class="na">limit</span><span class="o">(</span><span class="n">limit</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">stream</span><span class="o">.</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="o">.</span><span class="o">.</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">long</span> <span class="nf">nextId</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="o">+</span><span class="o">+</span><span class="n">sequence</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>LibraryRepository.java</span>
    </div>
</div>
<p>Los comentarios se obtienen usando un <em>data fetcher</em> o <em>resolver</em> que si existe para una determinada propiedad tiene precedencia sobre el <em>data fetcher</em> por defecto que en Java obtiene el dato usando la convención de los <em>java beans</em>. En este caso es el <em>resolver</em> <em>BookResolver</em> siendo el método <em>getComments</em> el encargado de recuperar los datos de la propiedad <em>comments</em> cuando se solicite en una consulta de GraphQL, recibe los datos de paginación y delega la búsqueda en el repositorio para que haga la consulta apropiada.</p>
<p>La clase repositorio abstrae al <em>resolver</em> de como o donde están guardados los datos, de esta forma se podría pasar de guardarlos en una base de datos <a href="https://www.postgresql.org/">PostgreSQL</a> a una base de datos <a href="https://www.mongodb.com/">MongoDB</a> sin que el <em>resolver</em> necesite ninguna modificación, también se podría optar por guardar los libros en una base de datos relacional y los comentarios en una base de datos MongoDB. El <em>resolver</em> se encarga de crear las instancias de objetos necesarios de los tipos <em>CommentsConnection</em>, <em>CommentEdge</em> y <em>PageInfo</em> para adaptarlos a las estructuras de datos apropiadas según la especificación de Relay en el servicio de GraphQL.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.resolver</span><span class="o">;</span>&#10;&#10;<span class="o">.</span><span class="o">.</span><span class="o">.</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BookResolver</span> <span class="kd">implements</span> <span class="n">GraphQLResolver</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">&gt;</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">LibraryRepository</span> <span class="n">libraryRespository</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">BookResolver</span><span class="o">(</span><span class="n">LibraryRepository</span> <span class="n">libraryRespository</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">libraryRespository</span> <span class="o">=</span> <span class="n">libraryRespository</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getIsbn</span><span class="o">(</span><span class="n">Book</span> <span class="n">book</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">InterruptedException</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Getting ISBN %d...&#34;</span><span class="o">,</span> <span class="n">book</span><span class="o">.</span><span class="na">getId</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">3000</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;ok%n&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">UUID</span><span class="o">.</span><span class="na">randomUUID</span><span class="o">(</span><span class="o">)</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="o">.</span><span class="o">.</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">CommentsConnection</span> <span class="nf">getComments</span><span class="o">(</span><span class="n">Book</span> <span class="n">book</span><span class="o">,</span> <span class="n">String</span> <span class="n">after</span><span class="o">,</span> <span class="n">Long</span> <span class="n">limit</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Long</span> <span class="n">idAfter</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Long</span> <span class="n">limitPlusOne</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">after</span> <span class="o">!</span><span class="o">=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">idAfter</span> <span class="o">=</span> <span class="n">CommentEdge</span><span class="o">.</span><span class="na">fromGlobalId</span><span class="o">(</span><span class="n">after</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">limit</span> <span class="o">!</span><span class="o">=</span> <span class="kc">null</span> <span class="o">&amp;</span><span class="o">&amp;</span> <span class="n">limit</span> <span class="o">&lt;</span> <span class="n">Long</span><span class="o">.</span><span class="na">MAX_VALUE</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">limitPlusOne</span> <span class="o">=</span> <span class="n">limit</span> <span class="o">+</span> <span class="n">1</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">Comment</span><span class="o">&gt;</span> <span class="n">commentsPlusOne</span> <span class="o">=</span> <span class="n">libraryRespository</span><span class="o">.</span><span class="na">findComments</span><span class="o">(</span><span class="n">book</span><span class="o">.</span><span class="na">getId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="n">idAfter</span><span class="o">,</span> <span class="n">limitPlusOne</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Stream</span><span class="o">&lt;</span><span class="n">Comment</span><span class="o">&gt;</span> <span class="n">stream</span> <span class="o">=</span> <span class="n">commentsPlusOne</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">limit</span> <span class="o">!</span><span class="o">=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">stream</span> <span class="o">=</span> <span class="n">stream</span><span class="o">.</span><span class="na">limit</span><span class="o">(</span><span class="n">limit</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">Comment</span><span class="o">&gt;</span> <span class="n">comments</span> <span class="o">=</span> <span class="n">stream</span><span class="o">.</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Comment</span> <span class="n">firstComment</span> <span class="o">=</span> <span class="o">(</span><span class="o">!</span><span class="n">comments</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">(</span><span class="o">)</span><span class="o">)</span> <span class="o">?</span> <span class="n">comments</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">0</span><span class="o">)</span> <span class="o">:</span> <span class="kc">null</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Comment</span> <span class="n">lastComment</span> <span class="o">=</span> <span class="o">(</span><span class="o">!</span><span class="n">comments</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">(</span><span class="o">)</span><span class="o">)</span> <span class="o">?</span> <span class="n">comments</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">comments</span><span class="o">.</span><span class="na">size</span><span class="o">(</span><span class="o">)</span> <span class="o">-</span> <span class="n">1</span><span class="o">)</span> <span class="o">:</span> <span class="kc">null</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">startCursor</span> <span class="o">=</span> <span class="o">(</span><span class="n">firstComment</span> <span class="o">!</span><span class="o">=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">?</span> <span class="n">CommentEdge</span><span class="o">.</span><span class="na">toGlobalId</span><span class="o">(</span><span class="n">firstComment</span><span class="o">)</span> <span class="o">:</span> <span class="kc">null</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">endCursor</span> <span class="o">=</span> <span class="o">(</span><span class="n">lastComment</span> <span class="o">!</span><span class="o">=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">?</span> <span class="n">CommentEdge</span><span class="o">.</span><span class="na">toGlobalId</span><span class="o">(</span><span class="n">lastComment</span><span class="o">)</span> <span class="o">:</span> <span class="kc">null</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">boolean</span> <span class="n">hasNextPage</span> <span class="o">=</span> <span class="n">commentsPlusOne</span><span class="o">.</span><span class="na">size</span><span class="o">(</span><span class="o">)</span> <span class="o">&gt;</span> <span class="n">comments</span><span class="o">.</span><span class="na">size</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">CommentsConnection</span><span class="o">(</span><span class="n">comments</span><span class="o">,</span> <span class="k">new</span> <span class="n">PageInfo</span><span class="o">(</span><span class="n">startCursor</span><span class="o">,</span> <span class="n">endCursor</span><span class="o">,</span> <span class="n">hasNextPage</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="o">.</span><span class="o">.</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>BookResolver.java</span>
    </div>
</div>
<p>Una vez implementada la paginación en los comentarios con la siguientes consultas se obtiene un libro usando una <a href="https://picodotdev.github.io/blog-bitix/2017/11/consultas-con-parametros-para-filtrar-datos-en-graphql/index-amp.html">consulta con un filtro</a> todos sus comentarios, los 3 primeros comentarios usando el parámetro <em>limit</em> y los siguientes tres comentarios a partir del tercero usando los parámetros <em>limit</em> y <em>after</em>. Obteniendo como respuesta un libro con únicamente los comentarios deseados. Cada elemento en el resultado contiene los datos solicitados junto con el valor del cursor que identifica al comentario además de incluir una estructura de datos <em>pageInfo</em> con información sobre la paginación.</p>
<p>Con el valor del cursor indicado en <em>pageInfo</em> en la propiedad <em>endCursor</em> se podría obtener la siguiente página de comentarios realizando otra consulta e indicándolo en el parámetro <em>after</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-bash" data-lang="bash">$ curl -XPOST -H <span class="s2">&#34;Content-Type: application/json&#34;</span> -d <span class="s1">&#39;{&#34;query&#34;: &#34;query Books{books(filter:{title:\&#34;^Ready.*\&#34;}){title comments{edges{node{text}cursor} pageInfo{startCursor endCursor hasNextPage}}}}&#34;}&#39;</span> http://localhost:8080/graphql&#10;<span class="o">{</span>&#10;  <span class="s2">&#34;data&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;books&#34;</span>: <span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ready Player One&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;comments&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;edges&#34;</span>: <span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 1&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDox&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 2&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDoy&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 3&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDoz&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 4&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo0&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 5&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo1&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 6&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo2&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 7&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo3&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 8&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo4&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 9&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo5&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">]</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;pageInfo&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;startCursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDox&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;endCursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo5&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;hasNextPage&#34;</span>: <span class="nb">false</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">]</span>&#10;  <span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-1.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-bash" data-lang="bash">&#10;$ curl -XPOST -H <span class="s2">&#34;Content-Type: application/json&#34;</span> -d <span class="s1">&#39;{&#34;query&#34;: &#34;query Books{books(filter:{title:\&#34;^Ready.*\&#34;}){title comments(limit:3){edges{node{text}cursor} pageInfo{startCursor endCursor hasNextPage}}}}&#34;}&#39;</span> http://localhost:8080/graphql&#10;<span class="o">{</span>&#10;  <span class="s2">&#34;data&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;books&#34;</span>: <span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ready Player One&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;comments&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;edges&#34;</span>: <span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 1&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDox&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 2&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDoy&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 3&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDoz&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">]</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;pageInfo&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;startCursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDox&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;endCursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDoz&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;hasNextPage&#34;</span>: <span class="nb">true</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">]</span>&#10;  <span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-2.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-bash" data-lang="bash">$ curl -XPOST -H <span class="s2">&#34;Content-Type: application/json&#34;</span> -d <span class="s1">&#39;{&#34;query&#34;: &#34;query Books{books(filter:{title:\&#34;^Ready.*\&#34;}){title comments(limit:3,after:\&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDoz\&#34;){edges{node{text}cursor} pageInfo{startCursor endCursor hasNextPage}}}}&#34;}&#39;</span> http://localhost:8080/graphql&#10;<span class="o">{</span>&#10;  <span class="s2">&#34;data&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;books&#34;</span>: <span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ready Player One&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;comments&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;edges&#34;</span>: <span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 4&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo0&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 5&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo1&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 6&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo2&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">]</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;pageInfo&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;startCursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo0&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;endCursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo2&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;hasNextPage&#34;</span>: <span class="nb">true</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">]</span>&#10;  <span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-3.sh</span>
    </div>
</div>
<p>Los cursores tiene la ventaja de que son opacos por lo que se evita que los clientes dependan de identificativos y podrían cambiarse sin que los clientes necesitasen modificaciones. Otra ventaja es que la especificación de Relay propone un marco y unas convenciones para estandarizar la paginación. Sin embargo, esta solo es una forma de hacer paginación y es perfectamente posible usar cualquier otra para adaptarla a las necesidades que haya por ejemplo añadiendo más datos a <em>pageInfo</em> o con más u otros parámetros para realizar la consulta de paginación.</p>
<p>Pero&hellip; en este ejemplo por cada libro que se devuelve como resultado en la consulta se realiza una búsqueda de los comentarios ya que las propiedades de resultado en la consulta se recuperan una a una. Para la mayoría de propiedades esto no es problema ya que son propiedades que están en un objeto que no realizan consultas a una base de datos pero en el caso de los comentarios sí. Si se devolviesen muchos libros se realizaría una consulta para cada uno de ellos lo que no es eficiente. Si se devolviesen 500 libros y sus comentarios se realizarían 500 consultas para obtener los comentarios de cada libro, usando una base de datos relacional serían 1+500 consultas SQL por cada petición a GraphQL, 1 para obtener los libros y 500 para los comentarios. Como solución a este problema está la funcionalidad de <em>batching</em> de GraphQL que permite obtener todos los comentarios de los libros en una única consulta, será tema para otro de los siguientes artículos de esta serie sobre GraphQL.</p>
<p>
    El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/GraphQL">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en <a href="https://github.com/">GitHub</a> y probarlo en tu equipo ejecutando el comando <code>./gradlew run</code>. 
</p>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/11/consultas-con-parametros-para-filtrar-datos-en-graphql/</id>
        <title>Consultas con parámetros para filtrar datos en GraphQL</title>        
        <updated>2019-06-15T01:10:00+02:00</updated>
        <published>2017-11-25T10:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/11/consultas-con-parametros-para-filtrar-datos-en-graphql/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes" style="min-width: 200px;">
<p><img src="url=logotype:graphql.svg,size=1x1,gallery=false,layout=responsive" alt="" title="GraphQL" /></p>
</div>
<p>No será extraño que en una API para obtener datos esté la necesidad de realizar algún tipo de filtrado para recuperar únicamente la colección de datos deseados de todos los existentes en un repositorio. A las consultas de <a href="https://graphql.org/">GraphQL</a> se les pueden pasar argumentos que son recibidos por los métodos que actúan como punto de entrada de las consultas. Con los argumentos es posible implementar cualquier funcionalidad que se necesite, entre ellas el filtrado. Los argumentos pueden ser datos escalares o más complejos que se definen con la palabra reservada <em>input</em> en el esquema.</p>
<p>Usando el mismo ejemplo que he utilizado en artículos anteriores ahora en este caso implemento la funcionalidad de poder filtrar los libros de una biblioteca utilizando una expresión regular que el título del libro debe cumplir para obtenerse como resultado. El esquema del <em>enpoint</em> de GraphQL queda de la siguiente forma para implementar el filtrado, usando el tipo definido con <em>input</em> es posible pasar como argumentos datos complejos o agrupaciones de datos escalares.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-graphqls" data-lang="graphqls"><span class="kd">type</span><span class="w"> </span><span class="nc">Book</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">title</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">author</span><span class="p">:</span><span class="w"> </span><span class="nc">Author</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">isbn</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">comments</span><span class="p">(</span><span class="py">after</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="p">,</span><span class="w"> </span><span class="py">limit</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">)</span><span class="p">:</span><span class="w"> </span><span class="nc">CommentsConnection</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">...</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">input</span><span class="w"> </span><span class="nc">BookFilter</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">title</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">...</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Query</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">books</span><span class="p">(</span><span class="py">filter</span><span class="p">:</span><span class="w"> </span><span class="nc">BookFilter</span><span class="p">)</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="nc">Book</span><span class="p">]</span><span class="p">!</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">book</span><span class="p">(</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">)</span><span class="p">:</span><span class="w"> </span><span class="nc">Book</span><span class="p">!</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">authors</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="nc">Author</span><span class="p">]</span><span class="p">!</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">author</span><span class="p">(</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">)</span><span class="p">:</span><span class="w"> </span><span class="nc">Author</span><span class="p">!</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Mutation</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">addBook</span><span class="p">(</span><span class="py">title</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="p">,</span><span class="w"> </span><span class="py">author</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">)</span><span class="p">:</span><span class="w"> </span><span class="nc">Book</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">schema</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="kd">query</span><span class="p">:</span><span class="w"> </span><span class="nc">Query</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nc">mutation</span><span class="p">:</span><span class="w"> </span><span class="nc">Mutation</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>library.graphqls</span>
    </div>
</div>
<p>La implementación del tipo <em>BookFilter</em> en la implementación de Java de GraphQL es una <em>Java Bean</em> con una propiedad por cada argumento y sus correspondientes métodos <em>set</em> y <em>get</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.type</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BookFilter</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">title</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getTitle</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">title</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTitle</span><span class="o">(</span><span class="n">String</span> <span class="n">title</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">title</span> <span class="o">=</span> <span class="n">title</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>BookFilter.java</span>
    </div>
</div>
<p>La clase <em>Query</em> es el punto de entrada a las consultas raíz y posee un método con el mimo nombre que la consulta solicitada en GraphQL y que en este caso es <em>findBooks</em> que recibe como argumento una instancia del objeto <em>BookFilter</em> que a su vez se lo proporciona al servicio de repositorio independiente de GraphQL para que haga la búsqueda adecuada según corresponda en el sistema de persistencia empleado. En el caso que los datos se guarden en una base de datos relacional posiblemente el filtrado se realiza ejecutando una sentencia SQL. En el caso del ejemplo como los datos están en una colección de una estructura de datos Java el filtrado se realiza usando los <em>streams</em>, expresiones regulares y código Java.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.resolver</span><span class="o">;</span>&#10;&#10;<span class="o">.</span><span class="o">.</span><span class="o">.</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Query</span> <span class="kd">implements</span> <span class="n">GraphQLQueryResolver</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">LibraryRepository</span> <span class="n">libraryRepository</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Query</span><span class="o">(</span><span class="n">LibraryRepository</span> <span class="n">libraryRepository</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">libraryRepository</span> <span class="o">=</span> <span class="n">libraryRepository</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">&gt;</span> <span class="nf">books</span><span class="o">(</span><span class="n">BookFilter</span> <span class="n">filter</span><span class="o">,</span> <span class="n">DataFetchingEnvironment</span> <span class="n">environment</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">InterruptedException</span>  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">&gt;</span> <span class="n">books</span> <span class="o">=</span> <span class="n">libraryRepository</span><span class="o">.</span><span class="na">findBooks</span><span class="o">(</span><span class="n">filter</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DefaultGraphQLContext</span> <span class="n">context</span> <span class="o">=</span> <span class="n">environment</span><span class="o">.</span><span class="na">getContext</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="o">.</span><span class="o">.</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">books</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="o">.</span><span class="o">.</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Query.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.repository</span><span class="o">;</span>&#10;&#10;<span class="o">.</span><span class="o">.</span><span class="o">.</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">LibraryRepository</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">long</span> <span class="n">sequence</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">&gt;</span> <span class="n">books</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Comment</span><span class="o">&gt;</span> <span class="n">comments</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Author</span><span class="o">&gt;</span> <span class="n">authors</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Magazine</span><span class="o">&gt;</span> <span class="n">magazines</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">LibraryRepository</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">sequence</span> <span class="o">=</span> <span class="n">0l</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">books</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="o">&gt;</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">comments</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="o">&gt;</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">authors</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="o">&gt;</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">magazines</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="o">&gt;</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Philip K. Dick&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;George R. R. Martin&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Umberto Eco&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a4</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Andreas Eschbach&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a5</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Ernest Cline&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a6</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Anónimo&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">authors</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span><span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">a1</span><span class="o">,</span> <span class="n">a2</span><span class="o">,</span> <span class="n">a3</span><span class="o">,</span> <span class="n">a4</span><span class="o">,</span> <span class="n">a5</span><span class="o">,</span> <span class="n">a6</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">LongStream</span><span class="o">.</span><span class="na">range</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">10</span><span class="o">)</span><span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="n">i</span> <span class="o">-</span><span class="o">&gt;</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Comment</span><span class="o">(</span><span class="n">i</span><span class="o">,</span><span class="s">&#34;Comment &#34;</span> <span class="o">+</span> <span class="n">i</span><span class="o">)</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">books</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Ojo en el cielo&#34;</span><span class="o">,</span> <span class="n">a1</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1957</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">)</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">)</span><span class="o">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Muerte de la luz&#34;</span><span class="o">,</span> <span class="n">a2</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1977</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">)</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">)</span><span class="o">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;El nombre de la rosa&#34;</span><span class="o">,</span> <span class="n">a3</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1980</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">)</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">)</span><span class="o">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Los tejedores de cabellos&#34;</span><span class="o">,</span> <span class="n">a4</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1995</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">)</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">)</span><span class="o">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Ready Player One&#34;</span><span class="o">,</span> <span class="n">a5</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">2011</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">)</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">magazines</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Magazine</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;Muy interesante&#34;</span><span class="o">,</span> <span class="n">65L</span><span class="o">)</span><span class="o">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Magazine</span><span class="o">(</span><span class="n">nextId</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="s">&#34;PC Actual&#34;</span><span class="o">,</span> <span class="n">90L</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Book</span> <span class="nf">findBook</span><span class="o">(</span><span class="n">Long</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">books</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="o">)</span><span class="o">.</span><span class="na">filter</span><span class="o">(</span><span class="n">b</span> <span class="o">-</span><span class="o">&gt;</span> <span class="n">b</span><span class="o">.</span><span class="na">getId</span><span class="o">(</span><span class="o">)</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">id</span><span class="o">)</span><span class="o">)</span><span class="o">.</span><span class="na">findFirst</span><span class="o">(</span><span class="o">)</span><span class="o">.</span><span class="na">orElse</span><span class="o">(</span><span class="kc">null</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">&gt;</span> <span class="nf">findBooks</span><span class="o">(</span><span class="n">BookFilter</span> <span class="n">filter</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Stream</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">&gt;</span> <span class="n">stream</span> <span class="o">=</span> <span class="n">books</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">filter</span> <span class="o">!</span><span class="o">=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">stream</span> <span class="o">=</span> <span class="n">stream</span><span class="o">.</span><span class="na">filter</span><span class="o">(</span><span class="n">b</span> <span class="o">-</span><span class="o">&gt;</span> <span class="n">b</span><span class="o">.</span><span class="na">getTitle</span><span class="o">(</span><span class="o">)</span><span class="o">.</span><span class="na">matches</span><span class="o">(</span><span class="n">filter</span><span class="o">.</span><span class="na">getTitle</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">stream</span><span class="o">.</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Publication</span><span class="o">&gt;</span> <span class="nf">findPublications</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">Publication</span><span class="o">&gt;</span> <span class="n">publications</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="o">&gt;</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">publications</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span><span class="n">books</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">publications</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span><span class="n">magazines</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">publications</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="o">.</span><span class="o">.</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>LibraryRepository.java</span>
    </div>
</div>
<p>Siguiendo la idea del ejemplo es posible realizar el filtrado de los datos con los argumentos que sean necesarios y la lógica adecuada según el repositorio donde estén almacenados los datos ya sea en un sistema con una base de datos relacional como <a href="https://www.postgresql.org/">PostgreSQL</a> o NoSQL como <a href="https://www.mongodb.com/">MongoDB</a>. Se podrían añadir más datos por ejemplo para filtrar por otros criterios como el número de páginas, autor o incluir otros parámetros para realizar otras funciones como especificar criterios de ordenación.</p>
<p>Esta petición busca los libros que su título comience por las letras <em>O</em> o <em>R</em> obteniendo dos coincidencias como resultado. En este caso entre los datos solo se devuelve el título del libro pero perfectamente podrían haber sido cualesquiera otros de entre los que posee el tipo <em>Book</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-bash" data-lang="bash">$ curl -XPOST -H <span class="s2">&#34;Content-Type: application/json&#34;</span> -d <span class="s1">&#39;{&#34;query&#34;: &#34;query Books{books(filter:{title:\&#34;^[OR].*\&#34;}){title}}&#34;}&#39;</span> http://localhost:8080/graphql&#10;<span class="o">{</span>&#10;  <span class="s2">&#34;data&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;books&#34;</span>: <span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ojo en el cielo&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ready Player One&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">]</span>&#10;  <span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl.sh</span>
    </div>
</div>
<p>Pero&hellip; ¿que ocurre si aún con el filtrado o en una consulta el número de coincidencias son unos cuantos miles? Seguramente sean demasiadas coincidencias para devolver en una única petición y por ello es habitual <a href="https://picodotdev.github.io/blog-bitix/2017/11/paginacion-usando-cursores-en-graphql-y-java/index-amp.html">realizar paginación en GraphQL</a>. Eso será tema para otro de los siguientes artículos de esta serie sobre GraphQL.</p>
<p>
    El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/GraphQL">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en <a href="https://github.com/">GitHub</a> y probarlo en tu equipo ejecutando el comando <code>./gradlew run</code>. 
</p>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/11/8-plus-ideas-de-productos-tecnologicos-para-comprar-o-regalar/</id>
        <title>8&#43; ideas de productos tecnológicos para comprar o regalar</title>        
        <updated>2019-12-30T16:00:00+01:00</updated>
        <published>2017-11-24T23:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/11/8-plus-ideas-de-productos-tecnologicos-para-comprar-o-regalar/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
          <![CDATA[<p><strong>Los productos de tecnología de consumo son regalos siempre bien recibidos por las posibilidades y el entretenimiento que proporcionan. Son productos de tecnología pero permiten disfrutar de otras aficiones y en algunos casos de varias con un mismo dispositivo, desde la fotografía con un <em>smartphone</em> con buena cámara fotográfica que no tienen mucho que envidiar a cámaras específicas para un usuario aficionado, los juegos de móvil, comunicaciones y redes sociales, <em>smart tv</em> para disfrutar de películas de cine y series en gran calidad de sonido e imagen en pantallas grandes, libros electrónicos para la lectura y consolas para los juegos. Incluídos los ordenadores y portátiles que también permiten hacer un poco de todo lo anterior además de para el estudio y trabajo.</strong></p>]]>
        
        <![CDATA[<p>Los productos tecnológicos son de los más codiciados para regalar o comprar a otras personas o a uno mismo en cumpleaños, fechas señaladas de descuentos como días sin IVA que algunas grandes superficies comerciales realizar un par de veces al año, en la época previa a navidades que empieza ya en el <em>Black Friday</em> y poco después continua con el <em>Cyber Monday</em> seguido de la época de navidades con <em>Papá Noel</em> o equivalentes regionales y reyes magos. En el siguiente artículo incluyo una selección de productos de diferentes categorías, gamas y precios entre los más deseados.</p>
<p>En cualquier caso se un consumidor responsable, no hace falta estar a la última con cada versión de un <em>gadget</em> sobre todo con los productos de tecnología que parece se quedan anticuados pasado un año pero que en realidad siguen siendo totalmente válidos, comentaba algo sobre ello en el artículo <a href="https://picodotdev.github.io/blog-bitix/2016/10/sobre-el-rapido-avance-de-la-tecnologia/index-amp.html">Sobre el rápido avance de la tecnología</a>. Y aunque aquí pongo enlaces de <a href="https://amzn.to/2flFhHA">Amazon</a> compara con otras tiendas ya que no siempre tiene los mejores precios en todos los productos especialmente en aquellos que son vendidos por terceros en su <em>marketplace</em>, en el caso de Amazon <a href="https://picodotdev.github.io/blog-bitix/2019/06/conocer-la-evolucion-de-los-precios-de-los-productos-en-amazon-con-camelcamelcamel/index-amp.html">el seguidor de precios CamelCamelCamel permite conocer la evolución de precios</a> a lo argo del tiempo permitiendo conocer si en el momento de intención de compra el producto tiene buen precio.</p>
<h3 id="unidad-de-almacenamiento-ssd">Unidad de almacenamiento SSD</h3>
<p>Una unidad SSD es la mejor actualización que se le puede hacer a un portátil o equipo que aún tenga un disco mecánico. He visto un ordenador con un Intel Pentium 6100 con 4 GiB de memoria que tardaba en ser usable casi 10 minutos por estar leyendo constantemente del disco duro y revivir una vez instalado un SSD pasando a iniciarse en 10 segundos y ser totalmente operativo. Los precios que tienen actualmente son muy asequibles, cada trimestre que pasa aún así siguen reduciendo su precio y continúan aumentado su capacidad.</p>
<p>Las memorias o disco duros USB también son muy útiles para transportar documentos o para realizar copias de seguridad.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00P736UEU&amp;linkId=28038d4b59e2d632c816602a811887fe" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01IAGSD5O&amp;linkId=3215a305f002e773eaf540c5800348b3" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07MBQPQ62&amp;linkId=ccab64b983ca16b1323475532fcc8899" class="lozad"></iframe>
</div>
<h3 id="mini-pc-o-porttil">Mini PC o portátil</h3>
<p>Salvo que seas un usuario <em>gamer</em> de PC, <a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/index-amp.html">un mini PC  como un Intel NUC te será más que suficiente</a> y que no tienen nada que envidiar en cuanto a potencia sobre un ordenador de torre de gama media ocupando un espacio muy reducido y siendo muy silenciosos. Se les puede instalar la misma cantidad de memoria llegando incluso a 32 o más GiB o discos SSD NVMe de alta velocidad con la posibilidad de colocarlos en la parte trasera del monitor ocupando un espacio mínimo encima de la mesa.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07JCF1LCL&amp;linkId=5b22e238d8496d8d76cd9397d7f13a2d" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07JCF1BTZ&amp;linkId=f3958514001abbfacb4d2d944dbaae79" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07BVMGV34&amp;linkId=39e3b2f66a645310d0ca3da0525e9efc" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01BNJL8I4&amp;linkId=ef22daf2b91899709c8686b7db8a49c7" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07Z3QQ7BB&amp;linkId=b3e89c20bb90a533ad54d6f82a9ad5f7" class="lozad"></iframe>
</div>
<p>En cuanto a portátil optaría sin mucho dudar por un <a href="https://slimbook.es/">Slimbook</a>. Son configurables, con los últimos procesadores, hasta 32 GiB de memoria, tiene discos SSD incluso en formato NVMe, pantalla Full HD o QHD, en varios tamaños, ligeros y todo por un precio mucho más barato que en otros portátiles de marcas más grandes y no menos importante con la posibilidad de adquirirlos libres de Windows lo que les hace ideales para los usuarios de GNU/Linux.</p>
<p>Un teclado inalámbrico permite eliminar un cable de la mesa y desplazarlo sin molestias o ataduras del cable, con dos pilas AAA tiene una duración de más de una año sin necesidad de cambiarlas o recargarlas si se usan recargables.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B0758DMHZG&amp;linkId=22f1206a79c0eb63d39b94ca6b26ee80" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00CWNMW1S&amp;linkId=7a974f6747d38d7ceae51b4c2a524820" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01N0VFBPI&amp;linkId=0dc25d7884cf6c199de5621aa2a54eef" class="lozad"></iframe>
</div>
<h3 id="monitor-full-hd-2k-y-4k">Monitor Full HD, 2K y 4K</h3>
<p>Los monitores 2K y 4K tiene mayor definición mostrando el texto con más claridad y fácil de leer además de permitir mostrar mayor cantidad de contenido lo que los hace ideales para los programadores, personas que pasen buena cantidad de tiempo delante de la pantalla o <em>gamers</em>. Ya están empezando a tener unos precios bastante asequibles y hay varios modelos entre los que elegir.</p>
<p>Son utilizables tanto para el ordenador como para una consola y con un adaptador de múltiples entradas y una salida usar ambos al mismo tiempo sin necesidad de conectar y desconectar cables.</p>
<ul>
<li><a href="https://amzn.to/2OFdFi9">Benq PD2700Q</a> (<a href="https://www.benq.eu/es-es/monitor/designer/pd2700q.html">página fabricante</a>)</li>
<li><a href="https://amzn.to/2D0VQEf">Benq PD2500Q</a> (<a href="https://www.benq.eu/es-es/monitor/designer/pd2500q.html">página fabricante</a>)</li>
<li><a href="https://amzn.to/2NXG9hR">Benq GW2765HT</a> (<a href="https://www.benq.eu/es-es/monitor/home-office/gw2765ht.html">página fabricante</a>)</li>
<li><a href="https://amzn.to/2OIyidi">Viewsonic VG2719-2K</a> (<a href="https://www.viewsonic.com/es/products/lcd/VG2719-2K.php">página fabricante</a>)</li>
<li><a href="https://amzn.to/2CZj8dx">V7 L27HAS2K-2E</a> (<a href="http://www.v7world.com/es/productos/monitores/27-qhd-widescreen-led-monitor.html">página fabricante</a>)</li>
</ul>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01K2210GS&amp;linkId=37c01c8c71f103d6c7ad009afd2892a9" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B0737M9QP7&amp;linkId=3f46b23e2d6b884222796306587cced8" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00M913DVG&amp;linkId=9a692fa2ff43017270841146c742bb88" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B0789D843P&amp;linkId=74dce1e9be6c5b55e9345a20cfcc08b3" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B079P3YSTK&amp;linkId=c643b6119b0142d924df263c65a22e43" class="lozad"></iframe>
</div>
<p>Si el monitor es compartido tanto por el ordenador como por una consola es necesario un adaptador o <em>switch</em> HDMI de múltiples entradas y una salida para usar ambos sin necesidad de conectar y desconectar cables, no son caros y ofrecen mucha comodidad, con un botón se alterna entre la entrada del ordenador y la consola, además detecta la entrada y se cambia automáticamente.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07KSYS2L4&amp;linkId=3a5a1b554cb717c2763220c81be8b6fa" class="lozad"></iframe>
</div>
<h3 id="telfono-mvil--smartphone-">Teléfono móvil <em>smartphone</em></h3>
<p>Seguramente los teléfonos móviles tabletas y libros electrónicos son de los aparatos electrónicos más regalados en navidades. En el caso de los móviles para alguna gente hace prescindible el uso ordenador y quizá en un futuro para muchos amenace la existencia de ordenadores salvo para usuarios y usos concretos. Hay modelos en cualquier rango de precio para el presupuesto que se disponga o se quiera dedicar.</p>
<p>En la gama de entrada están el <a href="https://amzn.to/2Q02zTR">Xiaomi Mi 9 Lite</a> con 6 GiB de memoria, procesador <em>octa-core</em> Qualcomm Snapdragon 710 a 10nm y una cámara de 48 megapixeles, ranura para tarjeta microSD de hasta 256 GiB, pantalla de 6.3&rdquo; con resolución 2340x1080 y el <a href="https://amzn.to/2ZqJP30">Samsung Galaxy M20</a> con pantalla Full HD de 6.3&rdquo; 2340x1080, 4 GiB de memoria, procesador <em>octa-core</em> y cámara de 13 megapixles con Android actualizable a la versión 10. El <a href="https://amzn.to/2Q2B4Jv">Samsung Galaxy A50</a> en la gama media con una pantalla de 6.3” y resolución 2340 x 1080, 4 GiB de memoria y 128 ROM y cámara de 25 MP con procesador Samsung Exynos 9610. Todos destacan por incorporar ya la tendencia en el diseño de los móviles con un frontal sin apenas marcos y una pantalla grande pero sin aumentar por ello el tamaño del móvil. En la gama alta están el <a href="https://amzn.to/2ZsKGjF">Samsung Galaxy S10</a> y el <a href="https://amzn.to/35Z7N8c">iPhone 11</a> aunque no hace falta irse a estos modelos para tener un buen móvil.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07YD2D6P9&amp;linkId=e7b640e81027d3b7e2507849d749dc3b" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07NDWWN5F&amp;linkId=3e247b3b2c278ebaaa44bfc9a9e53fd2" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07PDZLZ9V&amp;linkId=59bf419f9726421a03fce4ea9ad9e22e" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07NDD7W23&amp;linkId=edb2b59b394cf355b806f15b14c4f7a7" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07XS2ND7L&amp;linkId=dc958ed83eaef74d585d5c1938303f45" class="lozad"></iframe>
</div>
<h3 id="libro-electrnico-o-tableta">Libro electrónico o tableta</h3>
<p>Entre la cantidad de modelos y marcas que hay en tabletas y libros electrónicos destacan las de Amazon por su calidad, potencia y precio muy ajustado con la posibilidad de acceder al amplio catálogo de contenidos de la enorme tienda de Amazon. Yo tengo un Kindle Touch de cuarta generación y estoy encantado con él. Las versiones más recientes son aún mejores con una pantalla de mayor resolución, mayor contraste y con luz integrada.</p>
<p>El <a href="https://amzn.to/2Zqcc1t">Kindle Fire 7</a>tiene un precio para las características que tiene muy ajustado y es difícil encontrar algo mejor por ese precio, pantalla de 7 pulgadas de 1024x768 de resolución con 8 o 16 GiB de almacenamiento y procesador de cuatro núcleos. El <a href="https://amzn.to/2ZuabRQ">Kindle Fire HD 8</a> tiene una pantalla algo más grande, de mayor resolución y algo más de almacenamiento, pantalla de 8 pulgadas con 1280x800 píxeles y entre 16 y 32 GiB.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01J90P010&amp;linkId=532e9386ab389303b2eff116fed15a39" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01J94TL6Q&amp;linkId=ad0ec4ed334c36112b6d6ff59b36e846" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07JQRWLXM&amp;linkId=dc935eaf1eecabce5bf84784c5391605" class="lozad"></iframe>
</div>
<p>El <a href="https://amzn.to/365cflK">Amazon Kindle</a> ya es suficiente para cualquier lector con su capacidad de almacenamiento de 4 GiB (los libros más largos no ocupan ni un <em>mega</em>) y tiene pantalla táctil de 6 pulgadas, la diferencia con el <a href="https://amzn.to/2EZao5W">Amazon Kindle Paperwhite</a> es que este último tiene pantalla retroiluminada y algo más resolución. La diferencia de precio entre ellos no es mucha por lo que salvo que se quiera el precio más barato el Paperwhite es buena opción. El <a href="https://amzn.to/2Qn2poP">Kindle Osais</a> es el modelo más caro pero ofrece una mejor, mayor tamaño pantalla de 7 pulgadas y algo más de capacidad para almacenar contenido.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07FQ4DJ83&amp;linkId=ff9c878d55e58bfb27fa338d119143ad" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07747FR44&amp;linkId=aceb01a7e21f9b34471fe7f93d9fbf67" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07L5GDTYY&amp;linkId=a870e4924da9dbdb69ae9fb976260989" class="lozad"></iframe>
</div>
<h3 id="consola">Consola</h3>
<p>Las consolas son otro de los regalos más populares, entre ellas están la <a href="https://amzn.to/34WAyB7">Sony PlayStation 4</a> con su buen <a href="http://amzn.to/2i3pzDx">catálogo de juegos</a> y la que le está dando buenos resultados a la otra compañía nipona con la <a href="https://amzn.to/2tOmUTw">Nintendo Switch</a> o la versión más económica <a href="https://amzn.to/351eZiw">Nintendo Swtich Lite</a> con sus juegos franquicia de <a href="https://amzn.to/2EXt1HK">The Legend Of Zelda: Breath Of The Wild</a> y <a href="https://amzn.to/2MyaHsV">Mario Odissey</a> pero también está la <a href="http://amzn.to/2i3VgfU">Nintendo 2DS</a> más económica para los más pequeños. La <a href="https://amzn.to/2t2W8qn">Xbox One S</a> también con su <em>Game Pass</em> es una muy buena opción para disfrutar de una completa colección de juegos de su generación.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07XBTPRCV&amp;linkId=0203280a356eba12b73ebbc6090a6247" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07WKNQ8JT&amp;linkId=5a7ca82c27c76c94e865f9362c8236c2" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07V29SJ7C&amp;linkId=cd56f52b7a1a66683ef46741ed46d043" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07VN9HTX2&amp;linkId=320cd323e06edb21ae469838d05547db" class="lozad"></iframe>
</div>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/index-amp.html">Yo acabé comprando una PlayStation 4</a>, aún estando en su fase final de vida tiene un gran catálogo de juegos y aún saliendo la PlayStation 5 a finales del 2020 durante varios años de transición se seguirán viendo juegos físicos en las tiendas o digitales en la propia PlayStation Store, además en los primeros años la PS5 será mas cara y están las dudas si las primeras versiones estarán libres de fallos además de su limitado catálogo de juegos inicial hechos de forma especifica para aprovechar completamente sus capacidades.</p>
<h3 id="televisin-4k-hdr-smart-tv">Televisión 4K, HDR, Smart TV</h3>
<p>De las <a href="http://amzn.to/2jlOZsn">televisiones que he visto</a> me gustan más los modelos de Sony ya que estos incorporan el sistema <a href="https://www.android.com/tv/">Android TV</a> para el sistema <em>Smart TV</em> lo que les permite tener mayor cantidad de aplicaciones disponibles. Aún así los modelos de Samsung y LG también son buenas opciones. En un futuro aunque todavía tardará unos años pero no muy lejano habrá una nueva reantenización y será necesario que las televisiones dispongan de un decodificacdor DVB-T2 que solo he visto que incorporen las televisiones 4K. Las televisiones 4K ya están empezando a tener unos precios que no son exageradamente superiores a los modelos Full HD.</p>
<p>Estos modelos está disponibles en tamaños desde 43&rdquo; hasta 65&rdquo; son de resolución 4K con soporte HDR, los <em>Smart TV</em> de Samsung incorpora su propio sistema operativo Tizen, la Sony con Android TV y la LG con webOS.</p>
<ul>
<li><a href="https://amzn.to/37cFHq3">Samsung 4K 43RU7405</a></li>
<li><a href="https://amzn.to/2EZ3pdf">Sony KD-43XG8196BAEP</a></li>
<li><a href="https://amzn.to/2MxNIhE">LG 43UM7100</a></li>
</ul>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07PQZR5JF&amp;linkId=079b0e210eb76226ede3844f47c05c62" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07QQ728CY&amp;linkId=703dee6d18290d3a5037eb7a5ef73679" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07R5Z717K&amp;linkId=651164af5eb056854b706dbaaf5b5f0e" class="lozad"></iframe>
</div>
<h3 id="otros-componentes">Otros componentes</h3>
<p>El mimiordenador <a href="https://amzn.to/2ETnmlV">Raspberry Pi</a> permite convertirlo en multitud de cosas desde un reproductor para el salón, <a href="https://picodotdev.github.io/blog-bitix/2018/02/consola-de-juegos-retro-con-lakka-y-una-raspberry-pi/index-amp.html">consola para juegos <em>retro</em></a>, servidor de descargas, <a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/index-amp.html">nube personal con Nextcloud</a> para proteger la privacidad de la información personal o <a href="https://picodotdev.github.io/blog-bitix/2017/02/desempaquetado-del-kit-de-iniciacion-a-la-electronica-para-la-raspberry-pi/index-amp.html">cacharrear con componentes electrónicos</a> ideales para que un niño o niña aprendan sobre los ordenadores y tengan su primer ordenador propio con el que aprender a programar, que en un futuro podría convertirse en su profesión si les gusta con buenas perspectivas laborales ya hoy y en el futuro, con componentes electrónicos como LEDs, pulsadores, zumbadores, <em>displays</em> de 16 caracteres por 2 filas con la ayuda de un adulto con algunos conocimientos. Incluso hacer con varias de estas computadoras un pequeño cluster de servidores con <a href="https://www.docker.com/">Docker</a>.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07TC2BK1X&amp;linkId=6e87726b77e92056e7ac168add1bc747" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07XNVPK8X&amp;linkId=bef0fad42b2cc046799c66f7fa220c0f" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B073JYC4XM&amp;linkId=fc47107b5f2e02c96571abfa0506c1c7" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B014I8U33I&amp;linkId=df5c52be4ca21b9991d26145edb0b642" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" data-src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07VMXHJ4Q&amp;linkId=39ee0802cdc202ce8259d463b59224ed" class="lozad"></iframe>
</div>
]]>
        </content>
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/11/usar-un-resolver-para-recuperar-propiedades-en-graphql/</id>
        <title>Usar un resolver para recuperar propiedades en GraphQL</title>        
        <updated>2019-06-15T01:05:00+02:00</updated>
        <published>2017-11-18T10:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/11/usar-un-resolver-para-recuperar-propiedades-en-graphql/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes" style="min-width: 200px;">
<p><img src="url=logotype:graphql.svg,size=1x1,gallery=false,layout=responsive" alt="" title="GraphQL" /></p>
</div>
<p>Cuando en una consulta de <a href="https://graphql.org/">GraphQL</a> se indican las propiedades a devolver GraphQL usa para cada una de ellas lo que en la implementación de Java se llama un <em>resolver</em> y en otras implementaciones <em>data fetcher</em>. En la mayoría de casos las propiedades serán propiedades de un objeto y en estos casos se usará un <em>PropertyDataFetcher</em> usando en Java la convención de los <em>java beans</em> o la clave de un mapa. En el caso de que cierto dato no esté almacenado en el objeto sino en un repositorio externo es necesario usar un <em>resolver</em> para devolver esa propiedad en la consulta.</p>
<p>Por ejemplo, supongamos que en el ejemplo de la librería en el caso de los libros le añadimos un nuevo dato para el ISBN que está almacenado en un sistema externo, en otro repositorio. La nueva definición del esquema quedaría de la siguiente forma, basta con añadir la nueva propiedad al tipo <em>Book</em> y su tipo que será <em>String</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-graphqls" data-lang="graphqls"><span class="kd">type</span><span class="w"> </span><span class="nc">Book</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">title</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">author</span><span class="p">:</span><span class="w"> </span><span class="nc">Author</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">isbn</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Author</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Query</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">books</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="nc">Book</span><span class="p">]</span><span class="p">!</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">authors</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="nc">Author</span><span class="p">]</span><span class="p">!</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">author</span><span class="p">(</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">)</span><span class="p">:</span><span class="w"> </span><span class="nc">Author</span><span class="p">!</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Mutation</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">addBook</span><span class="p">(</span><span class="py">title</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="p">,</span><span class="w"> </span><span class="py">author</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">)</span><span class="p">:</span><span class="w"> </span><span class="nc">Book</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">schema</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="kd">query</span><span class="p">:</span><span class="w"> </span><span class="nc">Query</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nc">mutation</span><span class="p">:</span><span class="w"> </span><span class="nc">Mutation</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>library.graphqls</span>
    </div>
</div>
<p>Para que una consulta que recupere el ISBN funcione correctamente es necesario implementar un <em>resolver</em> creando una clase que implemente la interfaz <em>GraphQLResolver&lt;Book&gt;</em> en la que se incluya un método <em>get</em> por cada propiedad del tipo <em>Book</em> que esté alamcenada en otro repositorio. Estos métodos <em>get</em> reciben como parámetro el objeto <em>Book</em> a partir del cual como contexto es posible tener los datos del libro del que hay que recuperar el ISBN, posiblemente utilizando su identificativo. En el ejemplo simplemente se devuelve un dato aleatorio pero perfectamente en caso necesario se podría usar un repositorio que lo recupere del sistema de información que lo almacena.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.resolver</span><span class="o">;</span>&#10;&#10;<span class="o">.</span><span class="o">.</span><span class="o">.</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BookResolver</span> <span class="kd">implements</span> <span class="n">GraphQLResolver</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">&gt;</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">LibraryRepository</span> <span class="n">libraryRespository</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">BookResolver</span><span class="o">(</span><span class="n">LibraryRepository</span> <span class="n">libraryRespository</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">libraryRespository</span> <span class="o">=</span> <span class="n">libraryRespository</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getIsbn</span><span class="o">(</span><span class="n">Book</span> <span class="n">book</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">InterruptedException</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Getting ISBN %d...&#34;</span><span class="o">,</span> <span class="n">book</span><span class="o">.</span><span class="na">getId</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">3000</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;ok%n&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">UUID</span><span class="o">.</span><span class="na">randomUUID</span><span class="o">(</span><span class="o">)</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="o">.</span><span class="o">.</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>BookResolver.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-bash" data-lang="bash">$ curl -XPOST -H <span class="s2">&#34;Content-Type: application/json&#34;</span> -d <span class="s1">&#39;{&#34;query&#34;: &#34;query Books{books{title isbn}}&#34;}&#39;</span> http://localhost:8080/graphql&#10;<span class="o">{</span>&#10;  <span class="s2">&#34;data&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;books&#34;</span>: <span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ojo en el cielo&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;isbn&#34;</span>: <span class="s2">&#34;9664c44a-9b70-4f8e-8db9-960c16bd3d9c&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Muerte de la luz&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;isbn&#34;</span>: <span class="s2">&#34;b2cadd23-827c-4057-ae65-e3fbcbafee03&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;El nombre de la rosa&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;isbn&#34;</span>: <span class="s2">&#34;57ccc845-8792-40ed-9561-d75070399c8b&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Los tejedores de cabellos&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;isbn&#34;</span>: <span class="s2">&#34;f035727e-8a7d-4a34-9604-1f5b22c249a7&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ready Player One&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;isbn&#34;</span>: <span class="s2">&#34;40393df6-7bfb-4132-97d4-bd98ebbfd565&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">]</span>&#10;  <span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl.sh</span>
    </div>
</div>
<p>A la hora de definir el servicio de GraphQL hay que proporcionar el <em>resolver</em> personalizado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql</span><span class="o">;</span>&#10;&#10;<span class="o">.</span><span class="o">.</span><span class="o">.</span>&#10;&#10;<span class="nd">@SpringBootApplication</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="n">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">LibraryRepository</span> <span class="nf">buildLibraryRepository</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">LibraryRepository</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">GraphQLSchema</span> <span class="nf">graphQLSchema</span><span class="o">(</span><span class="n">LibraryRepository</span> <span class="n">libraryRepository</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">SchemaParser</span><span class="o">.</span><span class="na">newParser</span><span class="o">(</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">schemaString</span><span class="o">(</span><span class="n">IOUtils</span><span class="o">.</span><span class="na">resourceToString</span><span class="o">(</span><span class="s">&#34;/library.graphqls&#34;</span><span class="o">,</span> <span class="n">Charset</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="s">&#34;UTF-8&#34;</span><span class="o">)</span><span class="o">)</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">resolvers</span><span class="o">(</span><span class="k">new</span> <span class="n">Query</span><span class="o">(</span><span class="n">libraryRepository</span><span class="o">)</span><span class="o">,</span> <span class="k">new</span> <span class="n">Mutation</span><span class="o">(</span><span class="n">libraryRepository</span><span class="o">)</span><span class="o">,</span> <span class="k">new</span> <span class="n">BookResolver</span><span class="o">(</span><span class="n">libraryRepository</span><span class="o">)</span><span class="o">,</span> <span class="k">new</span> <span class="n">MagazineResolver</span><span class="o">(</span><span class="n">libraryRepository</span><span class="o">)</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">scalars</span><span class="o">(</span><span class="n">GraphQLScalarType</span><span class="o">.</span><span class="na">newScalar</span><span class="o">(</span><span class="o">)</span><span class="o">.</span><span class="na">name</span><span class="o">(</span><span class="s">&#34;LocalDate&#34;</span><span class="o">)</span><span class="o">.</span><span class="na">description</span><span class="o">(</span><span class="s">&#34;LocalDate scalar&#34;</span><span class="o">)</span><span class="o">.</span><span class="na">coercing</span><span class="o">(</span><span class="k">new</span> <span class="n">LocalDateCoercing</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">.</span><span class="na">build</span><span class="o">(</span><span class="o">)</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">dictionary</span><span class="o">(</span><span class="n">Magazine</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">(</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">makeExecutableSchema</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="o">.</span><span class="o">.</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[</span><span class="o">]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<p>Los <em>resolvers</em> permiten almacenar la información en dos bases de datos distintas, una podría ser almacenar una información una base de datos relacional, otra información en una base de datos NoSQL, dos bases de datos relacionales distintas o inlcuso proporcionado por una API distinta. En cualquier caso para el usuario de la API y del servicio es transparente como esté almacenada la información.</p>
<p>
    El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/GraphQL">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en <a href="https://github.com/">GitHub</a> y probarlo en tu equipo ejecutando el comando <code>./gradlew run</code>. 
</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://graphql-java.readthedocs.io/en/v5/schema.html">Creating a schema</a></li>
<li><a href="https://github.com/graphql-java/graphql-java/blob/master/src/main/java/graphql/schema/DataFetchingEnvironment.java">DataFetchingEnvironment</a></li>
<li><a href="https://github.com/graphql-java/graphql-java/blob/master/src/main/java/graphql/schema/DataFetcher.java">DataFetcher</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/11/devolver-mensajes-de-error-descriptivos-en-graphql/</id>
        <title>Devolver mensajes de error descriptivos en GraphQL</title>        
        <updated>2019-06-15T01:00:00+02:00</updated>
        <published>2017-11-12T11:30:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/11/devolver-mensajes-de-error-descriptivos-en-graphql/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes" style="min-width: 200px;">
<p><img src="url=logotype:graphql.svg,size=1x1,gallery=false,layout=responsive" alt="" title="GraphQL" /></p>
</div>
<p>Por defecto <a href="https://graphql.org/">GraphQL</a> devuelve errores con mensajes descriptivos para los errores del cliente como son los errores de sintaxis en la sentencia de consulta o mutación, en el caso de que el campo solicitado no exista o no se ha indicado ninguno. En el caso de Java si se lanza una excepción en la clase repositorio que guarda los datos o en la lógica de negocio y no se captura GraphQL indicará que se ha producido un error interno en el servidor. Esto no es muy descriptivo y es mejor indicar errores más útiles para el usuario de la API como podría ser que no se tienen permisos para realizar la modificación o el error que se ha producido al validar los datos y por los que la operación no se ha completado.</p>
<p>Los errores en GraphQL usando el lenguaje Java se gestionan implementando en una clase la interfaz <a href="https://github.com/graphql-java/graphql-java/blob/master/src/main/java/graphql/GraphQLError.java">GrapQLError</a>, este podría ser en caso de una excepción que además de heredar de <a href="https://docs.oracle.com/javase/9/docs/api/java/lang/Exception.html">Exception</a> implemente la interfaz <em>GraphQLError</em>. Sin embargo, GraphQL cuando una clase hereda únicamente de <em>Exception</em> lo considera un error interno del servidor y para no dar información interna del servicio a los clientes como mensaje indica únicamente <em>Internal Server Error(s) while executing query</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-bash" data-lang="bash">$ curl -XPOST -H <span class="s2">&#34;Content-Type: application/json&#34;</span> -d <span class="s1">&#39;{&#34;query&#34;: &#34;query Books{books{none}}&#34;}&#39;</span> http://localhost:8080/graphql&#10;<span class="o">{</span>&#10;  <span class="s2">&#34;data&#34;</span>: null,&#10;  <span class="s2">&#34;errors&#34;</span>: <span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;message&#34;</span>: <span class="s2">&#34;Validation error of type FieldUndefined: Field &#39;none&#39; in type &#39;Book&#39; is undefined&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;locations&#34;</span>: <span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;line&#34;</span>: 1,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;column&#34;</span>: <span class="m">19</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">]</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;description&#34;</span>: <span class="s2">&#34;Field &#39;none&#39; in type &#39;Book&#39; is undefined&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;validationErrorType&#34;</span>: <span class="s2">&#34;FieldUndefined&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;errorType&#34;</span>: <span class="s2">&#34;ValidationError&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;extensions&#34;</span>: null,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;path&#34;</span>: null&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;  <span class="o">]</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-default-errors.sh</span>
    </div>
</div>
<p>Para que GraphQL muestre el error personalizado deseado lanzando excepciones hay que adaptar esa excepción y que implementa <em>GraphQLError</em> con una clase que únicamente implemente la interfaz <em>GraphQLError</em> pero no herede de <em>Exception</em>. Esta sería una clase adaptador necesaria.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.misc</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">graphql.ErrorClassification</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">graphql.ExceptionWhileDataFetching</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">graphql.GraphQLError</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">graphql.language.SourceLocation</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">GraphQLErrorAdapter</span> <span class="kd">implements</span> <span class="n">GraphQLError</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">GraphQLError</span> <span class="n">error</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">GraphQLErrorAdapter</span><span class="o">(</span><span class="n">GraphQLError</span> <span class="n">error</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">error</span> <span class="o">=</span> <span class="n">error</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="nf">getExtensions</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">extensions</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="o">&gt;</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">error</span><span class="o">.</span><span class="na">getExtensions</span><span class="o">(</span><span class="o">)</span> <span class="o">!</span><span class="o">=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">extensions</span><span class="o">.</span><span class="na">putAll</span><span class="o">(</span><span class="n">error</span><span class="o">.</span><span class="na">getExtensions</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">error</span> <span class="k">instanceof</span> <span class="n">ExceptionWhileDataFetching</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">StringWriter</span> <span class="n">sw</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringWriter</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">PrintWriter</span> <span class="n">pw</span> <span class="o">=</span> <span class="k">new</span> <span class="n">PrintWriter</span><span class="o">(</span><span class="n">sw</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Throwable</span> <span class="n">exception</span> <span class="o">=</span> <span class="o">(</span><span class="o">(</span><span class="n">ExceptionWhileDataFetching</span><span class="o">)</span> <span class="n">error</span><span class="o">)</span><span class="o">.</span><span class="na">getException</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">exception</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">(</span><span class="n">pw</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">stacktrace</span> <span class="o">=</span> <span class="n">sw</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">extensions</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;stacktrace&#34;</span><span class="o">,</span> <span class="n">stacktrace</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">extensions</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;exception&#34;</span><span class="o">,</span> <span class="n">exception</span><span class="o">.</span><span class="na">getClass</span><span class="o">(</span><span class="o">)</span><span class="o">.</span><span class="na">getName</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="o">(</span><span class="n">extensions</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">(</span><span class="o">)</span><span class="o">)</span> <span class="o">?</span> <span class="kc">null</span> <span class="o">:</span> <span class="n">extensions</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">SourceLocation</span><span class="o">&gt;</span> <span class="nf">getLocations</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">error</span><span class="o">.</span><span class="na">getLocations</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">ErrorClassification</span> <span class="nf">getErrorType</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">error</span><span class="o">.</span><span class="na">getErrorType</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;</span> <span class="nf">getPath</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">error</span><span class="o">.</span><span class="na">getPath</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="nf">toSpecification</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">error</span><span class="o">.</span><span class="na">toSpecification</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getMessage</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="o">(</span><span class="n">error</span> <span class="k">instanceof</span> <span class="n">ExceptionWhileDataFetching</span><span class="o">)</span> <span class="o">?</span> <span class="o">(</span><span class="o">(</span><span class="n">ExceptionWhileDataFetching</span><span class="o">)</span> <span class="n">error</span><span class="o">)</span><span class="o">.</span><span class="na">getException</span><span class="o">(</span><span class="o">)</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(</span><span class="o">)</span> <span class="o">:</span> <span class="n">error</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>GraphQLErrorAdapter.java</span>
    </div>
</div>
<p>Para adaptar las clases excepción hay que cambiar el comportamiento de la clase <em>GraphQLErrorHandler</em> de modo que transforme las excepciones a la clase <em>GraphQLError</em> propia. Esta clase se indica al construir el objeto <em>SimpleGraphQLServlet</em> y <em>ServletRegistrationBean</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql</span><span class="o">;</span>&#10;&#10;<span class="o">.</span><span class="o">.</span><span class="o">.</span>&#10;&#10;<span class="nd">@SpringBootApplication</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="n">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">LibraryRepository</span> <span class="nf">buildLibraryRepository</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">LibraryRepository</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">GraphQLSchema</span> <span class="nf">graphQLSchema</span><span class="o">(</span><span class="n">LibraryRepository</span> <span class="n">libraryRepository</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">SchemaParser</span><span class="o">.</span><span class="na">newParser</span><span class="o">(</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">schemaString</span><span class="o">(</span><span class="n">IOUtils</span><span class="o">.</span><span class="na">resourceToString</span><span class="o">(</span><span class="s">&#34;/library.graphqls&#34;</span><span class="o">,</span> <span class="n">Charset</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="s">&#34;UTF-8&#34;</span><span class="o">)</span><span class="o">)</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">resolvers</span><span class="o">(</span><span class="k">new</span> <span class="n">Query</span><span class="o">(</span><span class="n">libraryRepository</span><span class="o">)</span><span class="o">,</span> <span class="k">new</span> <span class="n">Mutation</span><span class="o">(</span><span class="n">libraryRepository</span><span class="o">)</span><span class="o">,</span> <span class="k">new</span> <span class="n">BookResolver</span><span class="o">(</span><span class="n">libraryRepository</span><span class="o">)</span><span class="o">,</span> <span class="k">new</span> <span class="n">MagazineResolver</span><span class="o">(</span><span class="n">libraryRepository</span><span class="o">)</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">scalars</span><span class="o">(</span><span class="n">GraphQLScalarType</span><span class="o">.</span><span class="na">newScalar</span><span class="o">(</span><span class="o">)</span><span class="o">.</span><span class="na">name</span><span class="o">(</span><span class="s">&#34;LocalDate&#34;</span><span class="o">)</span><span class="o">.</span><span class="na">description</span><span class="o">(</span><span class="s">&#34;LocalDate scalar&#34;</span><span class="o">)</span><span class="o">.</span><span class="na">coercing</span><span class="o">(</span><span class="k">new</span> <span class="n">LocalDateCoercing</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">.</span><span class="na">build</span><span class="o">(</span><span class="o">)</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">dictionary</span><span class="o">(</span><span class="n">Magazine</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">(</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">makeExecutableSchema</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">GraphQLErrorHandler</span> <span class="nf">graphQLErrorHandler</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">DefaultGraphQLErrorHandler</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">GraphQLError</span><span class="o">&gt;</span> <span class="nf">processErrors</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">GraphQLError</span><span class="o">&gt;</span> <span class="n">errors</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">GraphQLError</span><span class="o">&gt;</span> <span class="n">clientErrors</span> <span class="o">=</span> <span class="n">errors</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">filter</span><span class="o">(</span><span class="n">e</span> <span class="o">-</span><span class="o">&gt;</span> <span class="n">isClientError</span><span class="o">(</span><span class="n">e</span><span class="o">)</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">map</span><span class="o">(</span><span class="n">GraphQLErrorAdapter</span><span class="o">:</span><span class="o">:</span><span class="k">new</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">GraphQLError</span><span class="o">&gt;</span> <span class="n">serverErrors</span> <span class="o">=</span> <span class="n">errors</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">filter</span><span class="o">(</span><span class="n">e</span> <span class="o">-</span><span class="o">&gt;</span> <span class="o">!</span><span class="n">isClientError</span><span class="o">(</span><span class="n">e</span><span class="o">)</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">map</span><span class="o">(</span><span class="n">GraphQLErrorAdapter</span><span class="o">:</span><span class="o">:</span><span class="k">new</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">serverErrors</span><span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="n">error</span> <span class="o">-</span><span class="o">&gt;</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">&#34;Error executing query ({}): {}&#34;</span><span class="o">,</span> <span class="n">error</span><span class="o">.</span><span class="na">getClass</span><span class="o">(</span><span class="o">)</span><span class="o">.</span><span class="na">getSimpleName</span><span class="o">(</span><span class="o">)</span><span class="o">,</span> <span class="n">error</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span><span class="o">)</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="o">!</span><span class="n">serverErrors</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">(</span><span class="o">)</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">serverErrors</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="o">&gt;</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">serverErrors</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">GenericGraphQLError</span><span class="o">(</span><span class="s">&#34;Internal Server Error(s) while executing query&#34;</span><span class="o">)</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">GraphQLError</span><span class="o">&gt;</span> <span class="n">e</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="o">&gt;</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">e</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span><span class="n">clientErrors</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">e</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span><span class="n">serverErrors</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">e</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="o">.</span><span class="o">.</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[</span><span class="o">]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<p>En el caso de este ejemplo solo un usuario de nombre <em>admin</em> tiene permitido hacer modificaciones en la colección de libros guardados en la clase repositorio <em>LibraryRepository</em>. Por otro lado, cuando se añade un libro se hace una validación de los datos comprobando que el autor del libro a añadir exista en la librería. Estas son las peticiones válidas.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-bash" data-lang="bash">$ curl -XPOST -H <span class="s2">&#34;Content-Type: application/json&#34;</span> -d <span class="s1">&#39;{&#34;query&#34;: &#34;query Books{books{title}}&#34;}&#39;</span> http://localhost:8080/graphql&#10;<span class="o">{</span>&#10;  <span class="s2">&#34;data&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;books&#34;</span>: <span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ojo en el cielo&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Muerte de la luz&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;El nombre de la rosa&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Los tejedores de cabellos&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ready Player One&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">]</span>&#10;  <span class="o">}</span>&#10;<span class="o">}</span>&#10;&#10;$ curl -XPOST -H <span class="s2">&#34;Content-Type: application/json&#34;</span> -H <span class="s2">&#34;User: admin&#34;</span> -d <span class="s1">&#39;{&#34;query&#34;: &#34;mutation addBook($title: String, $author: Long){addBook(title: $title, author: $author){title}}&#34;, &#34;variables&#34;: { &#34;title&#34;: &#34;El lazarillo de Tormes&#34;, &#34;author&#34;: 6}}&#39;</span> http://localhost:8080/graphql&#10;<span class="o">{</span>&#10;  <span class="s2">&#34;data&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;addBook&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;El lazarillo de Tormes&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;  <span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl.sh</span>
    </div>
</div>
<p>Y estas las inválidas que devuelve los mensajes propios más descriptivos de los errores o validaciones realizadas en el servidor de más utilidad para un usuario del servicio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-bash" data-lang="bash">$ curl -XPOST -H <span class="s2">&#34;Content-Type: application/json&#34;</span> -d <span class="s1">&#39;{&#34;query&#34;: &#34;mutation addBook($title: String, $author: Long){addBook(title: $title, author: $author){title}}&#34;, &#34;variables&#34;: { &#34;title&#34;: &#34;El lazarillo de Tormes&#34;, &#34;author&#34;: 6}}&#39;</span> http://localhost:8080/graphql&#10;<span class="o">{</span>&#10;  <span class="s2">&#34;data&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;addBook&#34;</span>: null&#10;  <span class="o">}</span>,&#10;  <span class="s2">&#34;errors&#34;</span>: <span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;errorType&#34;</span>: <span class="s2">&#34;DataFetchingException&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;extensions&#34;</span>: null,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;message&#34;</span>: <span class="s2">&#34;Invalid author&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;path&#34;</span>: <span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;addBook&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">]</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;locations&#34;</span>: <span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;line&#34;</span>: 1,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;column&#34;</span>: <span class="m">49</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">]</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;  <span class="o">]</span>&#10;<span class="o">}</span>&#10;&#10;$ curl -XPOST -H <span class="s2">&#34;Content-Type: application/json&#34;</span> -d <span class="s1">&#39;{&#34;query&#34;: &#34;mutation addBook($title: String, $author: Long){addBook(title: $title, author: $author){title}}&#34;, &#34;variables&#34;: { &#34;title&#34;: &#34;El lazarillo de Tormes&#34;, &#34;author&#34;: 6}}&#39;</span> http://localhost:8080/graphql&#10;<span class="o">{</span>&#10;  <span class="s2">&#34;data&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;addBook&#34;</span>: null&#10;  <span class="o">}</span>,&#10;  <span class="s2">&#34;errors&#34;</span>: <span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;errorType&#34;</span>: <span class="s2">&#34;DataFetchingException&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;extensions&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;foo&#34;</span>: <span class="s2">&#34;bar&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;fizz&#34;</span>: <span class="s2">&#34;whizz&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;message&#34;</span>: <span class="s2">&#34;Invalid permissions&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;path&#34;</span>: <span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;addBook&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">]</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;locations&#34;</span>: <span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;line&#34;</span>: 1,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;column&#34;</span>: <span class="m">49</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">]</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;  <span class="o">]</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-custom-errors.sh</span>
    </div>
</div>
<p>La interfaz <em>GraphQLError</em> posee el método <em>getMessage()</em> para devolver la descripción del mensaje pero con el método <em>getExtensions()</em> es posible incluir cualquier dato en forma de clave-valor que deseemos como un código de error o cualquier otra información deseada. El caso de la excepción <em>PermissionException</em> devuelve dos datos adicionales <em>foo</em> y <em>fizz</em>, en un caso real se implementaría una lógica más útil para devolver estos datos adicionales posiblemente proporcionándolos en el constructor u obteniéndolos con la referencia a algún objeto.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.misc</span><span class="o">;</span>&#10;&#10;<span class="o">.</span><span class="o">.</span><span class="o">.</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">PermissionException</span> <span class="kd">extends</span> <span class="n">Exception</span> <span class="kd">implements</span> <span class="n">GraphQLError</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">PermissionException</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">super</span><span class="o">(</span><span class="n">message</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="nf">getExtensions</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">extensions</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LinkedHashMap</span><span class="o">&lt;</span><span class="o">&gt;</span><span class="o">(</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">extensions</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;foo&#34;</span><span class="o">,</span> <span class="s">&#34;bar&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">extensions</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;fizz&#34;</span><span class="o">,</span> <span class="s">&#34;whizz&#34;</span><span class="o">)</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">extensions</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">SourceLocation</span><span class="o">&gt;</span> <span class="nf">getLocations</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">null</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">ErrorType</span> <span class="nf">getErrorType</span><span class="o">(</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">null</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>PermissionException.java</span>
    </div>
</div>
<p>
    El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/GraphQL">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en <a href="https://github.com/">GitHub</a> y probarlo en tu equipo ejecutando el comando <code>./gradlew run</code>. 
</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/index-amp.html">Ejemplo de GraphQL para una interfaz de un servicio con Spring Boot y Java</a></li>
<li><a href="https://graphql-java.readthedocs.io/en/v5/execution.html">Execution</a></li>
<li><a href="https://github.com/graphql-java/graphql-java/blob/master/src/main/java/graphql/GraphQLError.java">GraphQLError.java</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/11/me-cambio-a-la-electrica-holaluz/</id>
        <title>Me cambio a la eléctrica Holaluz</title>        
        <updated>2019-02-15T19:00:00+01:00</updated>
        <published>2017-11-06T20:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/11/me-cambio-a-la-electrica-holaluz/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
          <![CDATA[<p><strong>Como consumidor y como todo el mundo trato de elegir compañías que ofrezcan buen precio en sus servicios pero también que me traten con respeto, no me hacen falta descuentos promocionales ni regalos. Este fue el caso de elegir Pepephone como proveedor de internet y en este artículo el caso de elegir Holaluz como compañía eléctrica.</strong></p>]]>
        
        <![CDATA[<p>Hace tiempo que quería cambiarme de compañía eléctrica. No es que estuviese excesivamente descontento con la que ya estaba salvo por las continuas subidas de precio en cada factura pero quería pasarme a una compañía que ofreciese energía 100% renovable. Después de dar de baja el suministro de gas al <a href="https://picodotdev.github.io/blog-bitix/2017/08/sustituir-caldera-de-gas-por-un-termo-electrico-fleck-duo-7-50/index-amp.html">cambiar la caldera por un termo eléctrico</a> ya tenía más claro pasarme a otra compañía, ya he notado unos cuantos <a href="https://picodotdev.github.io/blog-bitix/2017/11/comparando-la-factura-entre-caldera-de-gas-y-termo-electrico/index-amp.html">euros de ahorro al mes dando de baja el gas</a> que al año son una buena cantidad. Utilizar una energía limpia y elaborada, como la eléctrica, para calentar una casa con calefacción u obtener agua caliente no es tan eficiente, es mejor convertir el gas que llega a casa directamente en calor, que no tener que procesar la energía dos veces (de una fuente a electricidad y la electricidad a calor en el domicilio) para conseguir el mismo resultado pero si no haces cierto consumo de gas disponer del servicio no compensa económicamente.</p>
<p>Entre las compañías eléctricas que empecé a barajar como posibles candidatas estaban <a href="https://www.holaluz.com/">Holaluz</a>, <a href="https://www.pepeenergy.com/">Pepeenergy</a> y algunas otras menos conocidas entre las alternativas a las tradicionales grandes como <a href="https://www.iberdrola.es/">Iberdrola</a>, <a href="https://areaclientes.gasnaturalfenosa.es/hogar">Gas Natural</a>, <a href="http://www.edpenergia.es/es/">EDP</a> o <a href="https://www.endesaclientes.com/">Endesa</a>. Una de las ventajas de Holaluz es que además de electricidad ofrece gas que aunque no es una energía renovable es algo más eficiente que usar electricidad para generar calor y algo más barata si haces cierta cantidad de consumo que compense el importe del alquiler de contador del gas, el importe de la disponibilidad del servicio y el coste de las revisiones obligatorias de caldera e instalación de gas. Pepeenergy solo ofrece electricidad. Ambas tienen unos precios por kWh más baratos que cualquiera de las tradicionales grandes y además siendo energía 100% renovable. Por ejemplo, en mi anterior compañía el kWh me costaba 0,133115 y en Holaluz 0,123000 con la tarifa un precio y la forma de pago sin sorpresas, no parece mucha la diferencia y por mi consumo no sería demasiado al mes pero al año y después de unos cuantos el ahorro será de unas decenas de euros. Con un consumo de 150 kWh al mes el ahorro es de 1,5 € o 18 € al año. Pero el ahorro puede ser mayor como en el caso de Endesa que el coste del kWh en el mismo momento era significativamente más caro 0,141806. Dependiendo del consumo que haya en una casa el ahorro será mayor o menor.</p>
<p>No me queda claro la diferencia entre energía 100% verde, que según indica incluye <a href="http://www.plantasdecogeneracion.com/index.php/las-plantas-de-cogeneracion">cogeneración de alta eficiancia</a> ¿a partir de qué materia?, y energía renovable viendo la definición de estos términos en el <a href="https://www.holaluz.com/glosario/">glosario</a>. Además en la página <a href="https://www.holaluz.com/energia-verde/">energía verde</a> donde se detalla de donde se obtiene la energía se incluye el termino valorización energética que representa un 48% pero su descripción me suena a incineradora. En la sección <a href="https://www.holaluz.com/conocenos/">Conócenos</a> incluyen la siguiente frase: <em>Por eso toda la energía que comercializamos es de origen renovable: solar, hidráulica, eólica, biomasa y biogás</em>. Me queda alguna duda entre todas estas páginas. Holaluz afirman que su energía es 100% verde o 100% renovable.</p>
<div class="media">
<figure>
<p><img src="url=resource:holaluz.png,size=300x250,gallery=true" alt="" title="Holaluz" />
<img src="url=resource:pepeenergy.png,size=300x250,gallery=true" alt="" title="Pepeenergy" /></p>
</figure>
</div>
<p>El ahorro según mi consumo de aproximadamente unos 75 kWh mensuales con mi anterior compañía eléctrica es de 0,75 € y con respecto al precio que tiene Endesa de 1,41 €. No parece mucho pero la electricidad es un servicio indispensable, de uso prolongado en una vivienda y es raro cambiar de compañía cada poco tiempo, eligiendo bien la compañía al cabo de los años el ahorro es apreciable, nadie va a salir de pobre pero con lo ahorrado algo ya se puede comprar.</p>
<p>Otro de los motivos de cambiarme a Holaluz es que me daba la sensación de tratar a los clientes mejor, sin cometer los abusos que a veces hacen las grandes compañías tradicionales que forman el oligopolio energético en España enviando comerciales importunando a puerta fría y ofreciendo regalos envenenados en forma de caros servicios de mantenimiento con cierto descuento durante un año pasado el cual el sablazo es grande. Este mismo motivo es el que utilicé para <a href="https://picodotdev.github.io/blog-bitix/2017/06/asi-trata-pepephone-a-sus-clientes/index-amp.html">elegir proveedor de internet</a> cuando opté por Pepephone. En ambos casos no es solo que estas empresas traten mejor a sus clientes sino que también sus precios son mejores y en el caso de Holaluz por si fuera poco ofreciendo energía verde.</p>
<p>En realidad aunque Holaluz indique que la energía que ofrece es 100% renovable dado el mix energético que se inyecta en la red uno no sabe cual es el origen de la electricidad que está consumiendo pero el caso es que lo que uno paga en la factura por la electricidad en Holaluz está destinado a compañías que generan electricidad renovable. Es decir, uno no contribuye con su factura a costear la peligrosa energía nuclear además de cara si se tiene en cuenta el coste de almacenamiento de los residuos radioactivos que genera y perduran durante miles de años o la contaminante energía generada con carbón o combustibles fósiles.</p>
<ul>
<li><a href="https://www.holaluz.com/conocenos/">Conócemos</a></li>
<li><a href="https://www.holaluz.com/luz-justa/">Luz justa</a></li>
<li><a href="https://www.holaluz.com/energia-verde/">Energía verde</a></li>
</ul>
<p>Otra ventaja de Holaluz es que factura mensualmente y no bimensualmente o facturando periodos de tiempo distintos cada vez según a la compañía eléctrica le viene en gana porque el distribuidor haya pasado a leer los contadores. Holaluz con la forma de pago <em>Sin sorpresas</em> permite pagar cada mes lo mismo por la electricidad y al terminar el año ajustar según haya sido el consumo real, si al final del año se ha pagado de más según lo consumido lo devuelve y si se ha pagado de menos se factura la diferencia. Pero si se prefiere disponen del tradicional método de pago <em>Clásico</em> que se paga mensualmente según lo consumido. Con tu dirección puedes conocer el precio aproximado que pagarías con Holaluz ya sea con la tarifa un precio o dos precios según el horario y la forma de pago clásica o sin sorpresas. En el modo sin sorpresas el precio del kWh es algo más barato de 0,123000 € y en el modo clásico de 0,129000 €. En cada factura se puede ver lo facturado, el ajuste de lo estimado una vez conocen el consumo real y solicitar modificar la cuota mensual del modo de pago sin sorpresas. En la zona de usuario es posible cambiar la potencia contratada que ajustándola se puede conseguir un ahorro de unos 3 € al mes por cada tramo de potencia reducido y no necesario.</p>
<ul>
<li><a href="https://www.holaluz.com/tarifas-luz-un-precio-20/">Tarifas luz un precio</a>, independiente de la hora de consumo.</li>
<li><a href="https://www.holaluz.com/tarifas-luz-dos-precios-20/">Tarifas luz dos precios</a>, según hora de consumo.</li>
</ul>
<p>Una vez reciba la primera factura de un mes completo de Holaluz y vea el consumo real que he realizado actualizaré este artículo para comparar. Aunque con el modo de pago que he elegido, sin sorpresas, tendré todos los meses el mismo importe en la factura veré al menos el importe de precio del kWh que debería ser de 0,123000, comparando mi factura con mi anterior compañia hay diferencia si tengo en cuenta que ahora uso la ducha y nates no y que ahora no tengo que pagar el servicio de gas con sus costes de revisiones y mantenimiento.</p>
<p>Transcurrido un año y unos meses me han actualizado el precio a 0,133000 que estoy seguro que con las subidas de precio en la electridad en este mismo periodo de tiempo sigue siendo un precio menor que otras compañías eléctricas.</p>
<div class="media">
<figure>
<p><img src="url=resource:factura-holaluz-1.png,size=300x200,gallery=true" alt="" title="Factura Holaluz" />
<img src="url=resource:factura-holaluz-2.png,size=300x200,gallery=true" alt="" title="Factura Holaluz" /></p>
<figcaption>Factura Holaluz después de unos meses con consumo</figcaption>
</figure>
</div>
<p>No hay ninguna diferencia entre la electricidad de cualquier compañía, la diferencia entre las empresas está en el precio, el origen de la electricidad que ofrecen, el servicio de atención al cliente y el trato que ofrecen a sus clientes. Compañías como Holaluz tienen un precio mejor que las grandes tradicionales, ofrecen energía 100% de origen renovable, el servicio de atención al cliente es bueno y el trato significativamente mejor.</p>
<p>En el caso de Holaluz del cambio de compañía eléctrica se encarga totalmente ellos una vez realizada la contratación por internet y proporcionados los datos solicitados. No tarda mucho en hacerse efectivo el cambio, en una semana puede estar realizado, basta con indicar nombre y apellido, dirección y el CUPS que identifica el punto de suministro de la vivienda y que está indicado en cada factura, finalmente la potencia, la tarifa, el modo de pago (clásico o sin sorpresas) y la cuenta bancaria para domiciliar los pagos.</p>
<p>Mucha gente se queja de los abusos que cometen las tradicionales compañías eléctricas y del oligopolio que forman en España además de algunas de ellas ser productores de energía nuclear o con carbón, si esas mismas personas que se quejan y muchas otras se cambiasen a una compañía como Holaluz, Pepeenergy u otras similares las cosas cambiarían antes, bueno ya están cambiando. Como consumidores tenemos la capacidad de elegir ser clientes de aquellas compañías no solo que ofrezcan buen trato y buen precio sino que como en este caso sea con energía 100% renovable.</p>
<p>En el blog de Holaluz escriben artículos muy buenos sobre el funcionamiento de todo lo que rodea mercado eléctrico o de sus tarifas que son de interés para cualquier usuario ya sea cliente de ellos o no y esté un poco atraído en información sobre este tema, leyendo sus artículos es posible aclarar muchas dudas junto con la sección de <em>Preguntas frecuentes</em>.</p>
<ul>
<li><a href="https://blog.holaluz.com">Blog Holaluz</a></li>
<li><a href="https://www.holaluz.com/preguntas/">Preguntas frecuentes</a></li>
</ul>
<p>Finalmente, a modo de promoción ofrecen un descuento si al hacer la contratación te lo ha recomendado un amigo. Al hacer la contratación introduciendo el código del amigo Holaluz dan un descuento de 20€ a cada uno una vez se completa el alta. Si tienes un amigo al que aprecias con Holaluz pídele su código e introdúcelo al darte de alta y hazle un regalo y a ti otro, si no tienes un conocido que te ofrezca un código puedes usar el mío si este artículo te ha resultado de interés, mi código de amigo o código de Holaluz es <strong>3R9L6I</strong>, de forma temporal hasta finales de enero del 2020 con el código <strong>COPS-3R9L6I</strong> el descuento será de 30€ en vez de 20€.</p>
<div class="media">
<figure>
<p><img src="url=resource:contratacion-holaluz-paso-1.png,size=300x200,gallery=true" alt="" title="Contratación Holaluz" /></p>
<figcaption>Contratación Holaluz</figcaption>
</figure>
</div>
]]>
        </content>
        
            
                <category term="desempaquetado"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/11/comparando-la-factura-entre-caldera-de-gas-y-termo-electrico/</id>
        <title>Comparando la factura entre caldera de gas y termo eléctrico</title>        
        <updated>2017-11-05T23:00:00+01:00</updated>
        <published>2017-11-05T09:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/11/comparando-la-factura-entre-caldera-de-gas-y-termo-electrico/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
          <![CDATA[<p><strong>Cambié una caldera por un termo eléctrico. Haciendo unas estimaciones previas pensaba que si pero ahora que tengo una factura con el importe completo teniendo la cadera de gas y habiendo llegado otra con un periodo completo con termo eléctrico puedo comparar y comprobar cuales son los importes reales de cada una de las opciones, ¿el importe que pago en la factura con el termo eléctrico será menor?.</strong></p>]]>
        
        <![CDATA[<p>Hace unos meses <a href="https://picodotdev.github.io/blog-bitix/2017/08/sustituir-caldera-de-gas-por-un-termo-electrico-fleck-duo-7-50/index-amp.html">sustituí la caldera de gas por un termo eléctrico</a> dado que me tocaba hacer la versión de la instalación del gas y de la caldera, dos revisiones independientes que tiene un coste de unos 60€ y 90€ respectivamente que hay que realizar obligatoriamente por normativa cada 5 y 2 años y en las que hay que estar presente para permitir el acceso a la vivienda al técnico para que pueda hacer la inspección. Dado que en invierno no usaba la calefacción, me basta con ponerme más ropa o usar alguna manta, al hacer la sustitución no me importaba perder esa característica. Por otro lado si me tocase sustituir la caldera por otra la salida de humos debería ir a la calle en vez de la chimenea del edificio con lo que habría que picar la fechada para hacer el agujero del tubo para la salida de humos. Además, las calderas de gas son mucho más caras, sobre unos 900€ una de gama baja, mucho más caras que los termos más caros, un termo de gama alta de lo más caro está sobre unos 300€ de 50 litros, casi tres veces menos que una caldera.</p>
<div class="media">
<figure>
<p><img src="url=resource:caldera.jpg,size=300x200,gallery=true" alt="" title="Caldera de gas" />
<img src="url=resource:termo.jpg,size=300x200,gallery=true" alt="" title="Termo eléctrico" /></p>
<figcaption>Caldera de gas y termo eléctrico</figcaption>
</figure>
</div>
<p>He estado esperando a la factura en la que venga un periodo completo con el termo para comparar con un periodo con caldera estando en la misma compañía. Lógicamente el termo al ser eléctrico me subirá el consumo de luz pero a cambio no tendré que pagar el coste fijo de la disponibilidad del gas y su alquiler del contador. En estos periodos de tiempo hay que tener en cuenta que no he usado la caldera ni para la ducha ni para la calefacción y con el termo si lo he usado para el agua caliente de la ducha, también es que en la factura con el termo el precio del kWh es un poco más caro por lo que la diferencia de ahorro serían aún mayor en igualdad de condiciones.</p>
<p>En las factura con la caldera de gas en un periodo de tiempo de 63 días para el gas y 60 para la electricidad se aprecia que el coste total fue de 47,37€ IVA incuído divididos en 10,62€ para el gas y 28,53€ para la luz o electricidad con un consumo de 84 kWh de electricidad, con una potencia contratada de 2,2 kW y un precio 0,126215 €/kWh en la factura de junio-julio del 2017. Por el contrario con el termo eléctrico en un periodo de tiempo de 61 días el importe total de la factura fue de 43,51€ (con IVA) con un consumo de 132 kWh a un coste de 0,133115 €/kWh. En la factura con el termo el importe de la electricidad es mayor por ser lógicamente el consumo de electricidad mayor pero el coste de la factura total menor por no tener un coste fijo de disponibilidad de gas y alquiler de su contador, el aumento en consumo de electricidad es menor que los 10,62 € de menos del gas. De potencia de electricidad tengo contratada una de las más bajas solo de 2,2kw y no he tenido problema de que salte el diferencial, el termo tiene un consumo de 1500W máximo en pleno funcionamiento aunque por el modelo que puse que tiene dos depósitos y dos resistencias solo usa una de ellas aún después de ducharme con lo que en realidad consumirán encendido unos 750W, margen suficiente hasta los 2,2 kW para usar sin problema otros electrodomésticos al mismo tiempo.</p>
<p>El gas es más eficiente y más barato que usar electricidad para transformar energía en calor para el agua caliente de agua sanitaria o calefacción pero los costes del servicio hace que si no consumes una cantidad suficiente no sea más barato que un termo eléctrico como es mi caso.</p>
<div class="media">
<figure>
<p><img src="url=resource:factura-caldera.png,size=300x200,gallery=true" alt="" title="Factura con caldera de gas" />
<img src="url=resource:factura-termo.png,size=300x200,gallery=true" alt="" title="factura con termo eléctrico" /></p>
<figcaption>Factura con caldera de gas y termo eléctrico</figcaption>
</figure>
</div>
<p>Aproximadamente una diferencia de 4€ cada dos meses o de 2€ cada mes y teniendo en cuenta el coste mensual de las revisiones de la instalación y de la caldera (aunque se pague integro en el momento de hacer la revisión) una diferencia de 6,75€ al mes (revisión caldera: 90/24 meses = 3,75€/mes y revisión instalación gas: 60/60 = 1€/mes, total revisiones: 4,75€/mes). Con esa diferencia de costes en unos 3-4 años ya me habrá salido rentable haber hecho la sustitución de la caldera de gas por el termo eléctrico que me costó 315€ sin ser el sitio donde lo compré el más barato. Es un termo de gama alta de los más caros que había en el mercado, pero los hay mucho más baratos, por 90€ ya se encuentran algunos de 30 y 50 litros aunque posiblemente no tan eficientes energéticamente.</p>
<p>3-4 años no es un periodo corto de tiempo para rentabilizar la sustitución pero tampoco largo para un servicio continuo y de esencial contratación. Si tuviese que sustituir la caldera de gas por otra la rentabilidad sería inmediata. Otra de las motivaciones que tenía para dejar de usar el gas es que la electricidad es un elemento menos peligroso y cambiarme a una compañía que ofrezca energía eléctrica de fuentes 100% renovables y que además tienen unos precios de kw/h algo mejores que los que estoy pagando ahora de 0,133115€ kw/h.</p>
<p>Aunque como se ve con estas facturas el importe con el termo y solo electricidad es menor si me costase ligeramente algo más también estaría contento por poder usar energía eléctrica de fuentes 100% renovables. Y ahora que tengo dos facturas en las que he comparado el importe de las facturas entre tener caldera y termo el siguiente paso es <a href="https://picodotdev.github.io/blog-bitix/2017/11/me-cambio-a-la-electrica-holaluz/index-amp.html">cambiar a una compañía como Holaluz</a> o Pepenergy que se que tienen el precio de la energía a 0,123 €/kWh y además con energía 100% verde. Una diferencia de precio entre 0,133115 €/kWh y 0,123 €/kW no parece mucho, un céntimo, pero si lo multiplicas por los kW consumidos que en mi caso son 132 la diferencia es de 1,33518 € cada dos meses, de 0,66759 € cada mes o 8,01108 € al año.</p>
<p>No parece mucho pero es todos los meses, el ahorro por el cambio de caldera a termo en total son unos 6,75€ al mes, que al año son unos 81€, ya no son tan poco.</p>
]]>
        </content>
        
            
                <category term="desempaquetado"/>
            
        
    </entry>
    
</feed>
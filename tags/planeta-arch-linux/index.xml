<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://picodotdev.github.io/blog-bitix/tags/planeta-arch-linux/</id>
    <title type="text">Blog Bitix</title>
    <subtitle>Recent content on Blog Bitix</subtitle>
    <updated>2015-09-20T13:00:00+02:00</updated>
    <author><name>pico.dev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix//assets/images/custom/logotipos/hugo.png</icon>
    <logo>https://picodotdev.github.io/blog-bitix//assets/images/custom/logotipos/hugo.png</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/09/grabar-y-compartir-video-de-la-terminal-con-asciinema/</id>
        <title>Grabar y compartir vídeo de la terminal con Asciinema</title>        
        <updated>2015-11-11T19:00:00+02:00</updated>
        <published>2015-09-20T13:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2015/09/grabar-y-compartir-video-de-la-terminal-con-asciinema/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Asciinema es una herramienta que nos permite grabar un vídeo de texto con la salida de la terminal. El vídeo de texto es mucho mejor que una foto estática de la salida en un determinado punto o un vídeo de imágenes del que no podemos seleccionar y copiar su texto.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/asciinema.png&#34; class=&#34;right&#34; alt=&#34;Asciinema&#34; title=&#34;Asciinema&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Si queremos compartir las acciones en una terminal y su salida tenemos varias opciones, la más simple es ejecutar el comando y copiar la salida en un archivo de texto, correo electrónico o artículo de una bitácora. Sin embargo, con esta opción solo tenemos el contenido final del comando y a veces en donde se usan varios comandos o que limpian la terminal (como por ejemplo con ssh) es difícil seguir en esa foto final la salida que se ha ido produciendo en la terminal. Otra opción es crear un vídeo tradicional de imágenes que podamos reproducir con &lt;a href=&#34;http://www.videolan.org/vlc/&#34;&gt;VLC&lt;/a&gt; para ver la evolución de la salida tal y como se produce, sin embargo, en esta opción perdemos el poder copiar y pegar texto, es habitual que tengamos que parar el vídeo y escribir el comando o la salida que vemos en el vídeo, esto es lento y propenso a errores ya que podemos confundirnos varias veces al teclear lo que vemos en el vídeo. Otra opción mejor es usar &lt;a href=&#34;https://asciinema.org/&#34;&gt;Asciinema&lt;/a&gt; que captura el texto de la terminal y crea un vídeo de texto que representa la sesión de terminal que hemos tenido.&lt;/p&gt;

&lt;p&gt;Asciinema es como un vídeo pero de texto que además podemos compartir para que otras personas lo vean y que podemos incrustar en páginas web como artículos de bitácoras. Además permite seleccionar y copiar texto y seguro que necesita mucho menos ancho de banda que un vídeo de &lt;a href=&#34;https://www.youtube.com/&#34;&gt;YouTube&lt;/a&gt;. Empezar a crear vídeos de texto es tan sencillo como &lt;a href=&#34;https://github.com/asciinema/asciinema/releases&#34;&gt;descargar el binario de Asciinema&lt;/a&gt; o &lt;a href=&#34;https://asciinema.org/docs/installation&#34;&gt;instalarlo con el gestor de paquetes&lt;/a&gt; de la distribución GNU/Linux que usemos, también se puede usar en &lt;a href=&#34;http://www.apple.com/osx/&#34;&gt;Mac OS&lt;/a&gt; y &lt;a href=&#34;https://www.freebsd.org/es/&#34;&gt;FreeBSD&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Una vez instalado, podemos iniciar una grabación de la terminal, esto creará un archivo &lt;em&gt;video.asciinema&lt;/em&gt;. Podremos parar la grabación con la combinación de teclas &lt;kbd&gt;ctrl+d&lt;/kbd&gt; o tecleando el comando &lt;code&gt;exit&lt;/code&gt;:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/8d6efae03a58b1085cbc.js?file=asciinema-rec.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/8d6efae03a58b1085cbc/raw/asciinema-rec.sh&#34;&gt;asciinema-rec.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Reproducir el vídeo creado con:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/8d6efae03a58b1085cbc.js?file=asciinema-play.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/8d6efae03a58b1085cbc/raw/asciinema-play.sh&#34;&gt;asciinema-play.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Y compartirlo con:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/8d6efae03a58b1085cbc.js?file=asciinema-upload.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/8d6efae03a58b1085cbc/raw/asciinema-upload.sh&#34;&gt;asciinema-upload.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Para compartir los vídeos solo necesitaremos una cuenta de correo, no necesitaremos una clave ya que la autenticación en Asciinema se hace mediante un enlace que se nos envían a nuestra cuenta de correo cada vez que queremos acceder a nuestra cuenta. Si instalamos Asciinema por segunda vez o en otro ordenador y queremos asociarlo con la cuenta que ya tenemos podemos hacerlo con:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/8d6efae03a58b1085cbc.js?file=asciinema-auth.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/8d6efae03a58b1085cbc/raw/asciinema-auth.sh&#34;&gt;asciinema-auth.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;En la &lt;a href=&#34;https://asciinema.org/docs&#34;&gt;documentación de Asciinema&lt;/a&gt; están las opciones completas que podemos usar por ejemplo para añadir un título al vídeo o para ejecutar un comando directamente. Una vez que tenemos subido el vídeo a la web de Asciinema podemos compartirlo ya sea enviando en enlace del vídeo o con un reproductor embebido en una página web o artículo de un &lt;em&gt;blog&lt;/em&gt;. Para esto último deberemos incluir un &lt;em&gt;script&lt;/em&gt; de Javascript para el reproductor de la siguiente forma, con el atributo id indicamos el vídeo que queremos reproducir, en la &lt;a href=&#34;https://asciinema.org/docs/embedding&#34;&gt;documentación de las opciones para embeber los vídeos&lt;/a&gt; podemos ver las opciones completas que podemos emplear:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/8d6efae03a58b1085cbc.js?file=asciinema-embed.html&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/8d6efae03a58b1085cbc/raw/asciinema-embed.html&#34;&gt;asciinema-embed.html&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Y este es el resultado de un vídeo, en este caso el vídeo introductorio de Asciinema:&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
        &lt;script type=&#34;text/javascript&#34; src=&#34;https://asciinema.org/a/22124.js&#34; id=&#34;asciicast-22124&#34; async&gt;&lt;/script&gt;
        &lt;noscript&gt;&lt;a href=&#34;https://asciinema.org/a/22124&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/22124.png&#34; width=&#34;734&#34;/&gt;&lt;/a&gt;&lt;/noscript&gt;
        
        &lt;figcaption&gt;Vídeo introducción Asciinema&lt;/figcaption&gt;
        
    &lt;/figure&gt;
&lt;/div&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://asciinema.org/&#34;&gt;Asciinema&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://asciinema.org/docs&#34;&gt;Documentación de Asciinema&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://asciinema.org/docs/embedding&#34;&gt;Documentación para embeber vídeos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-arch-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/07/cambiar-la-ruta-raiz-del-entorno-de-docker/</id>
        <title>Cambiar la ruta raíz del entorno de Docker</title>        
        <updated>2015-11-14T12:00:00+02:00</updated>
        <published>2015-07-24T20:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2015/07/cambiar-la-ruta-raiz-del-entorno-de-docker/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Cambiando la ruta raíz del entorno de ejecución de docker, dónde guarda las imágenes de los contenedores, los datos de los contenedores y otros metadatos, podemos almacenar esta información en un disco duro externo o memoria USB.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/docker.png&#34; class=&#34;right&#34; alt=&#34;Docker&#34; title=&#34;Docker&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Por defecto el directorio donde se guardan las imágenes y los contenedores junto con otros metadatos de &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; es &lt;em&gt;/var/lib/docker&lt;/em&gt;. En mi caso hace un tiempo me compre un &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/03/desempaquetado-y-analisis-samsung-840-evo-ssd-250-gb/&#34;&gt;disco de estado sólido Samsung 840 EVO de 250 GiB&lt;/a&gt; y comenté en el artículo del anterior enlace. Aunque probablemente un disco SSD sea suficientemente fiable como para que antes de que falle cambiémos de ordenador porque ya es antiguo, yo trato de evitar hacer muchas escrituras al disco. Al trabajar con Docker ya sea descargando imágenes, &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/&#34;&gt;construyendo imágenes propias con archivos Dockerfile&lt;/a&gt; y al arrancar contenedores cuyos procesos escriben en disco prefiero externalizar esas escrituras en una unidad USB ya sea un pendrive o un disco duro. En este artículo comentaré como modificar Docker para que las imágenes y los contenedores estén almacenados en una memoria USB o en otra localización de la por defecto.&lt;/p&gt;

&lt;p&gt;En Arch Linux el proceso de docker se arranca con un servicio de systemd:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/1dd776471f97f0c383a9.js?file=docker-start.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/1dd776471f97f0c383a9/raw/docker-start.sh&#34;&gt;docker-start.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;En la definición del servicio de docker se establecen los parámetros de inicio del demonio de docker y deberemos cambiarlo para cambiar la localización de las imágenes y contenedores. En la información de ayuda del comando de docker podemos ver que si queremos cambiar la localización por defecto de las imágenes y contenedores de docker debemos emplear la opción &lt;em&gt;-g &amp;ldquo;/var/lib/docker&amp;rdquo;&lt;/em&gt;.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/1dd776471f97f0c383a9.js?file=docker-help.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/1dd776471f97f0c383a9/raw/docker-help.sh&#34;&gt;docker-help.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;En Arch Linux el servicio de systemd de docker se guarda en &lt;em&gt;/usr/lib/systemd/system/docker.service&lt;/em&gt;. Modificando el parámetro &lt;em&gt;ExecStart&lt;/em&gt; de la sección &lt;em&gt;[Service]&lt;/em&gt; para añadir el parámetro &lt;em&gt;-g&lt;/em&gt; nos quedaría algo como:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/1dd776471f97f0c383a9.js?file=docker.service&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/1dd776471f97f0c383a9/raw/docker.service&#34;&gt;docker.service&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Iniciando ahora el servicio de Docker veremos que en el directorio que hayamos elegido se crean los metadatos y si hacemos un &lt;em&gt;pull&lt;/em&gt; de una imagen se guardará en esta localización.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/91/docker-root.png&#34; title=&#34;Directorio raíz de docker&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/91/docker-root.png&#34;&gt;&lt;/a&gt;
        &lt;figcaption&gt;Directorio raíz de docker&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/div&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
  Cada vez que se actualice el paquete de docker el archivo del servicio de systemd se sobreescribirá y perderemos la configuración, de modo que en cada actualización de docker deberemos realizar de nuevo la modificación.
&lt;/div&gt;

&lt;p&gt;Este artículo es uno de otros que he publicado, en otros artículos he escrito sobre otras cosas relacionadas con docker.&lt;/p&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-arch-linux"/>
            
                <category term="planeta-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/07/usar-docker-con-docker-machine-en-linux-windows-o-mac/</id>
        <title>Usar docker con Docker Machine en Linux, Windows o Mac</title>        
        <updated>2015-07-18T21:00:00+02:00</updated>
        <published>2015-07-18T12:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2015/07/usar-docker-con-docker-machine-en-linux-windows-o-mac/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Aunque no usemos Linux podemos hacer uso de docker a través de una máquina virtual de VirtualBox y con Docker Machine. Docker Machine permite crear un sistema con la misión de albergar contenedores de docker, puede ser en VirtualBox pero también en Amazon EC2 o Digital Ocean además de otras muchas opciones.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/docker.png&#34; class=&#34;right&#34; alt=&#34;Docker&#34; title=&#34;Docker&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; ha dejado de ser únicamente una tecnología de contenedores formando un ecosistema alrededor de docker más completo, &lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;Docker Compose&lt;/a&gt; que permite &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/&#34;&gt;definir un grupo de contenedores en un archivo&lt;/a&gt;, por supuesto parte importante de este ecosistema es &lt;a href=&#34;https://registry.hub.docker.com/&#34;&gt;Docker Hub&lt;/a&gt; para &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/07/crear-y-usar-un-repositorio-en-docker-hub/&#34;&gt;compartir imágenes de contenedores&lt;/a&gt; y &lt;a href=&#34;https://docs.docker.com/swarm/&#34;&gt;Docker Swarm&lt;/a&gt; que permite formar un &lt;em&gt;cluster&lt;/em&gt; de máquinas. En este artículo comentaré cómo usar &lt;a href=&#34;https://docs.docker.com/machine/&#34;&gt;Docker Machine&lt;/a&gt; y dejaré para un futuro &lt;a href=&#34;https://docs.docker.com/swarm/&#34;&gt;Docker Swarm&lt;/a&gt; (ya que por el momento las pruebas que he hecho no han sido exitosas).&lt;/p&gt;

&lt;p&gt;Antes de nada decir que tanto Docker Machine en el momento de escribir este artículo están en las fases iniciales de desarrollo y pueden cambiar significativamente antes de lanzar una versión 1.0, ahora Docker Machine está en las version 0.3.0. La combinación de Docker Machine y Docker Swarm en algunos puntos son parecidos a los que se ofrecen en &lt;a href=&#34;https://coreos.com/&#34;&gt;CoreOS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Si has usado &lt;a href=&#34;https://www.vagrantup.com/&#34;&gt;Vagrant&lt;/a&gt; te resultará Docker Machine muy similar ya que permite crear máquinas virtuales en diferentes proveedores en una máquina anfitrión con &lt;a href=&#34;http://virtualbox.org/&#34;&gt;VirtualBox&lt;/a&gt; hasta &lt;a href=&#34;http://aws.amazon.com/es/ec2/&#34;&gt;Amazon EC2&lt;/a&gt; o &lt;a href=&#34;https://www.digitalocean.com/&#34;&gt;Digital Ocean&lt;/a&gt;, la &lt;a href=&#34;https://docs.docker.com/machine/#drivers&#34;&gt;lista de controladores soportados&lt;/a&gt; es bastante amplia. Estas máquinas que creamos con Docker Machine están destinadas como único objetivo a albergar contenedores docker usando el sistema operativo &lt;a href=&#34;http://boot2docker.io/&#34;&gt;boot2docker&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Para usar Docker Machine debemos &lt;a href=&#34;https://github.com/docker/machine/releases&#34;&gt;descargar el binario&lt;/a&gt;, darle permisos de ejecución y si queremos añadirlo a la variable &lt;em&gt;PATH&lt;/em&gt; del sistema.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/691729e2d27cade948ea.js?file=docker-machine-version.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/691729e2d27cade948ea/raw/docker-machine-version.sh&#34;&gt;docker-machine-version.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Con los siguientes comandos podemos crear una máquina virtual para los contenedores docker, listar las máquinas virtuales creadas, hacer SSH a ella, ejecutar un contenedor en ella, parala y eliminar una máquina virtual además de obtener la &lt;em&gt;IP&lt;/em&gt; asignada.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/691729e2d27cade948ea.js?file=docker-machine-create.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/691729e2d27cade948ea/raw/docker-machine-create.sh&#34;&gt;docker-machine-create.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Estableciendo las variables de entorno de la máquina virtual podemos usar el comando docker como si de la máquina anfitrión fuera, todos los comandos de docker que lancemos se ejecutarán contra el contenedor docker de la máquina virtual. En el siguiente caso se ejecuta el contenedor de &lt;em&gt;busybox&lt;/em&gt; en la máquina virtual &lt;em&gt;dev&lt;/em&gt;. Con &lt;em&gt;&amp;ndash;unset&lt;/em&gt; podemos reiniciar la configuración a la máquina anfitrión.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/691729e2d27cade948ea.js?file=docker-machine-run.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/691729e2d27cade948ea/raw/docker-machine-run.sh&#34;&gt;docker-machine-run.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Podemos detener, volver a iniciar, hacer SSH y eliminar la máquina virtual con:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/691729e2d27cade948ea.js?file=docker-machine-manage.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/691729e2d27cade948ea/raw/docker-machine-manage.sh&#34;&gt;docker-machine-manage.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
        &lt;script type=&#34;text/javascript&#34; src=&#34;https://asciinema.org/a/23600.js&#34; id=&#34;asciicast-23600&#34; async&gt;&lt;/script&gt;
        &lt;noscript&gt;&lt;a href=&#34;https://asciinema.org/a/23600&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/23600.png&#34; width=&#34;734&#34;/&gt;&lt;/a&gt;&lt;/noscript&gt;
        
        &lt;figcaption&gt;Comandos y uso de Docker Machine en una máquina virtual&lt;/figcaption&gt;
        
    &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;El directorio por defecto donde se guardarán los archivos de las máquinas virtuales es &lt;em&gt;~/.docker/machine&lt;/em&gt;, si queremos cambiarlo podemos utilizar el parámetro &lt;em&gt;&amp;ndash;storage-path&lt;/em&gt; en cada uno de los comandos anteriores de la siguiente forma, el orden de los parámetros es importante:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/691729e2d27cade948ea.js?file=docker-machine-storage-path.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/691729e2d27cade948ea/raw/docker-machine-storage-path.sh&#34;&gt;docker-machine-storage-path.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;En el administrador de VirtualBox veremos que se ha creado la máquina virtual &lt;em&gt;dev&lt;/em&gt; además de poder cambiar la configuración de memoria y otros parámetros de la máquina virtual.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/89/virtualbox.png&#34; title=&#34;Máquina de Docker Machine ne VirtualBox&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/89/virtualbox-thumb.png&#34;&gt;&lt;/a&gt;
        &lt;figcaption&gt;Máquina de Docker Machine en VirtualBox&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Dado que los contenedores se ejecutan en una máquina virtual de VirtualBox y VirtualBox está disponible en Windows y Mac OS además del binario de Docker Machine para estas plataformas podemos usar docker en cualquiera de estos. Aunque no sea de forma nativa como en Linux para un entorno de desarrollo donde las personas trabajan con cualquiera de estos sistemas operativos puede sernos de utilidad.&lt;/p&gt;

&lt;p&gt;Como nota final diré que después de crear una máquina virtual las siguientes veces al crear una nueva Docker Machine se me quedaba indefinidamente en el mensaje &lt;em&gt;Starting VM&amp;hellip;&lt;/em&gt;, algún problema con Docker Machine o VirtualBox que en una futura versión podría solucionarse, la única forma de resolverlo que se es reiniciando el ordenador pero seguro que hay alguna mejor.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/machine/&#34;&gt;Docker Machine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-arch-linux"/>
            
                <category term="planeta-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/07/crear-y-usar-un-repositorio-en-docker-hub/</id>
        <title>Crear y usar un repositorio en Docker Hub</title>        
        <updated>2015-07-11T01:00:00+02:00</updated>
        <published>2015-07-10T20:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2015/07/crear-y-usar-un-repositorio-en-docker-hub/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;¿Por qué se habla tanto de Docker y despierta tanto interes si la tecnología ya existía desde hace tiempo tanto en otros sistemas operativos como en Linux? Uno de los éxitos que ha contribuido a ellos es Docker Hub, un repositorio de imágenes en el que cualquiera puede contribuir con las suyas. Esto hace que pueda encontrarse cualquier herramienta de las populares y empezar a usarlas en muy pocos minutos.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/docker.png&#34; class=&#34;right&#34; alt=&#34;Docker&#34; title=&#34;Docker&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Probablemente uno de los éxitos de Docker más que la propia tecnología de contenedores sea &lt;a href=&#34;https://registry.hub.docker.com/&#34;&gt;Docker Hub&lt;/a&gt; que permite a los usuarios compartir las imágenes construidas, se podría decir que es el &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; de los contenedores docker y quizá por ello el paralelismo en el nombre entre ambos. Docker Hub permite subir imágenes o usar las imágenes oficiales de &lt;a href=&#34;http://www.postgresql.org/&#34;&gt;postgresql&lt;/a&gt;, &lt;a href=&#34;http://redis.io/&#34;&gt;redis&lt;/a&gt;, &lt;a href=&#34;http://www.mysql.com/&#34;&gt;mysql&lt;/a&gt;, &lt;a href=&#34;http://www.ubuntu.com/&#34;&gt;ubuntu&lt;/a&gt;, &lt;a href=&#34;https://www.rabbitmq.com/&#34;&gt;rabbitmq&lt;/a&gt;, &amp;hellip; y otra &lt;a href=&#34;https://registry.hub.docker.com/&#34;&gt;multitud de proyectos&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;El &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/&#34;&gt;archivo Dockerfile con el que construimos una imagen&lt;/a&gt; podemos hospedarlo en un repositorio de GitHub y que Docker Hub lo obtenga para construir la imagen. Docker Hub ofrece repositorios públicos en los que colocar las imágenes que cualquier otro usuario puede acceder y usar o repositorios privados con cierto coste según el número de repositorios privados, el primer repositorio privado es gratuito.&lt;/p&gt;

&lt;h3 id=&#34;otros-artículos-sobre-docker&#34;&gt;Otros artículos sobre Docker&lt;/h3&gt;

&lt;p&gt;Este artículo forma parte de otros artículos sobre Docker que ya he escrito si quieres empezar por el principio puedes leer primero la &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/&#34;&gt;Introducción y características sobre Docker&lt;/a&gt;, el &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/11/inicio-basico-de-docker/&#34;&gt;Inicio básico de Docker&lt;/a&gt;, &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/&#34;&gt;Como crear una imagen con un Dockerfile&lt;/a&gt; o &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/07/aplicaciones-multicontenedor-con-docker-compose/&#34;&gt;Como usar docker con Docker Compose&lt;/a&gt;. En siguientes artículos hablaré de otras herramientas como Docker Machine y Docker Swarm.&lt;/p&gt;

&lt;p&gt;A continuación explicaré como crear un repositorio en Docker Hub que obtenga los Dockerfile de un repositorio de GitHub y construya las imágenes de los Dockerfile de forma automática cuando haya cambios en los archivos dockerfile de GitHub.&lt;/p&gt;

&lt;h3 id=&#34;crear-una-cuenta-en-docker-hub&#34;&gt;Crear una cuenta en Docker Hub&lt;/h3&gt;

&lt;p&gt;Primero necesitaremos crear una cuenta en Docker Hub. El nombre de usuario determinará el nombre de las imágenes, siendo mi nombre de usuario &lt;em&gt;picodotdev&lt;/em&gt; al usar las imágenes debería usar:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/b8ce1632e34bf0a20f59.js?file=docker-run.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/b8ce1632e34bf0a20f59/raw/docker-run.sh&#34;&gt;docker-run.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/88/dockerhub.png&#34; title=&#34;Docker Hub&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/88/dockerhub-thumb.png&#34;&gt;&lt;/a&gt;
        &lt;figcaption&gt;Docker Hub&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;subir-el-archivo-dockerfile-a-un-repositorio-de-github&#34;&gt;Subir el archivo Dockerfile a un repositorio de GitHub&lt;/h3&gt;

&lt;p&gt;Posteriormente deberemos crear un repositorio en GitHub para alojar los archivos Dockerfile que usará Docker Hub para construir las imágenes de Docker. En el ejemplo usaré el &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/DockerHub&#34;&gt;repositorio blog-ejemplos&lt;/a&gt; y dentro de este los dockerfiles los he &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/DockerHub/postgres/9.4&#34;&gt;ubicado dentro de una carpeta&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Una vez que tenemos el repositorio de GitHub subimos un &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/blob/master/DockerHub/postgres/9.4/Dockerfile&#34;&gt;Dockerfile para el ejemplo&lt;/a&gt;, usaré el proporcionado de forma &lt;a href=&#34;https://registry.hub.docker.com/_/postgres/&#34;&gt;oficial de posgresql&lt;/a&gt;, y creamos en Docker Hub una &lt;em&gt;build&lt;/em&gt; automatizada, se nos solicitará permisos en la cuenta de GitHub para que Docker Hub pueda acceder a nuestros repositorios.&lt;/p&gt;

&lt;h3 id=&#34;crear-el-repositorio-en-dockerhub-y-la-build-automática&#34;&gt;Crear el repositorio en DockerHub y la &lt;em&gt;build&lt;/em&gt; automática&lt;/h3&gt;

&lt;p&gt;En la creación del repositorio en Docker Hub con &lt;em&gt;build&lt;/em&gt; automatizada seleccionamos el repositorio de GitHub que contiene los repositorios y el archivo DockerFile para el que queremos hacer la build automatizada. Le asignamos un nombre al repositorio y un &lt;em&gt;tag&lt;/em&gt; a la &lt;em&gt;build&lt;/em&gt; que podremos usar al hacer el &lt;em&gt;pull&lt;/em&gt; de la imagen.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/88/dockerhub-automated-build.png&#34; title=&#34;Docker Hub&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/88/dockerhub-automated-build-thumb.png&#34;&gt;&lt;/a&gt;
        &lt;figcaption&gt;Build automatizada de Docker Hub&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Docker Hub se encargará de obtener el archivo Dockerfile y construir la imagen, en el proceso podremos ver las trazas generadas.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/userguide/dockerrepos/&#34;&gt;Get started with Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.docker.com/docker-hub/builds/#the-dockerfile-and-automated-builds&#34;&gt;The Dockerfile and Automated Builds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-arch-linux"/>
            
                <category term="planeta-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/07/aplicaciones-multicontenedor-con-docker-compose/</id>
        <title>Aplicaciones multicontenedor con Docker Compose</title>        
        <updated>2015-07-18T21:00:00+02:00</updated>
        <published>2015-07-03T16:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2015/07/aplicaciones-multicontenedor-con-docker-compose/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Continuando la serie de artículos sobre Docker, otra de las herramientas disponibles en el ecosistema y que nos facilitará enormemente el administrar aplicaciones compuestas por varios contenedores relacionados entre sí es Docker Compose. Definiendo en un archivo los contenedores que forman parte de una aplicación podemos iniciarlos, pararlos, eliminarlos o ver su estado como si de una unidad se tratara.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/docker.png&#34; class=&#34;right&#34; alt=&#34;Docker&#34; title=&#34;Docker&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Una vez que ya sabemos que nos puede proporcionar una de las herramientas de la que más se está hablando con la &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/&#34;&gt;introducción a docker&lt;/a&gt;, conocemos &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/11/inicio-basico-de-docker/&#34;&gt;como empezar a usar docker&lt;/a&gt; y sabemos &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/&#34;&gt;cómo crear nuestras propias imágenes de docker&lt;/a&gt; para los propósitos específicos que necesitemos nos resultará interesante algunas de las nuevas herramientas que proporciona docker. El ecosistema de docker ya no solo se compone del entorno de ejecución de los contenedores, explicadas de forma básica son:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;: el sistema de contenedores (&lt;em&gt;runtime&lt;/em&gt;, imágenes, &amp;hellip;).&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://registry.hub.docker.com/&#34;&gt;Docker Hub&lt;/a&gt;: el repositorio de imágenes que las diferentes herramientas de forma oficial o a través de usuarios construyen y comparten imágenes que cualquiera puede usar.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;Docker Compose&lt;/a&gt;: permite describir un conjunto de contenedores que se relacionan entre ellos.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/machine/&#34;&gt;Docker Machine&lt;/a&gt;: permite construir máquinas virtuales para alojar contenedores. Similar a lo que hace &lt;a href=&#34;https://www.vagrantup.com/&#34;&gt;Vagrant&lt;/a&gt;, al igual que el anterior también permite construir máquinas que ejecuten contenedores con &lt;a href=&#34;http://virtualbox.org/&#34;&gt;VirtualBox&lt;/a&gt; o diferentes sistemas de computación en en la nube como &lt;a href=&#34;http://aws.amazon.com/es/ec2/&#34;&gt;Amazon EC2&lt;/a&gt;, &lt;a href=&#34;https://www.digitalocean.com/&#34;&gt;Digital Ocean&lt;/a&gt; u otros. Docker Machine puede ser la forma de usar docker en Windows o Mac OS hasta que funcione de forma nativa como en GNU/Linux.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/swarm/&#34;&gt;Docker Swarm&lt;/a&gt;: permite construir un &lt;em&gt;cluster&lt;/em&gt; de máquinas al que se puede enviar contenedores docker para su ejecución.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Continuando la &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/docker/&#34;&gt;serie de artículos sobre docker&lt;/a&gt; que escribí hace unos meses escribiré sobre cada una de estas nuevas herramientas, empezando en este artículo con Docker Compose en el que explicaré de qué forma nos puede servir, como instalarlo y el descriptor de contenedores con un ejemplo.&lt;/p&gt;

&lt;h3 id=&#34;introducción-a-docker-compose&#34;&gt;Introducción a Docker Compose&lt;/h3&gt;

&lt;p&gt;Las aplicaciones basadas en microservicios se prestan a usar múltiples contenedores cada uno con un servicio, uno puede contener la base de datos &lt;a href=&#34;http://www.postgresql.org/&#34;&gt;postgresql&lt;/a&gt;, otro una base de datos clave/valor &lt;a href=&#34;http://redis.io/&#34;&gt;redis&lt;/a&gt; o de documentos como &lt;a href=&#34;https://www.elastic.co/products/elasticsearch/&#34;&gt;elasticsearch&lt;/a&gt; para hacer búsquedas, otro un sistema de mensajería como &lt;a href=&#34;https://www.rabbitmq.com/&#34;&gt;rabbitmq&lt;/a&gt;, otro &lt;a href=&#34;http://tomcat.apache.org/&#34;&gt;tomcat&lt;/a&gt; o &lt;a href=&#34;http://wildfly.org/&#34;&gt;wildfly&lt;/a&gt; que use los anteriores y un servidor web como &lt;a href=&#34;http://nginx.org/&#34;&gt;Nginx&lt;/a&gt;. Teniendo múltiples contenedores usar el comando &lt;em&gt;docker run&lt;/em&gt; para cada uno de ellos nos resultará incómodo. En este punto entra Docker Compose permitiéndonos definir nuestra aplicación multicontenedor en un archivo con las mismas propiedades que indicaríamos con el comando &lt;em&gt;docker run&lt;/em&gt; individualmente. Con un único comando podremos iniciar todos los contenedores y en el orden que los especifiquemos.&lt;/p&gt;

&lt;p&gt;El archivo descriptor nos puede servir no solo como forma de iniciar los contenedores en un entorno de desarrollo sino como de documentación de la aplicación en la que veremos qué contenedores, imágenes, volúmenes, enlaces y demás propiedades tienen.&lt;/p&gt;

&lt;h3 id=&#34;instalar-docker-compose&#34;&gt;Instalar Docker Compose&lt;/h3&gt;

&lt;p&gt;Tenemos varias formas de instalar Docker Compose. La que más me gusta y la que recomiendo por ser sencilla es &lt;a href=&#34;https://github.com/docker/compose/releases&#34;&gt;descargar el binario de docker compose&lt;/a&gt; según nuestra plataforma GNU/Linux o Mac.  Descargando el binario de Docker Compose deberemos darle permisos de ejecución y si nos interesa colocarlo en la variable de entorno &lt;em&gt;PATH&lt;/em&gt; del sistema:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/1c2c875cc730b825647f.js?file=permisos.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/1c2c875cc730b825647f/raw/permisos.sh&#34;&gt;permisos.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/1c2c875cc730b825647f.js?file=.bashrc&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/1c2c875cc730b825647f/raw/.bashrc&#34;&gt;.bashrc&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Con el siguiente comando veremos que Docker Compose funciona correctamente y la versión del mismo.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/1c2c875cc730b825647f.js?file=docker-compose-version.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/1c2c875cc730b825647f/raw/docker-compose-version.sh&#34;&gt;docker-compose-version.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;h3 id=&#34;el-descriptor-de-contenedores&#34;&gt;El descriptor de contenedores&lt;/h3&gt;

&lt;p&gt;El descriptor de los contenedores a usar con Docker Compose es un archivo de texto con &lt;a href=&#34;http://www.yaml.org/&#34;&gt;formato yaml&lt;/a&gt; en la que especificamos los diferentes contenedores y sus propiedades, básicamente podemos indicar las mismas propiedades que indicamos arrancando los contenedores individualmente con el comando &lt;em&gt;docker run&lt;/em&gt;. En el siguiente ejemplo vemos varios contenedores, dos contenedores de datos para redis y postgresql, los contenedores de redis y postgresql y un contenedor para la aplicación usando tomcat enlazado con los contenedores de redis y postgresql definidos previamente.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/1c2c875cc730b825647f.js?file=docker-compose.yml&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/1c2c875cc730b825647f/raw/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;La imagen de los contenedores se indica con la propiedad &lt;em&gt;image&lt;/em&gt;, los contenedores de datos, &lt;em&gt;redisdb&lt;/em&gt; y &lt;em&gt;posgresqldb&lt;/em&gt;, usan la propiedad &lt;em&gt;volumes&lt;/em&gt; con los datos que guardarán y la imagen de &lt;em&gt;busybox&lt;/em&gt; (se suele usar esta para los contenedores de datos porque es muy pequeña), con la propiedad &lt;em&gt;hostname&lt;/em&gt; podemos indicar el nombre de la máquina que al usar la propiedad &lt;em&gt;link&lt;/em&gt; docker hará visible al contenedor que los usen, con &lt;em&gt;volumes_from&lt;/em&gt; podemos usar volúmenes, con &lt;em&gt;links&lt;/em&gt; enlazar contenedores y con &lt;em&gt;ports&lt;/em&gt; asociar puertos entre los contenedores y la propia máquina anfitrión, en el ejemplo he usado los puertos por defecto de cada uno de los servicios.&lt;/p&gt;

&lt;p&gt;La &lt;a href=&#34;https://docs.docker.com/compose/yml/&#34;&gt;descripción completa del formato del archivo de Docker Compose&lt;/a&gt; nos da una idea de las opciones que podemos usar, está bastante bien explicado y con ejemplos que nos resultará sencillo entender conociendo los parámetros que usamos con &lt;em&gt;docker run&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&#34;iniciar-los-contenedores-con-docker-compose&#34;&gt;Iniciar los contenedores con Docker Compose&lt;/h3&gt;

&lt;p&gt;Escrito el archivo de los contenedores y llamándolo &lt;em&gt;docker-compose.yml&lt;/em&gt; podemos iniciar los contenedores con el comando &lt;em&gt;docker-compose up&lt;/em&gt; estando en el mismo directorio de trabajo donde esté ubicado del archivo yml (y previamente habiendo iniciado el servicio de docker). Con &lt;em&gt;docker-compose ps&lt;/em&gt; podremos ver el estado de los contenedores y de cuales está compuesta la aplicación. Con la opción &lt;em&gt;&amp;ndash;help&lt;/em&gt; podemos ver la lista completa de comandos que podemos usar.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/1c2c875cc730b825647f.js?file=docker-compose-up.yml&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/1c2c875cc730b825647f/raw/docker-compose-up.yml&#34;&gt;docker-compose-up.yml&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/87/docker-compose.png&#34; title=&#34;Docker Compose&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/87/docker-compose-thumb.png&#34;&gt;&lt;/a&gt;
        &lt;figcaption&gt;Docker Compose&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;docker-compose inicia los contenedores en el orden que hemos indicado en el archivo de definición, las trazas emitidas de los servicios de los contenedores aparecerán en la terminal si iniciamos los contenedores en primer plano y con &lt;em&gt;Ctrl+C&lt;/em&gt; se pararán los contenedores. Indicando la opción &lt;em&gt;-d&lt;/em&gt; los contenedores se iniciarán en segundo plano, con &lt;em&gt;docker-compose stop&lt;/em&gt; podremos pararlos, con &lt;em&gt;docker-compose restart&lt;/em&gt; reiniciarlos, &lt;em&gt;docker-compose rm&lt;/em&gt; para eliminar completamente los contenedores y con &lt;em&gt;docker-compose logs&lt;/em&gt; veremos las trazas emitidas por los servicios que nos serán de utilizar si iniciamos los contenedores en segundo plano.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
        &lt;script type=&#34;text/javascript&#34; src=&#34;https://asciinema.org/a/23602.js&#34; id=&#34;asciicast-23602&#34; async&gt;&lt;/script&gt;
        &lt;noscript&gt;&lt;a href=&#34;https://asciinema.org/a/23602&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/23602.png&#34; width=&#34;734&#34;/&gt;&lt;/a&gt;&lt;/noscript&gt;
        
        &lt;figcaption&gt;Comandos básicos de Docker Compose&lt;/figcaption&gt;
        
    &lt;/figure&gt;
&lt;/div&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1633430235&amp;linkId=9d344246cd59cd65a952305379c2556a&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;En las siguientes semanas publicaré más artículos sobre esta serie de Docker comentando &lt;a href=&#34;https://registry.hub.docker.com/&#34;&gt;Docker Hub&lt;/a&gt;, &lt;a href=&#34;https://docs.docker.com/machine/&#34;&gt;Docker Machine&lt;/a&gt; y explicaré de qué forma nos pueden ser útiles estas otras herramientas.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/04/introduccion-a-elasticsearch/&#34;&gt;Introducción a elasticsearch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-arch-linux"/>
            
                <category term="planeta-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/04/certificado-ssl-de-empresa-wildcard-y-de-validacion-extendida/</id>
        <title>Certificado SSL, de empresa, «wildcard» y de validación extendida</title>        
        <updated>2015-04-25T12:00:00+02:00</updated>
        <published>2015-04-25T10:07:04+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2015/04/certificado-ssl-de-empresa-wildcard-y-de-validacion-extendida/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;p&gt;Usar un protocolo seguro garantiza de que los datos intercambiados entre el cliente y el servidor no son leídos ni modificados por una tercera parte además de verificar que la comunicación se está realizando entre las partes que dicen ser. Para usar un &lt;a href=&#34;http://es.wikipedia.org/wiki/Transport_Layer_Security&#34;&gt;protocolo seguro como SSL/TLS&lt;/a&gt; debemos disponer de con certificado, &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/02/generar-y-convertir-claves-y-certificados-con-openssl/&#34;&gt;con OpenSSL podemos generar y convertirlo al formato que deseemos&lt;/a&gt;, sin embargo, para que el usuario tenga garantía de que el certificado es válido este se debe estar firmado por una &lt;a href=&#34;https://es.wikipedia.org/wiki/Autoridad_de_certificaci%C3%B3n&#34;&gt;autoridad de certificación&lt;/a&gt; (CA) en la que confíe, generalmente con una de las autoridades de certificación cuyos certificados están preinstalados en el navegador web (en Firefox podemos verlos en &lt;em&gt;Preferencias&amp;gt; Avanzado&amp;gt; Certificados&amp;gt; Ver certificados&lt;/em&gt;), los certificados autofirmados son útiles para hacer pruebas pero no son válidos para los usuarios. En este artículo comentaré que tipos de certificados hay y donde podemos obtener o comprar un certificado digital firmado por una CA que sea de confianza para el usuario.&lt;/p&gt;

&lt;p&gt;Los navegadores suelen indicar que se está usando una comunicación segura cuando en la barra de direcciones se muestra un candado y se está usando el protocolo https. Además, haciendo clic en el candado se pueden ver los detalles del certificado usado por el servidor para la comunicación cifrada.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/77/certificado-validacion-dominio.png&#34; title=&#34;Certificado SSL con validación de dominio&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/77/certificado-validacion-dominio.png&#34;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/77/certificado.png&#34; title=&#34;Datos de certificado de GitHub&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/77/certificado-thumb.png&#34;&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Sin embargo, para proporcionar más seguridad y garantía de que como usuarios nos estamos comunicando con el servidor que creemos sin examinar el certificado algunos certificados permiten mostrar también en la barra de direcciones un recuadro verde con el nombre de la entidad, el recuadro verde que solemos ver también en la barra de direcciones al acceder a algunos dominios y que es proporcionado por certificados de validación extendida.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/77/certificado-validacion-extendida.png&#34; title=&#34;Certificado SSL con validación extendida&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/77/certificado-validacion-extendida.png&#34;&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Por otra parte los certificados SSL se generan para un dominio en concreto con lo que en principio se debería comprar un certificado por cada dominio en el que deseemos usar una comunicación segura. Sin embargo, para evitar comprar múltiples certificados para los diferentes dominios o subdominios podemos comprar un certificado &lt;em&gt;wildcard&lt;/em&gt; que nos servirá para los subdominios (*.ejemplo.com) o un certificado multidominio (ejemplo.com, ejemplo.net, &amp;hellip;) para como su nombre indica varios dominios. En los certificados de empresa se solicitan datos datos adicionales al adquirirlo y en los detalles del certificado aparece el nombre de la empresa (campo Organización (O) como en el caso de GitHub).&lt;/p&gt;

&lt;p&gt;Los certificados &lt;em&gt;wildcard&lt;/em&gt; y que muestran el recuadro verde son más caros pero pueden ser útiles sobre todo para una página de comercio electrónico, el recuadro verde añade más seguridad, seguramente mejore los ratios de conversión y evite &lt;a href=&#34;https://es.wikipedia.org/wiki/Phishing&#34;&gt;suplantaciones de identidad o &lt;em&gt;phising&lt;/em&gt;&lt;/a&gt;. Además, utilizar un protocolo seguro es un nuevo criterio que utiliza el buscador Google en su algoritmo para establecer el posicionamiento en la página de resultados. Con las intrucciones que incorporan los procesadores modernos el cifrado y descifrado de los datos no tiene por que significar un aumento de carga considerable para el servidor ni el cliente ni en dispositivos móviles.&lt;/p&gt;

&lt;p&gt;¿Cómo obtener un certificado SSL firmado por una entidad raíz de certificación? Las entidades de registro de dominios aparte de dominios, &lt;em&gt;hosting&lt;/em&gt; virtual o privado algunos permiten comprar certificados SSL. Uno de los que conozco que permite comprar certificados SSL, de empresa, con recuadro verde o &lt;em&gt;wildcard&lt;/em&gt; es &lt;a href=&#34;http://www.dondominio.com/products/ssl/&#34;&gt;DonDominio&lt;/a&gt;, otro es &lt;a href=&#34;http://www.arsys.es/certificados-seguridad-ssl&#34;&gt;Arsys&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/77/certificados-dondominio.png&#34; title=&#34;Certificados DonDominio&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/77/certificados-dondominio-thumb.png&#34;&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;En el caso de DonDominio dependiendo de la entidad emisora del certficado que deseemos variará el precio, también si queremos que tenga validación extendida o sea &lt;em&gt;wildcard&lt;/em&gt;. En el caso de un certificado SSL simple que valide solo el dominio es de unos 5 €, de validación de empresa unos 28 €, un certificado de validación extendida con recuadro verde desde unos 126 € y un &lt;em&gt;certificado wildcard&lt;/em&gt; de desde unos 75 €. Estos son precios desde, diferentes opciones pueden salir bastante más caras y hay que tener en cuenta que son para una validez de una año, al igual que los dominios hay que renovar su uso.&lt;/p&gt;

&lt;p&gt;Si no necesitamos el recuadro verde ni un certificado &lt;em&gt;wildcard&lt;/em&gt; una opción interesante es obtener uno gratis a través de &lt;a href=&#34;https://letsencrypt.org/&#34;&gt;Lets Encrypt&lt;/a&gt;. Esta nueva entidad de certificación nos permitirá obtener uno sin coste, de forma sencilla y automatizada, detrás de esta entidad están organizaciones como &lt;a href=&#34;http://www.linuxfoundation.org/&#34;&gt;Linux Foundation&lt;/a&gt;, &lt;a href=&#34;https://www.mozilla.org/&#34;&gt;Mozilla&lt;/a&gt; o &lt;a href=&#34;http://www.cisco.com/&#34;&gt;CISCO&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Una vez obtenido el certificado debemos instalarlo en el servidor, en el artículo &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/02/configurar-ssl-en-un-servidor-tomcat-jboss-wildfly-lighttpd-nginx-apache/&#34;&gt;Configurar SSL en un servidor Tomcat JBoss, Wildfly, Lighttpd, Nginx o Apache&lt;/a&gt; comento como usar un certificado en los principales servidores web y de aplicaciones. Si necesitamos un formato concreto podemos &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/02/generar-y-convertir-claves-y-certificados-con-openssl/&#34;&gt;convertir el certificado con OpenSSL&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.genbeta.com/seguridad/que-es-un-certificado-ssl-y-por-que-deberia-importarte&#34;&gt;Qué es un certificado SSL y por qué debería importarte&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="programacion"/>
            
                <category term="seguridad"/>
            
                <category term="blog-stack"/>
            
                <category term="planeta-arch-linux"/>
            
                <category term="planeta-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/04/nueva-visita-a-5-plus-opciones-de-hosting-para-aplicaciones/</id>
        <title>Nueva visita a 5&#43; opciones de «hosting» para aplicaciones</title>        
        <updated>2015-11-10T19:00:00+01:00</updated>
        <published>2015-04-17T19:56:10+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2015/04/nueva-visita-a-5-plus-opciones-de-hosting-para-aplicaciones/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;En esta nueva revisión de las opciones de alojamiento que disponemos incluyo algunas nuevas que en su momento no conocía. Dependiendo de las necesidades y del presupuesto que tengamos podemos optar por un servidor propio, un proveedor de &lt;em&gt;hosting&lt;/em&gt;, usar alguna de las nubes más utilizadas o algún otro PaaS o IaaS.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;p&gt;Hace tres años escribí un artículo sobre &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2012/02/5-opciones-de-hosting-para-aplicaciones.html&#34;&gt;varias opciones de &lt;em&gt;hosting&lt;/em&gt;&lt;/a&gt; que disponemos para hospedar aplicaciones o páginas web. En ese artículo comentaba varias posibilidades desde un servidor propio usando una  Raspberry Pi, proveedores de &lt;em&gt;hosting&lt;/em&gt;, &lt;a href=&#34;http://aws.amazon.com/es/ec2/&#34;&gt;Amazon EC2&lt;/a&gt;, &lt;a href=&#34;https://cloud.google.com/appengine/&#34;&gt;Google App Engine&lt;/a&gt;, &lt;a href=&#34;https://jelastic.com/&#34;&gt;Jelastic&lt;/a&gt;, &lt;a href=&#34;https://www.openshift.com/&#34;&gt;OpenShift&lt;/a&gt;, &lt;a href=&#34;https://www.appfog.com/&#34;&gt;AppFog&lt;/a&gt;, &lt;a href=&#34;http://cloudfoundry.org&#34;&gt;Cloud Foundry (VMWare)&lt;/a&gt;, &lt;a href=&#34;https://www.heroku.com/&#34;&gt;Heroku&lt;/a&gt;, &lt;a href=&#34;http://azure.microsoft.com/es-es/&#34;&gt;Azure (Microsoft)&lt;/a&gt; y &lt;a href=&#34;https://cloud.google.com/compute/&#34;&gt;Google Compute (Google Cloud Platform)&lt;/a&gt;. Pasado todo este tiempo en este artículo revisaré las opciones de hospedaje con algunas nuevas que en su momento no conocía, otras siguen siendo totalmente válidas.&lt;/p&gt;

&lt;h3 id=&#34;servidor-propio&#34;&gt;Servidor propio&lt;/h3&gt;

&lt;p&gt;Si queremos una opción para algo simple y para nosotros mismos podemos utilizar un servidor propio usando como &lt;em&gt;hardware&lt;/em&gt; por ejemplo una &lt;a href=&#34;http://www.amazon.es/gp/product/B00T2U7R7I/ref=as_li_ss_tl?ie=UTF8&amp;camp=3626&amp;creative=24822&amp;creativeASIN=B00T2U7R7I&amp;linkCode=as2&amp;tag=blobit-21&#34;&gt;Raspberry Pi 2 Model B&lt;/a&gt;&lt;img src=&#34;https://ir-es.amazon-adsystem.com/e/ir?t=blobit-21&amp;l=as2&amp;o=30&amp;a=B00T2U7R7I&#34; width=&#34;1&#34; height=&#34;1&#34; border=&#34;0&#34; alt=&#34;&#34; style=&#34;border:none !important; margin:0px !important;&#34;&gt;, con la segunda versión de este miniordenador que ahora tiene 4 núcleos y 1 GiB de memoria puede servirnos para cantidad de cosas interesantes. Además de la Raspberry Pi 2 hay multitud de dispositivos similares, en la &lt;a href=&#34;http://archlinuxarm.org/&#34;&gt;página de Arch Linux ARM&lt;/a&gt; podemos ver los modelos soportados en esta distribución. Otro modelo destacado es la &lt;a href=&#34;http://www.solid-run.com/products/cubox-i-mini-computer/cubox-i-specifications/&#34;&gt;Cubox-i&lt;/a&gt; también con 4 núcleos y en el modelo más potente con 2 GiB de memoria aunque bastante más caro que la Raspberry Pi.&lt;/p&gt;

&lt;p&gt;Uno de los usos para los que nos puede servir es para albergar con &lt;a href=&#34;https://owncloud.org/&#34;&gt;ownCluod&lt;/a&gt; tu información personal como archivos, fotos, calendarios, contactos pudiendo acceder desde cualquier dispositivo ya sea el ordenador personal, teléfono inteligente o dispositivo móvil. Su punto a favor es que tus datos están bajo tu control. Aunque esta opción es posible se puede optar por otras opciones que comento más adelante, uno de los motivos es que no es fiable el servicio que podemos ofrecer ya que depende la conexión a internet que podemos tener en nuestra casa y por los cortes de corriente que se pueden producir o los fallos en el &lt;em&gt;hardware&lt;/em&gt; que puede provocar que perdamos los datos si no tenemos copias de seguridad.&lt;/p&gt;

&lt;p&gt;Con esta opción tendremos un control total del &lt;em&gt;software&lt;/em&gt; instalado sin ninguna limitación, sin embargo, si necesitamos escalar la aplicación tendremos más dificultades si necesitamos comprar &lt;em&gt;hardware&lt;/em&gt; nuevo.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/raspberrypi.jpg&#34; alt=&#34;Raspberry Pi&#34; title=&#34;Raspberry Pi&#34;&gt;
&lt;/div&gt;

&lt;h3 id=&#34;proveedor-de-hosting&#34;&gt;Proveedor de &lt;em&gt;hosting&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;La siguiente opción a considerar puede ser un servidor ofrecido por muchos registradores de dominios. Si el tráfico del servicio que planeamos ofrecer no es muy alto (y así serán en los inicios) es una opción adecuada. En la mayoría de las opciones de este tipo estaremos limitados en el lenguaje de programación que podremos usar generalmente &lt;a href=&#34;http://php.net/&#34;&gt;PHP&lt;/a&gt; o la base de datos generalmente &lt;a href=&#34;http://www.mysql.com/&#34;&gt;MySql&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Mucha gente usa esta opción para albergar su bitácora con &lt;a href=&#34;https://wordpress.org/&#34;&gt;WordPress&lt;/a&gt; que incluso para un tráfico considerable es suficiente, por supuesto es válida para las empresas que quieran tener presencia en internet aunque solo sea para incluir su dirección teléfono de contacto y una breve descripción y los productos que ofrece. Para estos usos el coste de esta opción puede estar entre 1€/mes y 20€/mes aparte del coste del dominio.&lt;/p&gt;

&lt;p&gt;Hay multitud de proveedores algunos de los más conocidos son &lt;a href=&#34;http://www.dondominio.com/&#34;&gt;DonDominio&lt;/a&gt;, &lt;a href=&#34;http://www.arsys.es/&#34;&gt;Arsys&lt;/a&gt;, &lt;a href=&#34;https://www.piensasolutions.com/&#34;&gt;Piensa Solutions&lt;/a&gt;, &amp;hellip; pero ninguno de estos y en otros casos muy pocos ofrecen &lt;em&gt;hosting&lt;/em&gt; para aplicaciones de la plataforma Java. No tendremos libertad en la tecnología que usamos ni siquiera en las versiones de la misma.&lt;/p&gt;

&lt;h3 id=&#34;amazon-ec2-azure-google-cloud&#34;&gt;Amazon EC2, Azure, Google Cloud&lt;/h3&gt;

&lt;p&gt;Si la aplicación o proyecto crece las nubes de &lt;a href=&#34;http://aws.amazon.com/es/ec2/&#34;&gt;Amazon EC2&lt;/a&gt;, &lt;a href=&#34;http://azure.microsoft.com/es-es/&#34;&gt;Azure&lt;/a&gt; y &lt;a href=&#34;https://cloud.google.com/&#34;&gt;Google Cloud&lt;/a&gt; se adaptan a las necesidades que tengamos ahora y, mejor aún, en el futuro. Y si en un futuro es necesario nos proporcionan flexibilidad pudiendo ampliar o reducir los recursos consumidos. Son algo más caras que otras opciones pero por lo que ofrecen son buenas opciones, por ejemplo, Amazon EC2 ofrece &lt;a href=&#34;http://aws.amazon.com/es/products/&#34;&gt;varios servicios&lt;/a&gt; que enriquecen su oferta de &lt;a href=&#34;http://en.wikipedia.org/wiki/Cloud_computing&#34;&gt;infraestructura como servicio&lt;/a&gt; (IaaS, &lt;em&gt;Infrastructure as a service&lt;/em&gt;). En estas opciones de IaaS tendremos gran control sobre el &lt;em&gt;software&lt;/em&gt; que instalamos, deberemos tener en cuenta que los datos que maneja la aplicación estarán hospedados en los sistemas de la nube elegida.&lt;/p&gt;

&lt;p&gt;En estas opciones IaaS tenemos libertad de elegir el lenguaje de programación que queremos emplear para en la aplicación ya sea &lt;a href=&#34;http://www.oracle.com/technetwork/es/java/javase/downloads/index.html&#34;&gt;Java&lt;/a&gt;, &lt;a href=&#34;http://php.net/&#34;&gt;PHP&lt;/a&gt;, &lt;a href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt;, &lt;a href=&#34;http://www.microsoft.com/net&#34;&gt;C#&lt;/a&gt; o &lt;a href=&#34;https://www.ruby-lang.org/es/&#34;&gt;Ruby&lt;/a&gt;, &amp;hellip; también tendremos libertad en la base de datos &lt;a href=&#34;http://www.mysql.com/&#34;&gt;MySQL&lt;/a&gt;, &lt;a href=&#34;http://www.postgresql.org/&#34;&gt;PosgreSQL&lt;/a&gt;, &lt;a href=&#34;http://redis.io/&#34;&gt;Redis&lt;/a&gt;, &amp;hellip; o en el servidor de aplicaciones o servidor web.&lt;/p&gt;

&lt;p&gt;En Amazon EC2 el coste puede variar dependiendo de los recursos que reservemos, para una aplicación mediana una instancia &lt;em&gt;t1.small&lt;/em&gt; con 2GiB de memoria reservada previamente y 50 GiB de espacio de disco SSD durante 3 años cuesta unos 332.00€ por reservar la instancia durante ese periodo y unos 2€ adicionales al mes, a esto deberemos sumar el coste del dominio. En la &lt;a href=&#34;http://calculator.s3.amazonaws.com/index.html&#34;&gt;calculadora de Amazon EC2&lt;/a&gt; podemos estimar el coste según los recursos que necesitemos.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/amazon-web-services.png&#34; alt=&#34;Amazon Web Services&#34; title=&#34;Amazon Web Services&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/microsoft-azure.png&#34; alt=&#34;Microsoft Azure&#34; title=&#34;Microsoft Azure&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/google-cloud.png&#34; alt=&#34;Google Cloud&#34; title=&#34;Google Cloud&#34;&gt;
&lt;/div&gt;

&lt;h3 id=&#34;linode-digital-ocean&#34;&gt;Linode, Digital Ocean&lt;/h3&gt;

&lt;p&gt;Algunas opciones totalmente válidas para muchos casos que también nos proporcionan flexibilidad son &lt;a href=&#34;https://www.linode.com/&#34;&gt;Linode&lt;/a&gt; y &lt;a href=&#34;https://www.digitalocean.com/&#34;&gt;Digital Ocean&lt;/a&gt;, también entran dentro de la categoría de IaaS. El coste de los planes ofrecidos por cada una de estas es muy sencillo en Linode empieza desde los 10€/mes hasta los 80€/mes y en Digital Ocean desde los 5€/mes pasando por los 80€/mes hasta los 640€/mes. Salvo los planes de volúmenes altos de Digital Ocean los precios son similares a Linode según las características disponibles en ambos.&lt;/p&gt;

&lt;p&gt;Estas opciones son totalmente válidas tanto para proyectos personales como un blog con WordPress como para proyectos profesionales. La nube de Amazon ofrece multitud de servicios que en algunos casos son útiles pero si no nos son necesarios las opciones comentadas en este apartado serán suficientes y algo más baratas.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/linode.png&#34; alt=&#34;Linode&#34; title=&#34;Linode&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/digital-ocean.png&#34; alt=&#34;Digital Ocean&#34; title=&#34;Digital Ocean&#34;&gt;
&lt;/div&gt;

&lt;h3 id=&#34;otras&#34;&gt;Otras&lt;/h3&gt;

&lt;p&gt;Hay otro tipo de opciones conocidas como &lt;a href=&#34;http://en.wikipedia.org/wiki/Cloud_computing&#34;&gt;plataforma como servicio&lt;/a&gt; (PaaS, &lt;em&gt;Platform as a service&lt;/em&gt;) como &lt;a href=&#34;https://www.openshift.com/&#34;&gt;OpenShift&lt;/a&gt;, &lt;a href=&#34;https://www.appfog.com/&#34;&gt;AppFog&lt;/a&gt;, &lt;a href=&#34;http://cloudfoundry.org&#34;&gt;Cloud Foundry&lt;/a&gt;, &lt;a href=&#34;https://www.heroku.com/&#34;&gt;Heroku&lt;/a&gt;. De entre estas destacaré OpenShift ya que proporciona una capa gratuita con la que tendremos lo que ellos denominan &lt;em&gt;gears&lt;/em&gt;, nos ofrecen gratuitamente 3 con 512 MiB de memoria y 1 GiB de espacio en disco. Esta opción es la que he utilizado para construir &lt;a href=&#34;http://www.blogstack.info&#34;&gt;Blog Stack&lt;/a&gt;, en el artículo &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/05/arquitectura-y-hospedaje-de-blog-stack/&#34;&gt;Arquitectura y hospedaje de Blog Stack&lt;/a&gt; detallo técnicamente el proyecto en el que el único coste es el dominio (12€/año).&lt;/p&gt;

&lt;h3 id=&#34;notas-finales&#34;&gt;Notas finales&lt;/h3&gt;

&lt;p&gt;Las opciones son múltiples para hospedar nuestra aplicación. Si se trata de algo para uso personal una Raspberry Pi pueda valernos, si se trata de una web presencial estática que no requiera programación un proveedor de &lt;em&gt;hosting&lt;/em&gt; será suficiente. Si queremos tener flexibilidad y más libertad en las herramientas del proyecto las nubes de Amazon, Azure o Google nos servirán. Si no necesitamos todos los servicios de los anteriores Linode o Digital Ocean ofrecen unos planes de precios muy sencillos y previsibles. Finalmente están los PaaS que permiten desentendernos de la infraestructura y centrarnos en la aplicación.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2012/02/5-opciones-de-hosting-para-aplicaciones.html&#34;&gt;5 opciones de hosting para aplicaciones Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/05/arquitectura-y-hospedaje-de-blog-stack/&#34;&gt;Arquitectura y hospedaje de Blog Stack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="programacion"/>
            
                <category term="blog-stack"/>
            
                <category term="planeta-arch-linux"/>
            
                <category term="planeta-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/04/guardar-contrasenas-usando-salted-password-hashing-y-otras-formas-correctas/</id>
        <title>Guardar contraseñas usando «Salted Password Hashing» y otras formas correctas</title>        
        <updated>2015-04-14T21:00:00+02:00</updated>
        <published>2015-04-10T18:55:04+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2015/04/guardar-contrasenas-usando-salted-password-hashing-y-otras-formas-correctas/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/apache-shiro.png&#34; class=&#34;right&#34; alt=&#34;Apache Shiro&#34; title=&#34;Apache Shiro&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Para cada servicio deberíamos emplear una contraseña de una longitud de al menos 8 caracteres que incluya letras en minúscula, mayúscula, números y símbolos, una herramienta que podemos utilizar para generar contraseñas más seguras con los criterios que indiquemos es &lt;a href=&#34;http://strongpasswordgenerator.com/&#34;&gt;Strong Password Generator&lt;/a&gt;. Sin embargo, recordar cada una de estas contraseñas es muy difícil de modo que es habitual que utilicemos la misma contraseña para varios o todos los servicios y no empleando todos los criterios anteriores. Por otro lado, los desarrolladores no deberíamos guardar en la base de datos las contraseñas que nos entregan los usuarios en texto plano, para evitar guardalas en texto plano hace un tiempo se utilizaba únicamente una función de &lt;em&gt;hashing&lt;/em&gt; unidireccional como MD5 o SHA, de este modo si la base de datos fuese comprometida en teoría no podrían conocer la contraseña original. En este artículo comentaré que aún guardando las contraseñas con una función de &lt;em&gt;hashing&lt;/em&gt; no es suficiente para hacerlas seguras y comentaré una implementación con &lt;a href=&#34;http://shiro.apache.org/&#34;&gt;Apache Shiro&lt;/a&gt; de una de las ideas propuestas.&lt;/p&gt;

&lt;h3 id=&#34;algo-de-teoría-y-algunas-explicaciones&#34;&gt;Algo de teoría y algunas explicaciones&lt;/h3&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; text-align: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/java.png&#34; class=&#34;right&#34; alt=&#34;Java&#34; title=&#34;Java&#34;&gt;
&lt;/div&gt;

&lt;p&gt;Aunque guardemos las contraseñas con MD5 o alguna variante de SHA hoy en día no es suficiente para que en caso de que alguien obtenga los &lt;em&gt;hashes&lt;/em&gt; de las contraseñas de la base de datos pueda averiguarlas o dar con una que genere el mismo &lt;em&gt;hash&lt;/em&gt;, usando estas funciones se pueden encontrar colisiones en un tiempo razonable y por tanto ya no se consideran seguras. Dada la computación actual de los procesadores y las tarjetas gráficas una contraseña débil puede romperse usando un &lt;a href=&#34;https://es.wikipedia.org/wiki/Ataque_de_fuerza_bruta&#34;&gt;ataque de fuerza bruta&lt;/a&gt; y quizá antes con un &lt;a href=&#34;https://es.wikipedia.org/wiki/Ataque_de_diccionario&#34;&gt;ataque de diccionario&lt;/a&gt; que pruebe las más comunes. Muchos usuarios no tienen contraseñas largas ni utilizan letras en minúscula, mayúscula, números y símbolos, muchos usuarios utilizan contraseñas sencillas para ser recordadas más fácilmente, y aún &lt;em&gt;hasheando&lt;/em&gt; las contraseñas pueden ser averiguadas. También se pueden usar &lt;a href=&#34;https://es.wikipedia.org/wiki/Tabla_arco%C3%ADris&#34;&gt;tablas arcoiris&lt;/a&gt; o &lt;em&gt;rainbow tables&lt;/em&gt; con los &lt;em&gt;hashes&lt;/em&gt; precalculados de las contraseñas de un diccionario con lo que el tiempo empleado para romper una puede requerir poco tiempo de computación.&lt;/p&gt;

&lt;p&gt;También hay que tener en cuenta que muchos usuarios usan la misma contraseña para múltiples servicios por lo que basta que alguien obtenga la contraseña original de un servicio y podrá acceder a otros más interesantes para alguien con malas intenciones por mucha seguridad que tenga esos otros servicios, este es uno de los motivos de la autenticación en dos pasos (que emplea algo que sé, la contraseña, y algo que tengo, como el móvil) y la recomendación de usar una contraseña diferente para cada servicio. Las contraseñas por si solas tiene la seguridad más baja de los diferentes servicios donde se usen.&lt;/p&gt;

&lt;p&gt;Con &lt;em&gt;Salted Password Hashing&lt;/em&gt; el uso de &lt;em&gt;rainbow tables&lt;/em&gt; que aceleren el ataque no serían posibles por la entropía añadida por los &lt;em&gt;salt&lt;/em&gt;. Aún así conociendo el &lt;em&gt;salt&lt;/em&gt; y la función de &lt;em&gt;hash&lt;/em&gt; empleada seguiría siendo posible un ataque de fuerza bruta y de diccionario. Con &lt;em&gt;Salted Password Hashing&lt;/em&gt; se usa en la función de &lt;em&gt;hash&lt;/em&gt; y un dato variable denominado &lt;em&gt;salt&lt;/em&gt; que añade suficiente entropía y es diferente para cada contraseña, en la base de datos se guarda el resultado de la función de &lt;em&gt;hash&lt;/em&gt; junto con el &lt;em&gt;salt&lt;/em&gt;, esto es, el resultado de SHA-512(contraseña+&lt;em&gt;salt&lt;/em&gt;) y también el &lt;em&gt;salt&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&#34;ejemplo-de-salted-password-hashing-usando-apache-shiro&#34;&gt;Ejemplo de &lt;em&gt;Salted Password Hashing&lt;/em&gt; usando Apache Shiro&lt;/h3&gt;

&lt;p&gt;Antes de comentar alguna opción más que dificulte los ataques de fuerza bruta o de diccionario veamos como implementar &lt;em&gt;Salted Password Hashing&lt;/em&gt; empleando Apache Shiro como librería de autenticación y autorización para los usuarios. El ejemplo será simple sin guardar los datos en una base de datos pero suficiente para mostrar que se debe añadir al proyecto para que Shiro compruebe las contraseñas usando una función de &lt;em&gt;hash&lt;/em&gt; y un &lt;em&gt;salt&lt;/em&gt;. Partiré de un ejemplo que hice para el &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;libro PlugIn Tapestry&lt;/a&gt; sobre el desarrollo de aplicaciones web con el &lt;em&gt;framework&lt;/em&gt; &lt;a href=&#34;http://tapestry.apache.org&#34;&gt;Apache Tapestry&lt;/a&gt;. Básicamente deberemos crear un nuevo &lt;em&gt;Realm&lt;/em&gt; que devuelva los datos del usuario, el &lt;em&gt;hash&lt;/em&gt; y el &lt;em&gt;salt&lt;/em&gt;. Una implementación suficiente para el ejemplo sería la siguiente, la parte importante está en el método &lt;em&gt;doGetAuthenticationInfo&lt;/em&gt; y en la inicialización &lt;em&gt;static&lt;/em&gt; de la clase:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/c718273bc1a5ec76831b.js?file=Realm.java&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/c718273bc1a5ec76831b/raw/Realm.java&#34;&gt;Realm.java&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Las contraseñas &lt;em&gt;hasheadas&lt;/em&gt; tendrán la siguiente forma, podemos guardarlas codificadas en formato hexadecimal o en formato Base64:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/c718273bc1a5ec76831b.js?file=hashed-password.txt&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/c718273bc1a5ec76831b/raw/hashed-password.txt&#34;&gt;hashed-password.txt&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;En el ejemplo tratándose de una aplicación web usando Apache Tapestry se debe modificar la configuración para que se utilice el nuevo &lt;em&gt;Realm&lt;/em&gt; el antiguo guardaba las contraseñas en texto plano (&lt;em&gt;shiro-users.properties&lt;/em&gt;).&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/c718273bc1a5ec76831b.js?file=AppModule.java&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/c718273bc1a5ec76831b/raw/AppModule.java&#34;&gt;AppModule.java&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;El cambio de &lt;em&gt;Realm&lt;/em&gt; para el usuario no supone ninguna modificación y podrá seguir autenticandose con su misma contraseña. En el ejemplo con &lt;em&gt;root&lt;/em&gt; como usuario y &lt;em&gt;password&lt;/em&gt; como contraseña.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/75/formulario-inicio-sesion.png&#34; title=&#34;Formulario de inicio de sesión&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/75/formulario-inicio-sesion.png&#34;&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Este es todo el código que necesitamos para la implementación de contraseñas codificadas con una función de &lt;em&gt;hashing&lt;/em&gt;, en este caso SHA-512, y un &lt;em&gt;salt&lt;/em&gt;, no es mucho y además es bastante simple la implementación con Shiro y en este caso en una aplicación usando el &lt;em&gt;framework&lt;/em&gt; Apache Tapestry. Estas pocas líneas de código pueden aumentar notablemente la seguridad de las contraseñas que guardamos en la base de datos. En el caso de que la base de datos se vea comprometida será más difícil para alguien con malas intenciones obtener las contraseñas originales.&lt;/p&gt;

&lt;p&gt;El siguiente ejemplo de &lt;a href=&#34;https://github.com/tynamo/tynamo-federatedaccounts/tree/master/tynamo-federatedaccounts-test/src/test/java/org/tynamo/security/federatedaccounts/testapp/services&#34;&gt;&lt;em&gt;federatedaccounts&lt;/em&gt;&lt;/a&gt; puede verse como usar está técnica de &lt;em&gt;hash&lt;/em&gt; con &lt;em&gt;salt&lt;/em&gt; usando una base de datos. Básicamente es lo mismo pero accediendo a base de datos para obtener el &lt;em&gt;hash&lt;/em&gt; de la contraseña y el &lt;em&gt;salt&lt;/em&gt; con una entidad JPA.&lt;/p&gt;

&lt;h3 id=&#34;otras-opciones-que-añaden-más-seguridad&#34;&gt;Otras opciones que añaden más seguridad&lt;/h3&gt;

&lt;p&gt;Aún así como comento este ejemplo de &lt;em&gt;Salted Password Hashing&lt;/em&gt; aunque dificulta un ataque aún es viable usar fuerza bruta o un diccionario. En el artículo &lt;a href=&#34;https://stormpath.com/blog/password-security-right-way/&#34;&gt;Password Security Right Way&lt;/a&gt; comentan tres ideas más. Una es usar como función de &lt;em&gt;hash&lt;/em&gt; &lt;a href=&#34;http://bcrypt.sourceforge.net/&#34;&gt;Bcrypt&lt;/a&gt; no porque sea más segura que SHA-512 sino porque es más lenta y esto puede hacer inviable la fuerza bruta o de diccionario, hay &lt;a href=&#34;https://issues.apache.org/jira/browse/SHIRO-290&#34;&gt;planes de proporcionar Bcrypt en Apache Shiro&lt;/a&gt; en futuras versiones. En el ejemplo como alternativa a bcrypt se usan varios millones de iteraciones de aplicación de la función para añadir tiempo de cálculo al &lt;em&gt;hash&lt;/em&gt;, este tiempo adicional no es significativo en el cálculo de un &lt;em&gt;hash&lt;/em&gt; pero en un ataque de fuerza bruta puede aumentarlo de forma tan significativa que sea inviable. La segunda idea interesante es además de &lt;em&gt;hashear&lt;/em&gt; la clave es cifrarla de modo que aún habiendo sido comprometida la base de datos se necesite la clave privada de cifrado que también debería ser comprometida para producir el ataque. La tercera es partir el &lt;em&gt;hash&lt;/em&gt; y distribuirlo entre varios sistemas de modo que sea necesario romperlos todos para obtener en &lt;em&gt;hash&lt;/em&gt; original, lo que dificulta aún más un ataque.&lt;/p&gt;

&lt;p&gt;Para implementar la segunda opción deberemos proporcionar implementaciones propias de &lt;a href=&#34;https://shiro.apache.org/static/1.2.3/apidocs/org/apache/shiro/authc/credential/CredentialsMatcher.html&#34;&gt;CredentialsMatcher&lt;/a&gt; y de &lt;a href=&#34;https://shiro.apache.org/static/1.2.3/apidocs/org/apache/shiro/crypto/hash/SimpleHash.html&#34;&gt;SimpleHash&lt;/a&gt;, quizá esto sea tema para otro artículo.&lt;/p&gt;

&lt;h3 id=&#34;código-fuente-del-ejemplo&#34;&gt;Código fuente del ejemplo&lt;/h3&gt;

&lt;p&gt;El &lt;a href=&#34;https://github.com/picodotdev/elblogdepicodev/tree/master/PlugInTapestry&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; está alojado en un repositorio de GitHub, es completamente funcional y puedes probarlo en tu equipo. Una vez descargado el siguiente comando e introduciendo en el navegador http://localhost:8080/PlugInTapestry, en la página que se muestra hay un botón para iniciar sesión:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/c718273bc1a5ec76831b.js?file=gradlew.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/c718273bc1a5ec76831b/raw/gradlew.sh&#34;&gt;gradlew.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/75/iniciar-sesion.png&#34; title=&#34;Botón de inicio de sesión&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/75/iniciar-sesion.png&#34;&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;h3 id=&#34;nota-final&#34;&gt;Nota final&lt;/h3&gt;

&lt;p&gt;En este artículo recomiendo leer los interesantes enlaces del apartado de referencia del final, de ellos los siguientes dos son bastante completos &lt;a href=&#34;https://stormpath.com/blog/password-security-right-way/&#34;&gt;Password Security the Right Way&lt;/a&gt; y &lt;a href=&#34;https://crackstation.net/hashing-security.htm&#34;&gt;The RIGHT Way: How to Hash Properly&lt;/a&gt; aunque todos merecen el tiempo dedicado a una lectura detenida. Para terminar mucho de esto es fútil si se permiten contraseñas sencillas por lo que exigir contraseñas con cierta fortaleza de la forma comentada al principio también es necesario si la seguridad de la aplicación es un requisito importante.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://stormpath.com/blog/password-security-right-way/&#34;&gt;Password Security the Right Way&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://codahale.com/how-to-safely-store-a-password/&#34;&gt;How To Safely Store A Password&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stormpath.com/product/password_security/&#34;&gt;Password Security with Stormpath&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stormpath.com/blog/strong-password-hashing-apache-shiro/&#34;&gt;Strong Password Hashing With Apache Shiro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://crackstation.net/hashing-security.htm#properhashing&#34;&gt;The RIGHT Way: How to Hash Properly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://shiro.apache.org/realm.html#Realm-HashingandCorrespondingMatchers&#34;&gt;Apache Shiro, Hashing and Corresponding Matchers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://shiro.apache.org/realm.html#Realm-HashingCredentials&#34;&gt;Apache Shiro, Hashing Credentials&lt;/a&gt;
&lt;a href=&#34;http://tynamo.org/tapestry-security+guide&#34;&gt;http://tynamo.org/tapestry-security+guide&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://strongpasswordgenerator.com/&#34;&gt;Strong Password Generator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.arumeinformatica.es/blog/encriptar-y-guardar-contrasenas-en-base-de-datos/&#34;&gt;Encriptar y guardar contraseñas en base de datos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.michael-pratt.com/blog/8/Seguridad-en-el-almacenamiento-de-PasswordsContrasenas/&#34;&gt;Seguridad en el almacenamiento de Passwords/Contraseñas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.osi.es/ca/node/4522&#34;&gt;Usuarios con contraseñas repetidas: ciberdelincuentes felices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.elladodelmal.com/2015/03/un-hash-md5-en-la-password-no-susituye.html&#34;&gt;Un HASH MD5 en la password no sustituye a SSL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://es.wikipedia.org/wiki/Ataque_de_fuerza_bruta&#34;&gt;Ataque de fuerza bruta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://es.wikipedia.org/wiki/Ataque_de_diccionario&#34;&gt;Ataque de diccionario&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://es.wikipedia.org/wiki/Tabla_arco%C3%ADris&#34;&gt;Tablas arcoiris o &lt;em&gt;rainbow tables&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="java"/>
            
                <category term="programacion"/>
            
                <category term="seguridad"/>
            
                <category term="tapestry"/>
            
                <category term="blog-stack"/>
            
                <category term="planeta-arch-linux"/>
            
                <category term="planeta-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/02/como-hacer-un-downgrade-de-un-paquete-en-arch-linux/</id>
        <title>Cómo hacer un «downgrade» de un paquete en Arch Linux</title>        
        <updated>2015-04-10T20:00:00+02:00</updated>
        <published>2015-02-07T11:05:24+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2015/02/como-hacer-un-downgrade-de-un-paquete-en-arch-linux/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/archlinux.png&#34; class=&#34;right&#34; alt=&#34;Arch Linux&#34; title=&#34;Arch Linux&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://wiki.archlinux.org&#34;&gt;Arch Linux&lt;/a&gt; es un distribución &lt;a href=&#34;http://en.wikipedia.org/wiki/Rolling_release&#34;&gt;&lt;em&gt;rolling release&lt;/em&gt;&lt;/a&gt; en la que los paquetes son actualizados en cuanto sale una nueva versión. Esto tiene la ventaja de que siempre tendremos el sistema actualizado con las versiones más recientes de los programas, en los que se van añadiendo nuevas características y corrigiendo errores de seguridad y funcionales. Sin embargo, en algún momento nos puede ocurrir que una actualización de algún paquete nos introduzca algún error, en este caso podemos hacer una desactualización de paquete y volver a una versión estable.&lt;/p&gt;

&lt;p&gt;No es habitual que esto ocurra pero puede darse el caso y antes de hacer una desactualización es recomendable buscar en los &lt;a href=&#34;https://bbs.archlinux.org/&#34;&gt;foros de arch linux&lt;/a&gt; una respuesta con una alternativa mejor. En todo este tiempo como usuario de Arch Linux, más de 5 años, los &lt;em&gt;downgrades&lt;/em&gt; que he tenido que hacer han sido dos, uno para el paquete de &lt;em&gt;subversion&lt;/em&gt; y el que voy a comentar. El último caso ha sido para el paquete de &lt;a href=&#34;https://www.archlinux.org/packages/extra/x86_64/networkmanager/&#34;&gt;&lt;em&gt;networkmanager&lt;/em&gt;&lt;/a&gt; al actualizarse a la versión 1.0.0-1 desde la 0.9.10.0-4. El problema que me ocasionaba era varios intentos de conexión y desconexión tanto de la red cableada como de la wifi, después de varios intentos seguidos y menos de un minuto conseguía conectarse a la red correctamente pero era un poco molesto. En los foros de arch linux hay varios mensajes de otros usuarios con el mismo problema &lt;a href=&#34;https://bbs.archlinux.org/viewtopic.php?id=193275&#34;&gt;I&lt;/a&gt;, &lt;a href=&#34;https://bbs.archlinux.org/viewtopic.php?id=192679&#34;&gt;II&lt;/a&gt; y &lt;a href=&#34;https://bbs.archlinux.org/viewtopic.php?id=192344&#34;&gt;III&lt;/a&gt;, donde se comenta algunas alternativas, una de ellas la desactualización del paquete. He de decir que en otro equipo no he tenido ningún problema con la actualización.&lt;/p&gt;

&lt;p&gt;El proceso de &lt;em&gt;downgrade&lt;/em&gt; no tiene mucha complicación, basta con lanzar el comando, la dificultad está en conocer si también hay que desactaulizar alguna dependencia (libnm-gtk y libnm-glib):&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/f6fd427da4ad64fb6a2b.js?file=pacman.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/f6fd427da4ad64fb6a2b/raw/pacman.sh&#34;&gt;pacman.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Para hacer una desactualización deberemos tener la versión del paquete a la que queramos hacer un &lt;em&gt;downgrade&lt;/em&gt;, si no hemos hecho una limpieza de la caché de los paquetes no usados (con &lt;em&gt;pacman -Sc&lt;/em&gt;) lo tendremos en en el directorio &lt;em&gt;/var/cache/pacman/pkg/&lt;/em&gt;. Si hemos hecho la limpieza de la caché y no dispones del paquete hay que buscar en algún &lt;em&gt;mirror&lt;/em&gt; menos actualizado la versión del paquete desactualizado, también podemos usar &lt;a href=&#34;https://wiki.archlinux.org/index.php/Arch_Rollback_Machine&#34;&gt;Arch Rollback Machine&lt;/a&gt; (ARM) que va almacenando instantáneas de los repositorios durante un tiempo, usando los varios enlaces de ARM podemos encontrar la versión desactualizada del paquete que queramos como el &lt;a href=&#34;http://seblu.net/a/arm/packages/n/networkmanager/&#34;&gt;caso de networkmanager&lt;/a&gt;. Para evitar tener que buscar y descargar manualmente los paquetes de ARM lo que hago es mantener hasta la siguiente actualización los paquetes instalados en la caché cuando ya he comprobado que después de una actualización todo funciona.&lt;/p&gt;

&lt;p&gt;Si no queremos que un paquete sea actualizado en la siguiente actualización del sistema que hagamos deberemos añadirlo a la lista &lt;em&gt;IgnorePkg&lt;/em&gt; del archivo &lt;em&gt;/etc/pacman.conf&lt;/em&gt;.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/f6fd427da4ad64fb6a2b.js?file=pacman.conf&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/f6fd427da4ad64fb6a2b/raw/pacman.conf&#34;&gt;pacman.conf&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;No es recomendable mantener muchos paquetes desactualizados y en la lista de &lt;em&gt;IgnorePkg&lt;/em&gt; ya que estos pueden tener dependencias sobre paquetes también desactualizados, solo debe ser empleado para casos puntuales.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/Downgrading_Packages&#34;&gt;Artículo en la Wiki sobre desactualización de paquetes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/Arch_Rollback_Machine&#34;&gt;Arch Rollback Machine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="blog-stack"/>
            
                <category term="planeta-arch-linux"/>
            
                <category term="planeta-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/02/5o-aniversario-del-blog/</id>
        <title>5º aniversario del blog</title>        
        <updated>2015-02-06T23:00:00+01:00</updated>
        <published>2015-02-06T16:16:16+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2015/02/5o-aniversario-del-blog/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/octopress.png&#34; class=&#34;right&#34; alt=&#34;Octopress&#34; title=&#34;Octopress&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Este día 6 cumplo un lustro con las bitácoras &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es&#34;&gt;El blog de pico.dev&lt;/a&gt; y desde hace un año con &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/&#34;&gt;Blog Bitix&lt;/a&gt;. 5 años como &lt;em&gt;blogger&lt;/em&gt; en los que normalmente he escrito un artículo cada semana y he publicado los viernes o sábados. 5 años escribiendo artículos en los que comparto el conocimiento que tengo y voy aprendiendo tratando de que sirvan de alguna forma a alguien que los lea.&lt;/p&gt;

&lt;p&gt;Después de pasado todos estos años los motivos por los que lo empecé los sigo manteniendo y quizá aún con más ganas de seguir escribiendo para compartir el bueno o malo mucho o poco (trato de que sea bueno) pero tal como es el conocimiento que poseo. En mi caso tener un &lt;em&gt;blog&lt;/em&gt; es una de las buenas cosas que me alegro de haber empezado, por el momento no me canso de seguir escribiendo y me permite aprender sobre cualquier cosa que me interese en cada momento. Los artículos que escribo no suelen tratar temas de actualidad salvo algunas ocasiones relevantes como con la &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/&#34;&gt;nueva versión de Java 8&lt;/a&gt;, de vez en cuando hago algún análisis de los productos tecnológicos que pasan por mis manos como un &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2012/08/desempaquetado-unboxing-de-amazon.html&#34;&gt;lector de libros electrónicos&lt;/a&gt;, el &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2012/12/desempaquetado-sony-vaio-e-14p.html&#34;&gt;portátil que compré hace unos años&lt;/a&gt; o un &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/03/desempaquetado-y-analisis-samsung-840-evo-ssd-250-gb/&#34;&gt;disco SSD&lt;/a&gt;. Últimamente publico pocos artículos sobre linux o el software libre como &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2010/03/de-windows-arch-linux.html&#34;&gt;De Windows a Arch Linux&lt;/a&gt;, más tarde &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/08/de-arch-linux-a-arch-linux/&#34;&gt;De Arch Linux a Arch Linux&lt;/a&gt; o &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/08/experiencia-instalando-sistema-operativo-a-ordenador-viejo/&#34;&gt;instalando linux a un portátil viejo&lt;/a&gt; y últimamente más &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/tags/java/&#34;&gt;artículos sobre programación con java&lt;/a&gt;, desarrollo web, html y &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/tags/javascript/&#34;&gt;javscript&lt;/a&gt;. Una amplia colección de artículos que he publicado me han dado incluso para reunirlos y, completándolos con un poco más de contenido, hacer con ellos un &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;libro sobre Apache Tapestry&lt;/a&gt; publicado de forma totalmente gratis en varios formatos incluidos de libro electrónico.&lt;/p&gt;

&lt;p&gt;Durante este tiempo en ambos blogs he tenido unas 450K páginas vistas, en realidad no son muchas (por no decir pocas) comparadas con las conseguidas por otras bitácoras personales de temática similar. Actualmente según feedly Blog Bitix tiene aproximadamente 70 suscriptores, seguramente haya algunos más que feedly no contabilice, tampoco son muchos. El mayor tráfico proviene del buscador Google, vistas que llegan como &amp;ldquo;paracaidistas&amp;rdquo; buscando información desde un enlace en la página de resultados con sus búsquedas y las palabras clave. A medida que cada semana publico más contenido un mes tras otro Blog Bitix tiene unas cuantas visitas más pero el crecimiento es lento.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/65/analytics.png&#34; title=&#34;Visitas semanales de Blog Bitix&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/65/analytics-thumb.png&#34;&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;En estos cinco años he recibido tres ingresos de Google por la publicidad AdSense que han sido aproximadamente unos 210€ en total, esta cantidad no compensa el tiempo dedicado pero recibir uno de vez en cuando es algo que no está mal. Hace algunos meses también he incluido algunos enlaces usando el &lt;a href=&#34;https://afiliados.amazon.es&#34;&gt;programa de afiliados de Amazon&lt;/a&gt; por ejemplo en el &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/03/desempaquetado-y-analisis-samsung-840-evo-ssd-250-gb/&#34;&gt;disco SSD que compré&lt;/a&gt; y una &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/12/8-plus-libros-para-mejorar-como-programadores/&#34;&gt;colección de libros recomendables leer para cualquier programador&lt;/a&gt;, aún no se superado la cantidad mínima (25€) para que Amazon me haga el ingreso pero no me queda mucho. Para alguien que publique análisis de productos más a menudo el 5% de comisión y el 10% para libros que ofrece Amazon por compra realizada puede ser otra fuente para rentabilizar cómodamente una bitácora.&lt;/p&gt;

&lt;p&gt;Un artículo me supone unas cuantas horas de dedicación, entre 3 y 10, desde que dejé de usar &lt;a href=&#34;https://www.blogger.com/&#34;&gt;Blogger&lt;/a&gt; y empecé a usar &lt;a href=&#34;http://octopress.org/&#34;&gt;Octopress&lt;/a&gt; la edición me requiere menos tiempo. A lo que más tiempo dedico es hacer el ejemplo funcional de código, escribir el artículo es en realidad lo que menos tiempo le dedico. También hay otras tareas necesarias como leer documentación para poder escribir luego sobre ello y realizar la edición para publicarlo creando los &lt;a href=&#34;https://gist.github.com/&#34;&gt;gist&lt;/a&gt; de los trozos de código o las capturas de imágenes.&lt;/p&gt;

&lt;p&gt;Durante estos días se me ha presentado la posibilidad de formar parte como editor en &lt;a href=&#34;http://www.genbetadev.com/&#34;&gt;Genbeta Dev&lt;/a&gt;, a pesar de la buena oportunidad que significaba de que lo que escribo llegue a muchos más lectores me requería que escribiese unos cuatro artículos semanales cosa que por tiempo no podía asumir, con lo que al final seguiré en esta anárquica e independiente bitácora cosa que tampoco quería dejar. Sin embargo, me lo tomaré como muestra de que algo estoy haciendo bien para haber tenido esa oportunidad.&lt;/p&gt;

&lt;p&gt;A pesar del esfuerzo y dedicación que supone la bitácora las visitas recibidas posteriormente, ver que cada mes crecen un poco más, esporádicamente algún comentario y alguien que se pone en contacto conmigo a través del correo electrónico por el momento son suficiente recompensa. Espero seguir así durante una buena cantidad de tiempo hasta que no lo disponga o se me agoten las fuerzas de continuar.&lt;/p&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="planeta-arch-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/</id>
        <title>Introducción e inicio a Drupal</title>        
        <updated>2015-11-10T19:00:00+01:00</updated>
        <published>2015-01-10T11:08:12+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/drupal.png&#34; class=&#34;right&#34; alt=&#34;Drupal&#34; title=&#34;Drupal&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Para los proyectos web cuyo punto central es el contenido disponemos de algunas opciones que prácticamente nos dan la solución hecha o facilitan enormemente la tarea como desarrolladores y posteriormente a los administradores que no necesitarán un gran conocimiento para administrar la web. Estas aplicaciones se les suele conocer como &lt;a href=&#34;http://es.wikipedia.org/wiki/Sistema_de_gesti%C3%B3n_de_contenidos&#34;&gt;Sistemas de gestión de contenidos&lt;/a&gt; (Content Management System, CMS) y como siempre disponemos de varias opciones, algunas similares.&lt;/p&gt;

&lt;p&gt;No soy un experto en CMS ni he usado uno en un proyecto real pero trataré en este artículo hacer una introducción a &lt;a href=&#34;https://www.drupal.org/&#34;&gt;Drupal&lt;/a&gt;. Hay otras opciones como &lt;a href=&#34;https://wordpress.org/&#34;&gt;Wordpress&lt;/a&gt; o &lt;a href=&#34;https://www.joomla.org/&#34;&gt;Joomla&lt;/a&gt; también desarrolladas en &lt;a href=&#34;http://php.net/&#34;&gt;PHP&lt;/a&gt; y en el ámbito &lt;a href=&#34;http://www.oracle.com/technetwork/es/java/javase/downloads/index.html&#34;&gt;Java&lt;/a&gt; otras como &lt;a href=&#34;https://www.alfresco.com/&#34;&gt;Alfresco&lt;/a&gt;, &lt;a href=&#34;http://www.nuxeo.com/&#34;&gt;Nuxeo&lt;/a&gt;, &lt;a href=&#34;http://dotcms.com/&#34;&gt;dotCMS&lt;/a&gt; y &lt;a href=&#34;http://www.liferay.com/&#34;&gt;Liferay&lt;/a&gt; aunque estas en algunos puntos son diferentes ofreciendo gestión documental o &lt;a href=&#34;http://es.wikipedia.org/wiki/Portal_%28Internet%29&#34;&gt;portales de internet&lt;/a&gt;. Wordpress es más simple que Drupal pero si tenemos conocimientos de desarrollo Drupal posiblemente se adapte más a nuestras preferencias. Alfresco y Nuxeo son más bien gestores de contenido y de documentos pero no permiten gestionar como se visualiza el contenido en la web final, Liferay es algo más parecido a lo que ofrece Drupal pero tengo la sensación que es algo más compleja o no exactamente con las mismas opciones y está más destinado a la creación de portales web.&lt;/p&gt;

&lt;p&gt;Drupal como decía está desarrollado sobre PHP pero solo necesitaremos conocer este lenguaje en el momento que queramos desarrollar y personalizarlo. Como usuarios para crear contenido y gestionar la disposición de los elementos en la página web no necesitamos conocer nada de PHP solo necesitaremos conocer como funciona la herramienta de administración que ofrece Drupal. El tipo de los proyectos para los que puede estar indicado Durpal puede ser aquellos en los que los usuarios quieran crear y publicar nuevo contenido y quieran ellos mismos modificar los elementos de las páginas sin necesidad de solicitar un desarrollo. Algunos casos de uso pueden ser instituciones de la administración pública, empresas, tiendas, comercios, &amp;hellip; aquellos que quieran tener una presencia en internet y puedan necesitar añadir, modificar o eliminar en algún momento el contenido de su web. La tarea de los desarrolladores consistirá en personalizar la instalación de Drupal a las necesidades del cliente y sus usuarios ya sea adaptando el aspecto de la web a crear, creando la taxonomía del contenido, definiendo los tipos de contenidos y que información contiene, usuarios y roles, &amp;hellip;&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/60/inicio.png&#34; title=&#34;Inicio Drupal&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/60/inicio-thumb.png&#34;&gt;&lt;/a&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/60/inicio-administracion.png&#34; title=&#34;Inicio Drupal (Administración)&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/60/inicio-administracion-thumb.png&#34;&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Por defecto Drupal ofrece dos tipos de contenido páginas y artículos que poseen un título y un cuerpo aunque podemos crear nuevos tipos de contenido con información adicional como podría ser eventos que recojan además una fecha y hora de inicio, fecha y hora de fin, lugar, &amp;hellip;. Podemos crear usuarios y roles y asignarles permisos como poder crear contenidos, crear menús con enlaces a ciertos contenidos que queramos destacar. Podemos usar taxonomía para categorizar el contenido y que este esté organizado y sea fácilmente encontrado por los usuarios. Asociar tipos de contenido con ciertos tipo de taxonomía. Modificar los bloques como menús, formulario de inicio de sesión, &amp;hellip; y hacer que solo se vean en ciertas páginas, para algunos tipos de contenidos, ciertos roles o usuarios. Hacer vistas o listas de los contenidos. Modificar la disposición o layout de las páginas por ejemplo para que tenga dos, tres columnas, una cabecera y un pie, &amp;hellip;. Finalmente también podemos modificar y personalizar el aspecto del sitio web con temas que podemos descargar o desarrollar nosotros mismos.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/60/crear-pagina.png&#34; title=&#34;Crear página&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/60/crear-pagina-thumb.png&#34;&gt;&lt;/a&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/60/crear-articulo.png&#34; title=&#34;Crear artículo&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/60/crear-articulo-thumb.png&#34;&gt;&lt;/a&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/60/tipos-contenido.png&#34; title=&#34;Tipos de contenido&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/60/tipos-contenido-thumb.png&#34;&gt;&lt;/a&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/60/taxonomia.png&#34; title=&#34;Taxonomía&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/60/taxonomia-thumb.png&#34;&gt;&lt;/a&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/60/taxonomia-etiquetas.png&#34; title=&#34;Etiquetas taxonomía&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/60/taxonomia-etiquetas-thumb.png&#34;&gt;&lt;/a&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/60/bloques.png&#34; title=&#34;Bloques&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/60/bloques-thumb.png&#34;&gt;&lt;/a&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/60/personas.png&#34; title=&#34;Personas&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/60/personas-thumb.png&#34;&gt;&lt;/a&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/60/personas-permisos.png&#34; title=&#34;Permisos personas&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/60/personas-permisos-thumb.png&#34;&gt;&lt;/a&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/60/personas-roles.png&#34; title=&#34;Roles personas&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/60/personas-roles-thumb.png&#34;&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Drupal es ampliamente &lt;a href=&#34;https://www.drupal.org/project/project_module&#34;&gt;extensible mediante módulos&lt;/a&gt; permitiendo agregarle funcionalidades de diferentes categorías (contenido, administración, integración con terceros, comercio electrónico, &amp;hellip;) si las incorporadas por defecto no nos son suficientes. Algunos de  los módulos más empleados son &lt;a href=&#34;https://www.drupal.org/project/panels&#34;&gt;Panels&lt;/a&gt; que permite definir contenedores (barra izquierda, región contenido, barra derecha, pie, cabecera, &amp;hellip;) en una página y asignar el contenido que queremos que aparezca en cada uno de ellos, &lt;a href=&#34;https://www.drupal.org/project/cck&#34;&gt;Content Construction Kit (CCK)&lt;/a&gt;, &lt;a href=&#34;https://www.drupal.org/project/views&#34;&gt;Views&lt;/a&gt; para definir vistas de una colección de elementos, &lt;a href=&#34;https://www.drupal.org/project/pathauto&#34;&gt;Pathauto&lt;/a&gt; para hacer las URLs amigables al usuario y buscadores mejorando el SEO del sitio, &lt;a href=&#34;https://www.drupal.org/project/webform&#34;&gt;Webform&lt;/a&gt; para crear formularios y recoger información y otros muchos más para infinidad de cosas. Sin embargo, conviene usar los más populares que están ampliamente probados y hayan demostrado su utilidad, los que tenga buen soporte y un mantenimiento activo, estas cosas las podemos seleccionar con el filtro en el formulario de búsqueda de módulos.&lt;/p&gt;

&lt;p&gt;En definitiva Drupal es una herramienta de mucha utilidad para gestionar un sitio web. Si la parte importante del sitio web es el contenido Drupal puede adaptarse perfectamente a las necesidades y si el sitio web ha de ser administrado por usuarios sin conocimientos técnicos puede ser una solución que no requiera desarrollar una aplicación web a medida costando menos tiempo y menos esfuerzo. Para iniciarse en Drupal los libros &lt;a href=&#34;http://www.amazon.es/gp/product/1430228598/ref=as_li_ss_tl?ie=UTF8&amp;camp=3626&amp;creative=24822&amp;creativeASIN=1430228598&amp;linkCode=as2&amp;tag=blobit-21&#34;&gt;Beginning Drupal 7&lt;/a&gt;&lt;img src=&#34;https://ir-es.amazon-adsystem.com/e/ir?t=blobit-21&amp;l=as2&amp;o=30&amp;a=1430228598&#34; width=&#34;1&#34; height=&#34;1&#34; border=&#34;0&#34; alt=&#34;&#34; style=&#34;border:none !important; margin:0px !important;&#34;&gt;
 y &lt;a href=&#34;http://www.amazon.es/gp/product/1430228385/ref=as_li_ss_tl?ie=UTF8&amp;camp=3626&amp;creative=24822&amp;creativeASIN=1430228385&amp;linkCode=as2&amp;tag=blobit-21&#34;&gt;Pro Drupal 7 Development&lt;/a&gt;&lt;img src=&#34;https://ir-es.amazon-adsystem.com/e/ir?t=blobit-21&amp;l=as2&amp;o=30&amp;a=1430228385&#34; width=&#34;1&#34; height=&#34;1&#34; border=&#34;0&#34; alt=&#34;&#34; style=&#34;border:none !important; margin:0px !important;&#34;&gt;
 son un buen inicio, he leído el primero y están muy bien explicado partiendo desde cero conocimiento sobre Drupal o PHP, contiene suficiente detalle para conocer las diferentes posibilidades que ofrece esta plataforma de gestión de contenidos.&lt;/p&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe src=&#34;https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=1430228598&amp;internal=1&#34; style=&#34;width:120px;height:240px;&#34; scrolling=&#34;no&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
    &lt;iframe src=&#34;https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=1430228385&amp;internal=1&#34; style=&#34;width:120px;height:240px;&#34; scrolling=&#34;no&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Si queremos probarlo posiblemente la solución mas sencilla es usar la &lt;a href=&#34;https://bitnami.com/stack/drupal&#34;&gt;imagen que ofrece Bitnami de Drupal&lt;/a&gt; que contiene todos los requisitos de Drupal ya instalados (servidor web, base de datos, dependencias, &amp;hellip;), podemos descargarla y crear una máquina virtual con VirtualBox, en unos pocos minutos podemos empezar a probar Drupal. En el artículo de &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/&#34;&gt;introducción sobre Bitnami&lt;/a&gt; explico como crear una máquina virtual e iniciar cualquiera de las &lt;a href=&#34;https://bitnami.com/stacks&#34;&gt;imágenes&lt;/a&gt; de las que ofrece &lt;a href=&#34;https://bitnami.com/&#34;&gt;Bitnami&lt;/a&gt; con VirtualBox.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/&#34;&gt;Introducción a Bitnami&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/&#34;&gt;Introducción al gestor de proyectos y tareas Redmine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/&#34;&gt;Instalar y usar un plugin ágil en Redmine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-arch-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/</id>
        <title>Instalar y usar un plugin ágil en Redmine</title>        
        <updated>2015-01-10T12:00:00+01:00</updated>
        <published>2015-01-03T01:27:56+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/redmine.png&#34; class=&#34;right&#34; alt=&#34;Redmine&#34; title=&#34;Redmine&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Las metodologías ágiles para la gestión de proyectos son ya ampliamente usadas, como &lt;a href=&#34;http://es.wikipedia.org/wiki/Scrum&#34;&gt;scrum&lt;/a&gt; o &lt;a href=&#34;http://es.wikipedia.org/wiki/Programaci%C3%B3n_extrema&#34;&gt;programación extrema&lt;/a&gt; (XP). Una diferencia entre las metodologías ágiles y las metodologías empleadas tradicionalmente como el modelo en cascada es que en las metodologías ágiles se tiene en cuenta que se pueden producir cambios en el desarrollo del proyecto y suelen ser más flexibles y adaptables ante estos cambios.&lt;/p&gt;

&lt;p&gt;En el modelo de metodología ágil podemos usar un panel kanban donde ver de un vistazo rápido las tareas terminadas, las que están en progreso y las próximas tareas planificadas reflejando la realidad del equipo de desarrollo. Reorganizándolas según prioridades que pueden cambiar de una semana a otra, en las metodologías ágiles no se realiza una planificación completa inicial sino que se va realizando a medida que el proyecto progresa.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/59/panel-kanban.png&#34; title=&#34;Panel Kanban de Redmine&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/59/panel-kanban-thumb.png&#34;&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;También para la gestión de las tareas de los proyectos se suele usar algún tipo de herramienta que permita recoger y gestionar las peticiones adaptada a la metodología que usemos, una de estas herramientas puede ser &lt;a href=&#34;http://www.redmine.org/&#34;&gt;Redmine&lt;/a&gt;. En la &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/&#34;&gt;introducción sobre Redmine&lt;/a&gt; comentaba que es lo nos puede ofrecer para gestionar el proyecto.&lt;/p&gt;

&lt;p&gt;Por defecto, Redmine no dispone de un panel kanban para ver las peticiones pero &lt;a href=&#34;http://www.redminecrm.com/projects/agile/pages/1&#34;&gt;usando el plugin ágile de RedmineCRM&lt;/a&gt; se le puede añadir la funcionalidad con el que además del panel kanban podemos ver otra serie de gráficas como &lt;a href=&#34;https://es.wikipedia.org/wiki/Burn_down_chart&#34;&gt;burndown&lt;/a&gt; y paneles. Hay otras opciones perfectamente válidas como &lt;a href=&#34;https://www.atlassian.com/software/jira&#34;&gt;JIRA&lt;/a&gt; pero esta tiene una política de precios basada en el número de usuarios y a partir de un cierto número es una cantidad considerable.&lt;/p&gt;

&lt;p&gt;Podemos usar la versión gratuita del &lt;a href=&#34;http://www.redminecrm.com/&#34;&gt;plugin RedmineCRM&lt;/a&gt; lo que nos ofrecerá los agile boards, version planner y burndown chart, la versión PRO para un solo sitio tiene un precio de $200, ofrece funcionalidades adicionales como organización en lineas horizontales, subcolumnas y colores para las peticiones en el panel kanban además de algunas opciones más. Para el caso de Redmine también hay otros plugins disponibles para gestionar los proyectos de forma ágil pero no tan buenos como el de RedmineCRM, estos son &lt;a href=&#34;http://www.redminebacklogs.net/&#34;&gt;Redmine Backlogs&lt;/a&gt; y &lt;a href=&#34;http://www.redmine.org/plugins/scrum2b&#34;&gt;Scrum2B&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Después de &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/&#34;&gt;instalar Redmine con Bitnami&lt;/a&gt; si queremos instalar el plugin ágile de RedmineCRM debemos realizar los siguientes pasos desde la terminal de la máquina virtual, en mi caso usando VirtualBox:&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/f1a28503a5ab420c95cf.js?file=instalar-redminecrm-bitnami.sh&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/f1a28503a5ab420c95cf/raw/instalar-redminecrm-bitnami.sh&#34;&gt;instalar-redminecrm-bitnami.sh&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;p&gt;Finalmente, debemos activar el plugin agile en el proyecto usando la opción Administration&amp;gt; Agile.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/59/configuración.png&#34; title=&#34;Activación panel Kanban&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/59/configuración-thumb.png&#34;&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Una vez activado ya podemos ver el panel kanban mostrado en la primera captura en la pestaña ágil. Por defecto en Redmine solo veremos las columnas New, In progress, Resolved y Feedback pero podemos modificar el flujo de las peticiones adaptándolo a nuestra metodología u organización, podemos hacer esto desde Administración&amp;gt; Estados de peticiones para crear nuevos estados y Administración&amp;gt; Flujo de trabajo para establecer el grafo de estados determinando a que estados puede cambiar una petición desde su estado actual.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/59/estados-peticiones.png&#34; title=&#34;Estados de peticiones&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/59/estados-peticiones-thumb.png&#34;&gt;&lt;/a&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/59/flujo-de-trabajo.png&#34; title=&#34;Flujo de trabajo&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/59/flujo-de-trabajo-thumb.png&#34;&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/&#34;&gt;Introducción al gestor de proyectos y tareas Redmine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/&#34;&gt;Introducción a Bitnami&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/&#34;&gt;Introducción e inicio a Drupal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-arch-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/12/hemeroteca-6/</id>
        <title>Hemeroteca #6</title>        
        <updated>2014-12-24T18:00:00+02:00</updated>
        <published>2014-12-24T16:02:04+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2014/12/hemeroteca-6/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/octopress.png&#34; class=&#34;right&#34; alt=&#34;Octopress&#34; title=&#34;Octopress&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Seis nuevos meses para el Blog Bitix cumpliendo un año como tal y siendo la continuación de los casi cuatro años de &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es&#34;&gt;El blog de pico.dev&lt;/a&gt;. Otro año que finaliza y toca hacer recapitulación de los que he escrito durante este tiempo, 26 nuevos artículos escritos con puntualidad uno por semana y publicados el viernes o sábado.&lt;/p&gt;

&lt;p&gt;Aunque aún no puedo usar profesionalmente el framework web &lt;a href=&#34;http://tapestry.apache.org&#34;&gt;Apache Tapestry&lt;/a&gt; con el realmente me divierto programando sigo escribiendo sobre él con algunos temas interesantes tales que cómo usar un CDN, cómo crear plantillas para dar un aspecto común a todas las páginas de la aplicación, una comparativa entre el modelo «pull» que usa Tapestry y el modelo «push» que normalmente se usa en los framework basados en acciones, cómo crear una doble barra de botones sin duplicar el mismo código, como forzar el uso de https o la anotación Cached. Todo este contenido lo he añadido al &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;libro PlugIn Tapestry&lt;/a&gt; y que puedes descargar de forma totalmente libre en varios formatos. No está mal y aún tengo más contenido pendiente por publicar tal que como embeber una aplicación web usando tomcat-embed de forma que la aplicación esté autocontenida y el despliegue sea más sencillo y evitemos problemas, hacer un ejemplo con el componente Grid que muestre sus grandes posibilidades y la gran cantidad de trabajo que nos puede ahorrar, &amp;hellip;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/08/actualizacion-del-libro-plugin-tapestry/&#34;&gt;Actualización del libro PlugIn Tapestry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/08/doble-barra-de-botones-con-apache-tapestry/&#34;&gt;Doble barra de botones con Apache Tapestry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/08/forzar-el-uso-del-protocolo-https-en-apache-tapestry/&#34;&gt;Forzar el uso del protocolo https en Apache Tapestry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/07/usar-apache-tapestry-en-una-aplicacion-standalone/&#34;&gt;Usar Apache Tapestry en una aplicación «standalone»&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/07/servir-recursos-estaticos-desde-un-cdn-en-apache-tapestry/&#34;&gt;Servir recursos estáticos desde un CDN en Apache Tapestry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/07/anotacion-cached-de-apache-tapestry/&#34;&gt;Anotación Cached de Apache Tapestry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/07/plantillas-en-apache-tapestry/&#34;&gt;Plantillas en Apache Tapestry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/07/modelo-push-contra-modelo-pull-en-frameworks-web/&#34;&gt;Modelo «push» contra modelo «pull» en frameworks web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Respecto a artículos sobre programación también he escrito unos cuantos relativos a Java, me parece que cada uno de estos son interesantes mostrando algunos aspectos avanzados y útiles. Por supuesto, también tengo pendientes por escribir más artículos sobre Java, como generics, palabra reservada assert, los métodos equals y hashCode y como implementarlos&amp;hellip;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/12/ejercicios-katas-para-mejorar-habilidades-de-programacion-practicando/&#34;&gt;Ejercicios (katas) para mejorar habilidades de programación practicando&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/12/8-plus-libros-para-mejorar-como-programadores/&#34;&gt;8+ libros para mejorar como programadores&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/10/como-filtrar-contenido-html-de-forma-segura/&#34;&gt;Cómo filtrar contenido HTML de forma segura&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/10/que-es-y-como-hacer-web-scraping-en-java/&#34;&gt;Qué es y cómo hacer «web scraping» en Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/10/generar-urls-semanticas-y-amigables/&#34;&gt;Generar URLs semánticas y amigables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/09/configuracion-usando-codigo-java/&#34;&gt;Configuración usando código Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/09/monitorizar-archivos-con-java/&#34;&gt;Monitorizar archivos con Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/09/compilar-y-cargar-de-forma-dinamica-una-clase-java/&#34;&gt;Compilar y cargar de forma dinámica una clase Java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Desde hace un tiempo estoy escribiendo más sobre temas de programación que sobre Linux más que nada porque Arch Linux me va también y me da tan pocos problemas que no encuentro oportunidades grandes de escribir sobre algún tema que le pueda resultar útil a alguien más. Sin embargo, si que he escrito sobre algunas herramientas que disponemos en Linux y del software libre como &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;, &lt;a href=&#34;http://www.ansible.com&#34;&gt;Ansible&lt;/a&gt; o &lt;a href=&#34;https://bitnami.com/&#34;&gt;Bitnami&lt;/a&gt;, tengo algunos artículos más por escribir sobre &lt;a href=&#34;http://memcached.org/&#34;&gt;Memcached&lt;/a&gt;, EncFS, algo más de &lt;a href=&#34;http://www.redmine.org/&#34;&gt;Redmine&lt;/a&gt;, &amp;hellip;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/&#34;&gt;Introducción a Bitnami&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/&#34;&gt;Integración entre Ansible y Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/&#34;&gt;Introducción a Ansible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/&#34;&gt;Cómo crear una imagen para Docker usando un Dockerfile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/11/inicio-basico-de-docker/&#34;&gt;Inicio básico de Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/&#34;&gt;Introducción y características de Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/09/agregador-blog-stack-redisenado/&#34;&gt;Agregador Blog Stack rediseñado&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/09/procesador-de-documentos-lyx/&#34;&gt;Procesador de documentos LyX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/08/experiencia-instalando-sistema-operativo-a-ordenador-viejo/&#34;&gt;Experiencia instalando sistema operativo a ordenador viejo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/08/de-arch-linux-a-arch-linux/&#34;&gt;De Arch Linux a Arch Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si no quieres perderte ninguno de los nuevos artículos que escriba puede suscribirte al &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/index.xml&#34;&gt;canal RSS de Blog Bitix&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/picodotdev/&#34;&gt;seguirme en twiter&lt;/a&gt; o desde hace un poco de tiempo seguir la &lt;a href=&#34;https://plus.google.com/114317443908384387611/posts&#34;&gt;página de Google+ de Blog Bitix&lt;/a&gt;. Por supuesto, en anteriores entregas de hemerotecas dispones de más artículos si algunos de estos te han parecido interesantes.&lt;/p&gt;

&lt;p&gt;Y para finalizar quiero agradecer a &lt;a href=&#34;https://twitter.com/fran_mosteiro&#34;&gt;Fran Mosteiro&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/josetesan&#34;&gt;Jose Luís Sáchez&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/jbravo&#34;&gt;Joaquín Bravo&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/mbmerayo&#34;&gt;Marcos Bello&lt;/a&gt; y algunos otros que esporádicamente también suelen hacer RT o marcar como favoritos los tweets de esta bitácora y que me ayudan un poquito o mucho a difundir lo que escribo ¡muchas gracias!, un saludo y ¡que comencéis bien el nuevo año 2015! :)&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/58/christmastux2014.jpg&#34; alt=&#34;Christmastux 2014&#34; title=&#34;Christmastux 2014&#34;&gt;
&lt;/div&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2013/06/hemeroteca-3.html&#34;&gt;Hemeroteca #3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2012/12/el-blog-de-picodev-te-desea-un-2013.html&#34;&gt;Hemeroteca #2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2012/06/hemeroteca-1.html&#34;&gt;Hemeroteca #1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2011/12/feliz-navidad-y-prospero-2012.html&#34;&gt;Hemeroteca #0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.klowner.com/wallpaper/&#34;&gt;Christmas Tux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="hemeroteca"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-arch-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/</id>
        <title>Introducción al gestor de proyectos y tareas Redmine</title>        
        <updated>2015-01-10T12:00:00+01:00</updated>
        <published>2014-12-19T19:57:31+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/redmine.png&#34; class=&#34;right&#34; alt=&#34;Redmine&#34; title=&#34;Redmine&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/bitnami.png&#34; class=&#34;right&#34; alt=&#34;Bitnami&#34; title=&#34;Bitnami&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Para desarrollar un proyecto de software se hace imprescindible disponer de algunas herramientas que nos permitan realizar las tareas. Una de estas herramientas es un &lt;a href=&#34;https://en.wikipedia.org/wiki/Issue_tracking_system&#34;&gt;gestor de tareas, peticiones o errores&lt;/a&gt;, que nos permite recoger en una herramienta gran parte de la información, conocer el estado, planificar y hacer el seguimiento las tareas necesario para desarrollar de forma ordenada, sin que perdamos nada de información y pudiendo recuperarla en cualquier momento en un futuro.&lt;/p&gt;

&lt;p&gt;Como es habitual herramientas que gestionan tareas disponemos de varias algunas de las más conocidas son &lt;a href=&#34;http://www.bugzilla.org/&#34;&gt;Bugzilla&lt;/a&gt;, &lt;a href=&#34;https://www.atlassian.com/software/jira&#34;&gt;JIRA&lt;/a&gt;, &lt;a href=&#34;https://www.mantisbt.org/&#34;&gt;Mantis&lt;/a&gt;, &lt;a href=&#34;http://trac.edgewall.org/&#34;&gt;Trac&lt;/a&gt; y la herramienta de la que hablaré en este artículo, &lt;a href=&#34;http://www.redmine.org/&#34;&gt;Redmine&lt;/a&gt;. Cada una de estas herramientas como gestores de tareas son parecidas pero se diferencian en algunas cosas como la licencia que tiene, el esquema de precios o la funcionalidad que ofrece. Redmine tiene una &lt;a href=&#34;http://www.gnu.org/licenses/old-licenses/gpl-2.0.html&#34;&gt;licencia de software libre GPL&lt;/a&gt; y por tanto la podemos usar sin ningún coste, en la siguiente tabla podemos compararla con los &lt;a href=&#34;https://www.atlassian.com/software/jira/pricing&#34;&gt;precios de JIRA&lt;/a&gt; que para pocos usuarios son asumibles pero que a medida que se aumentan los usuarios empiezan a ser notables aunque posiblemente alcanzables en función del tamaño de la empresa. En cualquier siendo JIRA también una herramienta excelente Redmine cumple perfectamente con la misma función. En la wikipedia podemos encontrar &lt;a href=&#34;https://en.wikipedia.org/wiki/Comparison_of_issue-tracking_systems&#34;&gt;más opciones y comparar unas con otras&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Si queremos evaluar Redmine una forma sencilla podemos hacerlo mediante una imagen de Bitnami con VirtualBox. En la &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/&#34;&gt;introducción a Bitnami&lt;/a&gt; comento qué es y como nos puede ayudar a disponer de software que en algunos casos no es simple de instalar y que con Bitnami podemos disponer de forma sencilla y rápida, además de como usar con VirtualBox cualquier imagen de Bitnami de las herramientas ofrecidas. Una vez seguidos los pasos de la guía anterior podemos acceder a Redmine con el navegador web y una dirección similar a &lt;em&gt;http://192.168.0.11&lt;/em&gt;, el usuario y contraseña para acceder es user y bitnami respectivamente.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/57/proyecto.png&#34; title=&#34;Proyecto&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/57/proyecto-thumb.png&#34;&gt;&lt;/a&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/57/peticion.png&#34; title=&#34;Petición&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/57/peticion-thumb.png&#34;&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Con Redmine podemos adaptar el flujo de las tareas a la forma de organización que empleemos, podemos personalizar el grafo de estados que siguen las tareas y que personas tiene permisos para hacer cada uno de los cambios de estado. También podemos añadir campos personalizados que queremos recoger para cada petición, por ejemplo, podemos querer dar un tamaño a las tareas en función de si estimamos que es grande, media o pequeña. También podemos crear filtros y guardarlos para encontrar fácilmente tareas.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/57/estados.png&#34; title=&#34;Estados&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/57/estados-thumb.png&#34;&gt;&lt;/a&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/57/propiedades.png&#34; title=&#34;Propiedades&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/57/propiedades-thumb.png&#34;&gt;&lt;/a&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/57/consulta.png&#34; title=&#34;Filtros&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/57/consulta-thumb.png&#34;&gt;&lt;/a&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/57/flujo-estados.png&#34; title=&#34;Flujo estados&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/57/flujo-estados-thumb.png&#34;&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Además de gestionar las tareas Redmine dispone de herramientas que nos pueden ser útiles en el proyecto como una wiki para recoger documentación del proyecto y un repositorio de documentos para aquellos que no queremos incluir en la herramienta de control de versiones por su tamaño pero que queremos que estén disponibles para cualquiera que trabaje con el proyecto.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/57/wiki.png&#34; title=&#34;Wiki&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/57/wiki-thumb.png&#34;&gt;&lt;/a&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/57/archivos.png&#34; title=&#34;Archivos&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/57/archivos-thumb.png&#34;&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Pero Redmine es más que una herramienta de gestión de tareas, los complementos pueden añadirle funcionalidad adicional que permite &lt;a href=&#34;http://www.redminecrm.com/projects/crm/pages/1&#34;&gt;convertirla en un CRM para gestionar las comunicaciones con clientes&lt;/a&gt; o en un &lt;a href=&#34;http://www.redminecrm.com/projects/helpdesk/pages/1&#34;&gt;helpdesk para atender las tareas de clientes&lt;/a&gt;. Además de otros como &lt;a href=&#34;http://www.redminecrm.com/projects/people/pages/1&#34;&gt;personalizar los usuarios de Redmine&lt;/a&gt; o crear &lt;a href=&#34;http://www.redminecrm.com/projects/checklist/pages/1&#34;&gt;pequeñas listas de tareas&lt;/a&gt; que nos evitará crear subtareas.&lt;/p&gt;

&lt;p&gt;En el siguiente artículo comentaré como instalar el &lt;a href=&#34;http://www.redminecrm.com/projects/agile/pages/1&#34;&gt;plugin agile de Redmine&lt;/a&gt; con la imagen de Bitnami en VirtualBox de forma que podamos visualizar las tareas en un panel kanban, y de un vistazo y rápidamente conozcamos las tareas que están terminadas, que están en progreso, a punto de empezarse o en la cola de tareas por hacer.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/&#34;&gt;Instalar y usar plugin ágil en Redmine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/&#34;&gt;Introducción e inicio a Drupal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.luisblasco.com/5-plugins-gratuitos-instalar-en-redmine/&#34;&gt;5 plugins gratuitos para instalar a Redmine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.redmine.org/projects/redmine/wiki/RedmineIssueList#Applying-and-saving-filters&#34;&gt;Aplicar y guardar filtros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/9027479/how-do-you-modify-a-filter-in-redmine&#34;&gt;Como modificar un filtro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.luisblasco.com/blog/&#34;&gt;Blog con varios artículos interesantes sobre Redmine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-arch-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/12/ejercicios-katas-para-mejorar-habilidades-de-programacion-practicando/</id>
        <title>Ejercicios (katas) para mejorar habilidades de programación practicando</title>        
        <updated>2014-12-13T12:06:06+01:00</updated>
        <published>2014-12-13T12:06:06+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2014/12/ejercicios-katas-para-mejorar-habilidades-de-programacion-practicando/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;p&gt;La semana pasada escribía sobre &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/12/8-plus-libros-para-mejorar-como-programadores/&#34;&gt;algunos libros que leer para ser mejores programadores&lt;/a&gt;, sin embargo, toda esa teoría solo sirve cuando se interioriza para usar más tarde en la práctica. Para interiorizar parte de ese conocimiento hasta el momento creo que no se ha inventado mejor manera que escribiendo código teniendo en cuenta esos principios.&lt;/p&gt;

&lt;p&gt;Las katas y dojos son unos ejercicios que se realizan para practicar, son problemas sencillos de los que se conoce la solución pero lo importante no es resolverlos sino aplicar las lecciones aprendidas y mejorar nuestras habilidades de programación que posteriormente usemos en los proyectos que trabajamos. Estos ejercicios se suelen realizar con otras personas, en la página &lt;a href=&#34;http://katayunos.com/&#34;&gt;Katayunos - Merendojos&lt;/a&gt; se suelen organizar encuentros en algunas ciudades y fechas, si no nos cuadran las fechas y lugares podemos realizarlas individualmente cuando y donde prefiramos aunque una de las partes que nos perderemos es aprender de las habilidades y formas de trabajar de otras personas.&lt;/p&gt;

&lt;p&gt;En la página &lt;a href=&#34;http://codekata.com/&#34;&gt;CodeKata&lt;/a&gt; podemos leer una introducción a las katas y una colección de ejercicios con los que practicar. En estos ejercicios deberemos intentar aplicar varios &lt;a href=&#34;http://javarevisited.blogspot.com.es/2012/03/10-object-oriented-design-principles.html&#34;&gt;principios de la programación orientada a objetos&lt;/a&gt; como el principio SOLID, DRY, abierto a extensión cerrado a modificación (OCP), &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2012/03/patrones-de-diseno-en-la-programacion.html&#34;&gt;patrones de diseño&lt;/a&gt;, nombres de métodos y variables que hagan que el código sea expresivo, teses unitarios, refactorizaciones, &amp;hellip; todas esas cosas que consideramos correctas para escribir buen código.&lt;/p&gt;

&lt;p&gt;El primero de los ejercicios propuestos en CodeKata es &lt;a href=&#34;http://codekata.com/kata/kata01-supermarket-pricing/&#34;&gt;Kata01: Supermarket Pricing&lt;/a&gt; que consiste en pensar una forma de representar los precios de los productos de un supermercado, aparte de un precio simple como puede ser $0.65 por producto, otros como tres por un dolar, $1.99 / pound o compre dos obtenga uno más gratis o con descuento. Para esta kata en internet hay comentadas varias soluciones, probablemente para representar los diferentes precios una solución sea crear una clase que calcule los diferentes tipos de precios aplicando el &lt;a href=&#34;https://es.wikipedia.org/wiki/Strategy_%28patr%C3%B3n_de_dise%C3%B1o%29&#34;&gt;patrón Strategy&lt;/a&gt; en función de como se calcule el precio de cada producto.&lt;/p&gt;

&lt;p&gt;Intentando implementar en código una posible solución aplicando el patrón Strategy, usando BigDecimal para los precios (en vez de double y float que no pueden representar correctamente algunos valores decimales), este ejemplo muestra como calcular el precio de un producto dada su cantidad y su tipo de precio.&lt;/p&gt;

&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/0ec7ceb33a4a78ef1bc2.js?file=Main.java&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/0ec7ceb33a4a78ef1bc2/raw/Main.java&#34;&gt;Main.java&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;script src=&#34;https://gist.github.com/picodotdev/0ec7ceb33a4a78ef1bc2.js?file=MainTest.java&#34;&gt;&lt;/script&gt;
  &lt;noscript&gt;&lt;pre&gt;&lt;a href=&#34;https://gist.githubusercontent.com/picodotdev/0ec7ceb33a4a78ef1bc2/raw/MainTest.java&#34;&gt;MainTest.java&lt;/pre&gt;&lt;/a&gt;&lt;/noscript&gt;
&lt;/div&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/56/teses-junit.png&#34; title=&#34;Ejecución de teses&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/56/teses-junit.png&#34;&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Aun practicando estas katas no va a hacer que luego nuestro código en un proyecto real sea perfecto ni siquiera algo cercano a ello más bien hará que sea un poquito mejor, estos ejercicios son bastante simples que no tienen las complejidades de algunos casos reales, aún así siguen mereciendo realizarlos. También hay que tener en cuenta que no son realmente para aprender a programar aunque si pueden servir para aprender un nuevo lenguaje sobre todo si se hacen con otra persona que ya lo conoce y mientras se realiza la kata podemos preguntarle y nos resuelva las dudas que nos vayan surgiendo de la sintaxis, API o herramientas de ese lenguaje.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://codekata.com/&#34;&gt;http://codekata.com/&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://katayunos.com/&#34;&gt;http://katayunos.com/&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codewars.com/&#34;&gt;http://www.codewars.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="java"/>
            
                <category term="software-libre"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-arch-linux"/>
            
                <category term="planeta-linux"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
</feed>
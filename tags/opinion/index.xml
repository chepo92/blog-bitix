<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://picodotdev.github.io/blog-bitix/tags/opinion/index.xml</id>
    <title type="text">Blog Bitix</title>
    <subtitle>Recent content on Blog Bitix</subtitle>
    <updated>0001-01-01T00:00:00+00:00</updated>
    <author><name>pico.dev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix//assets/images/custom/logotipos/hugo.png</icon>
    <logo>https://picodotdev.github.io/blog-bitix//assets/images/custom/logotipos/hugo.png</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/10/sobre-el-rapido-avance-de-la-tecnologia/</id>
        <title>Sobre el rápido avance de la tecnología</title>        
        <updated>2016-10-12T22:00:00+02:00</updated>
        <published>2016-10-12T12:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/10/sobre-el-rapido-avance-de-la-tecnologia/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;La tecnología en un periodo tan corto como un año avanza significativamente, una buena decisión es comprar un producto cuando realmente lo necesitemos o suponga una mejora notable en las posibilidades que nos ofrece respecto a lo que ya poseemos.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;p&gt;El mundo de la tecnología avanza muy rápido, las mejoras son constantes y en el tiempo de pocos meses o un año los dispositivos son notablemente más capaces generalmente manteniendo o incluso a un pequeño menor precio. Los procesadores, las tarjetas gráficas, la cantidad de memoria RAM, la capacidad de los discos duros, los discos de estado sólido es raro que cada año no tengan nuevas generaciones que prometen más rendimiento en los ordenadores personales. Más recientemente los teléfonos inteligentes con una cantidad de memoria RAM mayor que no hace tanto tenían los ordenadores personales, quizá en no mucho tiempo puedan sustituir en muchas tareas para la mayoría de usuarios a los PC con &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/06/la-siguiente-disrupcion-tecnologica-la-convergencia/&#34;&gt;la convergencia que baticino será la siguiente disrupción tecnológica&lt;/a&gt;, los televisores con capacidad de obtener contenidos de internet y que próximamente veremos con una resolución 4K y en un futuro con 8K cuando aún algunas cadenas de televisión no emiten aún ni en verdadera resolución 1080p, el ancho de banda de internet que aún no se quien puede necesitar 300 Mb simétricos en el hogar pero que ya se ofrecen, &amp;hellip;&lt;/p&gt;

&lt;p&gt;Mucha gente cambia de &lt;em&gt;smartphone&lt;/em&gt; pagando un precio considerable entre los 600 y 800 € en la gama alta en el plazo de un año para tener la última edición aún cuando el que tienen les puede servir perfectamente. Muchas empresas dan soporte a sus productos durante muy poco tiempo con lo que impide a sus usuarios instalar las últimas versiones de software como es el caso de &lt;a href=&#34;https://www.android.com/&#34;&gt;Android&lt;/a&gt; y su conocida fragmentación dado que incluso los teléfonos con el sello de &lt;a href=&#34;https://www.google.es/&#34;&gt;Google&lt;/a&gt; en dos años dejan de tener actualizaciones o en el caso de los controladores en el caso del sistema operativo &lt;a href=&#34;http://www.microsoft.com/es-es/windows/&#34;&gt;Windows&lt;/a&gt; que no todos funcionan en las nuevas versiones y cierto hardware queda abandonado. Los productos se quedan obsoletos aún cuando siguen siendo perfectamente capaces y aún no siendo lo último siguen siendo útiles. Otro ejemplo se da en los juegos donde muchos de los nuevos títulos tiene unos requisitos que para jugarlos a una calidad gráfica notable requieren de una de las tarjetas gráficas de última generación, penúltima o poco más.&lt;/p&gt;

&lt;p&gt;Lo anterior junto con la enorme cantidad de información o publicidad incitando a comprar hacen que muchas personas gasten su dinero en los nuevos productos. Las empresas de tecnología necesitan que los consumidores compren sus productos, en un exceso de consumismo, que en un periodo de meses o menos de un año quedan superados por nuevos productos más mejores y los predecesores se devalúan al mismo tiempo y así se continuea este ciclo vicioso. Al menos en cuanto tecnología considero que hay que comprar algo cuando realmente nos vaya a ser útil ni antes ni mucho más tarde resistiendo el bombardeo de publicidad e información que incita a adquirir la innecesaria cara última novedad, cuando hagamos la compra el producto nos saldrá más barato o será más capaz. Esto tampoco significa que estemos constantemente esperando a un nuevo producto ya que en muchos acaba de salir una novedad y ya se está hablando de su sucesora a un año vista prometiendo mejoras.&lt;/p&gt;

&lt;p&gt;Hoy en día hay personas que siguen divirtiéndose con sus consolas de varias décadas o con &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/&#34;&gt;emuladores y juegos míticos&lt;/a&gt; que en cuanto a jugabilidad y ratos entretenidos no tienen nada que envidiar a algunos de los títulos y consolas actuales. También hay personas que con equipos antiguos o limitados como una &lt;a href=&#34;http://www.raspberrypi.org/&#34;&gt;Raspberry Pi&lt;/a&gt; y sus conocimientos son capaces de realizar proyectos interesantes.&lt;/p&gt;

&lt;p&gt;Tener lo último en tecnología es efímero, nada que no sepa alguien con cierta edad, además de innecesario, exprime la mayor utilidad de lo que tengas, compra solo cuando sea necesario o la mejora sea realmente notable y no por capricho.&lt;/p&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/08/sobre-los-infimos-impuestos-que-paga-apple/</id>
        <title>Sobre los ínfimos impuestos que paga Apple</title>        
        <updated>2016-09-02T23:30:00+02:00</updated>
        <published>2016-08-31T10:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/08/sobre-los-infimos-impuestos-que-paga-apple/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/apple.png&#34; class=&#34;right&#34; alt=&#34;Apple&#34; title=&#34;Apple&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;El 30 de agosto de 2016 la Comisión Europea anunciaba que &lt;a href=&#34;http://www.apple.com/&#34;&gt;Apple&lt;/a&gt; debía devolver a Irlanda la cantidad correspondiente obtenida por las ventajas fiscales que considera irregulares, una cantidad astronómica de unos 13000 millones de euros mas los intereses desde 2003. Si ya Irlanda ofrece una fiscalidad ventajosa al tener un tipo impositivo del 12,5% de los beneficios, Apple con acuerdos conseguía pagar un 1% y un 0,005%. Acuerdos que la comisión Europea considera irregulares porque solo se aplica a algunas empresas como Apple siendo una desventaja y trato de favor respecto a otras empresas establecidas en Irlanda. Esta fiscalidad ventajosa es el motivo de que otras muchas empresas tecnológicas de EEUU tengan su sede europea en Irlanda, en España por ejemplo debería haber pagado un 25%.&lt;/p&gt;

&lt;p&gt;Algunos medios informaban así de la noticia:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.eldiario.es/economia/Bruselas-Apple-fiscales-ilegales-Irlanda_0_553644787.html&#34;&gt;Bruselas obliga a Apple a devolver 13.000 millones por ayudas fiscales ilegales en Irlanda &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://economia.elpais.com/economia/2016/08/30/actualidad/1472548799_072096.html&#34;&gt;Bruselas sanciona a Apple con la devolución de 13.000 millones por ventajas fiscales&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.elespanol.com/economia/macroeconomia/20160830/151735181_0.html&#34;&gt;Así es como defraudan a Hacienda las grandes tecnológicas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.eldiario.es/economia/cifras-detras-impuestos-debe-Apple_0_553645153.html&#34;&gt;Ocho cifras que explican qué supone para Apple pagar 13.000 millones a Irlanda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://economia.elpais.com/economia/2016/08/31/actualidad/1472634892_118904.html&#34;&gt;¿Por qué Irlanda no quiere recuperar el dinero de Apple? Las claves de la sanción de Bruselas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.elespanol.com/economia/empresas/20160901/152235690_0.html&#34;&gt;Apple y su ridícula factura fiscal en España: 19 millones en 10 años&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Horas después Apple en su web publicaba una carta firmada por Tim Cook indicando lo mucho que contribuye en empleos e inversiones en Europa que se verán amenazadas además de afirmar que no ha recibido ninguna ventaja fiscal de la que se le acusa.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.apple.com/es/customer-letter/&#34;&gt;Un mensaje para la comunidad de Apple en Europa&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/175/apple-tim-cook-letter.png&#34; title=&#34;Carta de Apple a su comunidad en Europa&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/175/apple-tim-cook-letter-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Carta de Apple a su comunidad en Europa&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Hasta aquí los hechos.&lt;/p&gt;

&lt;p&gt;Lo primero que hay que destacar es que en realidad la Comisión Europea no le pone una multa a Apple ni a Irlanda por cometer una irregularidad sino que simplemente le obliga a devolver lo que debería haber pagado y no durante todo el tiempo que cometió la irregularidad sino simplemente desde el 2003, las ventajas fiscales se remontan a 1991. Pagar menos impuestos de los que debe le sale barato a Apple, si no le obligan esos miles de millones que no paga en impuestos, si le obligan solo tiene que devolver lo que debería haber pagado igual que si no hubiera hecho la trampa y solo a partir de una fecha en que la situación no ha prescrito. Toda una oportunidad para obtener máximos beneficios.&lt;/p&gt;

&lt;p&gt;La carta de Tim Cook demuestra el tono con el que actúa y por el medio en el que la publica, en su propio sitio web, parece más bien dirigida a salvar su imagen entre sus usuarios y clientes que a la Comisión Europea. «la dirección de Apple supo ver un lugar rico en talento» a lo que seguidamente se atribuye también ser ejemplo para otras multinacionales, ya sería más bien por las ventajas fiscales del lugar. Un buena parte de la carta está dirigida a expresar la cantidad de empleos e inversión que según Apple genera ya sea directamente, que solo son unos paupérrimos 6000 para su volumen de negocio, y un millón y medio según ellos entre desarrolladores de aplicaciones y pequeñas y medianas empresas que dependen de Apple. Por este mensaje parece que Apple se debe consentir su irregularidad en aras de mantener esta actividad que alardea de generar. En la carta por supuesto dice que su ingeniería fiscal está de acuerdo a la legalidad y que no ha recibido las ventajas fiscales de las que le acusa la Comisión Europea. Comisión Europea que no debe estar de acuerdo después de años de observación e investigación.&lt;/p&gt;

&lt;p&gt;Apple junto con Estados Unidos e Irlanda recurrirán la resolución. Irlanda con su tipo impositivo reducido y prácticamente inexistente para Apple &lt;a href=&#34;http://economia.elpais.com/economia/2010/12/07/actualidad/1291710775_850215.html&#34;&gt;en 2010 fué rescatada&lt;/a&gt; por importe de 45000 millones de euros. Estados Unidos interviniendo en un asunto para proteger los intereses de una de sus empresas más grandes. Y todo esto sin el infame &lt;a href=&#34;http://economia.elpais.com/economia/2015/03/02/actualidad/1425256390_372094.html&#34;&gt;acuerdo de inversiones y libre comercio TTIP&lt;/a&gt; que el estado norteamericano quiere acordar con la Unión Europea con el que esta disputa se resolvería en un tribunal supranacional que reduciría la soberanía de la Unión Europea y sus estados miembro. Parece que son los EEUU los que más intereses tienen y rápido en aprobar el TTIP ya que con seguridad les sea muy y más ventajoso para ellos y sus empresas. En época de paz una forma de dominio y nueva forma de guerra fría es la económica. Si EEUU es capaz de espiar a ciudadanos y &lt;a href=&#34;http://www.20minutos.es/noticia/2503946/0/eeuu-espia/bce-merkel/wikileaks/&#34;&gt;presidentes de gobiernos aliados&lt;/a&gt; no sería de extrañar que espiase también a empresas extranjeras para proteger a la suyas y darles ventajas competitivas o su economía capitalista.&lt;/p&gt;

&lt;p&gt;En este caso la elegida ha sido Apple siendo la empresa de referencia pero otras empresas tecnológicas norteamericanas emplean la misma ingeniería fiscal para reducir a la mínima expresión los impuestos que pagan en sus actividades en todo el continente europeo. ¿Habrá alguna siguiente obligada a pagar los impuestos que le correpondían?. Ingeniería fiscal que no está al alcance de las pequeñas y medianas empresas ni de los ciudadanos y por ello es injusta. No es casualidad y tampoco es porque los irlandeses sean especialmente listos, talentosos o más trabajadores que otras empresas como &lt;a href=&#34;http://www.microsoft.com/&#34;&gt;Microsoft&lt;/a&gt;, &lt;a href=&#34;https://www.google.es/&#34;&gt;Google&lt;/a&gt;, &lt;a href=&#34;http://www.amazon.es/&#34;&gt;Amazon&lt;/a&gt; o &lt;a href=&#34;https://www.facebook.com/&#34;&gt;Facebook&lt;/a&gt; entre otras grandes también tengan su sede europea en Irlanda.&lt;/p&gt;

&lt;p&gt;Hay otras disputas como en el caso de &lt;a href=&#34;http://www.adslzone.net/2016/04/20/europa-acusa-oficialmente-google-monopolio-android/&#34;&gt;Google acusada de monopolio en Europa&lt;/a&gt; que puede acarrearle en este caso sí alguna cuantiosa sanción económica. O la &lt;a href=&#34;https://es.globalvoices.org/2016/02/15/netizen-report-la-ue-se-enfrenta-a-facebook-en-materia-de-privacidad/&#34;&gt;privacidad de los ciudadanos europeos por parte de Facebook&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Es tu decisión y responsabilidad también sabiendo esta información de que empresas y productos consumes. Si esta es la legalidad no se a que esperan los políticos honestos, con coraje y determinación para cambiarla y hacerla justa.&lt;/p&gt;



        </content>
        
            
                <category term="apple"/>
            
                <category term="blog-stack"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/08/eligiendo-proveedor-de-internet-finalmente-pepephone/</id>
        <title>Eligiendo proveedor de internet, finalmente Pepephone</title>        
        <updated>2016-08-14T22:30:00+02:00</updated>
        <published>2016-08-14T12:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/08/eligiendo-proveedor-de-internet-finalmente-pepephone/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Cada unos de los operadores de telecomunicaciones más conocidos e importantes ofrecen internet ya sean con fibra óptica, ADSL o incluso 4G. Junto con la forma de ofrecer internet que en la mayoría es mediante fibra las diferencias están en el precio y las diferencias son significativas. En este artículo comentaré que opciones he barajado y por cual me he decidido finalmente.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/pepephone.png&#34; class=&#34;right&#34; alt=&#34;Pepephone&#34; title=&#34;Pepephone&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Después de hacer unos cuantos temas ha llegado el turno de elegir un proveedor de internet. Como en todos los casos en los que hay que tomar alguna decisión he empezado por recopilar que opciones ofrece cada compañía, con que características y precios. Hay diferencias importantes entre algunas de las ofertas de los operadores que dependiendo de nuestras necesidades alguna se adaptará mejor, no hay una oferta que de forma absoluta sea la mejor aunque puede que si para una mayoría.&lt;/p&gt;

&lt;p&gt;Mis necesidades era simplemente de internet sin combinar con algún plan de móvil, así que con este simple requisito empecé a informarme. Varios operadores ofrecen internet ya sea con &lt;abbr title=&#34;Asymmetric Digital Subscriber Line&#34;&gt;ADSL&lt;/abbr&gt; si no tienen cobertura de fibra entre ellos &lt;a href=&#34;http://www.movistar.es/&#34;&gt;Movistar&lt;/a&gt;, &lt;a href=&#34;http://www.vodafone.es&#34;&gt;Vodafone&lt;/a&gt;, &lt;a href=&#34;http://www.orange.es/&#34;&gt;Orange&lt;/a&gt;, &lt;a href=&#34;http://www.amena.com/&#34;&gt;Amena&lt;/a&gt;, &lt;a href=&#34;http://www.pepephone.com/&#34;&gt;Pepephone&lt;/a&gt; o &lt;a href=&#34;http://www.euskaltel.com&#34;&gt;Euskaltel&lt;/a&gt;. De entre estos debía buscar la oferta que más me convenciera. Una de las primeras diferencias que encontré y que me llamaron la atención aunque ya estaba informado es que en los casos de Pepephone y Amena ofrecen una modalidad de internet sin teléfono fijo lo que evita el abultado coste de la línea o ya está incluido en el precio haciendo que sean algo más baratas. Todas las ofertas que vi del resto de operadores incluían la instalación del obsoleto teléfono fijo que en mi caso no iba a utilizar. Como con el móvil tengo más que suficiente para llamadas de voz las opciones de Amena y Pepephone que no necesitan instalar teléfono junto con el precio ya era un par de buenos motivos para posicionar las opciones.&lt;/p&gt;

&lt;p&gt;Aún con dos buenos motivos revisé cuales eran los precios de cada uno de los operadores. Conociéndolos la verdad es que algunos operadores se exceden en sus precios. ¿60€ o más mensuales por tener internet? Por mucho ancho de banda simétrico y megas que ofrezcan me parecía muy caro, además aún descargando mediante &lt;abbr title=&#34;Peer-to-peer&#34;&gt;P2P&lt;/abbr&gt; gran cantidad de cosas es innecesario la cantidad de ancho de banda que ofrecen. 300, 100, 50, incluso 30 o menos son más de lo que necesita un porcentaje altísimo de gente para navegar por internet e incluso para hacer un uso moderado descargas por P2P el menor ancho de banda contratable es suficiente. No se quien necesitará 300 megas simétricos de bajada y subida para uso residencial, me parece más que una necesidad publicidad para endosar una factura de más de 60 €/mes a los clientes.&lt;/p&gt;

&lt;p&gt;Estos son los precios aproximados finales y fuera de promociones que los operadores mayoritarios se encargan de ocultar con promociones durante unos meses para desinformar a sus futuros clientes. Salvo Pepephone y la opción de Amena en casa que lo dejan bastante claro además de ser de los mejores precios.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.movistar.es/particulares/internet/adsl-fibra-optica?pid=PA-home-NuestrosProductos-2&#34;&gt;Movistar: 32,30 + 17,40 (linea), 53,40 €/mes, fibra 30Mb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.vodafone.es/tienda/particulares/es/internet-y-fijo/tarifas-cobertura-fibra-adsl/?mostrarGE=true&#34;&gt;Vodafone: 31,85 + 18,15 (linea), 50 €/mes, fibra 30Mb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://internet.orange.es/adsl/&#34;&gt;Orange 25,95 + 18,15 (linea), 44,1 €/mes, fibra 50Mb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.euskaltel.com/CanalOnline/particulares/tienda/fijo/modalidades-internet&#34;&gt;Euskaltel: 44 €/mes (línea incluída), cable/fibra 30 Mb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jazztel.com/internet/fibra.html&#34;&gt;Jazztel: 19,32 + 19,34, 38,64 €/mes, fibra 20 Mb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amena.com/tarifas/&#34;&gt;Amena en casa: 29,95 €/mes, 4G&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.pepephone.com/adsl&#34;&gt;Pepephone: 23,6 €/mes, ADSL hasta 20 Mb (la máxima que permita la linea)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Así que las opciones mejor posicionadas como candidatas era el &lt;a href=&#34;https://www.pepephone.com/adsl&#34;&gt;ADSL de Pepephone&lt;/a&gt; o la opción de &lt;a href=&#34;http://tiendaonline2.amena.com/tarifas/amena-en-casa&#34;&gt;Amena en casa&lt;/a&gt;, sin teléfono fijo y de las opciones más baratas que hay. Comparando estas opciones la de Amena en casa me gustaba que no necesitaba instalación ya que funciona las redes de telefonía 4G al igual que los móviles ofreciendo velocidades similares a la fibra y mayores incluso que el ADSL. En contra de Amena en casa es que es unos 6 euros al mes más cara que el ADSL de Pepephone y que tiene un límite de tráfico de 40 GiB mensuales que no creo que la mayoría de meses superase pero alguno que hiciese descargas con P2P o alguna descarga directa puede que si, superando ese límite de tráfico no se incurre en ningún gasto adicional pero se limita la velocidad a unos ridículos 128 Kbps. Por los mismos motivos a favor de el ADSL de Pepephone tenía el precio y en su contra que necesita instalación de línea nueva que cuesta unos 90 € mas 39 € del coste del &lt;em&gt;router&lt;/em&gt; ADSL, aunque adquirir el &lt;em&gt;router&lt;/em&gt; es opcional y nos puede servir el de algún otro operador si ya disponemos con anterioridad, yo no tenía. Con Pepephone el coste de instalación y el &lt;em&gt;router&lt;/em&gt; llega a 129 € con iva incluido, la opción de Amena en casa solo tiene el coste del &lt;em&gt;router&lt;/em&gt; que es de 59 €. Una diferencia de 70 € que con el menor precio de Pepephone se compensa en 12 meses (mucho antes si lo comparamos con otra opción), 15 si incluyésemos el que nos diésemos de baja en Pepephone y la línea que tendría un coste administrativo de 18€. Finalmente por el precio de 23,6 € al mes, por no tener límite de tráfico y por su forma de trato a sus clientes me decidí por Pepephone. El coste inicial es significativo pero pasados unos meses compensa.&lt;/p&gt;

&lt;p&gt;Otro aspecto de Pepephone que me gustaba es el reconocimiento en el trato que ofrecen a los clientes que ellos mismos destacan. Mi experiencia anterior era con Euskaltel y estos tienen la mala costumbre cada año sin que lo pidas subir los megas pero también la factura. En vez de más megas preferiría internet más barato, los accionistas de esa empresa al igual que otras no deben pensar lo mismo. Me parece que los operadores dominantes tratan de exprimir a sus clientes con «ofertas» envenenadas, ahora están con las que incluyen televisión de pago y el fútbol. Los incautos se darán cuenta de que les llegan facturas de entre 50 y 80 euros mensuales, alguien tiene que pagar (que no cuenten conmigo) las obscenas fichas y cláusulas de rescisión de las estrellas del fútbol aunque sean &lt;a href=&#34;http://www.eldiario.es/catalunya/Messi-condenados-carcel-fraude-fiscal_0_534396864.html&#34;&gt;condenados a 21 meses de cárcel por fraude fiscal&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Volviendo a Pepephone, el &lt;em&gt;router&lt;/em&gt; ADSL2+ que proporciona Pepephone está bastante bien en el momento de mi contratación es un &lt;a href=&#34;https://www.asus.com/es/Networking/DSLN14U/&#34;&gt;ASUS DSL-N14U&lt;/a&gt; del que en &lt;a href=&#34;http://www.redeszone.net/&#34;&gt;RedesZone&lt;/a&gt; han hecho varios artículos con un análisis muy detallado. Estas son su características principales:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;WiFi 802.11 b/g/n de hasta 300 Mbps&lt;/li&gt;
&lt;li&gt;Cuatro puertos Fast-Ethernet&lt;/li&gt;
&lt;li&gt;Un puerto USB 2.0&lt;/li&gt;
&lt;li&gt;64 MB memoria RAM y 16 MB de memoria &lt;em&gt;flash&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;CPU Ralink RT63365E&lt;/li&gt;
&lt;li&gt;Soporta descargas por torrent y compartición con CIFS/SAMBA, FTP, DLNA, VPN PPTP&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Artículos analizándo el &lt;em&gt;router&lt;/em&gt; ASUS DSL-N14U:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.redeszone.net/2016/07/25/analisis-del-router-asus-dsl-n14u-del-operador-pepephone/&#34;&gt;Análisis del &lt;em&gt;router&lt;/em&gt; ASUS DSL-N14U del operador Pepephone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.redeszone.net/pepephone/asus-dsl-n14u-analisis/&#34;&gt;ASUS DSL-N14U: Análisis del nuevo &lt;em&gt;router&lt;/em&gt; de Pepephone para su ADSL2+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.redeszone.net/pepephone/asus-dsl-n14u-manual-configuracion/&#34;&gt;ASUS DSL-N14U: Manual de configuración del nuevo &lt;em&gt;router&lt;/em&gt; de Pepephone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.redeszone.net/pepephone/asus-dsl-n14u-manual-servidor-vpn-pptp/&#34;&gt;ASUS DSL-N14U: Manual de configuración del servidor VPN PPTP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Solicitada la instalación en unos días un técnico de Movistar me instaló la línea nueva (linea que realmente es de Vodafone) y el &lt;em&gt;router&lt;/em&gt; me llegó por mensajero al día siguiente, en una semana ya disponía de internet sin complicaciones en la instalación. La velocidad bruta no es la misma que tenía con el cable de Euskaltel y será menor que la fibra pero para navegar no hay mucha diferencia y si en el precio. Como dice Pepephone el ADSL es algo más feo que la fibra y tiene razón de que hay mucha tontería con los megas, para navegar no noto apenas diferencia. Lo noto cuando actualizo &lt;a href=&#34;https://www.archlinux.org/&#34;&gt;Arch Linux&lt;/a&gt; o cuando pongo la &lt;a href=&#34;http://www.raspberrypi.org/&#34;&gt;Raspberry Pi&lt;/a&gt; a descargar por P2P. Aún llegando solo a 630 KiB/s en la descarga cuando con Euskaltel llegaba a 2 MiB/s me es más que suficiente, la RPi la dejo el tiempo que haga falta y en unas horas no hay película que no pueda descargar y la actualización de Arch lleva algo más de tiempo en la descarga pero no algo excesivo.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/169/57b048f847e0d91df7ed6dcc.png&#34; title=&#34;Test de velocidad de ADSL Pepephone&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/169/57b048f847e0d91df7ed6dcc.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Test de velocidad de ADSL Pepephone&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Estos 9 MiB de bajada y 400 KiB de subida son algo menos de la mitad teórica del ADSL y en algunas &lt;a href=&#34;http://www.testdevelocidad.es/&#34;&gt;pruebas de velocidad&lt;/a&gt; que he hecho me ha dado resultados de 4 MiB / 200 KiB pero aún en el peor de los casos en la navegación no es perceptible. Respecto a la estabilidad de la linea sin ningún problema, en las pruebas de &lt;em&gt;ping&lt;/em&gt; que he hecho no se pierden paquetes. Esta menor velocidad que la teórica es algo que no era una sorpresa para mí que ya me lo esperaba aunque pensaba que sería algo mejor y como he comentado la velocidad no es a lo que más importancia le he dado, si al precio.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/169/pepephone.jpg&#34; title=&#34;Router ADSL de Pepephone&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/169/pepephone-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Router ADSL de Pepephone&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="desempaquetado"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/no-un-tag-jsp-o-un-tag-de-grails-no-es-equivalente-a-un-componente-de-tapestry/</id>
        <title>No, un tag JSP o un tag de Grails no es equivalente a un componente de Tapestry</title>        
        <updated>2016-07-25T12:00:00+02:00</updated>
        <published>2016-07-25T12:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/07/no-un-tag-jsp-o-un-tag-de-grails-no-es-equivalente-a-un-componente-de-tapestry/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Alguna vez que he dado una presentación sobre Apache Tapestry después de la misma me comentaron que eso mismo que explicaba se podía hacer con el &lt;em&gt;framework&lt;/em&gt; que esa persona usaba. En un proyecto la tecnología no es es lo más importante pero es una herramienta que puede facilitar en gran medida el desarrollo. Respecto a los componentes de Tapestry alguien puede pensar que son iguales a los &lt;em&gt;tag&lt;/em&gt; que existen en las tecnologías de presentación como JSP o Grails. En este artículo comentaré algunas diferencias importantes que los hace más y muy interesantes junto con otras características de &lt;em&gt;framework&lt;/em&gt;.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/tapestry.png&#34; class=&#34;right&#34; alt=&#34;Apache Tapestry&#34; title=&#34;Apache Tapestry&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/java.png&#34; class=&#34;right&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Viendo el panel &lt;a href=&#34;https://es.wikipedia.org/wiki/Kanban_(desarrollo)&#34;&gt;Kanban&lt;/a&gt; de la herramienta de peticiones &lt;a href=&#34;https://www.atlassian.com/software/jira&#34;&gt;JIRA&lt;/a&gt; que usamos para registrar y priorizar las siguiente tareas en la empresa que trabajo hay unas cuantas que consisten en dado un listado de compras poder realizar operaciones sobre múltiples filas sin salir de la pantalla del listado. La necesidad es evitar que los usuarios de la aplicación hagan las acciones de forma individual de forma repetitiva, evitarles esto harán que sean más productivos y podrán desarrollar su trabajo mejor y más rápido. Así de sencillo, aparentemente.&lt;/p&gt;

&lt;p&gt;Esta necesidad que en la realidad será implementada con &lt;a href=&#34;https://grails.org/&#34;&gt;Grails&lt;/a&gt; quería compararla con una implementación equivalente usando &lt;a href=&#34;http://tapestry.apache.org&#34;&gt;Apache Tapestry&lt;/a&gt; porque como en muchas otras necesidades intuyo que con Tapestry implementarlas es significativamente más sencillo y con un resultado de implementación como en este caso con el que quedo más a gusto.&lt;/p&gt;

&lt;h3 id=&#34;la-necesidad&#34;&gt;La necesidad&lt;/h3&gt;

&lt;p&gt;Definiendo más la necesidad hasta ahora cada fila del listado tiene un conjunto de botones para realizar acciones individuales y ahora se quiere al final del listado otro conjunto de botones para realizar acciones sobre las compras que se seleccionen de forma múltiple. Para seleccionar las compras se usará un &lt;em&gt;checkbox&lt;/em&gt; colocado al inicio de cada fila. Para algunas acciones el usuario ha de introducir información adicional cosa que hará con un diálogo modal que ya existe pero que hasta ahora solo permitía hacer la acción de forma individual. Las mismas acciones se realizarán en varias páginas de la aplicación (después de la acción se deberá volver a la página en la que se estaba), solo se podrán hacer las acciones múltiples si en todas las compras seleccionadas es posible realizar esa acción y el contenido de los diálogos solicitando información adicional podrán depender de las compras seleccionadas. Las acciones en el ejemplo serán habilitar o deshabilitar. Determinar las acciones posibles de una compra es compleja y saber si una acción es posible no depende solo de información en la propia compra sino de otras entidades del sistema, en el ejemplo no será así pero se tendrá en cuenta en la implementación.&lt;/p&gt;

&lt;p&gt;Esta sería una imagen del prototipo de los botones para hacer acciones múltiples, seleccionar compras y el diálogo modal para introducir información adicional.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/164/listado.png&#34; title=&#34;Listado de productos&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/164/listado-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/164/modal.png&#34; title=&#34;Modal solicitando información adicional&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/164/modal-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Listado y modal de la necesidad expuesta&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;En la necesidad real las filas son compras pero en el ejemplo usaré la entidad &lt;em&gt;Product&lt;/em&gt;. Las acciones en el ejemplo serán habilitar para la que no será necesaria información adicional, la otra acción será deshabilitar para la que se necesitará introducir una razón con un modal.&lt;/p&gt;

&lt;h3 id=&#34;las-posibilidades&#34;&gt;Las posibilidades&lt;/h3&gt;

&lt;p&gt;Para implementar técnicamente el que solo se puedan hacer las acciones múltiples según los productos seleccionadas se habilitarán o deshabilitarán los botones con JavaScript sin peticiones AJAX adicionales al servidor para ello toda la información necesaria deberá estar en el cliente. En este caso bastará habilitar o deshabilitar cada botón según si esa acción es posible en todas los productos seleccionadas pero eso podría no bastar ya que se podría requerir que productos fuesen del mismo vendedor. En el ejemplo con un atributo en un elemento HTML de la fila que contenga las acciones posibles separadas por comas bastará. De esta forma no habrá que hacer consultas adicionales al servidor mediante peticiones AJAX en cada nueva selección.&lt;/p&gt;

&lt;p&gt;Sin embargo, como el contenido de los diálogos depende del producto o productos seleccionadas se hará una petición AJAX para obtener su contenido. De esta forma el contenido de los diálogos no tendrá que estar precargado (el número de acciones podría ser una decena) en el cliente ni generarlo con JavaScript en cliente que sería algo más complicado que usar la propia tecnología para generar contenido que está presente en el servidor y posiblemente más propenso a errores por usar JavaScript.&lt;/p&gt;

&lt;h3 id=&#34;la-implementación-con-apache-tapestry&#34;&gt;La implementación con Apache Tapestry&lt;/h3&gt;

&lt;p&gt;Definida la necesidad y unas pocas notas voy a poner el código de como con Apache Tapestry implementar la solución. La página del listado será la siguiente. En el &lt;em&gt;checkbox&lt;/em&gt; de selección se añade el atributo &lt;em&gt;data-product-actions&lt;/em&gt; con las acciones posibles que se obtienen del servicio &lt;em&gt;AppService&lt;/em&gt; con el método &lt;em&gt;getAvaliableActions&lt;/em&gt;. El componente de Tapestry &lt;em&gt;actions&lt;/em&gt; generará el código de los botones tanto para los individuales en su uso &lt;em&gt;&amp;lt;t:actions&amp;gt;&lt;/em&gt; con el parámetro &lt;em&gt;product&lt;/em&gt; como múltiples en su uso con el parámetro &lt;em&gt;type&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/11715e0799339d0335a30ce30a17ee58.js?file=Index.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/11715e0799339d0335a30ce30a17ee58.js?file=Index.tml&#34;&gt;&lt;/script&gt;

&lt;p&gt;El código para mostrar las acciones con botones para un determinado producto o para los productos es el siguiente. El mismo componente se encargará de realizar en el servidor la acción habilitar que no necesita modal. Con un poco de &lt;a href=&#34;http://es.wikipedia.org/wiki/JavaScript&#34;&gt;JavaScript&lt;/a&gt;, &lt;a href=&#34;http://jquery.com/&#34;&gt;jQuery&lt;/a&gt; y &lt;a href=&#34;http://underscorejs.org/&#34;&gt;Underscore&lt;/a&gt; se habilitarán o deshabilitarán los botones y se mostrará el diálogo para la acción deshabilitar.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/11715e0799339d0335a30ce30a17ee58.js?file=Actions.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/11715e0799339d0335a30ce30a17ee58.js?file=Actions.tml&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/11715e0799339d0335a30ce30a17ee58.js?file=actions.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;El código del modal para deshabilitar sería el siguiente. En el método &lt;em&gt;show&lt;/em&gt; recibe los &lt;em&gt;ids&lt;/em&gt; de los productos a deshabilitar y recupera del servidor el contenido de diálogo con una petición AJAX. El componente del modal se encargará de hacer el deshabilitado de los productos y la recarga de la página si finaliza correctamente o de mostar los errores de validación que se produzcan si no se ha introducido el motivo.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/11715e0799339d0335a30ce30a17ee58.js?file=DisableProductsModal.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/11715e0799339d0335a30ce30a17ee58.js?file=DisableProductsModal.tml&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/11715e0799339d0335a30ce30a17ee58.js?file=modals.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/TapestryMultipleActions&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew run&lt;/code&gt;.
&lt;/p&gt;

&lt;h3 id=&#34;algunas-diferencias-con-servlets-jsp-y-grails&#34;&gt;Algunas diferencias con Servlets/JSP y Grails&lt;/h3&gt;

&lt;p&gt;La tecnología de presentación de páginas web Java con &lt;em&gt;Java Server Pages&lt;/em&gt; o JSP permiten encapsular con un &lt;em&gt;tag&lt;/em&gt; la generación de un trozo de HTML no en el propio JSP sino en ese &lt;em&gt;tag&lt;/em&gt; que en código Java pudiendo incluir la llamada a un JSP. Los &lt;em&gt;tags&lt;/em&gt; y librerías de &lt;em&gt;tags&lt;/em&gt; son una forma de reutilizar esas partes de generación de código en el mismo proyecto y entre proyectos. Los &lt;em&gt;tags&lt;/em&gt; además son una forma de abstraernos del funcionamiento interno del &lt;em&gt;tag&lt;/em&gt; haciendo que solo necesitemos conocer sus parámetros.&lt;/p&gt;

&lt;p&gt;Si usamos JSP usar librerías de &lt;em&gt;tags&lt;/em&gt; es una buena idea, sin embargo, tiene algunas limitaciones como que requieren un archivo descriptor en formato XML que las defina y aunque pudiendo saber que parámetros definen y cuáles son requeridos no define el tipo de los parámetros que requiere. Los archivos XML en la época actual han caído en desuso porque son propensos a errores, errores que no son detectados hasta tiempo de ejecución, de los peores tipos de errores. Por otro lado, que los &lt;em&gt;tags&lt;/em&gt; no especifiquen el tipo de parámetro que requiere cada uno hace que debamos inspeccionar el código fuente del &lt;em&gt;tag&lt;/em&gt; con lo que la ventaja de abstraerse del funcionamiento no es del todo completa. Si por algún cambio el tipo de parámetro cambia hay que adaptar todos los usos del &lt;em&gt;tag&lt;/em&gt;, si alguno no se hace nuevamente se producirán errores en tiempo de ejecución.&lt;/p&gt;

&lt;p&gt;Grails usa GSP, una tecnología de presentación similar a los JSP. También dispone de &lt;em&gt;tags&lt;/em&gt; que no requieren definir los &lt;em&gt;tags&lt;/em&gt; en un archivo XML simplificando su uso pero que igualmente adolecen de algunos problemas como los JSP. Por un lado, los &lt;em&gt;tags&lt;/em&gt; de Grails no disponen un mecanismo para hacer requerido un determinado parámetro con lo que deberemos incluir la comprobación con código nosotros, tampoco define el tipo de parámetros que requiere. También aunque hacer más simple su desarrollo al no tener un descriptor XML como en los &lt;em&gt;tag&lt;/em&gt; JSP hace que haya que inspeccionar el código fuente para saber qué parámetros tiene, si son requeridos y cuál es el tipo del parámetro. Todo esto hace que puedan producirse errores en tiempo de ejecución y errores que no son producidos hasta que se ejercita el &lt;em&gt;tag&lt;/em&gt; con un mal uso o un uso desactualizado al igual que usando los &lt;em&gt;tag&lt;/em&gt; JSP.&lt;/p&gt;

&lt;p&gt;En Apache Tapestry todo son componentes, las páginas también son componentes con la característica de que no están embebidos en otro componente. Un componente de Apache Tapestry sería similar a un &lt;em&gt;tag&lt;/em&gt; de JSP o un &lt;em&gt;tag&lt;/em&gt; de Grails, con ciertas similitudes pero no iguales en aspectos importantes. De pronto, un componente de Tapestry define los parámetros que necesita y si son requeridos pero también define el tipo del parámetro. Como se aprecia en las páginas de documentación de los &lt;a href=&#34;http://tapestry.apache.org/component-reference.html&#34;&gt;componentes integrados de serie en Apache Tapestry&lt;/a&gt; se puede conocer esta información sin necesidad de conocer el código fuente del componente, documentación que podemos generar para los componentes que nosotros desarrollemos. Los parámetros, si son requeridos y sus tipos forman el contrato del componente y es lo único que deberemos conocer para usarlos, su funcionamiento interno nos es irrelevante que incluye el código JavaScript que necesite, podría que CSS y literales internacionalizados.&lt;/p&gt;

&lt;p&gt;Pero esas no son las únicas diferencias con los &lt;em&gt;tags&lt;/em&gt; de JSP o de Grails y es que estas son solo tecnologías de presentación, la V del &lt;a href=&#34;https://es.wikipedia.org/wiki/Modelo%E2%80%93vista%E2%80%93controlador&#34;&gt;patrón MVC&lt;/a&gt;. Los componentes de Tapestry aparte de encapsular la lógica de presentación también pueden encapsular lógica de controlador, en el conocido patrón MVC además de V pueden ser C con lo que encapsulan aún más funcionalidad. La lógica de presentación y controlador en los JSP y Grails está separada pero ambas lógicas no son independientes, están relacionadas, en Tapestry está encapsulada en el mismo componente.&lt;/p&gt;

&lt;p&gt;Los componentes de Tapestry usan el &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/07/modelo-push-contra-modelo-pull-en-frameworks-web/&#34;&gt;modelo pull en vez del modelo push&lt;/a&gt; haciendo innecesario construir un objeto &lt;em&gt;Map&lt;/em&gt; que pasar a la vista, haciendo que sea la plantilla la que solicite al controlador los datos que necesita y haciendo que el controlador no sepa que datos necesita la vista. El controlador solo deberá tener las propiedades y métodos que necesite la vista. Dado que en las plantillas &lt;em&gt;tml&lt;/em&gt; de la vista no se pueden incluir expresiones complejas hace que no contengan lógica que estará en el controlador asociado que es código Java donde tendremos la ayuda del compilador para detectar errores.&lt;/p&gt;

&lt;p&gt;Para volver a la misma página en &lt;a href=&#34;https://spring.io/&#34;&gt;Spring MVC&lt;/a&gt;, &lt;a href=&#34;https://struts.apache.org/&#34;&gt;Struts&lt;/a&gt; o &lt;a href=&#34;https://grails.org/&#34;&gt;Grails&lt;/a&gt; posiblemente deberíamos recibir además información para retornar a la misma página en la que estabamos cosa que es innecesaria en Tapestry por su &lt;a href=&#34;http://tapestry.apache.org/page-navigation.html&#34;&gt;concepto de contexto de activación de página&lt;/a&gt; y el patrón &lt;em&gt;Redirect-After-Post&lt;/em&gt; hará que al recargar la página por código con &lt;code&gt;window.localtion.reload();&lt;/code&gt; después de una petición POST el navegador no muestre un diálogo modal informando al usuario de que se reenviarán datos.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/164/dialogo-recargar.png&#34; title=&#34;Diálogo recargar después de petición POST en Firefox&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/164/dialogo-recargar-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Diálogo recargar después de petición POST en Firefox&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;http://facebook.github.io/react/&#34;&gt;React&lt;/a&gt; y &lt;a href=&#34;https://www.polymer-project.org/1.0/&#34;&gt;Polymer&lt;/a&gt; son tecnologías de cliente en algunos aspectos similares a los componentes de Apache Tapestry pero con la diferencia de que unos son para el navegador del cliente y otros para el servidor, nada nos impide en la misma aplicación usar en el cliente React y Polymer y en el servidor Apache Tapestry. Nótese en el código del caso anterior que Tapestry ofrece integración con JavaScript de un modo que no existe ni en Spring MVC, Struts o Grails e incorpora de serie &lt;a href=&#34;http://requirejs.org/&#34;&gt;RequireJS&lt;/a&gt;, Undercore y jQuery, un componente de Tapestry puede requerir la cargar de un recurso de JavaScript y desde el componente es posible pasar datos al JavaScript usando el servicio &lt;a href=&#34;http://tapestry.apache.org/5.4/apidocs/org/apache/tapestry5/services/javascript/JavaScriptSupport.html&#34;&gt;JavaScriptSupport&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Esto es solo un pequeño ejemplo de las posibilidades de Apache Tapestry me dejo muchas otras como los eventos, &lt;em&gt;translators&lt;/em&gt;, &lt;em&gt;encoders&lt;/em&gt;, &lt;em&gt;coerces&lt;/em&gt;, librerías de componentes, &lt;em&gt;inversion of control&lt;/em&gt;, AJAX, validaciones de formularios, &amp;hellip; En un proyecto las herrramientas no son lo más importante pero &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/06/el-lenguaje-de-programacion-framework-y-librerias-importan/&#34;&gt;el lenguaje de programación, framework y librerías importan&lt;/a&gt;, hay &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/05/10-razones-para-seguir-usando-java/&#34;&gt;10 razones para seguir usando Java&lt;/a&gt; y varios &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2011/08/motivos-para-elegir-apache-tapestry.html&#34;&gt;motivos para elegir Apache Tapestry&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;finalizando&#34;&gt;Finalizando&lt;/h3&gt;

&lt;p&gt;Lamentablemente hasta el momento no he tenido una oportunidad laboral de comprobar y demostrar que como en este ejemplo pero basado en una necesidad real que con Tapestry la implementación de la solución es más sencilla, menos propensa a errores y que la productividad no está relacionado con escribir unas pocas líneas de código menos con un lenguaje menos verboso o dejar de escribir puntos y comas al final de las líneas, más aún con las &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/&#34;&gt;novedades de Java 8&lt;/a&gt;. Quizá un día llegue esa oportunidad :|.&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/12/portada-PugInTapestry-thumb.png&#34; alt=&#34;Portada libro: PlugIn Tapestry&#34; title=&#34;Portada libro: PlugIn Tapestry&#34; style=&#34;float: left; margin-right: 1.5em;&#34;&gt;
    &lt;h3&gt;Libro PlugIn Tapestry&lt;/h3&gt;
    &lt;p&gt;Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este &lt;i&gt;framework&lt;/i&gt; en el formato que prefieras, &lt;a href=&#34;http://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry&lt;/a&gt;, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.&lt;/p&gt;
    &lt;br style=&#34;clear: both;&#34;&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;http://goo.gl/dfySZ1&#34; class=&#34;btn btn-lg btn-success&#34;&gt;PDF&lt;/a&gt;
        &lt;a href=&#34;http://goo.gl/bs7Rtu&#34; class=&#34;btn btn-lg btn-success&#34;&gt;EPUB&lt;/a&gt;
        &lt;a href=&#34;http://goo.gl/lxOZMT&#34; class=&#34;btn btn-lg btn-success&#34;&gt;MOBI&lt;/a&gt;
        &lt;a href=&#34;http://goo.gl/MJJiPV&#34; class=&#34;btn btn-lg btn-success&#34;&gt;HTML&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;http://goo.gl/Qv1Ym&#34; class=&#34;btn btn-lg btn-success&#34;&gt;Código fuente ejemplos&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="java"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="tapestry"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/06/el-lenguaje-de-programacion-framework-y-librerias-importan/</id>
        <title>El lenguaje de programación, framework y librerías importan</title>        
        <updated>2016-06-26T12:00:00+02:00</updated>
        <published>2016-06-25T12:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/06/el-lenguaje-de-programacion-framework-y-librerias-importan/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;p&gt;Para programar hay una abundancia tremenda de lenguajes, librerías, &lt;em&gt;frameworks&lt;/em&gt;, tecnologías, etc&amp;hellip; disponibles para desarrollar un proyecto. Esto es muy bueno ya que podremos elegir la combinación de cualquiera de ellas que más se ajuste a las necesidades del proyecto, las que mejor conozcamos ya o según nuestras preferencias en base a sus características incluyendo su comunidad, documentación, si tiene un desarrollo activo, fecha de la última versión u otros motivos que consideremos. El lado malo de esta abundancia es que requiere analizar seguramente no todas pero al menos las más nombradas, más usadas, con mejor documentación o con un mantenimiento activo. Por la cantidad de opciones dicha tarea de análisis requiere tiempo y esfuerzo que no debe abrumarnos considerando que cualquiera de ellas vale.&lt;/p&gt;

&lt;p&gt;Algunas personas piensan que las herramientas no son importantes quizá creen que hay tantas que da igual cualquiera de ellas o que solo importan las personas, «lo que hay entre el teclado y la silla». Entre varias herramientas adecuadas ciertamente en un proyecto no serán lo más importante ni usar alguna en concreto es un fin pero eso no quiere decir que no sean importantes. Son importantes porque afectan de forma notable al desarrollo del proyecto, por poner un ejemplo no es lo mismo un lenguaje o &lt;em&gt;framework&lt;/em&gt; que evita errores de compilación en producción, un &lt;abbr title=&#34;Integrated Development Environment&#34;&gt;IDE&lt;/abbr&gt; que los detecta según se escribe el código o que permite hacer &lt;em&gt;refactors&lt;/em&gt; con más garantías de no introducir errores que un lenguaje en el que necesitas teses que cubran la totalidad del código simplemente para detectarlos, no es lo mismo el número de lineas necesarias o su verbosidad pero es más importante la legibilidad si va a ser mantenido durante mucho tiempo, no es lo mismo elegir una herramienta ampliamente probada que una implementada por nosotros con el tiempo necesario a dedicar a desarrollarla y que probablemente finalmente sea menos flexible que otra existente, no es lo mismo una base de datos relacional que garantiza la integridad de los datos que una base de datos NoSQL sin validación de esquema. Yendo a un extremo creo que nadie considera siquiera usar ensamblador para hacer una aplicación web o usar Java, hasta el momento, para programar un sistema operativo de alto rendimiento que exprima el máximo potencial del hardware. Pero entre algunas opciones equivalentes cualquiera, con matices, nos servirá, por ejemplo, usar el lenguaje &lt;a href=&#34;http://php.net/&#34;&gt;PHP&lt;/a&gt;, &lt;a href=&#34;http://www.microsoft.com/net&#34;&gt;C#&lt;/a&gt; o &lt;a href=&#34;http://www.oracle.com/technetwork/es/java/javase/downloads/index.html&#34;&gt;Java&lt;/a&gt; para hacer una aplicación web usando para cada opción los &lt;em&gt;frameworks&lt;/em&gt; &lt;a href=&#34;http://symfony.com/&#34;&gt;Symfony&lt;/a&gt;, &lt;a href=&#34;http://www.asp.net/mvc&#34;&gt;ASP.NET MVC&lt;/a&gt; o &lt;a href=&#34;http://tapestry.apache.org&#34;&gt;Apache Tapestry&lt;/a&gt;. Hay grados de lo adecuado que es una herramienta para una necesidad.&lt;/p&gt;

&lt;p&gt;Por otro lado las herramientas consideradas en el inicio de un proyecto no son inmutables durante toda su existencia y cambian en la medida que las necesidades del proyecto cambian. En una &lt;em&gt;startup&lt;/em&gt; al principio se necesitará una combinación de herramientas que permita probar la viabilidad del proyecto y evolucionar rápidamente el producto o servicio. Más tarde según se estabiliza el proyecto y crece surgirán nuevas necesidades como mayor fiabilidad, menos errores y escalabilidad tanto en cantidad de código y número de personas trabajando al mismo tiempo en el mismo código fuente.&lt;/p&gt;

&lt;p&gt;También suele haber alguna discusión en si utilizar &lt;em&gt;frameworks&lt;/em&gt; o no utilizarlos, usarlos evita tener que desarrollar nosotros mismos mucho código, nos ahorrará tiempo, tendremos mayor flexibilidad y menos errores pero usándolos el proyecto tendrá esa dependencia lo que implica que el código se deberá adaptar a él que aún así igual es algo que queremos para estructurar correctamente el código según el marco de trabajo ofrecido. Por otro lado he presenciado comentarios desfavoreciendo el uso de &lt;em&gt;frameworks&lt;/em&gt;, la mayoría de programadores no tienen los conocimientos y tiempo de implementar su propia alternativa con la misma calidad y en la mayoría de los casos basta con reutilizar alguna que cubra la necesidad y más importante esté ampliamente probada.&lt;/p&gt;

&lt;p&gt;Para mi lo importante es que para cualquier librería o &lt;em&gt;framework&lt;/em&gt; que elijamos tengamos en un futuro la posibilidad de reemplazarlo sin estar encadenados a él y sin tener que reescribir el proyecto entero, esto forma parte de las más básicas buenas prácticas de desarrollo, precisamente las aplicaciones que se desarrollan en capas y los &lt;em&gt;frameworks&lt;/em&gt; que separan modelo, de vista, de controlador tratan de minimizar ese impacto.&lt;/p&gt;

&lt;p&gt;Cada proyecto es distinto y hay que conocer sus requerimientos para seleccionar las herramientas que contribuyan al éxito o a la menor cantidad de dificultades, si se tratan de un proyecto en la plataforma Java probablemente varias herramientas serán las que indico en el artículo &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/06/nueva-visita-a-herramientas-para-un-proyecto-java/&#34;&gt;herramientas para un proyecto Java&lt;/a&gt;. Si no está clara la plataforma también puedes echarle un vistazo a &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/05/10-razones-para-seguir-usando-java/&#34;&gt;10 razones para seguir usando Java&lt;/a&gt; y &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/&#34;&gt;novedades y nuevas características de Java 8&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;La tecnologías, lenguajes, librerías, &lt;em&gt;frameworks&lt;/em&gt;, &amp;hellip; son herramientas a usar para conseguir un fin que es hacer realidad el proyecto, producto o servicio con un componente informático, las herramientas no son un fin en si mismo, no son lo más importante, lo más importante es resolver la necesidad de alguien normalmente con restricciones de tiempo y coste, pero desde luego no son irrelevantes y no da igual usar cualquiera. Son las herramientas equivalentes de un fontanero, pintor, carpintero u otros profesionales que tienen cantidad de ellas para realizar multitud de tareas específicas de forma efectiva y rápida junto con su conocimiento y experiencia. Los lenguajes de programación, &lt;em&gt;frameworks&lt;/em&gt; y librerías de no ser importantes no existirían tantas incluso varias con diferentes propiedades para la misma necesidad.&lt;/p&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/06/la-siguiente-disrupcion-tecnologica-la-convergencia/</id>
        <title>La siguiente disrupción tecnológica, la convergencia</title>        
        <updated>2016-06-11T12:00:00+02:00</updated>
        <published>2016-06-10T19:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/06/la-siguiente-disrupcion-tecnologica-la-convergencia/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;La tecnología no para de avanzar, cada varios meses salen noticias de avances importantes. Algunos avances se convierten en realidad, otros tardan más en llegar, otros llegan pero no triunfan y de otros pasado un tiempo no se vuelve a oír hablar de ellos. Algunos cambios aunque mejoran lo existente son leves sin añadir nuevas posibilidades ni cambian los comportamientos de los usuarios o como interaccionan estos con la tecnología. Otros pocos son disruptivos y cambian de forma significativa el mercado de la tecnología junto con sus usuarios, estos cambios novedosos son capaces de hundir empresas líderes si no saben adaptarse o no los prevén al mismo tiempo que crean nuevos líderes en el mercado.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;p&gt;En el mundo de la tecnología cada nuevo procesador, tarjeta gráfica, &lt;abbr title=&#34;Solid-State Drive&#34;&gt;SSD&lt;/abbr&gt; y otros componentes de un dispositivo se presentan prometiendo mejoras significativas en rendimiento y/o consumo de energía habitualmente entre un 20% y 90% sobre la generación anterior. Las mejoras de los componentes aunque significativas no suponen una disrupción en la tecnología, simplemente la hacen más rápida. El caso de los procesadores, tarjetas gráficas o SSD es una muestra, estos nuevos sistemas de almacenamiento aunque suponen una gran mejora sobre los discos duros mecánicos con una mucho mayor tasa de transferencia no modifican de forma disruptiva la tecnología para el usuario, si el ordenador en vez de iniciarse en un minuto y medio tarda 15 segundos aunque el SSD suponga una mejora significativa en el rendimiento de los ordenadores no es más que esperar más o menos tiempo, es una pequeña disrupción para los usuarios aunque grande para los fabricantes.&lt;/p&gt;

&lt;p&gt;De las disrupciones que estoy hablando son las cambian significativamente la tecnología, la aparición del ordenador personal y como los aprovechó &lt;a href=&#34;http://www.microsoft.com/&#34;&gt;Microsoft&lt;/a&gt; e &lt;a href=&#34;https://www.ibm.com/us-en/&#34;&gt;IBM&lt;/a&gt; no supo o no pudo, la aparición de las interfaces gráficas cuando solo existía la línea de comandos o estaban basadas en texto e iniciaron el dominio de Microsoft y &lt;a href=&#34;http://www.apple.com/&#34;&gt;Apple&lt;/a&gt; en la informática de consumo, de la aparición de los teléfonos móviles en la que en una época &lt;a href=&#34;http://www.nokia.com/es_int&#34;&gt;Nokia&lt;/a&gt; era el líder y como con la aparición de los teléfonos inteligentes al no adaptarse o preverlo sucumbió al menos tal y como era, de como &lt;em&gt;3dfx&lt;/em&gt; no pudo competir con las &lt;abbr title=&#34;Graphics Processor Unit&#34;&gt;GPU&lt;/abbr&gt; modernas que &lt;a href=&#34;http://www.nvidia.es/page/home.html&#34;&gt;NVIDIA&lt;/a&gt; popularizó con gran éxito. Algunas disrupciones importantes no son instantáneas pueden tardar algún lustro pero sin las compañías líderes no las ven venir ni se adaptan cuando quieren darse cuenta ya es demasiado tarde llegando a desaparecer o convertirse en poco relevantes. Algunas tecnologías prometedoras no tienen el éxito esperado como las pantallas de televisión 3D o curvas, un porcentaje grande de otros casos siguen el mismo camino, ¿alguien ha dicho &lt;em&gt;blu-ray&lt;/em&gt;?, ¿&lt;em&gt;smartwatch&lt;/em&gt;?, &amp;hellip;&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
  &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/microsoft.png&#34; alt=&#34;Microsoft&#34; title=&#34;Microsoft&#34;/&gt;
  &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/apple.png&#34; alt=&#34;Apple&#34; title=&#34;Apple&#34;/&gt;
  &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/linux.png&#34; alt=&#34;Linux&#34; title=&#34;Linux&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;¿Cuál será la siguiente disrupción? Hacer cábalas sobre futuro es difícil y suele ser más propio del inicio de año pero aquí haré mi apuesta y a ver si acierto. En estos momentos hay varias novedosas que pueden cambiar significativamente el mundo de la tecnología una de ellas es la realidad virtual o la realidad aumentada de las &lt;em&gt;holosens&lt;/em&gt; de Microsoft, muy de películas futuristas pero incómodas de usar para el usuario ya que requieren gafas en el caso de la realidad virtual que acaparan la visión y las &lt;em&gt;holosens&lt;/em&gt; de Microsoft para la realidad aumentada no veo porque no vayan a seguir el mismo camino que las &lt;a href=&#34;https://es.wikipedia.org/wiki/Google_Glass&#34;&gt;Google Glass&lt;/a&gt;, otro proyecto futurista de realidad aumentada es &lt;a href=&#34;https://get.google.com/tango/&#34;&gt;Google Tango&lt;/a&gt; que será un nuevo ámbito de acción para muchas empresas. De todas la que creo que más temprano que tarde llegará será la convergencia entre dispositivos móviles, tabletas, ordenadores e incluso &lt;em&gt;smart tv&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Con la cada vez más capacidad de los dispositivos móviles que aumenta en un gran porcentaje en cada generación ¿cuando será el momento en que sean capaces de sustituir a otros dispositivos como ordenador y tabletas? Algunos móviles ya tienen 3 y 4GiB de memoria, sus procesadores más núcleos que un ordenador de escritorio, almacenamiento de 64GiB y 128Gib más que suficiente existiendo el almacenamiento en línea y externo para los dispositivos permanentemente conectados. Los procesadores de los dispositivos móviles &lt;a href=&#34;https://www.arm.com/&#34;&gt;ARM&lt;/a&gt; no está muy lejos del rendimiento de los procesadores de escritorio Intel Core ¿cuánto tiempo tardará en aparecer el primer ordenador de escritorio con procesador ARM? ¿&lt;a href=&#34;http://www.intel.es/&#34;&gt;Intel&lt;/a&gt; tiene que preocuparse por ARM? Yo creo que sí tiene que preocuparse por la convergencia en la que un procesador &lt;a href=&#34;http://wccftech.com/apple-a9xipad-pro-benchmarks/&#34;&gt;ARM no tardará mucho en tener suficiente capacidad&lt;/a&gt; (y &lt;a href=&#34;http://www.extremetech.com/mobile/221881-apples-a9x-goes-head-to-head-against-intels-core-m-in-arm-x86-grudge-match&#34;&gt;II&lt;/a&gt;) para tareas básicas de escritorio mucho más barato de fabricar y más eficiente energéticamente. Intel hoy lidera la fabricación de procesadores de escritorio, ARM el diseño de procesadores de dispositivos móviles, la disrupción será que los procesadores ARM serán capaces de adentrarse en el escritorio e incluso en los servidores. ¿Apple en algún momento fabricará un &lt;a href=&#34;http://www.apple.com/macbook/&#34;&gt;MacBook&lt;/a&gt; con procesador ARM de los que ya incorpora personalizados en sus dispositivos móviles?&lt;/p&gt;

&lt;p&gt;Los ordenadores de escritorio no se pueden transportar, los portátiles no pesan tanto siendo más manejables pero son incómodos y no acarrables en todo momento como los móviles por otro lado en los teléfonos inteligentes es incómodo escribir, copiar, pegar, trabajar con múltiples aplicaciones, navegar por internet y tiene una pantalla del alta resolución pero pequeña, digamos que hay una necesidad de unir ambos mundos que proporcione lo mejor de los dos. El ordenador de escritorio y portátiles de hoy serán irrelevantes salvo para algunos usuarios que requieran potencia extrema al igual que ocurre con las tarjetas gráficas dedicadas para jugadores exigentes, la convergencia hará que tengamos un único dispositivo para lo que hasta ahora utilizábamos varios para los casos de requerir mayor potencia surgirán dársenas o &lt;em&gt;docks&lt;/em&gt; que proporcionen mayor capacidad gráfica y más opciones de conectividad. El &lt;em&gt;smartphone&lt;/em&gt; sustituirá al ordenador de escritorio cuando podamos conectarlo a una pantalla externa junto con un teclado y ratón, el teléfono inteligente se convertirá en el dispositivo universal. El conector &lt;a href=&#34;https://en.wikipedia.org/wiki/USB_Type-C&#34;&gt;USB Type-C&lt;/a&gt; ya podría proporcionar la conectividad necesaria con pantallas, teclado, ratón y más dispositivos.&lt;/p&gt;

&lt;p&gt;Cuando la diferencia entre el ordenador de escritorio y el dispositivo móvil sea poco significativa la convergencia será una realidad, cada año está más cerca no hay más que ver que ya hoy hay móviles con 4GiB de memoria la misma que algunos ordenadores de escritorio y portátiles de gama mediana y baja. Solo falta saber quienes del mercado tecnológico se adaptarán, perecerán, surgirán, perderán su relevancia y cual será el primero en comercializar un producto convergente.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
  &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/intel.png&#34; alt=&#34;Intel&#34; title=&#34;Intel&#34;/&gt;
  &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/arm.png&#34; alt=&#34;ARM&#34; title=&#34;ARM&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Intel lo tiene difícil, más &lt;a href=&#34;http://www.anandtech.com/show/10288/intel-broxton-sofia-smartphone-socs-cancelled&#34;&gt;con las recientes noticas del abandono de sus SoCs móviles&lt;/a&gt;, ya que los procesadores ARM son más baratos de fabricar y consumen menos energía lo que los hace más adecuados para los dispositivos móviles, salvo que el histórico Intel se adapte perderá gran parte de su relevancia en el mundo del hardware de cómputo en la misma medida que ARM la gane. Los fabricantes que adaptan los diseños ARM explorarán nuevos campos de mercado que hasta ahora no les era posible acceder. Los mejor posicionados &lt;a href=&#34;https://www.qualcomm.com/&#34;&gt;Qualcomm&lt;/a&gt;, &lt;a href=&#34;http://www.samsung.com/es/home/&#34;&gt;Samsung&lt;/a&gt; y quizá Nvidia tenga más éxito con sus &lt;a href=&#34;http://www.nvidia.es/object/tegra-4-processor-es.html&#34;&gt;procesadores ARM Tegra&lt;/a&gt; y en menor medida &lt;a href=&#34;http://www.nxp.com/&#34;&gt;Freescale&lt;/a&gt;, &lt;a href=&#34;http://www.ti.com/&#34;&gt;Texas Instruments&lt;/a&gt;, &lt;a href=&#34;https://www.broadcom.com/&#34;&gt;Broadcom&lt;/a&gt;, y puede que veamos a &lt;a href=&#34;http://www.amd.com/&#34;&gt;AMD&lt;/a&gt; fabricar de forma masiva procesadores con arquitectura ARM en detrimento de &lt;em&gt;x86-64&lt;/em&gt;, &amp;hellip;&lt;/p&gt;

&lt;p&gt;Por otro lado, la convergencia requerirá de software que se adapte a cada caso de uso, como dispositivo móvil y teléfono y como ordenador de escritorio y pantallas grandes como la televisión. Microsoft ya ha dado muestras de que está trabajando en la convergencia y si es la primera en hacerla realidad de forma útil para los usuarios seguirá durante alguna década más con su práctico monopolio en el escritorio y ganar una cuota mucho mayor entre los dispositivos móviles que hoy aún se le atraganta en detrimento de Google y &lt;a href=&#34;https://www.android.com/&#34;&gt;Android&lt;/a&gt; y Apple e &lt;a href=&#34;http://www.apple.com/es/ios/&#34;&gt;iOS&lt;/a&gt;. Google tiene las partes para iniciar la convergencia con Android en el ámbito móvil, por otro lado está &lt;a href=&#34;https://www.chromium.org/chromium-os&#34;&gt;Chromimum OS&lt;/a&gt; incorporados en sus &lt;a href=&#34;https://www.chromium.org/chromium-os&#34;&gt;Chromebooks&lt;/a&gt; en el ámbito de escritorio y si es capaz de juntar las piezas y no retrasarse frente a sus competidores puede mantener su amplia cuota de mercado en el ámbito móvil y ganarla en el escritorio desafiando la posición de Microsoft. De Apple aún no he oído noticias sobre la convergencia pero también tiene una buena posición con iOS por un lado y &lt;a href=&#34;http://www.apple.com/macos/&#34;&gt;Mac OS X&lt;/a&gt; por el otro pero aunque se adelante a Microsoft y Google los precios de sus productos serán más elevados que lo que más tarde Google o Microsoft fabriquen y vendan con lo que hará que Microsoft no pierda su posición dominante si Google no se la cuestiona. Seguramente &lt;a href=&#34;http://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;/&lt;a href=&#34;http://www.linux.com/&#34;&gt;Linux&lt;/a&gt; irá detrás de la cresta de la ola, &lt;a href=&#34;http://www.ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt; ya ha dado muestras de la convergencia y está desarrollando &lt;a href=&#34;http://www.ubuntu.com/cloud/snappy&#34;&gt;Snapy&lt;/a&gt; pero probablemente llegue más o mucho más tarde que los actores anteriores.&lt;/p&gt;

&lt;p&gt;Esta batalla tecnológica de la convergencia forjará el nuevo equilibrio de fuerzas que se mantendrán durante algún lustro o década en la que esperemos los usuarios seamos en gran parte beneficiados por nuevos productos con nuevas posibilidades a precios asequibles&amp;hellip; hasta una nueva disrupción. Está por ver quienes pierden su posición dominante, quieres la ganan y que nuevos contendientes surgen en este nuevo mercado que transformará el existente. Finalmente, todo esto no es más que una elucubración pero una muy plausible y no lejana de lo que finalmente se produzca.&lt;/p&gt;



        </content>
        
            
                <category term="apple"/>
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="microsoft"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="opinion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/01/windows-10-y-office-2016-tan-faciles-de-usar-sin-licencia-como-siempre/</id>
        <title>Windows 10 y Office 2016 tan fáciles de usar sin licencia como siempre</title>        
        <updated>2016-06-04T15:00:00+02:00</updated>
        <published>2016-01-08T17:00:00+01:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2016/01/windows-10-y-office-2016-tan-faciles-de-usar-sin-licencia-como-siempre/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Comentaba en un artículo que es sorprendente que Microsoft con la capacidad que tiene y estando los dispositivos conectados a internet mayoritariamente no sea capaz de evitar usar su software sin licencia. Estoy a punto de ver si con Windows 10 y Office 2016 sigue siendo tan fácil como siempre. También tendré una muestra de la injusta fama de Windows pero que permite Microsoft por el &lt;em&gt;bloatware&lt;/em&gt; que preinstalan los fabricantes de dispositivos con su sistema operativo.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/microsoft.png&#34; class=&#34;right&#34; alt=&#34;Microsoft&#34; title=&#34;Microsoft&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/windows-10.png&#34; class=&#34;right&#34; alt=&#34;Windows 10&#34; title=&#34;Windows 10&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/microsoft-office.png&#34; class=&#34;right&#34; alt=&#34;Microsoft Office&#34; title=&#34;Microsoft Office&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Este 2016 lo he empezando nada más y nada menos que instalando el sistema operativo y programas de un portátil. Uno de esos favores que habitualmente hacemos los informáticos de los que yo normalmente hago de buen grado, en esta ocasión recibí otro a cambio de otra índole así que perfecto. La necesidad de la reinstalación venía de que el portátil era notablemente lento a pesar de tener un disco duro mecánico y tampoco era porque el equipo fuese antiguo o tuviese poca memoria, el procesador era un AMD Athlon x2 QL-65 con 4 GiB de memoria y 320 GB de disco duro, algo que debería ser más que suficiente para su propósito de navegar por internet, ver películas, escuchar música y tareas ofimáticas. Era lento al iniciarse, al ejecutar programas además de algún mensaje del antivirus quejándose de que su periodo de prueba había expirado que aparecía al entrar al escritorio. Eso no era todo algún virus había cifrado los archivos personales, fotos y documentos, pidiendo a cambio de recuperarlos algo que ni siquiera me molesté ver en detalle, seguro que nada bueno.&lt;/p&gt;

&lt;p&gt;El equipo tenía varios programas de &lt;em&gt;bloatware&lt;/em&gt; típicos de los portátiles con &lt;a href=&#34;http://www.microsoft.com/es-es/windows/&#34;&gt;Windows&lt;/a&gt; proporcionados por los fabricantes, un antivirus que podría encajar con la definición de aquello de lo que intenta proteger que caduca al cabo de un tiempo y lo deja desprotegido, un reproductor que se inicia con el escritorio y se esconde en la parte superior de la pantalla por si atípicamente lo necesitas. Los fabricantes son los que preinstalan estos programas indeseables y serán los principales responsables pero si &lt;a href=&#34;http://www.microsoft.com/&#34;&gt;Microsoft&lt;/a&gt; conociendo el mal nombre que le dan a sus sistemas hasta el momento no lo ha impedido algo de culpa tendrá, si su sistema operativo es una imposición en prácticamente la totalidad de portátiles que se venden en las tiendas, ¿conocéis el &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2011/05/impuesto-windows.html&#34;&gt;impuesto Windows&lt;/a&gt;?, podría imponer alguna condición para permitir preinstalar Windows y hacer más felices a sus usuarios.&lt;/p&gt;

&lt;p&gt;Por otra parte desde la época de Windows Vista el equipo se puede reinstalar y dejar como de fábrica incluído todo el &lt;em&gt;bloatware&lt;/em&gt; anteriormente citado pero para ello se reservan unos 10 GiB del disco duro espacio que no es usable por el usuario. Con discos duros de capacidades de 320 / 500 GB que queden reservados 10 GiB no es mayor problema pero más de uno ha preguntado porque su espacio disponible no se corresponde con las especificaciones del equipo que compró.&lt;/p&gt;

&lt;p&gt;Llegado al punto de hacer la reinstalación no tuve mayor problema, el equipo tenía Windows 7 originalmente, se había actualizado a Windows 10 y activado correctamente en el periodo de actualización gratuita que ofrece Microsoft. Descargada la &lt;a href=&#34;https://www.microsoft.com/es-es/software-download/windows10ISO&#34;&gt;imagen ISO de Windows 10&lt;/a&gt; que amablemente ofrece Microsoft en su propia página web no me fué necesario buscarla como antiguamente en las redes de compartición de archivos, punto para ellos. En uno de los pasos de la instalación borré todas las particiones recuperando el espacio reservado para la partición de recuperación. Unos cuantos minutos de espera, un par de reinicios y varias opciones de privacidad desactivadas que podrían dar a Windows 10 el calificativo de software espía, supuestamente por el bien de usuario, y después de crear la cuenta del usuario el sistema se inicia con todos los dispositivos funcionando correctamente incluidos la tarjeta gráfica, la red y la WiFi. Windows se muestra como activado.&lt;/p&gt;

&lt;p&gt;Toca instalar los programas adicionales básicos con la intención de que sean de software libre o respetando las licencias &lt;a href=&#34;https://www.mozilla.org/es-ES/firefox/new/&#34;&gt;Firefox&lt;/a&gt; junto con &lt;a href=&#34;https://adblockplus.org/es/&#34;&gt;AdBlockPlus&lt;/a&gt;, &lt;a href=&#34;http://www.videolan.org/vlc/&#34;&gt;VLC&lt;/a&gt;, &lt;a href=&#34;http://www.peazip.org/peazip-64bit.html&#34;&gt;PeaZip&lt;/a&gt;, &lt;a href=&#34;http://www.imgburn.com/&#34;&gt;ImgBurn&lt;/a&gt;, &lt;a href=&#34;https://get.adobe.com/es/reader/otherversions/&#34;&gt;Acrobat Reader&lt;/a&gt;, &lt;a href=&#34;http://www.freefilesync.org/&#34;&gt;FreeFilesync&lt;/a&gt;, &lt;a href=&#34;http://www.utorrent.com/intl/es/&#34;&gt;uTorrent&lt;/a&gt; a los que añado &lt;a href=&#34;http://www.oracle.com/technetwork/es/java/javase/downloads/index.html&#34;&gt;Java&lt;/a&gt;. Finalmente me piden que instale la &lt;em&gt;suite&lt;/em&gt; ofimática &lt;a href=&#34;https://products.office.com/es-es/home&#34;&gt;Microsoft Office&lt;/a&gt; ya que va a ser utilizada, mi intención al traste, me planteo recomendar alguna opción alternativa como &lt;a href=&#34;https://www.google.es/intl/es/docs/about/&#34;&gt;Google Docs&lt;/a&gt; o &lt;a href=&#34;http://www.libreoffice.org/&#34;&gt;LibreOffice&lt;/a&gt;. Sin embargo, Office es lo que usan ¿piden a los alumnos que adquieran una licencia que aún para estudiantes cuesta unos 125€? ¿250€ para otros mortales?, es inicio del 2016, es fin de semana y no quiero darle muchas vueltas al tema, descargo la última versión de Office y la instalo.&lt;/p&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01019TBFO&amp;linkId=cd34e38c16f0643882e1dc753d6ef77d&amp;internal=1&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00HC6QQQM&amp;linkId=762b16ff0b7f340317343dc4a24097ab&amp;internal=1&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01FNRXAZG&amp;linkId=1f45d19184a5ea936b680670062a7fad&amp;internal=1&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Inicio el Word y me muestra el mensaje que tras unos 30 días se desactivarán muchas de sus funciones. Llega el momento de probar empíricamente una vez más aquello que dije en &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/07/a-microsoft-no-le-importa-que-uses-windows-u-office-sin-licencia/&#34;&gt;A Microsoft no le importa que uses Windows u Office sin licencia&lt;/a&gt;, busco algún activador en Google, hay cientos de resultados, descargo uno del enlace que me genera algo de esperanza de no tener virus, inmediatamente descargado el archivo .exe Windows Defender avisa de que tiene virus, lo ejecuto a pesar de todo y hago clic en el botón para activar el Office, sale un mensaje indicando que no se ha realizado la activación correctamente, pruebo varias opciones sin efecto aparente ¿a ver si no tengo razón y Microsoft ha hecho lo suyo para evitar la piratería?. Rebusco entre los enlaces y me descargo otro, aviso de virus, todo normal, lo ejecuto, empiezan a aparecer iconos en el escritorio de programas raros que se están instalando y al Firefox se le ha cambiado su página de inicio, ¡vaya! este supuesto activador si que era un virus, Defender tenía razón, toca reinstalar de nuevo todo.&lt;/p&gt;

&lt;p&gt;Saco las armas gordas, comienzo una nueva reinstalación de Windows 10 y Office en una máquina virtual con &lt;a href=&#34;http://virtualbox.org/&#34;&gt;VirtualBox&lt;/a&gt; que me permitirá hacer las pruebas más fácilmente usando las instantáneas del sistema, si algo va mal podré volver a un punto anterior sin tener que reinstalar. Objetivo encontrar algún activador que funcione, hace tiempo cuando usaba Windows en el primer o segundo quizá el tercero enlace no más de Google estaba el activador que funcionaba, vuelvo a pensar que igual Microsoft ha protegido mejor su software. Me informo un poco más en algunas de los cientos de páginas, encuentro que tengo que desactivar Windows Defender, en la explicación de esas páginas activar Windows y Office (cualquiera de sus versiones) es tan fácil como recordaba, usar un activador y darle a un botón ¿simplemente no he encontrado el correcto?. Pongo un poco más de interés y busco la página “oficial” de un activador, parece que he encontrado una con buenas sensaciones. Desactivado Windows Defender ejecuto el activador, se abre la ventana y selecciono activar Windows y Office, en unos segundos acaba e informa de que la activación ha sido correcta. Compruebo que Windows está activado y Office también.&lt;/p&gt;

&lt;p&gt;Inicio la tercera instalación de nuevo en el portátil y realizo la activación de la misma forma que en la máquina virtual, salvo que solo de Office ya que el portátil ya tiene licencia de Windows. Office informa de que está activado. Me gustaría no haberlo podido conseguir.&lt;/p&gt;

&lt;p&gt;Es inicio del 2016 y no he hecho una sino tres instalaciones de Windows y Office, más que días del año. Y sigo teniendo razón, usarlos sin licencia sigue siendo tan fácil como siempre una vez encontrados los enlaces adecuados en Google, ¿un martes de parches se instalará alguna actualización de Windows que descubra el &lt;em&gt;crack&lt;/em&gt; aplicado al Office? Me enteraré.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/119/windows-10.png&#34; title=&#34;Windows 10&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/119/windows-10-thumb.png&#34;&gt;&lt;/a&gt;
        &lt;figcaption&gt;Windows 10&lt;/figcaption&gt;
    &lt;/figure&gt;
    &lt;figure&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/119/microsoft-word-2016.png&#34; title=&#34;Microsoft Word 2016&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/119/microsoft-word-2016-thumb.png&#34;&gt;&lt;/a&gt;
        &lt;figcaption&gt;Microsoft Word 2016&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Si puedes usa un software con su licencia, sino usa alguna de las opciones alternativas disponibles tanto para Windows como &lt;a href=&#34;http://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;/&lt;a href=&#34;http://www.linux.com/&#34;&gt;Linux&lt;/a&gt; como para &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/05/3-opciones-ofimaticas-alternativas-a-microsoft-office/&#34;&gt;Office y alguna de sus alternativas&lt;/a&gt; que se adapte tus necesidades.&lt;/p&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="microsoft"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/10/similitudes-entre-react-y-polymer-con-apache-tapestry/</id>
        <title>Similitudes entre React y Polymer con Apache Tapestry</title>        
        <updated>2015-10-06T18:00:00+02:00</updated>
        <published>2015-10-06T18:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2015/10/similitudes-entre-react-y-polymer-con-apache-tapestry/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;React y Polymer son dos librerías JavaScript para construir interfaces complejas en el lado cliente basadas en componentes. Los componentes son interesantes porque hace que el código sea reutilizable, fácil de entender y más fácil de modificar sin introducir errores entre otras cosas. Aunque en el desarrollo web en el lado del servidor la mayoría de los &lt;em&gt;frameworks&lt;/em&gt; se basan en acciones también hay algunos que se basan en componentes, uno de ellos Apache Tapestry para la plataforma Java. Si de React y Polymer se está hablando bastante bien y forman parte del actual estado del arte JavaScript, si la gente conociese y usase Tapestry que tiene varias similitudes con ellos creo que también les facilitaría el desarrollo de aplicaciones web pequeñas o grandes, simples o complejas en la parte del servidor.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/apache-tapestry.png&#34; class=&#34;right&#34; alt=&#34;Apache Tapestry&#34; title=&#34;Apache Tapestry&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;La librería JavaScript &lt;a href=&#34;http://facebook.github.io/react/&#34;&gt;ReactJS&lt;/a&gt; es una de las que más se está hablando para bien y utilizando para construir aplicaciones complejas en el navegador. Personalmente después de haberla probado en el &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react/&#34;&gt;ejemplo lista de tareas con React y Backbone&lt;/a&gt; me ha parecido que está muy bien. Otra de las librerías que suele mencionarse y que en un futuro puede emplearse mucho más es &lt;a href=&#34;https://www.polymer-project.org/1.0/&#34;&gt;Polymer&lt;/a&gt;. ¿Cuál es el éxito de estas librerías?&lt;/p&gt;

&lt;p&gt;Uno de los motivos en mi opinión es que ambas se basan en un concepto de componente, en React un componente encapsula su estado o propiedades y eventos que maneja junto con la plantilla para generar las etiquetas de su interfaz gráfica, Polymer va un poco más allá y además de estado, eventos y plantilla encapsula los estilos &lt;abbr title=&#34;Cascading Style Sheets&#34;&gt;CSS&lt;/abbr&gt;. Pero estas librerías que sirven para crear interfaces en el lado del cliente basadas en componentes y que se están viendo como algo bueno, en el lado del servidor la mayoría de los &lt;em&gt;frameworks&lt;/em&gt; se basan en acciones, sin embargo, también hay algunos basados en componentes, uno de ellos es &lt;a href=&#34;http://tapestry.apache.org&#34;&gt;Apache Tapestry&lt;/a&gt; en la plataforma Java.&lt;/p&gt;

&lt;p&gt;El concepto de componente de estos &lt;em&gt;frameworks&lt;/em&gt; JavaScript o el utilizado en Tapestry no es nuevo quizá tiene otro nombre y es similar a lo que en los lenguajes de programación orientados a objetos conocemos como clases o tipos y en alguna asignatura también podemos haber aprendido como &lt;abbr title=&#34;Tipo Abstracto de Datos&#34;&gt;TAD&lt;/abbr&gt;. Básicamente cualquiera de ellos trata de agrupar en una entidad los datos (propiedades) y las funciones que los manejan (métodos) haciendo que el estado sea siempre válido manipulable solo a través de su interfaz, proporcionan una abstracción para que baste conocer la interfaz y no su funcionamiento interno. Y esto es bueno, ya que hace que sean muy fácil de usar, de reutilizar componentes ya probados, menor acoplamiento, que además redunda en un mantenimiento más sencillo y productividad, además, se pueden construir componentes complejos a partir de componentes más sencillos. El éxito de los extendidos &lt;a href=&#34;https://en.wikipedia.org/wiki/Object-oriented_programming&#34;&gt;lenguajes orientados a objetos&lt;/a&gt; se debe en gran medida a estos importantes conceptos.&lt;/p&gt;

&lt;p&gt;Un componente React y otro de Polymer tienen el siguiente aspecto en código.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/f7e6a08f94ae9f203cc2.js?file=react.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/f7e6a08f94ae9f203cc2.js?file=polymer.html&#34;&gt;&lt;/script&gt;

&lt;p&gt;Uno de los &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2011/08/motivos-para-elegir-apache-tapestry.html&#34;&gt;motivos que comentaba para elegir Tapestry&lt;/a&gt; era precisamente este de componente. En Tapestry un componente está formado por una clase Java que contiene la lógica del componente tanto para obtener los datos que necesite la plantilla como para manejar los eventos que se produzcan en el navegador como clics o envío de formularios con datos, también puede tener asociada una plantilla que generará el &lt;abbr title=&#34;HyperText Markup Language&#34;&gt;HTML&lt;/abbr&gt; que se enviará al navegador web del cliente y que usará la clase Java para &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/07/modelo-push-contra-modelo-pull-en-frameworks-web/&#34;&gt;obtener los datos que necesite de forma &lt;em&gt;pull&lt;/em&gt; en vez de &lt;em&gt;push&lt;/em&gt;&lt;/a&gt; (el modelo &lt;em&gt;push&lt;/em&gt; es el habitual en los &lt;em&gt;frameworks&lt;/em&gt; basados en acciones), puede necesitar algunos archivos JavaScript para añadir algún comportamiento en el cliente y finalmente archivos de estilos CSS. El componente define los archivos JavaScript y de estilos que necesita y Tapestry se encarga de incluirlos en la página cuando se genera. Solo se incluyen los necesarios según los componentes que se hayan usado para generar la página, no haciendo falta incluir archivos de forma global.&lt;/p&gt;

&lt;p&gt;Para usar un componente en Tapestry basta con conocer sus parámetros y los eventos que puede lanzar, estos forman su interfaz que nos abstraen de su funcionamiento interno. Por supuesto su pueden crear componentes más complejos a partir de otros más simples como si de piezas lego se tratase.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/f7e6a08f94ae9f203cc2.js?file=NumeroProductos.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/f7e6a08f94ae9f203cc2.js?file=NumeroProductos.tml&#34;&gt;&lt;/script&gt;

&lt;p&gt;Según lo que comenta la gente parece bastante entusiasmada cuando prueban React o Polymer y considero que si les gusta el concepto de componentes en el lado del cliente creo que también les gustaría el concepto de componentes en el servidor que proporciona Apache Tapestry (entre otras muchas cosas que proporciona) si lo conociesen y probasen. Y son herramientas totalmente compatibles porque perfectamente se puede usar Tapestry en el lado del servidor y React o Polymer en el lado del cliente.&lt;/p&gt;

&lt;p&gt;Hace meses escribí un &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;libro sobre Apache Tapestry&lt;/a&gt; que puedes descargar completo y gratuitamente para conocer más detalles sobre este &lt;em&gt;framework&lt;/em&gt; para la plataforma Java. Si aún necesitas conocer más también escribí un artículo comentando muchas de las &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2011/08/motivos-para-elegir-apache-tapestry.html&#34;&gt;varias características más destacables de Tapestry&lt;/a&gt;. Por supuesto puedes consultar más &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/tags/tapestry/&#34;&gt;artículos etiquetados como tapestry&lt;/a&gt; en esta bitácora y en &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/search/label/tapestry&#34;&gt;El blog de pico.dev&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/12/portada-PugInTapestry-thumb.png&#34; alt=&#34;Portada libro: PlugIn Tapestry&#34; title=&#34;Portada libro: PlugIn Tapestry&#34; style=&#34;float: left; margin-right: 1.5em;&#34;&gt;
    &lt;h3&gt;Libro PlugIn Tapestry&lt;/h3&gt;
    &lt;p&gt;Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este &lt;i&gt;framework&lt;/i&gt; en el formato que prefieras, &lt;a href=&#34;http://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry&lt;/a&gt;, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.&lt;/p&gt;
    &lt;br style=&#34;clear: both;&#34;&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;http://goo.gl/dfySZ1&#34; class=&#34;btn btn-lg btn-success&#34;&gt;PDF&lt;/a&gt;
        &lt;a href=&#34;http://goo.gl/bs7Rtu&#34; class=&#34;btn btn-lg btn-success&#34;&gt;EPUB&lt;/a&gt;
        &lt;a href=&#34;http://goo.gl/lxOZMT&#34; class=&#34;btn btn-lg btn-success&#34;&gt;MOBI&lt;/a&gt;
        &lt;a href=&#34;http://goo.gl/MJJiPV&#34; class=&#34;btn btn-lg btn-success&#34;&gt;HTML&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;http://goo.gl/Qv1Ym&#34; class=&#34;btn btn-lg btn-success&#34;&gt;Código fuente ejemplos&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react/&#34;&gt;Ejemplo lista de tareas con React y Backbone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://platzi.com/blog/web-components-polymer/&#34;&gt;Aprende a crear Web Components con Polymer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="java"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="tapestry"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/07/a-microsoft-no-le-importa-que-uses-windows-u-office-sin-licencia/</id>
        <title>A Microsoft no le importa que uses Windows u Office sin licencia</title>        
        <updated>2015-09-30T21:00:00+02:00</updated>
        <published>2015-07-28T19:30:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2015/07/a-microsoft-no-le-importa-que-uses-windows-u-office-sin-licencia/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Si Microsoft quisiera no habría usuarios de Windows sin la correspondiente licencia de uso. Pero lo consiente, tampoco le importa que para un uso personal se haga de forma «pirata». Pocos días después del señalado 29 de julio Windows 10 aparecerá en las redes de compartición de archivos y páginas de descarga, también pocos días después aparecerá un programa que evite el sistema de validación como ha ocurrido con anteriores versiones.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/microsoft.png&#34; class=&#34;right&#34; alt=&#34;Microsoft&#34; title=&#34;Microsoft&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;http://www.microsoft.com/&#34;&gt;Microsoft&lt;/a&gt; ha lanzado a la venta y preinstalará la licencia por el derecho de uso (que no propiedad del producto) de su próximo sistema operativo, &lt;a href=&#34;http://www.microsoft.com/es-es/windows/&#34;&gt;Windows&lt;/a&gt; 10. Aunque la mayoría adquirirán esa licencia a través del &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2011/05/impuesto-windows.html&#34;&gt;impuesto Windows&lt;/a&gt; al comprar un nuevo equipo (aunque no quieran) y aunque (raramente) es posible &lt;a href=&#34;http://totaki.com/poesiabinaria/2012/08/aventuras-devolviendo-una-licencia-de-windows-que-venia-de-serie-con-un-portatil/&#34;&gt;conseguir su reembolso&lt;/a&gt; aún con trabas, la gran mayoría no lo hará bien por desconocimiento de que el equipo y su sistema operativo son dos productos distintos (muchos no saben tampoco que es un sistema operativo), desconocimiento de la posibilidad del reembolso o por no realizar el esfuerzo (me declaro culpable) del cual el fabricante es habitual que proporcione cero información sobre cómo proceder y cuando se realiza es con dificultades. Muchos pagamos la licencia de Windows aunque no la queremos y aunque Microsoft lógicamente prefiere que adquieras la licencia creo que no le importa que no la pagues para un uso personal.&lt;/p&gt;

&lt;p&gt;Hay pocas pero algunas opciones para adquirir un portátil sin Windows o con alguna distribución de Linux, de buena calidad, con buenas especificaciones y con un precio razonable, una de ellas son los portátiles de &lt;a href=&#34;https://slimbook.es/&#34;&gt;Slimbook&lt;/a&gt;. En la bitácora de &lt;a href=&#34;http://www.kdeblog.com/&#34;&gt;KDE Blog&lt;/a&gt; hay un &lt;a href=&#34;http://www.kdeblog.com/slimbook-tu-portatil-linux-de-calidad.html&#34;&gt;artículo sobre un modelo de estos portátiles&lt;/a&gt; y un &lt;a href=&#34;http://www.kdeblog.com/unboxing-de-mi-slimbook-con-kubuntu-15-04-y-plasma-5.html&#34;&gt;vídeo con el &lt;em&gt;unboxing&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/92/windows-10.png&#34; title=&#34;Windows 10&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/92/windows-10.png&#34;&gt;&lt;/a&gt;
    &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;¿Por qué digo que no le importa que no pagues la licencia? Porque versión tras versión la medidas incluidas en Windows u Office para protegerlos de un uso sin licencia son evitadas sin aparentemente muchas dificultades y al cabo de muy poco tiempo aparecen en las páginas de descargas las imágenes junto con las instrucciones a seguir para instalarlo sin ningún tipo de problema. Y en Windows 10 será igual. ¿Por que las medidas de validación incluidas no evitan el uso sin licencia? Porque le conviene a Microsoft no ser muy restrictivos. Si lo fueran algunos pagarían la licencia pero otros muchos dirían &lt;em&gt;¡¿que? ¿que la licencia cuesta 119 € (o 199, o 50 según lo que se consigue con devolución en un equipo nuevo)? ¿un tercio (aprox.) de lo que me costó el ordenador?!&lt;/em&gt;, y eso solo Windows, si además le sumamos Office y otros programas el coste de las licencias podría superar con creces el precio del equipo. Peor aún, cantidad a desembolsar cada unos pocos años por la obsolescencia y nuevas versiones. ¿Y qué harían esos  que no pudiesen usar Windows u Office? Buscar alternativas y&amp;hellip; ¿cuál creéis que eligirían? La también cara competencia de &lt;a href=&#34;http://www.apple.com/&#34;&gt;Apple&lt;/a&gt; con sus &lt;a href=&#34;http://store.apple.com/es/mac&#34;&gt;Mac&lt;/a&gt; o alguna distribución GNU/Linux como &lt;a href=&#34;http://www.ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt;, &lt;a href=&#34;http://www.linuxmint.com/&#34;&gt;Linux Mint&lt;/a&gt;, &lt;a href=&#34;https://www.debian.org/&#34;&gt;Debian&lt;/a&gt;, &lt;a href=&#34;https://fedoraproject.org/&#34;&gt;Fedora&lt;/a&gt;, &lt;a href=&#34;http://www.opensuse.org/es/&#34;&gt;openSUSE&lt;/a&gt;, etc&amp;hellip; Que la gente supiese y pagase el coste de las licencias de software probablemente sería una de las mejores formas de fomentar el uso del software libre y GNU/Linux.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/92/linux-gnu-ditributions.png&#34; title=&#34;Linux, GNU, distribuciones&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/92/linux-gnu-ditributions.png&#34;&gt;&lt;/a&gt;
    &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;¿Alguien cree que una empresa como Microsoft con los recursos y capacidad que posee no podría implementar una validación que impidiera su uso indebidamente, más ahora donde la conexión a internet es común? No, la respuesta es que no quiere y tiempo ha tenido para demostrar lo contrario. Perdiendo muchos usuarios a favor de sus alternativas haría que esas personas estuvieran capacitadas para usar esas mismas alternativas en el trabajo (incluidas escuelas y empresas de formación), el mundo empresarial donde Microsoft les es más fácil exigir su derecho legalmente en vez de individualmente a personas y de donde obtendrá sus mayores ingresos. Hacerlo provocaría que bajase su cuota de uso en niveles monopolísticos actualmente y posiblemente a largo plazo un peligro de sus ingresos.&lt;/p&gt;

&lt;p&gt;Solo hay que ver las millonadas obscenas que se adjudican en &lt;a href=&#34;https://www.meneame.net/m/tecnolog%C3%ADa/concurso-millonario-migrar-windows-xp-8-1-comunidad-madrid&#34;&gt;contratos para la compra de licencias en la administración pública&lt;/a&gt;. Dinero que salen de tus impuestos que aún muchos políticos y funcionarios (ir)responsables de tales adjudicaciones no comprenden (o no quieren comprender) que dicho abultado gasto recurrente está mucho mejor invertido en empresas locales que crean puestos de trabajo en la región y en software libre del que cualquiera puede beneficiarse en vez de en una empresa que para poco de su desarrollo realiza en cada país donde es usado (notar la diferencia entre gasto e inversión como se comenta en &lt;a href=&#34;http://www.danitxu.com/blog/2015/02/23/podemos-y-debemos-apostar-por-el-software-libre/&#34;&gt;El blog de danitxu&lt;/a&gt;). El coste de las alternativas de software libre pueden ser igual de obsceno, más abultado aún o mucho menor pero la diferencia entre otras es que muy seguramente no sea por las licencias sino por los servicios de consultoría o desarrollo que pueden ser ofrecidos por empresas locales y de los que dependiendo del caso cualquiera podría beneficiarse.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/92/windows-genuine.jpg&#34; title=&#34;Windows Genuine&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/92/windows-genuine.jpg&#34;&gt;&lt;/a&gt;
    &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Microsoft sabe que estás usando su software sin la correspondiente licencia y te lo dice mostrándote un mensaje cada cierto tiempo o te quita el fondo de pantalla, incordia un poco pero que no impide su uso. Voluntariamente o negligentemente los sistemas de validación incorporados en Windows u Office consienten que muchos usuarios usen la versión la versión &lt;em&gt;Pirated&lt;/em&gt;, usuarios que no están dispuestos a pagar el considerable coste de la licencia. Aunque preferirá que los usuarios compren la licencia Microsoft permite en cierta medida el uso de su software sin ella, la alternativa sería perder la posibilidad de convencer a algunos a usar el software legalmente aparte de perder couta de uso a favor de otras alternativas, quizá le es más provechosa una situación donde se use su software ilegalmente que una alternativa. Microsoft también comete las injusticias que la ley le deja o nadie le exige, preinstalado su sistema indeseable por algunos que no lo queremos al mismo tiempo que no proporciona información clara y el proceso sea sencillo para conseguir su devolución junto con el reembolso de su coste y en los &lt;a href=&#34;http://economia.elpais.com/economia/2014/01/18/actualidad/1390071860_568641.html&#34;&gt;impuestos que usando ingeniería fiscal Microsoft junto con otras empresas se llevan a donde menos pagan&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Una nueva versión de Windows o un nuevo equipo es una ocasión ideal para en vez de migrar a la nueva versión de Windows dar el salto a GNU/Linux y dejar de preocuparte de estar violando esclavizantes licencias o aceptando cláusulas que la mayoría de personas si leyera y comprendiera no aceptaría tan alegremente. Yo lo hice hace unos años pasando por varias distribuciones, &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2010/03/de-windows-arch-linux.html&#34;&gt;de Windows a Arch Linux&lt;/a&gt;, y después de casi seis años aun sigo en Arch, &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/08/de-arch-linux-a-arch-linux/&#34;&gt;De Arch Linux a Arch Linux&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/01/windows-10-y-office-2016-tan-faciles-de-usar-sin-licencia-como-siempre/&#34;&gt;Windows 10 y Office 2016 tan fáciles de usar sin licencia como siempre&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/05/3-opciones-ofimaticas-alternativas-a-microsoft-office/&#34;&gt;3 opciones ofimáticas alternativas a Microsoft Office&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2010/03/de-windows-arch-linux.html&#34;&gt;De Windows a Arch Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/08/de-arch-linux-a-arch-linux/&#34;&gt;De Arch Linux a Arch Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://barrapunto.com/~djworld/journal/23841&#34;&gt;Misión cumplida: me han reembolsado la licencia de Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.meneame.net/story/usuarios-portatiles-no-pueden-obtener-reembolso-caso-elegir-so&#34;&gt;Los usuarios de portátiles no pueden obtener reembolso en caso de elegir un SO distinto a Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.elmundo.es/navegante/2007/05/26/tecnologia/1180175185.html&#34;&gt;Casado con Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.meneame.net/m/tecnolog%C3%ADa/concurso-millonario-migrar-windows-xp-8-1-comunidad-madrid&#34;&gt;Concurso millonario para migrar de Windows XP a 8.1 en la Comunidad de Madrid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.meneame.net/m/actualidad/devolucion-canon-windows&#34;&gt;Devolución del canon Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.meneame.net/story/cuanto-gana-microsoft-cada-pc-windows-vende&#34;&gt;¿Cuánto gana Microsoft por cada PC con Windows que se vende?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="microsoft"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/06/nueva-visita-a-herramientas-para-un-proyecto-java/</id>
        <title>Nueva visita a Herramientas para un proyecto Java</title>        
        <updated>2015-09-30T21:00:00+02:00</updated>
        <published>2015-06-12T20:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2015/06/nueva-visita-a-herramientas-para-un-proyecto-java/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Las tecnologías para desarrollar una aplicación son un medio para resolver las necesidades del negocio o un cliente, no un fin. Pero esto no quiere decir que la elección sea trivial o poco importante, realizar las elecciones adecuadas según lo requisitos puede evitar complicaciones en un futuro. Para un proyecto basado en la plataforma Java esta es mi selección de herramientas de las que conozco.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/java.png&#34; class=&#34;right&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Hace 4 años escribí un &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2011/06/elegir-herramientas-para-un-proyecto.html&#34;&gt;artículo comentando que tecnologías eligiría&lt;/a&gt; para un proyecto Java si tuviese posibilidad. Al ritmo que avanza la tecnología cuatro años es un tiempo bastante largo, también es un tiempo en el que he podido aprender y añadir a mi «caja de herramientas» nuevas opciones que después de evaluarlas me han gustado. En este artículo haré una nueva visita al artículo anterior y comentaré algunas nuevas herramientas.&lt;/p&gt;

&lt;h3 id=&#34;lenguaje-de-programación&#34;&gt;Lenguaje de programación&lt;/h3&gt;

&lt;p&gt;Como lenguaje de programación seguiría usando Java, en mi caso es el lenguaje que más conozco y sigue siendo una de las opciones más válidas. Pero con la salida de una nueva versión usaría Java 8. La &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/&#34;&gt;publicación de Java 8 incorporando varias novedades importantes&lt;/a&gt; han mejorado varios aspectos de este lenguaje, por mencionar los más relevantes están la incorporación de &lt;em&gt;lambdas&lt;/em&gt; que proporciona una cierta forma de programación funcional, también destaca los &lt;em&gt;streams&lt;/em&gt; que permite describir los algoritmos que procesan datos de una forma más expresiva y legible además de aprovechar mejor los procesadores multinúcleo, métodos por defecto en interfaces que permite mantener compatibilidad hacia atrás (aunque esto interesa más a los desarrolladores que hacen APIs para que sean usadas por terceras partes), una nueva API para el manejo de fechas eliminando una de las críticas de versiones anteriores y algunas cosas más. El futuro con Java 9 es prometedor si presenta la interesante modularidad.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/&#34;&gt;Novedades y nuevas características de Java 8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/05/10-razones-para-seguir-usando-java/&#34;&gt;10 razones para seguir usando Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2016/03/introduccion-y-nuevas-caracteristicas-de-java-ee-7/&#34;&gt;Introducción y nuevas características de Java EE 7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;persistencia-en-base-de-datos&#34;&gt;Persistencia en base de datos&lt;/h3&gt;

&lt;p&gt;Para la persistencia en vez de usar la muy difundida librería &lt;a href=&#34;http://hibernate.org/&#34;&gt;Hibernate&lt;/a&gt; usaría &lt;a href=&#34;http://www.jooq.org/&#34;&gt;jOOQ&lt;/a&gt;. jOOQ es una librería que no tienen tanta magia como Hibernate que en muchas ocasiones produce errores complicados de resolver y no tenemos tanto control de lo que hace, por otro lado jOOQ devuelve a la base de datos y al lenguaje SQL la relevancia que con Hibernate queda abstraída con el mapeado del modelo de datos a objetos y el lenguaje HQL. jOOQ permite construir las sentencias SQL de forma programática con lo que el compilador nos indicará errores de compilación y nos validará los tipos que usemos, ambas cosas son importantes cuando hacemos un &lt;em&gt;refactor&lt;/em&gt; en alguna parte de la aplicación. En el artículo &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/05/alternativa-a-hibernate-u-orm-y-ejemplo-de-jooq/&#34;&gt;alternativa a Hibernate y ejemplo jOOQ&lt;/a&gt; entro en más detalles.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/05/alternativa-a-hibernate-u-orm-y-ejemplo-de-jooq/&#34;&gt;Alternativa a Hibernate y ejemplo jOOQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;modificaciones-de-la-base-de-datos&#34;&gt;Modificaciones de la base de datos&lt;/h3&gt;

&lt;p&gt;En un proyecto de larga duración y en el que se realicen mejoras probablemente necesitaremos modificar el modelo de la base de datos. Empleando la herramienta &lt;a href=&#34;http://www.liquibase.org/&#34;&gt;Liquibase&lt;/a&gt; podremos &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2013/05/modificar-la-base-de-datos-con-liquibase.html&#34;&gt;automatizar la actualización del esquema de la base de datos&lt;/a&gt; ya necesitemos añadir campos, cambiarlos de nombre, eliminarlos, crear o eliminar tablas, insertar, eliminar o actualizar datos. Estas actualizaciones de la base de datos se indican en un archivo que podemos guardar en nuestro repositorio de control de versiones de forma que podamos ver y reproducir los cambios que se han hecho a la base de datos a lo largo del tiempo.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2013/05/modificar-la-base-de-datos-con-liquibase.html&#34;&gt;Modificar la base de datos con Liquibase&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;pruebas&#34;&gt;Pruebas&lt;/h3&gt;

&lt;p&gt;Para pruebas unitarias dos buenas posibilidades son &lt;a href=&#34;https://code.google.com/p/spock/&#34;&gt;Spock&lt;/a&gt; y &lt;a href=&#34;http://www.gebish.org/&#34;&gt;Geb&lt;/a&gt;. Spock permite realizar los teses unitarias con un DSL bastante descriptivo que facilita la lectura posteriormente de la prueba. Por otro lado Geb permite automatizar las pruebas de las aplicaciones web proporcionando facilidades, se puede integrar con Spock.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2012/07/pruebas-unitarias-con-spock-y-mockito.html&#34;&gt;Pruebas unitarias con Spock y Mockito&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;cliente&#34;&gt;Cliente&lt;/h3&gt;

&lt;p&gt;En el lado cliente de una aplicación web usaría la combinación de varias tecnologías, &lt;a href=&#34;http://jquery.com/&#34;&gt;jQuery&lt;/a&gt; para acceder y manipular el DOM de la página web, &lt;a href=&#34;http://requirejs.org/&#34;&gt;RequireJS&lt;/a&gt; para cargar los archivos necesarios en la página y evitar la polución del ámbito global javascript. Si la aplicación tiene una carga importante en el lado cliente usaría &lt;a href=&#34;http://backbonejs.org/&#34;&gt;Backbone&lt;/a&gt;, &lt;a href=&#34;http://facebook.github.io/react/&#34;&gt;React&lt;/a&gt; y &lt;a href=&#34;http://mustache.github.io/&#34;&gt;Mustache&lt;/a&gt;, en el ejemplo &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2013/04/introduccion-y-ejemplo-de-backbonejs.html&#34;&gt;lista de tareas con Backbone y React&lt;/a&gt; puede verse como podría quedar el código, también &lt;a href=&#34;http://jasmine.github.io/&#34;&gt;Jasmine&lt;/a&gt; para hacer pruebas unitarias en javascript. Finalmente, &lt;a href=&#34;http://gruntjs.com/&#34;&gt;Grunt&lt;/a&gt; para hacer algunas tareas de javascript y &lt;a href=&#34;http://bower.io/&#34;&gt;Bower&lt;/a&gt; para obtener las librerías que requiera el proyecto.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html&#34;&gt;Introduccion y ejemplo de RequireJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2013/04/introduccion-y-ejemplo-de-backbonejs.html&#34;&gt;Introducción y ejemplo de Backbone.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-mustache.htmlf&#34;&gt;Introducción y ejemplo de Mustache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2013/05/ejemplo-de-pruebas-unitarias-en.html&#34;&gt;Ejemplo de pruebas unitarias en javascript con Jasmine y Sinon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react/&#34;&gt;Ejemplo lista de tareas con Backbone y React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/01/internacionalizacion-i18n-en-javascript/&#34;&gt;Internacionalización (i18n) en Javascript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;framework-web&#34;&gt;&lt;em&gt;Framework&lt;/em&gt; web&lt;/h3&gt;

&lt;p&gt;Para el desarrollo de una página o aplicación web seguiría usando &lt;a href=&#34;http://tapestry.apache.org&#34;&gt;Apache Tapestry&lt;/a&gt; por la productividad y alta reutilización que se puede conseguir, también por la flexibilidad, extensibilidad y adaptabilidad del &lt;em&gt;framework&lt;/em&gt;. Descargando el &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;libro PlugIn Tapesty&lt;/a&gt; puedes conocer muchos más detalles. Si se tratase de una aplicación REST evaluaría &lt;a href=&#34;http://sparkjava.com/&#34;&gt;Spark&lt;/a&gt; o &lt;a href=&#34;http://resteasy.jboss.org/&#34;&gt;RESTEasy&lt;/a&gt; para proporcionar la interfaz exterior de los microservicios y quizá evaluaría &lt;a href=&#34;https://thrift.apache.org/&#34;&gt;Apache Thrift&lt;/a&gt; o &lt;a href=&#34;http://www.grpc.io/&#34;&gt;gRPC&lt;/a&gt; para consumirlos internamente, Thrift permite acceder a la API de una forma programática más sencillamente que consumir una interfaz REST cruda. La tendencia actual es desarrollar microservicios y esto en las aplicaciones web supone que sean capaces de ofrecer su servicio por si mismas no usando un servidor de aplicaciones que hay que instalar previamente simplificando el despliegue a los administradores de sistemas, esto también se puede conseguir en parte usando &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;. En vez de usar un &lt;a href=&#34;http://tomcat.apache.org/&#34;&gt;Tomcat&lt;/a&gt; tradicional podemos usar la versión embebible.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;Libro sobre desarrollo de aplicaciones con Apache Tapestry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/03/introduccion-y-ejemplo-de-api-rpc-con-apache-thrift/&#34;&gt;Introducción y ejemplo de API RPC con Apache Thrift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/03/aplicacion-web-java-autocontenida-con-tomcat-embedded/&#34;&gt;Aplicación web Java autocontenida con Tomcat Embedded&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2013/02/ejemplo-sencillo-de-web-service-con-resteasy.html&#34;&gt;Ejemplo sencillo de servicio web con RESTEasy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;base-de-datos&#34;&gt;Base de datos&lt;/h3&gt;

&lt;p&gt;Para una base de datos relacional en vez de &lt;a href=&#34;http://www.mysql.com/&#34;&gt;MySQL&lt;/a&gt; usaría &lt;a href=&#34;http://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt;. PostgreSQL posee numerosas opciones avanzadas y es una de las bases de datos libres más reconocidas. El futuro de MySQL con Oracle y su escisión en MariaDB es más incierto además de no poseer algunas características que PostgreSQL sí.&lt;/p&gt;

&lt;p&gt;Dependiendo del causística de la aplicación otra opción complementaria es &lt;a href=&#34;http://redis.io/&#34;&gt;Redis&lt;/a&gt;, una base de datos clave-valor y en caso de tener que hacer búsquedas &lt;a href=&#34;https://www.elastic.co/products/elasticsearch/&#34;&gt;Elasticsearch&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/04/introduccion-a-elasticsearch/&#34;&gt;Introducción a Elasticsearch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;entorno-de-desarrollo&#34;&gt;Entorno de desarrollo&lt;/h3&gt;

&lt;p&gt;Para el entorno de desarrollo o &lt;em&gt;devbox&lt;/em&gt; usaría &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; y &lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;Compose&lt;/a&gt; que permiten disponer de un entorno más parecido al entorno de producción y en menos tiempo que instalando todo lo necesario en la máquina física. También podemos usar Docker para el entorno de producción. Para automatizar la tareas de configuración o despliegue usaría &lt;a href=&#34;http://www.ansible.com&#34;&gt;Ansible&lt;/a&gt; ya que al contrario de otras opciones no requiere instalar un agente en las máquinas a administrar, con un acceso SSH es suficiente.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/&#34;&gt;Introducción y características de Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/11/inicio-basico-de-docker/&#34;&gt;Inicio básico de Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/&#34;&gt;Cómo crear una imagen para Docker usando un Dockerfile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/&#34;&gt;Introducción a Ansible&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hospedaje&#34;&gt;Hospedaje&lt;/h3&gt;

&lt;p&gt;En cuanto al alojamiento para la aplicación la nube es otra tendencia por su flexibilidad. La &lt;a href=&#34;http://aws.amazon.com/es/ec2/&#34;&gt;nube de Amazon&lt;/a&gt; proporciona muchos servicios que pueden sernos útiles sin embargo si nuestra aplicación no los necesita y no es demasiado complicada podemos optar por otras opciones más baratas. Si usamos Amazon podemos aprovecharnos de &lt;a href=&#34;https://bitnami.com/&#34;&gt;Bitnami&lt;/a&gt; si trabajamos con algunas de las aplicaciones para las que proporciona imágenes. Dos de estas opciones más baratas son &lt;a href=&#34;https://www.linode.com/&#34;&gt;Linode&lt;/a&gt; o &lt;a href=&#34;https://www.digitalocean.com/&#34;&gt;Digital Ocean&lt;/a&gt; con las que por unos 5 o 10 € al mes podemos disponer de una máquina con 1 GIB de RAM, unos 30 GiB de discos SSD y una amplia transferencia de datos entrantes y salientes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/&#34;&gt;Introducción a Bitnami&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/04/nueva-visita-a-5-plus-opciones-de-hosting-para-aplicaciones/&#34;&gt;Nueva visita a 5+ opciones de «hosting» para aplicaciones&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;otras&#34;&gt;Otras&lt;/h3&gt;

&lt;p&gt;Hay otras herramientas aún pasado este tiempo seguiría usando como &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; para el control de versiones, &lt;a href=&#34;http://www.redmine.org/&#34;&gt;Redmine&lt;/a&gt; como gestor de peticiones, &lt;a href=&#34;http://pmd.sourceforge.net/&#34;&gt;PMD&lt;/a&gt; y &lt;a href=&#34;http://checkstyle.sourceforge.net/&#34;&gt;Checkstyle&lt;/a&gt; para analizar el código fuente, &lt;a href=&#34;http://gradle.org/&#34;&gt;Gradle&lt;/a&gt; como herramienta de construcción, &lt;a href=&#34;http://jenkins-ci.org/&#34;&gt;Jenkins&lt;/a&gt; como herramienta de integración continua, &lt;a href=&#34;http://www.linux.com/&#34;&gt;GNU/Linux&lt;/a&gt; tanto para desarrollar como para el servidor en el que desplegar la aplicación, &lt;a href=&#34;https://eclipse.org&#34;&gt;eclipse&lt;/a&gt; para editar código Java o &lt;a href=&#34;http://www.sublimetext.com/&#34;&gt;Sublime Text&lt;/a&gt; para editar archivos no Java, &lt;a href=&#34;http://community.jaspersoft.com/project/jasperreports-library&#34;&gt;JasperReports&lt;/a&gt; para informes complejos, &lt;a href=&#34;http://nginx.org/&#34;&gt;Nginx&lt;/a&gt; como servidor web, &lt;a href=&#34;http://quartz-scheduler.org/&#34;&gt;Quartz&lt;/a&gt; para lanzar tareas en ciertos momentos o regularmente, &lt;a href=&#34;http://logging.apache.org/log4j/2.x/&#34;&gt;Log4j&lt;/a&gt; 2 para emitir trazas de la aplicación en vez las propuestas anteriormente (SLF4J o Logback), &lt;a href=&#34;http://lesscss.org/&#34;&gt;less&lt;/a&gt; para facilitar la escritura de hojas de estilo CSS y &lt;a href=&#34;http://getbootstrap.com/&#34;&gt;Bootstrap&lt;/a&gt; como estilos por defecto para una aplicación. O alguna nueva como &lt;a href=&#34;https://www.rabbitmq.com/&#34;&gt;RabbitMQ&lt;/a&gt; para una comunicación entre aplicaciones o partes de ella basada en mensajes y de forma desacoplada,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2012/08/analisis-estatico-de-codigo-con-pmd.html&#34;&gt;Análisis estático de código con PMD &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2012/03/herramienta-de-construccion-gradle.html&#34;&gt;Herramienta de construcción Gradle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para cada un de estas herramientas en muchos casos tendremos varias alternativas similares para elegir, a veces elegir una u otra es algo subjetivo. Estas herramientas en muchos casos son de lo mejor que hay disponible pero perfectamente se pueden usar alternativas similares.&lt;/p&gt;

&lt;p&gt;¿Cuales serán las herramientas que formarán el «estado del arte» dentro de otros cuatro años? ¿Cuales sobrevivirán y cuales perecerán en el camino? ¡Apasionante!&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2011/06/elegir-herramientas-para-un-proyecto.html&#34;&gt;Elegir herramientas para un proyecto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://nealford.com/memeagora/2013/05/28/build_your_own_technology_radar.html&#34;&gt;Build Your Own Technology Radar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.thoughtworks.com/radar&#34;&gt;Technology Radar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="java"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/05/10-razones-para-seguir-usando-java/</id>
        <title>10 razones para seguir usando Java</title>        
        <updated>2015-11-10T19:00:00+01:00</updated>
        <published>2015-05-22T17:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2015/05/10-razones-para-seguir-usando-java/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Con ya dos décadas de vida y a lo largo de este tiempo Java se ha convertido en uno de los lenguajes más empleados para programar a día de hoy. En este periodo han surgido otros lenguajes en la propia plataforma de la JVM como Groovy, Scala o Clojure y fuera de ella como C#, Python, Ruby, PHP, Go o Dart ofreciendo algunas cosas adicionales o supliendo algunas carencias de Java. Aún con toda esta competencia esta es mi lista de 10 razones por las que creo que Java sigue siendo una de las mejores opciones.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/java.png&#34; class=&#34;right&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;El sábado 23 de mayo de 2015 el lenguaje Java cumple 20 años de historia y aún hoy Java sigue siendo uno de los lenguajes de programación preferidos para desarrollar en un mundo tecnológico en el que unos pocos años pueden darse grandes cambios y en dos décadas ver surgir nuevas tecnologías y verlas languidecer. Algunas personas se jactan y hablan con un tono de desprecio y mofa nada agradable hacia Java mostrando su desconocimiento o prejuicios siguiendo algunos tópicos bastante difundidos la mayoría incorrectos. A otras personas quizá no les gusta Java no tanto por el lenguaje como por los proyectos que ha desarrollado en él, en consultoras cárnicas, para clientes con condiciones laborales paupérrimas, con tecnologías, librerías y &lt;em&gt;frameworks&lt;/em&gt; obsoletos o códigos heredados programados por programadores aparentemente con poca experiencia que es un infierno mantener debido a una cantidad importante de errores, uso de tecnologías no adaptadas a la solución, malos funcionamientos y falta de documentación. Pero estas situaciones externas no tiene nada que ver con el lenguaje. Algunas otras personas quizá no les gusta porque no les ofrece el último azúcar sintáctico que han visto y usado en otros lenguajes o porque para propósitos específicos hay alternativas que permiten obtener una solución de una forma más sencilla.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/posts/81/java20.jpg&#34; alt=&#34;Java 20 años (1995-2015)&#34; title=&#34;Java 20 años (1995-2015)&#34;&gt;
&lt;/div&gt;

&lt;p&gt;En &lt;a href=&#34;http://www.javaworld.com/&#34;&gt;JavaWorld&lt;/a&gt; ha publicado varios artículos para celebrar el aniversario comentando su futuro, su pasado y presente o que notables características reunió en su momento para ser hoy uno de los lenguajes más usados.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javaworld.com/article/2925496/core-java/java-at-20-how-java-changed-programming-forever.html&#34;&gt;Java at 20: How it changed programming forever&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javaworld.com/article/2924046/scripting-jvm-languages/java-at-20-jvm-javas-other-big-legacy.html&#34;&gt;Java at 20: The JVM, Java&amp;rsquo;s other big legacy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javaworld.com/article/2925306/core-java/java-at-20-oracle-ranks-its-successes-failures-and-future.html&#34;&gt;Java at 20: Its successes, failures, and future&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javaworld.com/article/2923616/core-java/java-at-20-the-programming-juggernaut-rolls-on.html&#34;&gt;Java at 20: The programming juggernaut rolls on&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javaworld.com/article/2925060/java-platform/javas-key-to-success-is-simplicity.html&#34;&gt;Java&amp;rsquo;s key to success is simplicity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.javaworld.com/article/2926345/java-platform/unfinished-business-java-is-a-20-year-old-grown-up-with-bright-prospects-ahead.html&#34;&gt;Java is a 20-year-old grown-up with bright prospects ahead&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Algún otros artículos interesantes son:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.infoq.com/news/2015/05/java-20&#34;&gt;Java Turns 20&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.xataka.com/aplicaciones/20-anos-de-java-celebramos-su-tremenda-influencia-en-el-mundo-del-software-y-la-programacion&#34;&gt;20 años de Java: ¿En qué quedó el sueño de programar una vez, ejecutar en cualquier lugar?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Aunque algunos parecen considerar ya hoy a Java el nuevo &lt;a href=&#34;http://es.wikipedia.org/wiki/COBOL&#34;&gt;COBOL&lt;/a&gt; (y este último aún tiene futuro) y no sea lo habitual, en este artículo trataré de exponer algunos argumentos que posee Java para su defensa y por los que en mi caso aún no he tenido necesidad de buscar mayor felicidad programando en otra opción.&lt;/p&gt;

&lt;h3 id=&#34;java-no-es-lento&#34;&gt;Java no es lento&lt;/h3&gt;

&lt;p&gt;Quizá en las primeras versiones de los 90 fuera así pero la realidad hoy con las mejoras introducidas en cada versión a la &lt;a href=&#34;http://es.wikipedia.org/wiki/M%C3%A1quina_virtual_Java&#34;&gt;Java Virtual Machine&lt;/a&gt; (JVM) un programa Java es comparativamente igual de rápido que uno en C o C++, salvo para tareas muy específicas de cálculos intensivos no hay diferencia. Eligiendo las estructuras de datos adecuadas no tendría por qué haber una diferencia de rendimiento considerable y además para la mayoría de las tareas más importante que la rapidez es la legibilidad del código, su fácil desarrollo, mantenimiento o coste.&lt;/p&gt;

&lt;h3 id=&#34;javadoc&#34;&gt;Javadoc&lt;/h3&gt;

&lt;p&gt;Java tiene una gran herramienta de documentación que permite embeber la misma en el código fuente de los archivos y generar una serie de documentos html para su posterior consulta. La &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/&#34;&gt;documentación proporcionada en la API&lt;/a&gt; es extensa, completa y buena, siendo simple html puede ser alojada en cualquier servidor web y consultada en internet. Sin documentación la tarea de los programadores sería considerablemente más complicada, aún en el caso de falta de documentación javadoc el IDE con la asistencia de código puede ayudarnos gracias a la introspección incorporada en la plataforma.&lt;/p&gt;

&lt;h3 id=&#34;compilado-tipado-estático&#34;&gt;Compilado, tipado estático&lt;/h3&gt;

&lt;p&gt;Las metodologías ágiles están siendo ampliamente adoptadas y algunos de sus defensores apuestan por lenguajes que consideran encajan con su metodología agilista confundiéndola con lenguajes dinámicos y menos verbosos, que puede ser acertado en ocasiones o circunstancias pero con Java también se puede ser ágil como el que más. Una de las buenas prácticas de las metodologías ágiles es tener teses unitarios del código al ser posible que lo cubra al 100%, sin embargo, la realidad es que nos será complicado tener el 100% del código cubierto con teses.&lt;/p&gt;

&lt;p&gt;Con los lenguajes dinámicos hay que tener especial cuidado ya que por su propia naturaleza hace que algunos errores solo los encontraremos en la ejecución, por experiencia propia no será la primera vez (ni la centésima) que un error tan básico como de compilación por nombre de variable o método mal escrito es descubierto en producción. El IDE es la herramienta que en Java junto con el tipado estático y la ayuda al compilador permite detectar errores de compilación instantáneamente, por otra parte proporciona asistencia de código y a los programadores nos sirve como documentación de los tipos esperados en los argumentos de los métodos o propiedades de las clases. Los compiladores además de para traducir el código fuente a lenguaje máquina (o &lt;em&gt;bytecode&lt;/em&gt;) están para capturar errores sintácticos y léxicos ante los cambios de una nueva característica, una refactorización o un &lt;em&gt;merge&lt;/em&gt; con conflictos. Se puede pensar en el compilador como un &lt;em&gt;test&lt;/em&gt; automatizado que cubre el 100% del código, con un IDE se obtienen los errores al instante después de escribir cada caracter ¿que hay mejor? ¡no lo desprecies!.&lt;/p&gt;

&lt;p&gt;Escribir código menos verboso no hace que escribirlo sea más rápido ni necesariamente más legible, Java posee buenos IDEs con asistentes de código que con unas pocas pulsaciones permiten escribir el código igual o más rápido. Java es un lenguaje verboso y explícito en parte propiciado por su poco azúcar sintáctico pero las construcciones sintácticas pueden ser contraproducentes, un alto número de ellas y el código será muy críptico sin un conocimiento amplio del lenguaje. Uno de los éxitos de Java es su relativa simplicidad.&lt;/p&gt;

&lt;h3 id=&#34;ide&#34;&gt;IDE&lt;/h3&gt;

&lt;p&gt;Con un IDE el código Java se ve de distinta forma, no como simple texto sino donde los métodos, clases y propiedades tienen entidad propia. La asistencia de código permite obtener métodos disponibles, ver los tipos y nombres de argumentos y retornos, las excepciones lanzadas, si el método es estático o de instancia y la visibilidad de acceso según escribimos. Con la ayuda de un IDE podemos encontrar todos los usos de un método o clase de forma totalmente exacta o cambiar un nombre por otro. Hay IDEs para lenguajes dinámicos como &lt;a href=&#34;http://www.groovy-lang.org/&#34;&gt;Groovy&lt;/a&gt; con IntelliJ IDEA o &lt;a href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt; con PyCharm que proporcionan asistencia de código pero usando las características dinámicas de estos lenguajes el encontrar todos los usos de un método o variable no está garantizado.&lt;/p&gt;

&lt;p&gt;Un IDE puede suponer la diferencia entre dedicar un tiempo considerable a tareas de bajo valor a ser mucho más productivo, o mejor aún, ayudando a evitar errores.&lt;/p&gt;

&lt;h3 id=&#34;refactorizaciones&#34;&gt;Refactorizaciones&lt;/h3&gt;

&lt;p&gt;Con la ayuda del compilador y de un IDE las refactorizaciones como renombrar una variable, propiedad, método o clase son más sencillas y con más garantías de no romper nada, además de poder realizarlo en unos pocos segundos y sin tener que buscar y sustituir las referencias como texto plano en todo el código del proyecto. En proyectos grandes en los que trabajan más de una persona y tienen un tiempo de vida y de mantenimiento de más de unos pocos meses hace que evitemos muchos problemas y programemos con más seguridad de que las modificaciones que hacemos no introducen errores por cosas tan básicas como la compilación.&lt;/p&gt;

&lt;p&gt;Si el uso de un proyecto es prolongado en el tiempo este posiblemente tenga que adaptarse a necesidades inicialmente totalmente desconocidas, en estos casos será tarde o temprano necesario &lt;em&gt;refactorizar&lt;/em&gt;. En un negocio en el que el tiempo es importante y en una tecnología en constante evolución realizar refactorizaciones pequeñas o grandes es una necesidad. La mayor certeza es el cambio y se dará en herramientas, &lt;em&gt;frameworks&lt;/em&gt;, lenguajes, ideas de negocio, &amp;hellip;.&lt;/p&gt;

&lt;h3 id=&#34;productividad-y-legibilidad&#34;&gt;Productividad y legibilidad&lt;/h3&gt;

&lt;p&gt;El compilador e IDE nos indican todos los errores léxicos y sintácticos después de escribir cada caracter sin tener que ejecutar el código o los teses unitarios para descubrirlos evitando que lleguen a producción en cuyo caso nos requerirá dedicar tiempo para corregirlos o con peores consecuencias para los usuarios de nuestro código y para el negocio. Que el IDE nos muestre sugerencias con la asistencia de código según escribimos o mediante &lt;em&gt;refactorizaciones&lt;/em&gt; son un gran diferencia de productividad aunque algunos piensen que por ser el código más verboso o por escribir menos líneas de código se tarde en programar más la misma tarea, el compilador y el IDE son factores que permiten aumentar la productividad a pesar de la verbosidad.&lt;/p&gt;

&lt;p&gt;Con la llegada de &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/&#34;&gt;Java 8 y sus novedades&lt;/a&gt; se ha incorporado al lenguaje la programación funcional que permite expresar de una forma más natural para los humanos la tarea que se desea realizar, esto hace que el código sea más legible. Lo que en un lenguaje imperativo son varias líneas de código con una combinación de sentencias condicionales, bucles, asignaciones y llamadas a métodos con un objetivo poco claro sin un examen detallado del código ahora se puede expresar de forma funcional haciendo uso de los &lt;em&gt;streams&lt;/em&gt; y expresiones &lt;em&gt;lambda&lt;/em&gt;, también en menor número de líneas de código.&lt;/p&gt;

&lt;h3 id=&#34;software-disponible&#34;&gt;Software disponible&lt;/h3&gt;

&lt;p&gt;Java posee gran cantidad de software disponible, de gran calidad y en muchos casos con una licencia de código abierto o de software libre para cualquier tipo de necesidad en una  aplicación de cualquier ámbito. A menudo hay no solo una opción sino varias disponibles y con la libertad de elegir la que más se adecue al proyecto o se prefiera. Ahí está la &lt;a href=&#34;http://httpd.apache.org/&#34;&gt;fundación Apache&lt;/a&gt;, &lt;a href=&#34;https://spring.io/&#34;&gt;Spring&lt;/a&gt; o &lt;a href=&#34;http://www.jboss.org/&#34;&gt;JBoss&lt;/a&gt; con una buena colección de proyectos ampliamente utilizados.&lt;/p&gt;

&lt;p&gt;Los cambios se producirán, por ello no te encadenes a una determinada tecnología que en un futuro te impida adaptarte a nuevas necesidades. En Java hay opciones para cada diferente aspecto de la aplicación (seguridad, persistencia, &lt;em&gt;logging&lt;/em&gt;, &lt;em&gt;framework&lt;/em&gt; web, &amp;hellip;), por si en un futuro surge una nueva «cojoherramienta», y esto pasará tarde o temprano, diseña tu aplicación de tal forma que sea posible reemplazar una pieza por otra sin tener que reescribir la aplicación entera.&lt;/p&gt;

&lt;h3 id=&#34;ofertas-de-trabajo-desarrolladores&#34;&gt;Ofertas de trabajo, desarrolladores&lt;/h3&gt;

&lt;p&gt;Dado que Java unos de los lenguajes más utilizados y es usado ampliamente en muchos ámbitos es más fácil encontrar a personas con conocimientos y expertos en Java. Por ello hay numerosas ofertas de trabajo para diversos ámbitos (web, escritorio, servidor, dispositivos móviles, &amp;hellip;) algunas a considerar, aunque bastantes menos que ofertas.&lt;/p&gt;

&lt;h3 id=&#34;conservador-no-anticuado&#34;&gt;Conservador, no anticuado&lt;/h3&gt;

&lt;p&gt;Java tarda en incorporar en el lenguaje algunas de las últimas técnicas de programación que un determinado momento tienen gran relevancia. No porque no pueda sino porque tienen una actitud conservadora, y esto no es malo ya que uno de sus principios hasta el momento es mantener la compatibilidad hacia atrás ¿qué lenguaje que ha ido incorporando nuevas características ha mantenido la compatibilidad de compilación en gran medida durante 20 años? Java pone gran énfasis en este aspecto en cada nueva versión. Esperando cierto tiempo asegura incorporar en el lenguaje aquellas nuevas posibilidades que realmente han demostrado ser útiles y no son simples modas pasajeras que más tarde dificultan la compatibilidad en futuras versiones. Esto no quiere decir que no evolucione, ya en Java 5 incorporó numerosas novedades como &lt;em&gt;generics&lt;/em&gt;, … y en Java 8 programación funcional como &lt;em&gt;streams&lt;/em&gt; para mejorar la legibilidad del código y aprovechar el procesamiento paralelo de los procesadores multinúcleo. Los métodos por defecto (&lt;em&gt;default methods&lt;/em&gt;) en interfaces son una muestra del interés que hay en Java de mantener la compatibilidad hacia atrás. En este enlace está la &lt;a href=&#34;https://en.wikipedia.org/wiki/Java_version_history&#34;&gt;evolución histórica&lt;/a&gt; durante estos años.&lt;/p&gt;

&lt;p&gt;Como dijo &lt;a href=&#34;https://en.wikipedia.org/wiki/James_Gosling&#34;&gt;James Gosling&lt;/a&gt; en una conferencia de JavaOne:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;We don’t want to do things until we know we can do them right—in Java and on the JVM.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;propósito-general&#34;&gt;Propósito general&lt;/h3&gt;

&lt;p&gt;Java es un lenguaje de propósito general y multiplataforma ejecutable en cualquier dispositivo en el que haya una JVM disponible. No está restringido a un determinado ámbito o tipo de aplicación, el mismo conocimiento del lenguaje sirve para múltiples tipos de aplicaciones desde de escritorio, de servidor, procesamiento de datos, dispositivos móviles, ¿Java para &lt;em&gt;scripting&lt;/em&gt;? También, por &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/11/java-para-tareas-de-scripting/&#34;&gt;las ventajas de un lenguaje compilado con la facilidad de ejecución de un entorno interpretado&lt;/a&gt; &amp;hellip; incluso juegos, sí juegos. Hay muestras de algunos impresionantes con buen rendimiento, aunque alguno diría incorrectamente que no. Con &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/05/programacion-de-juegos-y-3d-en-java-con-jmonkeyengine/&#34;&gt;jMonkeyEngine podemos hacer un juego&lt;/a&gt; que tiene poco que envidiar usando otro lenguaje ya que proporciona los mimbres comunes: bucle del juego, colisiones, física, 3D con OpenGL, sonido, entrada, &amp;hellip;. &lt;a href=&#34;https://minecraft.net/&#34;&gt;Minecraft&lt;/a&gt; es una muestra, otras buenas muestras usando jMonkeyEngine son &lt;a href=&#34;http://store.steampowered.com/app/321080&#34;&gt;PirateHell&lt;/a&gt;, &lt;a href=&#34;http://mindemia.com/hostilesector/&#34;&gt;Hostile Sector&lt;/a&gt;, &lt;a href=&#34;http://jmonkeyengine.org/project/imperii/&#34;&gt;Imperii&lt;/a&gt;, &lt;a href=&#34;http://ghook.speedrungames.com/&#34;&gt;Grappling Hook&lt;/a&gt; o &lt;a href=&#34;http://store.steampowered.com/app/329770/&#34;&gt;4089: Ghost Within&lt;/a&gt; y en la &lt;a href=&#34;http://jmonkeyengine.org/showcase/&#34;&gt;página de ejemplos&lt;/a&gt; hay alguno más.&lt;/p&gt;

&lt;p&gt;Quizá en un futuro cambie pero hoy Java es el lenguaje en el que se programan las aplicaciones &lt;a href=&#34;https://www.android.com/&#34;&gt;Android&lt;/a&gt; nativas y una de las plataformas móviles con mayor cuota de mercado. El lema &lt;em&gt;“write once, run everywhere”&lt;/em&gt; sigue siendo aplicable hoy más que nunca haciéndole ideal para la nueva generación de dispositivos de la &lt;a href=&#34;http://es.wikipedia.org/wiki/Internet_de_las_cosas&#34;&gt;internet de las cosas&lt;/a&gt; (IoT, &lt;em&gt;Internet of things&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Mi escala de preferencias para un lenguaje es de la siguiente forma de mayor a menor (aunque puede variar según la necesidad):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ofertas de trabajo, alguna de Groovy, alguna de Python pero mucho menores que en Java, &lt;a href=&#34;http://www.microsoft.com/net&#34;&gt;C#&lt;/a&gt; o &lt;a href=&#34;http://php.net/&#34;&gt;PHP&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Propósito general, esto permite que el tiempo dedicado a aprender y convertirte en un experto en un lenguaje (que pueden ser de varios años) pueda ser aprovechado en el momento que el avance de la tecnología cambie las reglas de juego como la aparición de los dispositivos móviles. PHP es un lenguaje que fuera del ámbito de desarrollo web tiene poca presencia, dispone de buenas herramientas como &lt;a href=&#34;https://wordpress.org/&#34;&gt;Wordpress&lt;/a&gt;, &lt;a href=&#34;https://www.drupal.org/&#34;&gt;Drupal&lt;/a&gt; o &lt;a href=&#34;http://symfony.com/&#34;&gt;Symfony&lt;/a&gt; y hay ofertas de trabajo. En la plataforma &lt;a href=&#34;https://www.android.com/&#34;&gt;Android&lt;/a&gt; Java es el lenguaje empleado.&lt;/li&gt;
&lt;li&gt;Productividad, refactorizaciones y documentación disponible. Poder refactorizar el código de forma segura es un gran punto para la productividad y más importante aún evitar errores, por este motivo y a base de experiencia soy reticente a los lenguajes dinámicos. El tipado estático ayuda a evitar errores y servir como documentación, un buen IDE permite aumentar la productividad. Java es un lenguaje que está bien documentado con su Javadoc.&lt;/li&gt;
&lt;li&gt;Software disponible, hay cantidad de lenguajes algunos de los más nombrados son &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; o &lt;a href=&#34;https://www.dartlang.org/&#34;&gt;Dart&lt;/a&gt; pero en estos es probable que debiésemos desarrollar nosotros el software para una determinada necesidad que en otros lenguajes ya está implementado y más que probado pudiendo haber incluso varias opciones.&lt;/li&gt;
&lt;li&gt;Legibilidad, cualquier añadido al lenguaje que haga más claro el propósito del código o en menos líneas es bienvenido pero como ves esto está abajo en esta lista según importancia.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Aunque no lo he puesto el divertirse y programar a gusto con un lenguaje también debería estar en esta lista pero esto en parte se consigue una vez que dominamos el lenguaje y su ecosistema sintiéndonos capaces de realizar cualquier tarea produciendo buen código, ya sea Java o cualquier otro.&lt;/p&gt;

&lt;p&gt;Estas son otras listas de &lt;a href=&#34;http://zeroturnaround.com/rebellabs/10-reasons-why-java-now-rocks-more-than-ever-part-1-the-java-compiler/&#34;&gt;10 razones por las que Java mola más que nunca&lt;/a&gt; y otras &lt;a href=&#34;https://www.voxxed.com/blog/2015/02/10-reasons-to-love-java-and-the-jvm-reconnecting-with-your-warm-and-fuzzies/&#34;&gt;10 razones para querer a Java y la JVM&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Para aprender Java en profundidad son varios libros de los que he leído que me han gustado empezando por &lt;a rel=&#34;nofollow&#34; href=&#34;http://www.amazon.es/gp/product/0131872486/ref=as_li_ss_tl?ie=UTF8&amp;camp=3626&amp;creative=24822&amp;creativeASIN=0131872486&amp;linkCode=as2&amp;tag=blobit-21&#34;&gt;Thinking in Java&lt;/a&gt;&lt;img src=&#34;https://ir-es.amazon-adsystem.com/e/ir?t=blobit-21&amp;l=as2&amp;o=30&amp;a=0131872486&#34; width=&#34;1&#34; height=&#34;1&#34; border=&#34;0&#34; alt=&#34;&#34; style=&#34;border:none !important; margin:0px !important;&#34; /&gt;, &lt;a href=&#34;http://www.amazon.es/gp/product/0321356683/ref=as_li_ss_tl?ie=UTF8&amp;camp=3626&amp;creative=24822&amp;creativeASIN=0321356683&amp;linkCode=as2&amp;tag=blobit-21&#34;&gt;Effective Java&lt;/a&gt;&lt;img src=&#34;https://ir-es.amazon-adsystem.com/e/ir?t=blobit-21&amp;l=as2&amp;o=30&amp;a=0321356683&#34; width=&#34;1&#34; height=&#34;1&#34; border=&#34;0&#34; alt=&#34;&#34; style=&#34;border:none !important; margin:0px !important;&#34;&gt; y &lt;a href=&#34;http://www.amazon.es/gp/product/1617291994/ref=as_li_ss_tl?ie=UTF8&amp;camp=3626&amp;creative=24822&amp;creativeASIN=1617291994&amp;linkCode=as2&amp;tag=blobit-21&#34;&gt;Java 8 in Action&lt;/a&gt;&lt;img src=&#34;https://ir-es.amazon-adsystem.com/e/ir?t=blobit-21&amp;l=as2&amp;o=30&amp;a=1617291994&#34; width=&#34;1&#34; height=&#34;1&#34; border=&#34;0&#34; alt=&#34;&#34; style=&#34;border:none !important; margin:0px !important;&#34;&gt; además de otros &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/12/8-plus-libros-para-mejorar-como-programadores/&#34;&gt;buenos libros para mejorar como programadores&lt;/a&gt; que son interesantes de leer.&lt;/p&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe src=&#34;https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=0131872486&amp;internal=1&#34; style=&#34;width:120px;height:240px;&#34; scrolling=&#34;no&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
    &lt;iframe src=&#34;https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=0321356683&amp;internal=1&#34; style=&#34;width:120px;height:240px;&#34; scrolling=&#34;no&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
    &lt;iframe src=&#34;https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=1617291994&amp;internal=1&#34; style=&#34;width:120px;height:240px;&#34; scrolling=&#34;no&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;En Junio de 1997 James Gosling formando parte de Sun Microsystems Inc. escribía el artículo de título &lt;a href=&#34;http://www.win.tue.nl/~evink/education/avp/pdf/feel-of-java.pdf&#34;&gt;The Feel of Java&lt;/a&gt; detallando varias propiedades del lenguaje que hacen del él lo que es y que aún siguen estando vigentes. Y en 1996 junto con Henry McGilton &lt;a href=&#34;http://www.stroustrup.com/1995_Java_whitepaper.pdf&#34;&gt;The Java Language Environment: A White Paper&lt;/a&gt; donde describen los objetivos del lenguaje. Finalmente escrito más recientemente &lt;a href=&#34;http://www.oreilly.com/programming/free/java-the-legend.csp&#34;&gt;Java The Legend&lt;/a&gt; analiza Java, su pasado, aciertos y fallos, comunidad, ecosistema y futuro. Estos tres documentos son piezas valiosas de información.&lt;/p&gt;

&lt;p&gt;¡Larga vida a Java!&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://zeroturnaround.com/rebellabs/10-reasons-why-java-now-rocks-more-than-ever-part-1-the-java-compiler/&#34;&gt;10 Reasons Why Java Now Rocks More Than Ever&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.voxxed.com/blog/2015/02/10-reasons-to-love-java-and-the-jvm-reconnecting-with-your-warm-and-fuzzies/&#34;&gt;10 Reasons to Love Java and the JVM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="java"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/08/experiencia-instalando-sistema-operativo-a-ordenador-viejo/</id>
        <title>Experiencia instalando sistema operativo a ordenador viejo</title>        
        <updated>2015-04-10T20:00:00+02:00</updated>
        <published>2014-08-15T09:18:07+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2014/08/experiencia-instalando-sistema-operativo-a-ordenador-viejo/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/archlinux.png&#34; class=&#34;right&#34; alt=&#34;Arch Linux&#34; title=&#34;Arch Linux&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Hace unos meses como suele ser habitual en los informáticos me pidieron que formatease e instalase los programas necesarios en un ordenador portátil, más concretamente en un ordenador que a la velocidad que evoluciona la tecnología podría considerarse obsoleto. El modelo exacto era un Acer Aspire 2000 diseñado para Windows XP con las siguientes características:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CPU: Intel Pentium M (i686)&lt;/li&gt;
&lt;li&gt;Memoria: 1 GiB&lt;/li&gt;
&lt;li&gt;Pantalla: 15.4&amp;rdquo;, 1280 x 800&lt;/li&gt;
&lt;li&gt;Tarjeta gráfica: ATI Radeon 9200 (64 MiB)&lt;/li&gt;
&lt;li&gt;WiFi: 802.11b&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.miniputer.com/Acer/Aspire_2000.html&#34;&gt;Características Acer Aspire 2000 completas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Como puede verse por las características no es un ordenador muy potente para los días de hoy pero que puede ser suficiente para navegar por internet, ver vídeos, escuchar música y realizar tareas ofimáticas.&lt;/p&gt;

&lt;p&gt;Teniendo claro las características del ordenador y el uso que se le iba a dar me tocaba decidir que sistema operativo le iba a instalar. La primera opción que consideré por ser la opción que usaba el portátil de fábrica fue instalarle Windows XP (por supuesto usando una copia sin la correspondiente licencia) pero una vez instalado comenzaron los problemas para que todo funcionase correctamente, la gráfica no era detectada y la pantalla se mostraba en una resolución menor que la que ofrecía la pantalla, la conexión WiFi no funcionaba por no tener los controladores necesarios y tampoco el sonido por el mismo motivo. A pesar de haber buscado no conseguí encontrar los controladores adecuados tanto para la tarjeta gráfica como para la WiFi con lo que el sistema resultante iba a quedar menos aprovechado de lo que pudiera.&lt;/p&gt;

&lt;p&gt;Viendo que el resultado con Windows no era nada satisfactorio y que estoy convencido del uso del software libre empecé a buscar alguna distribución ligera que pudiese usar. Algunas de las que probé fueron &lt;a href=&#34;http://www.gnewsense.org/&#34;&gt;gNewSense&lt;/a&gt;, luego &lt;a href=&#34;http://trisquel.info/es&#34;&gt;trisquel&lt;/a&gt;, también &lt;a href=&#34;http://www.linuxmint.com/&#34;&gt;Mint&lt;/a&gt; pero gNewSense usaba versiones de software algo antiguas y trisquel y Mint Xfce requería del procesador que tuviese PAE (o no lo detectaba). Al final pensé algo que antes de hacerlo me pareció descabellado, instalar &lt;a href=&#34;https://www.archlinux.org/&#34;&gt;Arch Linux&lt;/a&gt;. Al ser Arch Linux una distribución rolling release y con el software siempre actualizado a las últimas versiones no sabía si iba a funcionar correctamente en un equipo antiguo. Pero sorprendentemente el CD de instalación de Arch no se me quejó por el PAE y aunque la instalación me fue lenta al tener que descargar los paquetes de internet y se descargaban a baja velocidad por algún motivo finalmente completé la instalación sin ningún problema. Después de la instalación base le instalé &lt;a href=&#34;http://www.xfce.org/&#34;&gt;Xfce&lt;/a&gt; y como gestor de entorno de escritorio e inicio de sesión le puse &lt;a href=&#34;http://en.wikipedia.org/wiki/SLiM&#34;&gt;SLiM&lt;/a&gt;. Una vez con el entorno de escritorio Xfce le instalé los programas: el navegador firefox, geary como gestor de correo, VLC para reproducir vídeos y música. Todo sin ningún problema incluso la WiFi B funcionaba, me bastó seguir lo &lt;a href=&#34;https://wiki.archlinux.org/index.php/Wireless_network_configuration#Intel&#34;&gt;indicado en la wiki&lt;/a&gt; para el caso de una WiFi intel.&lt;/p&gt;

&lt;p&gt;El equipo es viejo pero con Arch Linux tiene las versiones de los últimos programas en el momento que se los instalé, al contrario de windows no tuve que buscar los controladores y no malgasté tiempo en ello aparte de no usar un copia de windows sin licencia. El equipo era para un usuario con pocos conocimientos de informática que por supuesto no ha visto ni usado linux en ningún momento, hasta el momento no he recibido ninguna queja en cuanto al uso o que le haya dado problemas. Asi que al contario de lo que pensé al principio Arch Linux fue una distribución adecuada para lo que quería, era lo que más conocía y más documentación tenía como en el caso de instalar la WiFi. Instalar la WiFI quizá en &lt;a href=&#34;https://www.debian.org/&#34;&gt;Debian&lt;/a&gt; u otra distribución también lo hubiese conseguido pero la información para estas distribuciones probablemente la hubiese obtenido en un foro y no de una forma más oficial como la wiki de Arch Linux. Más que el rolling release lo que más me gusta de Arch es su &lt;a href=&#34;https://wiki.archlinux.org/&#34;&gt;wiki&lt;/a&gt; por estas cosas con las que uno puede obtener información un poco más oficial y con un poco más de seguridad de que va a funcionar que en la respuesta de un foro que además cuesta tiempo encontrarla.&lt;/p&gt;

&lt;p&gt;También puedes leer los pasos que he seguido &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2010/03/de-windows-arch-linux.html&#34;&gt;desde Windows a Arch Linux&lt;/a&gt; con algunos motivos y características de Arch explicados más detalladamente y &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/08/de-arch-linux-a-arch-linux/&#34;&gt;De Arch Linux a Arch Linux&lt;/a&gt; donde comento ya con más conocimiento porque después de 4 años sigo usando Arch Linux y no he cambiado de distribución GNU/Linux. En el siguiente &lt;a href=&#34;http://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/&#34;&gt;anexo a la guía de instalación&lt;/a&gt; puedes encontrar los pasos que sigo para instalar Arch Linux.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2010/03/de-windows-arch-linux.html&#34;&gt;De Windows a Arch Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/08/de-arch-linux-a-arch-linux/&#34;&gt;De Arch Linux a Arch Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/&#34;&gt;Anexo a la guía de instalación de Arch Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2012/06/guia-instalacion-raspberry-pi-con-arch.html&#34;&gt;Guía instalación Raspberry Pi con Arch Linux ARM (Parte I, instalación base)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="opinion"/>
            
                <category term="planeta-linux"/>
            
                <category term="planeta-arch-linux"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/08/de-arch-linux-a-arch-linux/</id>
        <title>De Arch Linux a Arch Linux</title>        
        <updated>2015-04-10T20:00:00+02:00</updated>
        <published>2014-08-09T00:07:58+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2014/08/de-arch-linux-a-arch-linux/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/custom/logotipos/archlinux.png&#34; class=&#34;right&#34; alt=&#34;Arch Linux&#34; title=&#34;Arch Linux&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Ya llevo usando algo más de 4 años &lt;a href=&#34;https://www.archlinux.org/&#34;&gt;Arch Linux&lt;/a&gt; de forma continuada desde que definitivamente hice el paso desde Windows según comentaba en &lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2010/03/de-windows-arch-linux.html&#34;&gt;mi camino de Windows a Arch Linux&lt;/a&gt; como sistema de mi ordenador personal. Pasé un poco de tiempo usando &lt;a href=&#34;https://www.debian.org/&#34;&gt;Debian&lt;/a&gt; y evaluando &lt;a href=&#34;http://www.ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt;, &lt;a href=&#34;https://fedoraproject.org/&#34;&gt;Fedora&lt;/a&gt;, y &lt;a href=&#34;http://www.opensuse.org/es/&#34;&gt;openSUSE&lt;/a&gt; pero al final la distribución que elegí fue Arch Linux.&lt;/p&gt;

&lt;p&gt;La razón de elegir Arch Linux fue que me dio muchos menos problemas configurar todos los dispositivos, por ser una &lt;a href=&#34;http://en.wikipedia.org/wiki/Rolling_release&#34;&gt;distribución rolling release&lt;/a&gt; con lo que en todo momento tenía las últimas versiones de cada programa y disponía en poco tiempo las nuevas mejoras que se iban incorporando a ellos evitando a los pocos meses estar con la sensación de tener programas que han quedado superados con nuevas versiones y no tener que esperar al siguiente iteración de una nueva versión para disponer de ellas (o usar para cada programa un PPA), además tenía los programas que yo decidía y no los que los desarrolladores de la distribución preinstalaban por mi. Cualquier otra distribución linux de las que he mencionado son de gran calidad y son usadas por mucha gente, simplemente en mi caso Arch Linux se adaptaba mejor a lo que buscaba y no era yo el que me adaptaba a la distribución. También me gustaba &lt;a href=&#34;https://wiki.archlinux.org/index.php/Arch_Linux&#34;&gt;su filosofía&lt;/a&gt; y su &lt;a href=&#34;https://wiki.archlinux.org/index.php/The_Arch_Way&#34;&gt;«Arch way»&lt;/a&gt; de una configuración simple no oculta, los paquetes lo normal es que no lleven modificaciones sobre lo que proporcionan sus desarrolladores aparte de tenerla actualizada en el momento que decidiese.&lt;/p&gt;

&lt;p&gt;Durante este tiempo he estado tan a gusto con esta distribución que ahora incluso la uso como distribución para el ordenador con el que trabajo y nunca me ha entrado el gusanillo del «distro hopping». Alguna vez me ha dado algún problema como cargarme el sistema por actualizar GRUB mal por error mío con desenlace fatal que me obligo a reinstalarla y alguna otra vez algún fallo menor en los iconos de &lt;a href=&#34;http://gnome.org/&#34;&gt;GNOME&lt;/a&gt;, pero al contrario de lo que pensaba inicialmente por ser Arch Linux una distribución con los paquetes en constante actualización rara vez da problemas y cuando hay alguno se encuentra en poco tiempo la solución o al menos la pregunta y poco más tarde en los &lt;a href=&#34;https://bbs.archlinux.org/&#34;&gt;foros de Arch Linux&lt;/a&gt;. Si no hubiese sido por este error de GRUB que me obligó a reinstalar ahora tendría un Arch Linux que hubiese instalado hace cuatro años y durante este tiempo ha habido cambios importantes como la migración de SysVinit o las diferentes actualizaciones desde GNOME 3.0 a 3.12, el servidor de las X y otros muchos paquetes vitales del sistema. En el momento que hay que hacer alguna intervención manual al hacer una actualización se publica en la web de Arch Linux con los pasos a realizar, siguiéndolos no suele haber problemas.&lt;/p&gt;

&lt;p&gt;También es la distribución que uso para una &lt;a href=&#34;http://www.raspberrypi.org/&#34;&gt;Raspberry Pi&lt;/a&gt; desde que dispongo de ella y suelo utilizar como sistema para descargar mediante torrent o para escuchar música. La Raspberry Pi es un sistema con procesador ARM a pesar de lo cual no hay diferencia alguna en la administración con al &lt;a href=&#34;http://archlinuxarm.org/&#34;&gt;distribución de Arch Linux para procesadores ARM&lt;/a&gt;. Es otro punto interesante ya que Arch Linux en su versión ARM también esta disponible para multitud de otros SoC como la Raspberry Pi, la distribución es la misma y lo mismo que nos sirve para nuestro ordenador personal x86_64 nos sirve para cualquiera de estos sistemas ARM.&lt;/p&gt;

&lt;p&gt;Alguna gente se ve intimidada por &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/&#34;&gt;instalar Arch Linux paso a paso y desde la terminal&lt;/a&gt;, es un proceso manual pero siguiendo la wiki y alguna guía para cualquier usuario con cierto tiempo usando Linux no debería ser ningún problema. A veces no todas las personas disponen de este poco de tiempo para investigar y hacer la instalación y se opta por otras distribuciones que tienen asistentes y guías en el proceso pero una vez hecho el pequeño esfuerzo se ve compensado por en teoría no tener que volverla a reinstalar nunca más.&lt;/p&gt;

&lt;p&gt;Después de todo este tiempo creo que lo mejor de Arch Linux no es que sea una distribución «rolling release» con siempre las últimas versiones de cada programa, que sea un sistema cuya configuración es simple que no se oculta al usuario, que tenga los programas que yo elija, su comunidad y foros, que también son muy buenos, sino lo mejor me parece que es la wiki. La &lt;a href=&#34;https://wiki.archlinux.org/&#34;&gt;wiki de Arch Linux&lt;/a&gt; tiene cantidad de información oficial actualizada sobre cantidad de temas, fáciles de encontrar y rápidamente, sin ser necesario buscar esta información en foros con google que no siempre tienen la solución, no son exactamente lo que buscamos o no tienen la respuesta correcta además de consumir mucho tiempo hasta encontrar la respuesta y si la encontramos. La wiki de Arch Linux es algo que no he encontrado en otras distribuciones y me parece de lo mejor que tiene incluso puede ser útil para quien no use Arch Linux. Finalmente, comentaré también que a pesar de ser una distribución que está a la última puede ser una muy buena opción para instalar en un sistema antiguo, en otro artículo comentaré la expiencia que tuve al &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/08/experiencia-instalando-sistema-operativo-a-ordenador-viejo/&#34;&gt;instalar un sistema operativo en un Acer Aspire 2000&lt;/a&gt; (i686 con 1 GiB de RAM) viejuno, probé muchas opciones Windows XP, &lt;a href=&#34;http://www.linuxmint.com/&#34;&gt;Linux Mint&lt;/a&gt;, &lt;a href=&#34;http://www.gnewsense.org/&#34;&gt;gNewSense&lt;/a&gt;, &lt;a href=&#34;http://trisquel.info/es&#34;&gt;trisquel&lt;/a&gt; y al final Arch Linux fué la que mejor resultado me ofreció con un portátil antiguo pero con software completamente actualizado.&lt;/p&gt;

&lt;p&gt;Aún así Arch Linux puede que no sea lo más adecuado para todo o todas las personas según sus preferencias o requerimientos. Una de las cosas a las que me refiero es a un entorno de servidor donde lo más importante es la seguridad, la estabilidad y el soporte. Con estas necesidades probablemente sea mejor &lt;a href=&#34;https://www.debian.org/&#34;&gt;Debian&lt;/a&gt;, &lt;a href=&#34;http://www.ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt;, &lt;a href=&#34;http://es.redhat.com/products/enterprise-linux/&#34;&gt;RHEL&lt;/a&gt; o &lt;a href=&#34;http://www.centos.org/&#34;&gt;CentOS&lt;/a&gt;. Sin embargo para uso personal, Arch Linux mientras mantenga la misma calidad como hasta ahora seguirá siendo la distribución que use.&lt;/p&gt;

&lt;p&gt;¡Larga vida a Linux y a Arch Linux!&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2010/03/de-windows-arch-linux.html&#34;&gt;De Windows a Arch Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/08/experiencia-instalando-sistema-operativo-a-ordenador-viejo/&#34;&gt;Experiencia instalando sistema operativo a ordenador viejo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/&#34;&gt;Anexo a la guía de instalación de Arch Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://elblogdepicodev.blogspot.com.es/2012/06/guia-instalacion-raspberry-pi-con-arch.html&#34;&gt;Guía instalación Raspberry Pi con Arch Linux ARM (Parte I, instalación base)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="opinion"/>
            
                <category term="planeta-linux"/>
            
                <category term="planeta-arch-linux"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
</feed>
<?xml version="1.0" encoding="utf-8"?><feed version="2.0" xmlns="http://www.w3.org/2005/Atom"><id>https://picodotdev.github.io/blog-bitix/tags/programacion/</id><title type="text">Blog Bitix</title><subtitle>Recent content on Blog Bitix</subtitle><updated>2019-11-29T18:00:00+01:00</updated><author><name>picodotdev</name></author><generator>Hugo</generator><icon>https://picodotdev.github.io/blog-bitix/assets/images/logotipos/hugo.png</icon><logo>https://picodotdev.github.io/blog-bitix/assets/images/logotipos/hugo.png</logo><rights>https://creativecommons.org/licenses/by-sa/4.0/</rights><entry><id>https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/</id><title>Implementar un segundo factor de autenticación en una aplicación web Java con Spring</title><updated>2019-11-29T18:00:00+01:00</updated><published>2019-11-29T18:00:00+01:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>&lt;strong>El segundo factor de autenticación es una medida adicional en la autenticación que proporciona una notable mayor seguridad que utilizar solo un usuario y contraseña. Utilizando Spring y la aplicación para &lt;em>smatphone&lt;/em> Google Authenticator se puede implementar en una aplicación Java el segundo factor de autenticación o &lt;em>2FA&lt;/em> con códigos temporales o &lt;em>TOTP&lt;/em>.&lt;/strong>&lt;/p>
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/spring.svg" class="right " width="200" alt="Spring" title="Spring"/>
&lt;/div>
&lt;p>Comúnmente para realizar el proceso de autenticar a un usuario se ha realizado simplemente con el método de usuario y contraseña. Sin embargo, verificar la identidad mediante usuario y contraseña para algunos usuarios no es suficientemente seguro dado que los usuarios pueden elegir contraseñas débiles con pocos caracteres o sin usar una combinación que incluya letras, números y símbolos, pueden elegir contraseñas comunes muy utilizadas fáciles de adivinar con un ataque de diccionario, pueden usar la misma contraseña para varios servicios de modo que si las contraseñas de un servicio son descubiertas cualquier otro servicio que las utilice potencialmente corre un riesgo de seguridad. Usar solo usuario y contraseña no proporciona la suficiente seguridad para ciertos servicios que permiten realizar transacciones que involucra dinero, tratan datos sensibles o son servicios atractivos para ser atacados.&lt;/p>
&lt;p>Para que las contraseñas sean seguras las aplicaciones en sus bases de datos &lt;a href="https://picodotdev.github.io/blog-bitix/2015/04/guardar-contrasenas-usando-salted-password-hashing-y-otras-formas-correctas/">guardar las contraseñas usando &lt;em>Salted Password Hashing&lt;/em>&lt;/a>, los usuarios por su parte deben utilizar un generador de contraseñas, utilizar una contraseña distinta para cada servicio y &lt;a href="https://picodotdev.github.io/blog-bitix/2016/11/guardar-contrasenas-de-forma-segura-con-keepassxc/">guardalas en una base de datos cifrada como KeePassXC&lt;/a> para recordar cada una de ellas. Las contraseñas son algo que se conoce, cualquier persona que conozca la contraseña puede autenticarse, más recientemente una capa adicional de seguridad es requerir algo que se tiene, el segundo factor de autenticación o 2FA.&lt;/p>
&lt;p>La aplicación &lt;a href="https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&amp;amp;hl=en">Google Authenticator&lt;/a> para dispositivos móviles &lt;a href="https://www.android.com/">Android&lt;/a> permite utilizarse como segundo factor de autenticación, esta aplicación genera códigos con un tiempo corto de duración que son requeridos en un segundo paso de la autenticación después de introducir el usuario y contraseña. Con un segundo factor de autenticación se requiere algo que se sabe, el usuario y contraseña, y algo que se tiene, el dispositivo móvil que genera códigos con lo que aunque la contraseña quede comprometida no se podría realizar la autenticación sin poseer el segundo factor de autenticación.&lt;/p>
&lt;p>Dado que los códigos de verificación tienen un tiempo de vida corto, habitualmente de 30 segundos, y acceder al generador del segundo factor de autenticación requiere acceso físico al dispositivo móvil la combinación de que las credenciales queden comprometidas es significativamente más difícil y por tanto la seguridad aumenta al mismo tiempo. Los principales servicios de internet como &lt;a href="https://www.google.es/">Google&lt;/a>, &lt;a href="https://amzn.to/2flFhHA">Amazon&lt;/a>, &lt;a href="https://twitter.com/">Twitter&lt;/a> y otros servicios utilizados por millones de usuarios permiten ya utilizar 2FA, un fallo en su seguridad por la cantidad de usuarios e importante información que registran les supodría una muy mala imagen, pérdida de ingresos, costes, reputación, usuarios o dependiendo de la gravedad del fallo y los datos comprometidos multas millonarias.&lt;/p>
&lt;p>A través de &lt;a href="https://spring.io/projects/spring-security">Spring Security&lt;/a> y la librería &lt;a href="https://github.com/aerogear/aerogear-otp-java">aerogear-otp-java&lt;/a> una aplicación Java puede implementar el segundo factor de autenticación, incluso posibilitar de que el requerimiento de solicitar segundo factor de autenticación sea opcional según la preferencia de un usuario o como forma de que los usuarios progresivamente habiliten el 2FA. El primer paso es proporcionar al usuario una clave secreta a través de un código QR que codifica una clave secreta que se utiliza para generar los códigos de verificación, el usuario debe escanearlo con la aplicación Google Authenticator con la cámara para que genere código de 6 dígitos con una validez de 30 segundos en el momento de autenticarse, este paso se realiza en el momento de registrarse o de activar el 2FA si es opcional. Con Google Authenticator el código en vez con la cámara también se puede introducir mediante el teclado si la aplicación se lo proporciona en forma de texto en vez de como imagen QR. La ventaja del código QR es que es más rápido y cómodo.&lt;/p>
&lt;p>El primer paso de la autenticación utilizando 2FA es introducir el usuario y contraseña. El segundo paso es introducir el código del segundo factor de autenticación. Introducidos ambos el usuario es redirigido a la página de inicio.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-1_hua9ee30696f9356c56487d9b5ce908954_39508_2560x1440_fit_box_2.png" title="Autenticación con segundo factor de autenticación" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-1_hua9ee30696f9356c56487d9b5ce908954_39508_200x150_fit_box_2.png" width="120"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-2_hu444c0787e54ca21d9ef698a533bad663_23630_2560x1440_fit_box_2.png" title="Autenticación con segundo factor de autenticación" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-2_hu444c0787e54ca21d9ef698a533bad663_23630_200x150_fit_box_2.png" width="120"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-3_hu6d853ec4973549638fd3cc79bdd6076c_19573_2560x1440_fit_box_2.png" title="Autenticación con segundo factor de autenticación" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-3_hu6d853ec4973549638fd3cc79bdd6076c_19573_200x150_fit_box_2.png" width="120"/>&lt;/a>
&lt;figcaption>Autenticación con segundo factor de autenticación&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/google-authenticator_hud7c7130da01810ea81284c92c02cbefa_101109_2560x1440_fit_box_2.png" title="Aplicación Google Authenticator con varios generadores de códigos temporales" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/google-authenticator_hud7c7130da01810ea81284c92c02cbefa_101109_300x200_fit_box_2.png" width="113"/>&lt;/a>
&lt;figcaption>Aplicación Google Authenticator con varios generadores de códigos temporales&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Validado el código del 2FA al usuario se le asignan los permisos que le corresponden en el sistema y que le otorgan permisos para realizar acciones, en este caso entrar a la página de inicio.&lt;/p>
&lt;p>La implementación en código contiene las clases que representan una cuenta en el sistema, en &lt;em>InMemoryAccountRepository&lt;/em> se crean dos usuarios &lt;em>admin&lt;/em> y &lt;em>user&lt;/em> con sus contraseñas en el ejemplo en texto plano y los roles que tiene asignados que les otorgarán permisos para realizar acciones en la aplicación.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.spring2fa.account&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">AccountRepository&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Account&lt;/span> &lt;span class="nf">find&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/AccountRepository.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/AccountRepository.java" target="_blank">AccountRepository.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.spring2fa.account&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@Repository&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">InMemoryAccountRepository&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">AccountRepository&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">ADMIN_SECRET&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;6YFX5TVT76OHHNMS&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Account&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">accounts&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">InMemoryAccountRepository&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">accounts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Account&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">init&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">init&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Account&lt;/span> &lt;span class="n">admin&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Account&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">admin&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setUsername&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;admin&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">admin&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;{noop}password&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">admin&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setAuth2fa&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">admin&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setSecret&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ADMIN_SECRET&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">admin&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setRoles&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Arrays&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">asList&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;ROLE_USER&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Account&lt;/span> &lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Account&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setUsername&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;{noop}password&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setAuth2fa&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setRoles&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Arrays&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">asList&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;ROLE_USER&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">accounts&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">admin&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">accounts&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Account&lt;/span> &lt;span class="nf">find&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">accounts&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">stream&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">filter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">account&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">account&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getUsername&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">equals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findFirst&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">orElse&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/InMemoryAccountRepository.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/InMemoryAccountRepository.java" target="_blank">InMemoryAccountRepository.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.spring2fa.account&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Account&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">password&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">secret&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Boolean&lt;/span> &lt;span class="n">auth2fa&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">roles&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getUsername&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setUsername&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">username&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">password&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">password&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">password&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">password&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getSecret&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">secret&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setSecret&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">secret&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">secret&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">secret&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Boolean&lt;/span> &lt;span class="nf">isAuth2fa&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">auth2fa&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setAuth2fa&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Boolean&lt;/span> &lt;span class="n">auth2fa&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">auth2fa&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">auth2fa&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">getRoles&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">roles&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setRoles&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">roles&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">roles&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">roles&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/Account.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/Account.java" target="_blank">Account.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>La configuración de seguridad en Spring Security indica para cada URL que permisos se requieren. Para acceder a la página de contenido &lt;em>/home&lt;/em> de la aplicación se requiere el rol &lt;em>USER&lt;/em>, a la página de inicio de sesión &lt;em>/login&lt;/em> se permite acceder a los usuario no autenticados donde introducen sus credenciales de usuario y contraseña, una vez validado el usuario y contraseña el usuario autenticado tiene el rol &lt;em>PRE_AUTH_USER&lt;/em>, dependiendo de si el usuario en su prefrencia usa 2FA o no en el manejador de autenticación exitosa &lt;em>SecondFactorAuthenticationSuccessHandler&lt;/em> redirige al usuario a la página &lt;em>/home&lt;/em> o la página &lt;em>/code&lt;/em> para intorducir el código de verificación del segundo factor autenticación. Al usuario autenticado exitosamente de forma completa se le sustituye el permiso &lt;em>PRE_AUTH_USER&lt;/em> por los que tenga asignado, en el ejemplo el rol &lt;em>USER&lt;/em>.&lt;/p>
&lt;p>La verificación del código del segundo paso de autenticación se realiza en la clase &lt;em>CodeController&lt;/em> con la clase &lt;em>Totp&lt;/em> a partir del código enviado y el código secreto con el cual se generó la imagen de código QR.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="nd">@EnableWebSecurity&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">WebSecurityConfig&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">WebSecurityConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">UserDetailsService&lt;/span> &lt;span class="n">userDetailsService&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">AuthenticationSuccessHandler&lt;/span> &lt;span class="n">authenticationSuccessHandler&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">PasswordEncoder&lt;/span> &lt;span class="nf">encoder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">PasswordEncoderFactories&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">createDelegatingPasswordEncoder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">AuthenticationSuccessHandler&lt;/span> &lt;span class="nf">authenticationSuccessHandler&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">SecondFactorAuthenticationSuccessHandler&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpSecurity&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeRequests&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">antMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/static/**&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">permitAll&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">antMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/code&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">hasRole&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;PRE_AUTH_USER&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">antMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/home&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">hasRole&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;USER&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">anyRequest&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">authenticated&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">formLogin&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">loginPage&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/login&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">permitAll&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">successHandler&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">authenticationSuccessHandler&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">logout&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">permitAll&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">registerAuthentication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">AuthenticationManagerBuilder&lt;/span> &lt;span class="n">auth&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">auth&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">userDetailsService&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">userDetailsService&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/WebSecurityConfig.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/WebSecurityConfig.java" target="_blank">WebSecurityConfig.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@EnableWebMvc&lt;/span>
&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">WebMvcConfig&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">WebMvcConfigurer&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">addViewControllers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ViewControllerRegistry&lt;/span> &lt;span class="n">registry&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">registry&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addViewController&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/login&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setViewName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;login&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">registry&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addViewController&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/code&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setViewName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;code&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">registry&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addViewController&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/home&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setViewName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;home&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">addResourceHandlers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ResourceHandlerRegistry&lt;/span> &lt;span class="n">registry&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">registry&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addResourceHandler&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/static/**&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addResourceLocations&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;classpath:/static/&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">ClassLoaderTemplateResolver&lt;/span> &lt;span class="nf">templateResolver&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">ClassLoaderTemplateResolver&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ClassLoaderTemplateResolver&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setPrefix&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;templates/&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setSuffix&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;.html&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setTemplateMode&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;HTML&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">SpringTemplateEngine&lt;/span> &lt;span class="nf">templateEngine&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ClassLoaderTemplateResolver&lt;/span> &lt;span class="n">templateResolver&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringTemplateEngine&lt;/span> &lt;span class="n">templateEngine&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">SpringTemplateEngine&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">templateEngine&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addDialect&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">LayoutDialect&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">templateEngine&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setTemplateResolver&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">templateResolver&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">templateEngine&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">ThymeleafViewResolver&lt;/span> &lt;span class="nf">viewResolver&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SpringTemplateEngine&lt;/span> &lt;span class="n">engine&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">ThymeleafViewResolver&lt;/span> &lt;span class="n">viewResolver&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ThymeleafViewResolver&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">viewResolver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setTemplateEngine&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">engine&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">viewResolver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setCache&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">viewResolver&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/WebMvcConfig.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/WebMvcConfig.java" target="_blank">WebMvcConfig.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">SecondFactorAuthenticationSuccessHandler&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">AuthenticationSuccessHandler&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">RedirectStrategy&lt;/span> &lt;span class="n">redirectStrategy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DefaultRedirectStrategy&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">onAuthenticationSuccess&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">HttpServletResponse&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Authentication&lt;/span> &lt;span class="n">authentication&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">IOException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">handle&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">authentication&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">clearAuthenticationAttributes&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">handle&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">HttpServletResponse&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Authentication&lt;/span> &lt;span class="n">authentication&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">IOException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">targetUrl&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">getTargetUrl&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">authentication&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">isCommitted&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">redirectStrategy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sendRedirect&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">targetUrl&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getTargetUrl&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Authentication&lt;/span> &lt;span class="n">authentication&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">UserDetailsAdapter&lt;/span> &lt;span class="n">userDetailsAdapter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">UserDetailsAdapter&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">SecurityContextHolder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getContext&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAuthentication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getPrincipal&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">userDetailsAdapter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAccount&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">isAuth2fa&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;/code&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Utils&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setAuthentication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;/home&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">clearAuthenticationAttributes&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">HttpSession&lt;/span> &lt;span class="n">session&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getSession&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">session&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">session&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">removeAttribute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">WebAttributes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">AUTHENTICATION_EXCEPTION&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setRedirectStrategy&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">RedirectStrategy&lt;/span> &lt;span class="n">redirectStrategy&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">redirectStrategy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">redirectStrategy&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="n">RedirectStrategy&lt;/span> &lt;span class="nf">getRedirectStrategy&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">redirectStrategy&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/SecondFactorAuthenticationSuccessHandler.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/SecondFactorAuthenticationSuccessHandler.java" target="_blank">SecondFactorAuthenticationSuccessHandler.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Utils&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setAuthentication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Authentication&lt;/span> &lt;span class="n">authentication&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SecurityContextHolder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getContext&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAuthentication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">UserDetailsAdapter&lt;/span> &lt;span class="n">userDetailsAdapter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">UserDetailsAdapter&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">SecurityContextHolder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getContext&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAuthentication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getPrincipal&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">GrantedAuthority&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">authorities&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">AuthorityUtils&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">createAuthorityList&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">userDetailsAdapter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAccount&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getRoles&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toArray&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Authentication&lt;/span> &lt;span class="n">newAuth&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">UsernamePasswordAuthenticationToken&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">authentication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getPrincipal&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">authentication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getCredentials&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">authorities&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">SecurityContextHolder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getContext&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setAuthentication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">newAuth&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/Utils.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/Utils.java" target="_blank">Utils.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">UserDetailsAdapter&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">UserDetails&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Account&lt;/span> &lt;span class="n">account&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">UserDetailsAdapter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Account&lt;/span> &lt;span class="n">account&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">account&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">account&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Collection&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">GrantedAuthority&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">getAuthorities&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">AuthorityUtils&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">createAuthorityList&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;ROLE_PRE_AUTH_USER&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getUsername&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">account&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getUsername&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">account&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">boolean&lt;/span> &lt;span class="nf">isAccountNonExpired&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">boolean&lt;/span> &lt;span class="nf">isAccountNonLocked&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">boolean&lt;/span> &lt;span class="nf">isCredentialsNonExpired&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">boolean&lt;/span> &lt;span class="nf">isEnabled&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Account&lt;/span> &lt;span class="nf">getAccount&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">account&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/UserDetailsAdapter.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/UserDetailsAdapter.java" target="_blank">UserDetailsAdapter.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@Component&lt;/span>
&lt;span class="nd">@Primary&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">UserDetailsServiceAdapter&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">UserDetailsService&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">AccountRepository&lt;/span> &lt;span class="n">accountRepository&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">UserDetails&lt;/span> &lt;span class="nf">loadUserByUsername&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">UsernameNotFoundException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Account&lt;/span> &lt;span class="n">account&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">accountRepository&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">find&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">account&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">UsernameNotFoundException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">UserDetailsAdapter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/UserDetailsServiceAdapter.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/UserDetailsServiceAdapter.java" target="_blank">UserDetailsServiceAdapter.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>El código QR es una imagen generada a partir del código secreto y una información adicional que al usurio le permite identificar la cuenta, hay &lt;em>webs&lt;/em> que permiten &lt;a href="https://zxing.org/w/decode.jspx">decodificar una imagen QR&lt;/a> para analizar que información incorpora, en esta la información de la cuenta &lt;em>Spring2FA (admin)&lt;/em> y el secreto &lt;em>6YFX5TVT76OHHNMS&lt;/em> utilizado para generar los códigos temporales. En el HTML devuelto se incluye una imagen con la información embebida en el enlace de la imagen, la imagen se genera por un servicio de Google.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/qr-code-decoder_hu0bd1b6584fcbf4a08a8542128e141a4a_43488_2560x1440_fit_box_2.png" title="Decodificador de imágenes código QR" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/qr-code-decoder_hu0bd1b6584fcbf4a08a8542128e141a4a_43488_300x200_fit_box_2.png" width="300"/>&lt;/a>
&lt;figcaption>Decodificador de imágenes código QR&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="cp">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span> &lt;span class="na">xmlns&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;http://www.w3.org/1999/xhtml&amp;#34;&lt;/span> &lt;span class="na">xmlns:th&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;http://www.thymeleaf.org&amp;#34;&lt;/span> &lt;span class="na">xmlns:layout&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;http://www.ultraq.net.nz/web/thymeleaf/layout&amp;#34;&lt;/span> &lt;span class="na">layout:decorate&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;~{layout}&amp;#34;&lt;/span>&lt;span class="p">&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
...
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://chart.googleapis.com/chart?chs=200x200&amp;amp;chld=M%7C0&amp;amp;cht=qr&amp;amp;chl=otpauth%3A%2F%2Ftotp%2FSpring2FA%20(admin)%3Fsecret%3D6YFX5TVT76OHHNMS&amp;#34;&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
...
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="" target="_blank">login.html&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Las dependencias de librerías son las siguientes.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-groovy" data-lang="groovy">&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;&lt;/span>
&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-security&amp;#39;&lt;/span>
&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.thymeleaf:thymeleaf-spring5:3.0.11.RELEASE&amp;#39;&lt;/span>
&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.4.1&amp;#39;&lt;/span>
&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.jboss.aerogear:aerogear-otp-java:1.0.0&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/build.gradle" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/build.gradle" target="_blank">build.gradle&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Este ejemplo está hecho con la infraestructura que proporciona Spring pero el proceso de autenticación es igualmente implementable con cualquier otro &lt;em>framework&lt;/em> o librería.&lt;/p>
&lt;p>Muchos de los servicios populares en internet implementan 2FA como medida de proteger las cuentas de los usuarios y la información en esos servicios. Hay bancos que como contraseña de acceso solo tienen un número de seis dígitos con el riesgo que representa sus usuarios por la importancia que tiene la banca en línea de los datos que se trata.&lt;/p>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/Spring2FA">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./gradlew run&lt;/code>.
&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://www.baeldung.com/spring-security-two-factor-authentication-with-soft-token">Two Factor Auth with Spring Security&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.baeldung.com/spring_redirect_after_login">Redirect to Different Pages after Login with Spring Security&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/altfatterz/two-step-login/">Two Step Login Example&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/><category term="seguridad"/><category term="spring"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2019/11/extraer-informacion-del-navegador-del-usuario-en-el-servidor-de-una-aplicacion-web-java/</id><title>Extraer información del navegador del usuario en el servidor de una aplicación web Java</title><updated>2019-11-24T00:15:00+01:00</updated><published>2019-11-24T00:15:00+01:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2019/11/extraer-informacion-del-navegador-del-usuario-en-el-servidor-de-una-aplicacion-web-java/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;p>En una aplicación web dependiendo de las características del cliente si es de escritorio, móvil u otro dispositivo y tamaño, lenguaje o &lt;a href="https://picodotdev.github.io/blog-bitix/2016/06/ofrecer-contenido-personalizado-al-usuario-basado-en-su-ubicacion/">dependiendo de la ubicación mediante su dirección IP&lt;/a> puede servirse diferente contenido adaptado a las propiedades del cliente.&lt;/p>
&lt;p>La comprobación desde el navegador se realiza con JavaScript, con la propiedad &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/NavigatorID">window.navigator.userAgent&lt;/a> se obtienen propiedades básicas del agente del usuario como navegador, versión y plataforma. Con la librería JavaScript &lt;a href="https://modernizr.com/">Modernizr&lt;/a> se obtiene las características que soporta el navegador. Pero el código JavaScript se ejecuta en el cliente y la primera petición de un usuario llega al servidor cuando aún no se ha cargado ninguna página ni código JavaScript, sólo se dispone del agente de usuario, lenguaje preferido y dirección IP con lo que es necesario una librería en el lado de servidor que procese el agente del usuario u otra información que este envíe para actúa en consecuencia.&lt;/p>
&lt;p>En la primera petición de un usuario a una aplicación Java con la librería &lt;a href="https://github.com/blueconic/browscap-java">browscap-java&lt;/a> es posible procesar el agente del usuario y conocer su navegador y versión, tipo de dispositivo, plataforma y versión. Con esta información la aplicación es capaz adaptar el contenido al cliente, por ejemplo si se trata de una versión antigua de un navegador al que hay que seguir ofreciendo soporte porque algunos usuarios siguen usándolo y para el que hay que devolver un JavaScript especial por no soportar algunas características de navegadores más modernos.&lt;/p>
&lt;p>En este ejemplo se hace uso de la librería &lt;em>browscap-java&lt;/em> y se imprime en la salida de la aplicación la información que esta proporciona interpretando la cadena del agente del usuario. Se observa que en mi caso uso &lt;a href="https://www.gnu.org/">GNU&lt;/a>/&lt;a href="https://www.linux.com/">Linux&lt;/a>, &lt;a href="https://www.mozilla.org/es-ES/firefox/new/">Firefox&lt;/a> en la versión 70 de la versión de escritorio. Los navegadores envían una cabecera del protocolo HTTP, &lt;em>User-Agent&lt;/em>, en la que incluyen información y la firma del navegador o agente del usuario. En el servidor para recuperar la cabecera basta con utilizar el método &lt;a href="https://javaee.github.io/javaee-spec/javadocs/javax/servlet/http/HttpServletRequest.html#getHeader-java.lang.String-">HttpServletRequest.getHeader()&lt;/a> o usando Spring MVC con la anotación &lt;a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/RequestHeader.html">@RequestHeader&lt;/a>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picotodtdev.blogbitix.useragent&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.beans.factory.annotation.Autowired&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.stereotype.Controller&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.web.bind.annotation.GetMapping&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.web.bind.annotation.RequestHeader&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.web.bind.annotation.ResponseBody&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">com.blueconic.browscap.Capabilities&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">com.blueconic.browscap.UserAgentParser&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">com.blueconic.browscap.UserAgentService&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Controller&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">IndexController&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">UserAgentParser&lt;/span> &lt;span class="n">userAgentParser&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@GetMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@ResponseBody&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">index&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nd">@RequestHeader&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;User-Agent&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">userAgent&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Capabilities&lt;/span> &lt;span class="n">capabilities&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">userAgentParser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">parse&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">userAgent&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">browser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">capabilities&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getBrowser&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">browserType&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">capabilities&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getBrowserType&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">browserMajorVersion&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">capabilities&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getBrowserMajorVersion&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">deviceType&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">capabilities&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDeviceType&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">platform&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">capabilities&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getPlatform&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">platformVersion&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">capabilities&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getPlatformVersion&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;User-Agent: %s\nBrowser: %s, Type: %s, Version: %s, Device: %s, Platform: %s, PlatformVersion: %s&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">userAgent&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">browser&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">browserType&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">browserMajorVersion&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">deviceType&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">platform&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">platformVersion&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/extraer-informacion-del-navegador-del-usuario-en-el-servidor-de-una-aplicacion-web-java/code/IndexController.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/extraer-informacion-del-navegador-del-usuario-en-el-servidor-de-una-aplicacion-web-java/code/IndexController.java" target="_blank">IndexController.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-groovy" data-lang="groovy">&lt;span class="n">plugins&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot&amp;#39;&lt;/span> &lt;span class="n">version&lt;/span> &lt;span class="s1">&amp;#39;2.2.1.RELEASE&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;io.spring.dependency-management&amp;#39;&lt;/span> &lt;span class="n">version&lt;/span> &lt;span class="s1">&amp;#39;1.0.8.RELEASE&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;java&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;application&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">group&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;io.github.picotodtdev.blogbitix.useragent&amp;#39;&lt;/span>
&lt;span class="n">version&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;0.0.1-SNAPSHOT&amp;#39;&lt;/span>
&lt;span class="n">sourceCompatibility&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;11&amp;#39;&lt;/span>
&lt;span class="n">application&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">mainClassName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;io.github.picotodtdev.blogbitix.useragent.Main&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">repositories&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">mavenCentral&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;&lt;/span>
&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;com.blueconic:browscap-java:1.2.13&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/extraer-informacion-del-navegador-del-usuario-en-el-servidor-de-una-aplicacion-web-java/code/build.gradle" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/extraer-informacion-del-navegador-del-usuario-en-el-servidor-de-una-aplicacion-web-java/code/build.gradle" target="_blank">build.gradle&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Accediendo a la dirección del controlador &lt;em>http://localhost:8080&lt;/em> se obtienen los siguientes resultados dependiendo de con que navegador se acceda, en estos ejemplos con Firefox de escritorio, con Chrome de escritorio, y con Firefox de Android.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:70.0) Gecko/20100101 Firefox/70.0
Browser: Firefox, Type: Browser, Version: 70, Device: Desktop, Platform: Linux, PlatformVersion: Unknown&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/extraer-informacion-del-navegador-del-usuario-en-el-servidor-de-una-aplicacion-web-java/code/response-firefox-desktop.txt" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/extraer-informacion-del-navegador-del-usuario-en-el-servidor-de-una-aplicacion-web-java/code/response-firefox-desktop.txt" target="_blank">response-firefox-desktop.txt&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36
Browser: Chrome, Type: Browser, Version: 78, Device: Desktop, Platform: Linux, PlatformVersion: Unknown&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/extraer-informacion-del-navegador-del-usuario-en-el-servidor-de-una-aplicacion-web-java/code/response-chrome-desktop.txt" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/extraer-informacion-del-navegador-del-usuario-en-el-servidor-de-una-aplicacion-web-java/code/response-chrome-desktop.txt" target="_blank">response-chrome-desktop.txt&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">User-Agent: Mozilla/5.0 (Android 7.0; Mobile; rv:68.0) Gecko/68.0 Firefox/68.0
Browser: Firefox, Type: Browser, Version: 68, Device: Mobile Phone, Platform: Android, PlatformVersion: 7.0&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/extraer-informacion-del-navegador-del-usuario-en-el-servidor-de-una-aplicacion-web-java/code/response-firefox-android.txt" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/extraer-informacion-del-navegador-del-usuario-en-el-servidor-de-una-aplicacion-web-java/code/response-firefox-android.txt" target="_blank">response-firefox-android.txt&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaUserAgent">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./gradlew run&lt;/code>.
&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://developer.mozilla.org/es/docs/Web/HTTP/Headers/User-Agent">MDN User-Agent&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent/Firefox">Firefox user agent string reference&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent">Browser detection using the user agent&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/NavigatorID/userAgent">NavigatorID.userAgent&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/</id><title>Interfaz de monitorización e instrumentalización con JMX en aplicaciones Java</title><updated>2019-11-08T17:00:00+01:00</updated><published>2019-11-08T17:00:00+01:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>&lt;strong>JMX es una forma sencilla e integrada en la plataforma Java de monitorizar e instrumentalizar ciertas operaciones de funcionamiento interno de la aplicación que no tenga que ver con el ámbito de negocio que resuelve sino en el aspecto técnico. Unos casos de uso son activar una característica de la aplicación mientras la aplicación está funcionando o limpiar una cache de modo que los datos que almacena se actualicen de nuevo de la fuente origen en tiempo real y sin necesidad de reniciarla, cualquier otro realizable con código Java es posible.&lt;/strong>&lt;/p>
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;p>Las aplicaciones Java tienen a su disposición integradas en la propia plataforma Java una interfaz para monitorizar su estado y realizar acciones de instrumentalización para modificar algún comportamiento o cambiar alguna configuración en tiempo real mientras la aplicación está funcionando sin necesidad de reiniciarla. La especificación que proporciona esta interfaz es &lt;em>Java Management Extensions&lt;/em> (JMX).&lt;/p>
&lt;p>JMX define una serie de recursos a ser administrados, estos ha de instrumentalizarse con el lenguaje Java definiendo unos objetos &lt;em>MBeans&lt;/em> que accedan a los recursos. Una vez el recurso ha sido instrumentalizado es gestionado por una agente JMX. El agente JMX controla los recursos y los hace disponibles a las aplicaciones de gestión, el objeto principal del agente es el &lt;em>MBean server&lt;/em> donde los &lt;em>MBean&lt;/em> son registrados. Los recursos puede ser accedidos a través de diferentes protocolos mediante adaptadores y conectores. Un adaptador HTML muestra un &lt;em>MBean&lt;/em> en el navegador y un conector se encarga de la comunicación entre la la aplicación de gestión y el agente JMX.&lt;/p>
&lt;p>La instrumentalización se implementa con los objetos &lt;em>MBean&lt;/em> similares a los objetos JavaBean que siguen varios patrones de diseño establecidos por la especificación JMX. Un &lt;em>MBean&lt;/em> puede representar un dispositivo, una aplicación o un recurso que necesite ser administrado. Los &lt;em>MBean&lt;/em> exponen una interfaz de gestión que consiste en:&lt;/p>
&lt;ul>
&lt;li>Un conjunto de propiedades de lectura, escritura o ambas.&lt;/li>
&lt;li>Un conjunto de operaciones invocables.&lt;/li>
&lt;li>Una autodescripción.&lt;/li>
&lt;/ul>
&lt;p>Además de propiedades y operaciones los &lt;em>MBean&lt;/em> también pueden emitir notificaciones cuando ocurren ciertos eventos.&lt;/p>
&lt;h3 id="ejemplo-de-jmx-en-una-aplicación-java">Ejemplo de JMX en una aplicación Java&lt;/h3>
&lt;p>Un &lt;em>MBean&lt;/em> no es más que una interfaz que una clase Java implementa.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.jmx.mbean&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">HelloMBean&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kt">void&lt;/span> &lt;span class="nf">sayHello&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="nf">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="nf">getName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/HelloMBean.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/HelloMBean.java" target="_blank">HelloMBean.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.jmx.mbean&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Hello&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">HelloMBean&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">sayHello&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;hello, world&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="nf">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;Reginald&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/Hello-java.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/Hello-java.java" target="_blank">Hello-java.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Creada la interfaz y la implementación del &lt;em>MBean&lt;/em> ha de registrarse en el servidor de &lt;em>MBean&lt;/em>. Los &lt;em>MBean&lt;/em> se registra en un dominio junto con una serie de propiedades clave/valor.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.jmx.java&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.lang.management.ManagementFactory&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">javax.management.MBeanServer&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">javax.management.ObjectName&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.jmx.mbean.Hello&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">MBeanServer&lt;/span> &lt;span class="n">mbeanServer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ManagementFactory&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getPlatformMBeanServer&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Hello&lt;/span> &lt;span class="n">mbean&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Hello&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">ObjectName&lt;/span> &lt;span class="n">mbeanName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ObjectName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;io.github.picodotdev.blogbitix:type=Hello&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">mbeanServer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">registerMBean&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">mbean&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">mbeanName&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Waiting for incoming requests...&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Thread&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sleep&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Long&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">MAX_VALUE&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/Main-java.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/Main-java.java" target="_blank">Main-java.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Iniciando la aplicación que registra un &lt;em>MBean&lt;/em> en el servidor de &lt;em>MBean&lt;/em> la plataforma Java incluye la herramienta &lt;em>JConsole&lt;/em> de monitorización y gestión que cumple con la especificación JMX. &lt;a href="https://visualvm.github.io">VisualVM&lt;/a> es otra herramienta de monitorización para una máquina virtual de Java, el soporte para visualizar y realizar operaciones sobre &lt;em>MBans&lt;/em> hay que añadirlo con un complemento o &lt;em>plugin&lt;/em>. Se inician con el siguiente comando y hay que abrir un diálogo para conectarse a uno de los agentes locales iniciados por una máquina virtual.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ jconsole
$ ./visualvm&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/jconsole-visualvm.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/jconsole-visualvm.sh" target="_blank">jconsole-visualvm.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/images/jconsole_hua2f7781bc9fbb44232be61e6d3ca5723_57481_2560x1440_fit_box_2.png" title="Herramienta de monitorización e instrumentalización JConsole" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/images/jconsole_hua2f7781bc9fbb44232be61e6d3ca5723_57481_650x450_fit_box_2.png" width="564"/>&lt;/a>
&lt;figcaption>Herramienta de monitorización e instrumentalización JConsole&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Realizada la conexión al agente se muestran las propiedades y operaciones de los MBean registrados con la posibilidad de cambiar sus valores, invocar las operaciones y obtener sus resultados. La propia plataforma Java proporciona numerosos &lt;em>MBean&lt;/em> como se muestra en el árbol lateral de la imagen.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/images/jconsole-mbean_hu98bab2b545a0fec0dfc1120010f70f98_75381_2560x1440_fit_box_2.png" title="Instrumentalización de un MBean en JConsole" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/images/jconsole-mbean_hu98bab2b545a0fec0dfc1120010f70f98_75381_300x250_fit_box_2.png" width="300"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/images/visualvm-mbean_hu917ba8c350e83c3d0f19da94ddb8ecfc_74961_2560x1440_fit_box_2.png" title="Instrumentalización de un MBean en VisualVM" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/images/visualvm-mbean_hu917ba8c350e83c3d0f19da94ddb8ecfc_74961_300x250_fit_box_2.png" width="300"/>&lt;/a>
&lt;figcaption>Instrumentalización de un MBean en JConsole y VisualVM&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>En el caso de que la aplicación esté contenida dentro de una aplicación web y desplegada en un servidor de aplicaciones como &lt;a href="https://tomcat.apache.org/">Tomcat&lt;/a> o &lt;a href="https://wildfly.org/">WildFly&lt;/a> registrar un &lt;em>MBean&lt;/em> es similar al caso del ejemplo de la aplicación Java y posteriormente administrados con la herramienta JConsole.&lt;/p>
&lt;h3 id="ejemplo-de-jmx-con-spring-boot">Ejemplo de JMX con Spring Boot&lt;/h3>
&lt;p>El ejemplo anterior muestra como usar JMX en una aplicación Java, Spring ofrece soporte para implementar JMX en aplicaciones que usen este &lt;em>framework&lt;/em> con las anotaciones &lt;a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/jmx/export/annotation/ManagedResource.html">@ManagedResource&lt;/a>, &lt;a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/jmx/export/metadata/ManagedAttribute.html">@ManagedAttribute&lt;/a>, &lt;a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/jmx/export/annotation/ManagedOperation.html">@ManagedOperation&lt;/a>, &lt;a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/jmx/export/annotation/ManagedOperationParameters.html">@ManagedOperationParameters&lt;/a>, &lt;a href="ManagedOperationParameters">@ManagedOperationParameter&lt;/a> y &lt;a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/EnableMBeanExport.html">@EnableMBeanExport&lt;/a>.&lt;/p>
&lt;p>El mismo &lt;em>MBean&lt;/em> de la aplicación Java implementado con spring es el siguiente, lo único que cambia son las anotaciones prporcionadas para que Spring descubra de forma automática los &lt;em>MBean&lt;/em> disponibles y los registre sin necesidad de hacerlo de forma explícita.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.jmx.mbean&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">HelloMBean&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kt">void&lt;/span> &lt;span class="nf">sayHello&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="nf">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="nf">getName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/HelloMBean.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/HelloMBean.java" target="_blank">HelloMBean.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.jmx.mbean&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.stereotype.Component&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.jmx.export.annotation.ManagedResource&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.jmx.export.annotation.ManagedOperation&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.jmx.export.annotation.ManagedAttribute&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Component&lt;/span>
&lt;span class="nd">@ManagedResource&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">objectName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;io.github.picodotdev.blogbitix:type=Hello&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Hello&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">HelloMBean&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@ManagedOperation&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">sayHello&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;hello, world&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@ManagedOperation&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="nf">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@ManagedAttribute&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;Reginald&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/Hello-spring.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/Hello-spring.java" target="_blank">Hello-spring.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Por autoconfiguración y la anotación &lt;a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/EnableMBeanExport.html">@EnableMBeanExport&lt;/a> los &lt;em>MBean&lt;/em> se autodescubren y registran en el servidor &lt;em>MBean&lt;/em>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.jmx.springboot&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.boot.SpringApplication&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.context.annotation.EnableMBeanExport&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.jmx.mbean.Hello&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@SpringBootApplication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">scanBasePackageClasses&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="n">Hello&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">}&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@EnableMBeanExport&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/Main-springboot.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/Main-springboot.java" target="_blank">Main-springboot.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Tanto en el ejemplo de &lt;em>MBean&lt;/em> con Java como con Spring el puerto RMI para acceder a JMX se configura con varias propiedades de la máquina virtual o con un archivo &lt;em>properties&lt;/em> de configuración.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">com.sun.management.jmxremote=false
com.sun.management.jmxremote.ssl=false&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/jmxremote-1.properties" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/jmxremote-1.properties" target="_blank">jmxremote-1.properties&lt;/a>
&lt;/div>
&lt;/div>
&lt;h3 id="cómo-añadir-acceso-remoto-y-añadir-seguridad-securizad-a-jmx">Cómo añadir acceso remoto y añadir seguridad securizad a JMX&lt;/h3>
&lt;p>Por defecto JMX solo es accesible desde la maquina local, esto en producción no es muy útil pero activar el acceso remoto requiere añadir nuevas propiedades de configuración para proporcionar seguridad realizando autenticación y usando una comunicación segura con SSL. Para la comunicación segura se requiere crear un &lt;em>keystore&lt;/em>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ keytool -genkey -keyalg RSA -keystore keystore.jks -keysize &lt;span class="m">8192&lt;/span>
$ keytool -export -keystore keystore.jks -file certificate.cer -storepass password
$ keytool -import -file certificate.cer -keystore trustore.jks -storepass password -noprompt&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/keystore.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/keystore.sh" target="_blank">keystore.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">com.sun.management.jmxremote=true
com.sun.management.jmxremote.port=1419
com.sun.management.jmxremote.rmi.port=31419
com.sun.management.jmxremote.ssl=true
com.sun.management.jmxremote.password.file=jmxremote.password
com.sun.management.jmxremote.access.file=jmxremote.access
com.sun.management.jmxremote.ssl.config.file=jmxremote-ssl.properties
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/jmxremote-2.properties" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/jmxremote-2.properties" target="_blank">jmxremote-2.properties&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">javax.net.ssl.keyStore=keystore.jks
javax.net.ssl.keyStorePassword=password
javax.net.ssl.trustStore=truststore.jks
javax.net.ssl.trustStorePassword=password
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/jmxremote-ssl.properties" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/jmxremote-ssl.properties" target="_blank">jmxremote-ssl.properties&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Los archivos &lt;em>jmxremote.password&lt;/em> y &lt;em>jmxremote.access&lt;/em> configuran la autenticación mediante clave y contraseña además de la autorización a las operaciones que el usuario tiene permiso para realizar. Estos archivos han tener restringidos los permisos de lectura para el usuario que inicia la aplicación o se produce una excepción.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext"># The passwords in this file are hashed.
# In order to change the password for a role, replace the hashed password entry
# with a clear text password or a new hashed password. If the new password is in clear,
# it will be replaced with its hash when a new login attempt is made.
admin password
user password
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/jmxremote.password" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/jmxremote.password" target="_blank">jmxremote.password&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">admin readwrite
user readonly
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/jmxremote.access" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/jmxremote.access" target="_blank">jmxremote.access&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">Error: Se debe restringir el acceso de lectura al archivo de contraseñas: jmxremote.password
jdk.internal.agent.AgentConfigurationError
at jdk.management.agent/sun.management.jmxremote.ConnectorBootstrap.checkPasswordFile(ConnectorBootstrap.java:590)
at jdk.management.agent/sun.management.jmxremote.ConnectorBootstrap.startRemoteConnectorServer(ConnectorBootstrap.java:436)
at jdk.management.agent/jdk.internal.agent.Agent.startAgent(Agent.java:447)
at jdk.management.agent/jdk.internal.agent.Agent.startAgent(Agent.java:599)
$ chmod 600 jmxremote.password jmxremote.access jmxremote-ssl.properties&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/permissions.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/permissions.sh" target="_blank">permissions.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ jconsole -J-Djavax.net.ssl.trustStore&lt;span class="o">=&lt;/span>truststore.jks -J-Djavax.net.ssl.trustStorePassword&lt;span class="o">=&lt;/span>password&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/jconsole.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/code/jconsole.sh" target="_blank">jconsole.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/images/jconsole-remote_hu6e958f8a814acc8daa16cd8b455e2986_58603_2560x1440_fit_box_2.png" title="Acceso remoto a la herramienta de monitorización e instrumentalización JConsole" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/images/jconsole-remote_hu6e958f8a814acc8daa16cd8b455e2986_58603_650x450_fit_box_2.png" width="536"/>&lt;/a>
&lt;figcaption>Acceso remoto a la herramienta de monitorización e instrumentalización JConsole&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>El acceso remoto también es posible mediante una &lt;a href="https://docs.oracle.com/javase/tutorial/jmx/remote/custom.html">aplicación Java que actúe como cliente del servidor &lt;em>MBean&lt;/em>&lt;/a>.&lt;/p>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaJMX">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./gradlew run&lt;/code>.
&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://docs.oracle.com/javase/7/docs/technotes/guides/management/agent.html">Monitoring and Management Using JMX Technology&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/tutorial/jmx/index.html">Tutorial Java Management Extensions (JMX)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gquintana.github.io/2016/09/01/Securing-remote-JMX.html">Securing remote JMX&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.spring.io/spring/docs/5.2.0.RELEASE/spring-framework-reference/integration.html#jmx">Spring JMX&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.spring.io/spring-boot/docs/2.2.0.RELEASE/reference/html/spring-boot-features.html#boot-features-jmx">Spring Boot Monitoring and Management over JMX&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.baeldung.com/java-management-extensions">Basic Introduction to JMX&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://actimem.com/java/jmx-spring/">JMX with Spring Framework&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/</id><title>Cobertura de código y mutation testing en pruebas unitarias con JaCoCo y PIT en Java</title><updated>2019-10-25T18:30:00+02:00</updated><published>2019-10-25T18:30:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>&lt;strong>En el caso extremo una cobertura de código del cien por cien pero que no tenga ningún &lt;em>assert&lt;/em> pasa los teses pero que en realidad no comprueba nada así que por si sola no es garantía de tener teses efectivos. &lt;em>Mutation testing&lt;/em> da una medida adicional a la cobertura de los teses más completa y efectiva que simplemente la cobertura de código ejecutado por los teses unitarios.&lt;/strong>&lt;/p>
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;p>Una medida que se suele emplear para medir la calidad o efectividad de los teses unitarios es su cobertura de código que consiste en la cantidad de código ejercitado del total por las pruebas unitarias con los casos de prueba y &lt;em>fixtures&lt;/em> empleados. Sin embargo, la cobertura de código no es una medida fiable para conocer si los casos de prueba empleados son precisos y completos. La cobertura de código puede seguir siendo del cien por cien si se sustituye un un mayor que por un mayor que e igual o faltan casos de prueba que ejerciten los límites de las condiciones, los teses seguirán siendo correctos.&lt;/p>
&lt;p>Para complementar la cobertura de código y obtener una medida de la precisión y completitud de los teses se emplea &lt;em>mutation testing&lt;/em>. Esta forma de pruebas analiza el código, realiza operaciones de mutación en el código y posteriormente ejecuta las pruebas contra el código mutado y genera un resultado en el que indica cuáles de las mutaciones realizadas ha sobrevivido pasando todos los teses o cuantas mutaciones han muerto porque los teses han fallado, si alguna mutación sobrevive los teses no son precisos y completos al cien por cien.&lt;/p>
&lt;p>&lt;a href="https://pitest.org/">PIT&lt;/a> es una librería que permite realizar &lt;em>mutation testing&lt;/em> en Java. Las &lt;a href="https://pitest.org/quickstart/mutators/">operaciones de mutación&lt;/a> que realiza en el código pueden ser en los condicionales, incrementos, invertir negativos, matemáticas, negar condicionales, cambiar los valores de retorno o eliminar llamadas a métodos sin retorno. Un ejemplo de mutaciones son realizar mutaciones en los límites de comparaciones, cambiando un &lt;em>&amp;lt;&lt;/em> por un &lt;em>&amp;lt;=&lt;/em> y comprobar si con operador mutado la mutación sobrevive pasando todos los teses.&lt;/p>
&lt;table class="table">
&lt;thead class="thead-light">
&lt;tr class="thead-light">
&lt;th>Original&lt;/td>
&lt;th>Mutación&lt;/td>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;&lt;/td>
&lt;td>&lt;=&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;=&lt;/td>
&lt;td>&lt;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>>&lt;/td>
&lt;td>>=&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>>=&lt;/td>
&lt;td>>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>En siguiente ejemplo, la clase &lt;em>TicketPriceCalculator&lt;/em> calcula el precio de los billetes de un grupo de viajeros. La lógica del calculador de precios determina el precio en función de la edad de los pasajeros y de si cumplen la condición de familia se les aplica un descuento.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.mutationtesting&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Passenger&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">age&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">Passenger&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">age&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">age&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">age&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="nf">getAge&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">age&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/code/Passenger.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/code/Passenger.java" target="_blank">Passenger.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.mutationtesting&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.util.List&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">TicketPriceCalculator&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">double&lt;/span> &lt;span class="n">FAMILY_DISCOUNT&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">05&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">ADULT_AGE&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">18&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">FREE_TICKET_AGE_BELOW&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">3&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">double&lt;/span> &lt;span class="nf">calculatePrice&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Passenger&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">passengers&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">adultTicketPrice&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">childTicketPrice&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kt">double&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">countAdults&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">passengers&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">adultTicketPrice&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">countChildrens&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">passengers&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">childTicketPrice&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kt">double&lt;/span> &lt;span class="n">discount&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">isFamily&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">passengers&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">FAMILY_DISCOUNT&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">0d&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">discount&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="nf">countAdults&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Passenger&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">passengers&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">passengers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">stream&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">filter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="n">isAdult&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">count&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="nf">countChildrens&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Passenger&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">passengers&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">passengers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">stream&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">filter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="n">isChildren&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">count&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kt">boolean&lt;/span> &lt;span class="nf">isAdult&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Passenger&lt;/span> &lt;span class="n">passenger&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">passenger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAge&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">ADULT_AGE&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kt">boolean&lt;/span> &lt;span class="nf">isChildren&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Passenger&lt;/span> &lt;span class="n">passenger&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">passenger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAge&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">FREE_TICKET_AGE_BELOW&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">passenger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAge&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">ADULT_AGE&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kt">boolean&lt;/span> &lt;span class="nf">isFamily&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Passenger&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">passengers&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">countAdults&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">passengers&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">countChildrens&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">passengers&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">2&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/code/TicketPriceCalculator.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/code/TicketPriceCalculator.java" target="_blank">TicketPriceCalculator.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>La siguiente batería de teses proporciona una cobertura de teses del cien por cien tanto para la cobertura del código como para las mutaciones como se muestran en los informes de &lt;a href="https://www.jacoco.org/jacoco/">JaCoCo&lt;/a> para la cobertura de código y de PIT para la cobertura de mutaciones, después de haber realizado cambios tanto en el código como en los teses para obtener estos resultados.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;span class="lnt">79
&lt;/span>&lt;span class="lnt">80
&lt;/span>&lt;span class="lnt">81
&lt;/span>&lt;span class="lnt">82
&lt;/span>&lt;span class="lnt">83
&lt;/span>&lt;span class="lnt">84
&lt;/span>&lt;span class="lnt">85
&lt;/span>&lt;span class="lnt">86
&lt;/span>&lt;span class="lnt">87
&lt;/span>&lt;span class="lnt">88
&lt;/span>&lt;span class="lnt">89
&lt;/span>&lt;span class="lnt">90
&lt;/span>&lt;span class="lnt">91
&lt;/span>&lt;span class="lnt">92
&lt;/span>&lt;span class="lnt">93
&lt;/span>&lt;span class="lnt">94
&lt;/span>&lt;span class="lnt">95
&lt;/span>&lt;span class="lnt">96
&lt;/span>&lt;span class="lnt">97
&lt;/span>&lt;span class="lnt">98
&lt;/span>&lt;span class="lnt">99
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.mutationtesting&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.junit.jupiter.api.BeforeEach&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.junit.jupiter.api.Test&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.util.ArrayList&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.util.List&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.junit.jupiter.api.Assertions&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">TicketPriceCalculatorTest&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">ADULT_TICKET_PRICE&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">40&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">CHILD_TICKER_PRICE&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">20&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">TicketPriceCalculator&lt;/span> &lt;span class="n">calculator&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@BeforeEach&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">before&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">calculator&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">TicketPriceCalculator&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Test&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">calculatePriceForOneAdult&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Passenger&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">passengers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Passenger&lt;/span> &lt;span class="n">passenger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Passenger&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">20&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">passengers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">passenger&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kt">double&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">calculator&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">calculatePrice&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">passengers&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ADULT_TICKET_PRICE&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">CHILD_TICKER_PRICE&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Assertions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">assertEquals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ADULT_TICKET_PRICE&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">price&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Test&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">calculatePriceForChild&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Passenger&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">passengers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Passenger&lt;/span> &lt;span class="n">childPassenger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Passenger&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">15&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">passengers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">childPassenger&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kt">double&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">calculator&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">calculatePrice&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">passengers&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ADULT_TICKET_PRICE&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">CHILD_TICKER_PRICE&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Assertions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">assertEquals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">CHILD_TICKER_PRICE&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">price&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Test&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">calculatePriceForFamily&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Passenger&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">passengers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Passenger&lt;/span> &lt;span class="n">adultPassenger1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Passenger&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">20&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Passenger&lt;/span> &lt;span class="n">adultPassenger2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Passenger&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">20&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Passenger&lt;/span> &lt;span class="n">childPassenger3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Passenger&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">12&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Passenger&lt;/span> &lt;span class="n">childPassenger4&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Passenger&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">passengers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">adultPassenger1&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">passengers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">adultPassenger2&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">passengers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">childPassenger3&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">passengers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">childPassenger4&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kt">double&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">calculator&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">calculatePrice&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">passengers&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ADULT_TICKET_PRICE&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">CHILD_TICKER_PRICE&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Assertions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">assertEquals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">2&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">ADULT_TICKET_PRICE&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">CHILD_TICKER_PRICE&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">TicketPriceCalculator&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">FAMILY_DISCOUNT&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">price&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Test&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">calculatePriceForNoFamilyByNoAdults&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Passenger&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">passengers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Passenger&lt;/span> &lt;span class="n">adultPassenger1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Passenger&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">20&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Passenger&lt;/span> &lt;span class="n">childPassenger2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Passenger&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">12&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Passenger&lt;/span> &lt;span class="n">childPassenger3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Passenger&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">passengers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">adultPassenger1&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">passengers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">childPassenger2&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">passengers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">childPassenger3&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kt">double&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">calculator&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">calculatePrice&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">passengers&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ADULT_TICKET_PRICE&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">CHILD_TICKER_PRICE&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Assertions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">assertEquals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">ADULT_TICKET_PRICE&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">CHILD_TICKER_PRICE&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">price&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Test&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">calculatePriceForNoFamilyByNoChildren&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Passenger&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">passengers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Passenger&lt;/span> &lt;span class="n">adultPassenger1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Passenger&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">20&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Passenger&lt;/span> &lt;span class="n">adultPassenger2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Passenger&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">20&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Passenger&lt;/span> &lt;span class="n">childPassenger3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Passenger&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">12&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">passengers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">adultPassenger1&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">passengers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">adultPassenger2&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">passengers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">childPassenger3&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kt">double&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">calculator&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">calculatePrice&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">passengers&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ADULT_TICKET_PRICE&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">CHILD_TICKER_PRICE&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Assertions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">assertEquals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">2&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">ADULT_TICKET_PRICE&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">CHILD_TICKER_PRICE&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">price&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Test&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">calculatePriceForChildNarrowCase&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Passenger&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">passengers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Passenger&lt;/span> &lt;span class="n">childPassenger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Passenger&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">18&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">passengers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">childPassenger&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kt">double&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">calculator&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">calculatePrice&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">passengers&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ADULT_TICKET_PRICE&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">CHILD_TICKER_PRICE&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Assertions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">assertEquals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">CHILD_TICKER_PRICE&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">price&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Test&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">calculatePriceForFreeTicketNarrowCase&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Passenger&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">passengers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Passenger&lt;/span> &lt;span class="n">childPassenger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Passenger&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">passengers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">childPassenger&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kt">double&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">calculator&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">calculatePrice&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">passengers&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ADULT_TICKET_PRICE&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">CHILD_TICKER_PRICE&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Assertions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">assertEquals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">price&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/code/TicketPriceCalculatorTest.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/code/TicketPriceCalculatorTest.java" target="_blank">TicketPriceCalculatorTest.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Sin los casos de prueba &lt;em>calculatePriceForChildNarrowCase&lt;/em> y &lt;em>calculatePriceForFreeTicketNarrowCase&lt;/em> los teses son correctos, pero si PIT con una edad de 16 realiza una operación de mutación cambiando los límites de la condición de _passenger.getAge() &amp;gt; FREE_TICKET_AGE_BELOW &amp;amp;&amp;amp; passenger.getAge() &amp;lt;= ADULT&lt;em>AGE&lt;/em>, la mutación de &lt;em>&amp;lt;=&lt;/em> a &amp;lt;_ sobrevive, esto inidica que los teses y casos de prueba no son totalmente precisos. Para que esta mutación no sobreviva hay que añadir estos dos teses que se encargan de comprobar los límites de las condiciones. El valor del caso de prueba que se debe utilizar es el valor del límite a partir del cual una persona se considera adulta, es un niño si su edad está comprendida a partir de &lt;em>3&lt;/em> y menor e igual que 18.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/images/tests-report-correct_hudfa2824e897c832daa3422dc61ca87ee_72370_2560x1440_fit_box_2.png" title="Informe de teses correcto" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/images/tests-report-correct_hudfa2824e897c832daa3422dc61ca87ee_72370_200x150_fit_box_2.png" width="200"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/images/pit-report-fail-1_huc87b333b8163dd48d413586ff70d46c5_63283_2560x1440_fit_box_2.png" title="Informe de PIT incorrecto" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/images/pit-report-fail-1_huc87b333b8163dd48d413586ff70d46c5_63283_200x150_fit_box_2.png" width="200"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/images/pit-report-fail-2_hue8106a2384d04ebad9196eeb31e603f2_237003_2560x1440_fit_box_2.png" title="Informe de PIT incorrecto" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/images/pit-report-fail-2_hue8106a2384d04ebad9196eeb31e603f2_237003_200x150_fit_box_2.png" width="132"/>&lt;/a>
&lt;figcaption>Informe de teses correcto y de PIT incorrecto&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>El caso de prueba &lt;em>calculatePriceForFamily&lt;/em> prueba que una familia esté formada por 2 adultos y 2 menores, PIT realiza las mutaciones para considerar una familia en el caso de ser de 3 adultos o 3 menores, la prueba de &lt;em>calculatePriceForFamily&lt;/em> mata estas mutaciones haciendo que los teses sean precisos y completos. La cobertura de teses de mutación llega al cien por cien. En el informe de PIT se observa una descripción y número de mutaciones que ha realizado entre ellas divisiones en vez de multiplicaciones, substracciones en vez de sumas, reemplazo de valores de retorno o cambios y negaciones en condicionales. Los teses &lt;em>calculatePriceForNoFamilyByNoAdults&lt;/em> y &lt;em>calculatePriceForNoFamilyByNoChildren&lt;/em> completan la cobertura de todas las ramas del método &lt;em>isFamily&lt;/em>.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/images/tests-report_hufec17cc4e9dd255f30d3fdc08fdfc383_81444_2560x1440_fit_box_2.png" title="Informe de pruebas de JUnit" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/images/tests-report_hufec17cc4e9dd255f30d3fdc08fdfc383_81444_300x200_fit_box_2.png" width="300"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/images/jacoco-report_hu13af5fdf566d7237e195bc887d161ecb_71552_2560x1440_fit_box_2.png" title="Informe de cobertura de JaCoCo" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/images/jacoco-report_hu13af5fdf566d7237e195bc887d161ecb_71552_300x200_fit_box_2.png" width="300"/>&lt;/a>
&lt;/figure>
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/images/pit-report-1_huc87b333b8163dd48d413586ff70d46c5_61675_2560x1440_fit_box_2.png" title="Informe de mutación de PIT" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/images/pit-report-1_huc87b333b8163dd48d413586ff70d46c5_61675_300x200_fit_box_2.png" width="300"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/images/pit-report-2_hue8106a2384d04ebad9196eeb31e603f2_235712_2560x1440_fit_box_2.png" title="Informe de mutación de PIT" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/images/pit-report-2_hue8106a2384d04ebad9196eeb31e603f2_235712_300x200_fit_box_2.png" width="176"/>&lt;/a>
&lt;figcaption>Informe de pruebas de JUnit, de cobertura de JaCoCo y de mutación de PIT&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Para generar los informes de cobertura de código y de mutación en Java y usando &lt;a href="https://gradle.org/">Gradle&lt;/a> como herramienta de construcción las herramientas JaCoCo y PIT proporcionan un complemento o &lt;em>plugin&lt;/em> que hay que añadir al archivo de construcción además de proporcionar algunas opciones de configuración en la sección &lt;em>pitest&lt;/em>, entre estas propiedades está &lt;em>mutators&lt;/em> en la que se puede indicar los &lt;em>mutators&lt;/em> que PIT emplea para lanzar los teses con mutaciones. Los informes se generan en el directorio &lt;em>build/reports/&lt;/em>. Realizar &lt;em>mutation testing&lt;/em> solo requiere cierta configuración en el archivo de construcción del proyecto.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Groovy" data-lang="Groovy">&lt;span class="n">buildscript&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">repositories&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">jcenter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">configurations&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">maybeCreate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;pitest&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">classpath&lt;/span> &lt;span class="s1">&amp;#39;info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.4.5&amp;#39;&lt;/span>
&lt;span class="n">pitest&lt;/span> &lt;span class="s1">&amp;#39;org.pitest:pitest-junit5-plugin:0.8&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">plugins&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;java&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;jacoco&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;info.solidsoft.pitest&amp;#39;&lt;/span> &lt;span class="n">version&lt;/span> &lt;span class="s1">&amp;#39;1.4.5&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">testImplementation&lt;/span> &lt;span class="s1">&amp;#39;org.junit.jupiter:junit-jupiter-api:5.4.2&amp;#39;&lt;/span>
&lt;span class="n">testRuntimeOnly&lt;/span> &lt;span class="s1">&amp;#39;org.junit.jupiter:junit-jupiter-engine:5.4.2&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">repositories&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">jcenter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">compileJava&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">sourceCompatibility&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">11&lt;/span>
&lt;span class="n">targetCompatibility&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">11&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">test&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">useJUnitPlatform&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">pitest&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">testPlugin&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;junit5&amp;#39;&lt;/span>
&lt;span class="n">targetClasses&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;io.github.picodotdev.blogbitix.*&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">threads&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">4&lt;/span>
&lt;span class="n">outputFormats&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;HTML&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">timestampedReports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;span class="n">mutators&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;DEFAULTS&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/code/build.gradle" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/code/build.gradle" target="_blank">build.gradle&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./gradlew &lt;span class="nb">test&lt;/span> jacocoTestReport pitest
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/code/gradlew-run.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/code/gradlew-run.sh" target="_blank">gradlew-run.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaMutationTesting">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./gradlew test jacocoTestReport pitest&lt;/code>.
&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="http://qajungle.com/mutation-testing-pit-nuestro-gran-amigo/">Mutation testing – PIT nuestro gran amigo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://beyondscheme.com/2016/pitest-with-java">Pitest - mutation testing in Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.baeldung.com/java-mutation-testing-with-pitest">Mutation Testing with PITest&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.adictosaltrabajo.com/2015/11/10/mutation-testing-con-pit/">Mutation Testing con PIT&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/</id><title>Ventajas de usar un tipo específico para los identificadores de las entidades en vez de un tipo básico</title><updated>2019-10-18T16:30:00+02:00</updated><published>2019-10-18T16:30:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/hibernate.svg" class="right " width="200" alt="jOOQ" title="jOOQ"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/jooq.png" class="right " width="200" alt="" title=""/>
&lt;/div>
&lt;p>Al persistir una entidad de dominio en la base de datos su identificador se guarda como un tipo de datos soportado por la base de datos. Si es una base de datos relacional habitualmente es el equivalente a un &lt;em>bigint&lt;/em> o en una base de datos de documentos quizá un UUID. En las entidades de dominio el tipo de datos usado para el identificador es el equivalente de la base de datos en el lenguaje de programación. Por ejemplo, si en una base de datos la clave primaria es un &lt;em>bigint&lt;/em> el identificador en la entidad de dominio es un &lt;a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html">Long&lt;/a>. Esto es lo mas simple pero tiene algún inconveniente.&lt;/p>
&lt;p>El inconveniente es que al ser el identificador un tipo de datos básico cualquier &lt;em>Long&lt;/em> es aceptado, con lo que se hacen posibles errores o malos comportamientos al usar un identificador de otra entidad de dominio si también es un &lt;em>Long&lt;/em> donde no se debería. El compilador no captura este tipo de errores porque entiende como correcto cualquier &lt;em>Long&lt;/em> independientemente de su significado desde el punto de vista de la aplicación.&lt;/p>
&lt;p>También en cierta medida es un problema en la legibilidad del código ya que el tipo de dato de una variable no es significativo para saber si es un identificador. También es un problema al trabajar con colecciones, los siguientes ejemplos de código demuestran que los tipos no son todo lo semánticos o significativos que deberían.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">Long&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Long&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">ids&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">;&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/code/Collection-Long.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/code/Collection-Long.java" target="_blank">Collection-Long.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>La solución es crear un tipo para cada identificador de cada entidad y en vez de usar un &lt;em>Long&lt;/em> pasar a usar un &lt;em>ProductoId&lt;/em>, &lt;em>UsuarioId&lt;/em>, &lt;em>CompraId&lt;/em> o como en el ejemplo &lt;em>EventId&lt;/em>. Estas serían unas posibles implementaciones.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.domain.misc&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">EntityId&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/code/EntityId.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/code/EntityId.java" target="_blank">EntityId.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.domain.misc&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">abstract&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">LongId&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">EntityId&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Long&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">LongId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Long&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Long&lt;/span> &lt;span class="nf">getValue&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/code/LongId.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/code/LongId.java" target="_blank">LongId.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.domain.event&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">io.github.picodotdev.domain.misc.LongId&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.util.Objects&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">EventId&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">LongId&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">EventId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Long&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">super&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="nf">hashCode&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">Objects&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">hashCode&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">getId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">boolean&lt;/span> &lt;span class="nf">equals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Object&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="k">this&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="o">;&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">o&lt;/span> &lt;span class="k">instanceof&lt;/span> &lt;span class="n">EventId&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="o">;&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">Objects&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">equals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">getId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">EventId&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/code/EventId.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/code/EventId.java" target="_blank">EventId.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>El tipo de las colecciones ahora son más semánticas además de que el compilador realizará comprobaciones de tipos.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">EventId&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">EventId&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">ids&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">;&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/code/Collection-EventId.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/code/Collection-EventId.java" target="_blank">Collection-EventId.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>En la popular herramienta ORM de persistencia &lt;a href="https://hibernate.org/">Hibernate&lt;/a> o JPA se puede usar el tipo propio para el identificador usando la anotación &lt;a href="https://javaee.github.io/javaee-spec/javadocs/javax/persistence/Converter.html">@Converter&lt;/a> y en otra alternativa de persistencia para Java como &lt;a href="https://www.jooq.org/">jOOQ&lt;/a> especificando en el generador el tipo que se quiere usar para una columna. En ambos casos hay que proporcionar una implementación que convierta del tipo de la base de datos al del identificador en el dominio y viceversa. Son muy simples.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.infrastructure.datasource.hibernate.converter&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">javax.persistence.AttributeConverter&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">javax.persistence.Converter&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">io.github.picodotdev.domain.event.EventId&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Converter&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">EventIdConverter&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">AttributeConverter&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">EventId&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Long&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Long&lt;/span> &lt;span class="nf">convertToDatabaseColumn&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">EventId&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getValue&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">EventId&lt;/span> &lt;span class="nf">convertToEntityAttribute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Long&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">EventId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/code/EventIdConverter-hibernate.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/code/EventIdConverter-hibernate.java" target="_blank">EventIdConverter-hibernate.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.infrastructure.datasource.jooq.converter&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">io.github.picodotdev.domain.event.EventId&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">EventIdConverter&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">Converter&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Long&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">EventId&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Class&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Long&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">fromType&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">Long&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">EventId&lt;/span> &lt;span class="nf">from&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Long&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">EventId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Class&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">EventId&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">toType&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">EventId&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Long&lt;/span> &lt;span class="nf">to&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">EventId&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getValue&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/code/EventIdConverter-jooq.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/code/EventIdConverter-jooq.java" target="_blank">EventIdConverter-jooq.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>En una entidad de Hibernate los identificadores se definen de la siguiente forma.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.domain.event&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@Entity&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Event&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Id&lt;/span>
&lt;span class="nd">@GeneratedValue&lt;/span>
&lt;span class="nd">@Convert&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">converter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">EventIdConverter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">EventId&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/code/Event.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/code/Event.java" target="_blank">Event.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>En jOOQ en la configuración del generador hay que especificar que para un campo se use un &lt;em>converter&lt;/em>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Groovy" data-lang="Groovy">&lt;span class="n">plugins&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;java&amp;#39;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;nu.studer.jooq&amp;#39;&lt;/span> &lt;span class="n">version&lt;/span> &lt;span class="s1">&amp;#39;3.0.3&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="n">jooq&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">version&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">versions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">jooq&lt;/span>
&lt;span class="n">edition&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;OSS&amp;#39;&lt;/span>
&lt;span class="n">mysql&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">sourceSets&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">main&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">jdbc&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">driver&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;com.mysql.cj.jdbc.Driver&amp;#39;&lt;/span>
&lt;span class="n">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;jdbc:mysql://localhost:3306/${mysqlDdlJooqSchema}&amp;#34;&lt;/span>
&lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span>
&lt;span class="n">password&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">generator&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;org.jooq.codegen.DefaultGenerator&amp;#39;&lt;/span>
&lt;span class="n">database&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;org.jooq.meta.mysql.MySQLDatabase&amp;#39;&lt;/span>
&lt;span class="n">inputSchema&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mysqlDdlJooqSchema&lt;/span>
&lt;span class="n">outputSchema&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;application&amp;#39;&lt;/span>
&lt;span class="n">includes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2"> event
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="n">excludes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="n">forcedTypes&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="c1">// Ids
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">forcedType&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">types&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;BIGINT&amp;#39;&lt;/span>
&lt;span class="n">userType&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;io.github.picodotdev.domain.event.EventId&amp;#39;&lt;/span>
&lt;span class="n">converter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;io.github.picodotdev.infrastructure.datasource.jooq.converter.EventIdConverter&amp;#39;&lt;/span>
&lt;span class="n">expression&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;.*\\.event\\.id&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">generate&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">javaTimeTypes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;span class="n">interfaces&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;span class="n">pojos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;span class="n">records&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;span class="n">relations&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">target&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">packageName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;io.github.picodotdev.infrastructure.datasource.jooq.entities&amp;#39;&lt;/span>
&lt;span class="n">directory&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;src/main/java-generated&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/code/build.gradle" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/code/build.gradle" target="_blank">build.gradle&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Con un tipo de datos propio para los identificadores es muy importante &lt;a href="https://picodotdev.github.io/blog-bitix/2016/12/como-implementar-correctamente-y-por-que-los-metodos-equals-y-hashcode-de-los-objetos-java/">implementar correctamente los métodos equals y hashCode&lt;/a> tanto en clases de identificadores como en las entidades de dominio ya que las colecciones de Java se basan en estos métodos para determinar si una colección contiene un elemento.&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2015/05/alternativa-a-hibernate-u-orm-y-ejemplo-de-jooq/">Alternativa a Hibernate u ORM y ejemplo de jOOQ&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/</id><title>Microservicios con Spring Cloud, Consul, Nomad y Traefik</title><updated>2019-10-12T02:30:00+02:00</updated><published>2019-10-12T02:30:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>&lt;strong>Sin entrar a si los microservicios son adecuados o no son adecuados en una aplicación, está claro que si se utilizan estos tienen varias necesidades. Un servicio de registro y descubrimiento, configuración centralizada, tolerancia a fallos, &lt;em>gateway/load balancer/reverse proxy&lt;/em>, trazabilidad y métricas, autenticación, orquestación, &amp;hellip; Los microservicios quiza no sean un gran monolito, quizá mas pequeños y con funcinalidad más acotada, pero el hecho de que se comuniquen a través de un medio más complejo y menos fiable como la red en vez de una llamada a un método y sean más numerosos hacen que la complejidad sea incluso mayor. Este artículo propone un ejemplo con Spring Cloud para los servicios, Consul para el registro y descubrimiento, Nomad para la orquestación y Traefik como &lt;em>gateway&lt;/em>.&lt;/strong>&lt;/p>
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/spring.svg" class="right " width="200" alt="Spring" title="Spring"/>
&lt;/div>
&lt;p>En otro artículo mostraba un ejemplo de &lt;a href="https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/">microservicios con Spring Cloud&lt;/a> usando únicamente herramientas de &lt;a href="https://spring.io/">Spring&lt;/a>. Cada una de esas herramientas cubren una funcionalidad que necesitan los microservicios. Entre ellas:&lt;/p>
&lt;ul>
&lt;li>Registro y descubrimiento, con &lt;a href="https://github.com/Netflix/eureka">Eureka&lt;/a>. Los microservicios son numerosos, de vida efímera creándose y destruyéndose en diferentes ubicaciones por lo tanto necesitan una forma de localizarse unos a otros, la forma para encontrarse es acudiendo a un servicio donde se registran cuando se inician y se descubren cuando necesitan la ubicación de otro servicio.&lt;/li>
&lt;li>Configuración centralizada, con &lt;a href="https://cloud.spring.io/spring-cloud-config/">Spring Cloud Config&lt;/a>. Dado el número de microservicios actualizar la configuración de cada uno de ellos puede ser un problema, además dado que se pueden iniciar en diferentes ubicaciones aprovisionarles la configuración adecuada es un reto. En vez de aprovisionar la configuración otra técnica es hacer que cuando se inicien la obtengan de un servicio donde queda centralizada la configuración.&lt;/li>
&lt;li>Tolerancia a fallos, con &lt;a href="https://github.com/Netflix/Hystrix">Hyxtrix&lt;/a> y &lt;a href="https://github.com/resilience4j/resilience4j">Resilience4j&lt;/a>. El medio de comunicación de los microservicios es a través de la red un medio mucho menos confiable que una llamada a un método en un lenguaje de programación en una aplicación monolítica. De modo que los microservicios han de estar preparados para tolerar fallos en sus comunicaciones con otros servicios.&lt;/li>
&lt;li>&lt;em>Gateway&lt;/em>, &lt;em>load balancer&lt;/em> y &lt;em>reverse proxy&lt;/em> con tolerancia a fallos, con &lt;a href="https://github.com/Netflix/zuul">Zuul&lt;/a>. Para aumentar la disponibilidad, escalabilidad y tolerar fallos en algunos servicios se suelen crear varias instancias de cada microservicio pero tener varias instancias hace que sea necesario balancear la carga entre cada una de las instancias. Para que los clientes sean agnósticos del número de instancias se emplea un &lt;em>gateway&lt;/em> que proporciona balanceo de carga e implementa a su vez patrones de tolerancia a fallos.&lt;/li>
&lt;li>Trazabilidad y correlación de trazas entre diferentes servicios, con &lt;a href="https://spring.io/projects/spring-cloud-sleuth">Spring Cloud Sleuth&lt;/a>. Una petición puede desencadenar una cadena de peticiones entre diferentes servicios ubicados en múltiples nodos, para tareas de diagnóstico en caso de querer investigar un &lt;em>bug&lt;/em> o que ha ocurrido es necesario correlacionar todas las trazas que ha desencadenado una petición, se implementa asignado un identificativo global a la petición que es transmitido en las llamadas de microservicio a microservicio.&lt;/li>
&lt;/ul>
&lt;p>En otro &lt;a href="https://picodotdev.github.io/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/">ejemplo sobre OAuth con Spring&lt;/a> mostraba otra funcionalidad:&lt;/p>
&lt;ul>
&lt;li>&lt;em>Gateway&lt;/em>, con &lt;a href="https://spring.io/projects/spring-cloud-gateway">Spring Cloud Gateway&lt;/a>.&lt;/li>
&lt;li>Autenticación y autorización, con &lt;a href="https://spring.io/projects/spring-security-oauth">Spring Security OAuth&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>Los microservicios también necesitan monitorización y métricas, en el ejemplo &lt;a href="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/">Monitorizar una aplicación Java de Spring Boot con Micrometer, Prometheus y Grafana&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>Con &lt;a href="https://prometheus.io/">Prometheus&lt;/a> y &lt;a href="https://grafana.com/">Grafana&lt;/a>. Nuevamente el número de instancias que requiere una arquitectura orientada a microservicios origina la necesidad en mayor medida de conocer el estado del sistema, ya sean métricas de los sistemas como uso de CPU, memoria o almacenamiento o de la aplicación como peticiones por segundo y porcentaje de correctas e incorrectas.&lt;/li>
&lt;/ul>
&lt;p>En esta lista falta un orquestador para el despliegue de los microservicios, que se encargue de su ciclo de vida, escalado de instancias y despliegue con estrategias &lt;em>rolling&lt;/em>, &lt;em>blue/green&lt;/em> y &lt;em>canary&lt;/em>. Es una cosa que le faltaba al ejemplo de microservicios con Spring Cloud.&lt;/p>
&lt;ul>
&lt;li>Orquestador de servicios, con &lt;a href="https://www.nomadproject.io/">Nomad&lt;/a>. &lt;a href="https://picodotdev.github.io/blog-bitix/2019/04/introduccion-a-nomad-para-gestionar-aplicaciones-y-microservicios/">Introducción a Nomad para gestionar aplicaciones y microservicios&lt;/a>, &lt;a href="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/">Estrategias de despliegue para microservicios con Nomad&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>Además, en este ejemplo reemplazo varias de estas herramientas de Spring. Sustituyo el servicio de registro y descubrimiento proporcionado por Eureka por &lt;a href="https://www.consul.io/">Consul&lt;/a>, el &lt;em>gateway&lt;/em>, &lt;em>load balancer&lt;/em> y &lt;em>reverse proxy&lt;/em> proporcionado por Zuul por &lt;a href="https://traefik.io/">Traefik&lt;/a> y añado el orquestador de microservicios &lt;a href="https://www.nomadproject.io/">Nomad&lt;/a>.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;img src="assets/images/logotipos/consul.svg" alt="Consul" title="Consul" width="200"/>
&lt;img src="assets/images/logotipos/nomad.svg" alt="Nomad" title="Nomad" width="200"/>
&lt;img src="assets/images/logotipos/traefik.svg" alt="Traefik" title="Traefik" width="200"/>
&lt;/div>
&lt;p>Traefik se configura con los servicios iniciados en los contenedores de Docker utilizando junto con los bloques o &lt;em>stanzas&lt;/em> de &lt;em>config&lt;/em> y &lt;em>labels&lt;/em> en la definición de los servicios de Nomad. Según el criterio definido por el servicio Traefik es capaz de redirigir el tráfico que le llegue al servicio apropiado, entre las posibilidades que puede realizar Traefik es balanceo de carga entre las múltiples instancias que se hayan definido pero también implementa patrones de tolerancia a fallos con reintentos, el patrón &lt;em>circuit breaker&lt;/em> o limitar el tráfico para evitar saturar a un servicio con demasiadas peticiones.&lt;/p>
&lt;p>El esquema de servicios sería el siguiente. Los &lt;em>job&lt;/em> son enviados a Nomad desde la linea de comandos que inicia los contenedores en Docker y registra los servicios en Consul, Traefik monitoriza los contenedores que se inician en Docker y se autoconfigura según las propiedades de los &lt;em>labels&lt;/em> definidos para los contenedores. Una vez iniciados los servicios desde la terminal con un &lt;em>curl&lt;/em> o desde la aplicación cliente que accede a Consul para conocer la ubicación del servicio de Traefik envían una petición a Traefik que haciendo balanceo de carga la reenvía a una de las instancias del servicio, el servicio responde y Traefik envía la respuesta al cliente. Para ser más funcional Traefik debería configurarse a partir de Consul en vez de Docker para posibilitar que los contenedores pudieran estar en varios nodos.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/esquema-arquitectura_hud9745ca4e3e6c708b4af1c72fc0d4ff7_167252_2560x1440_fit_box_2.png" title="Esquema arquitectura" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/esquema-arquitectura_hud9745ca4e3e6c708b4af1c72fc0d4ff7_167252_600x450_fit_box_2.png" width="600"/>&lt;/a>
&lt;figcaption>Esquema arquitectura&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>La ejecución del ejemplo requiere &lt;a href="https://www.docker.com/">Docker&lt;/a> ya que es en este caso el &lt;em>driver&lt;/em> empleado en Nomad para ejecutar los servicios del servicio de configuración, el &lt;em>gateway&lt;/em>, el servicio y el cliente del servicio. Nomad además se encarga de registrar los servicios en el servicio de registro y descubrimiento de Consul.&lt;/p>
&lt;p>Los contenedores de Docker se añade a una misma red para que puedan comunicarse entre ellos, ha de ser así hasta que no se resuelva una &lt;a href="https://github.com/docker/for-linux/issues/264">petición de Docker para que los contenedores puedan comunicarse con la máquina &lt;em>host&lt;/em>&lt;/a> que los alberga.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ docker network create --subnet 172.30.0.0/16 nomad
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/code/docker-network-create.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/code/docker-network-create.sh" target="_blank">docker-network-create.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Poteriormente hay que ejecutar Consul y Nomad tras lo cual se puede acceder a sus consolas de estado.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ consul agent -dev -ui -client&lt;span class="o">=&lt;/span>0.0.0.0
$ nomad agent -dev&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/code/nomad-consul-run.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/code/nomad-consul-run.sh" target="_blank">nomad-consul-run.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Enviar a Nomad los &lt;em>job&lt;/em> de Traefik tras lo cual se puede acceder a su consola de estado. El siguiente paso es enviar el &lt;em>job&lt;/em> del servicio que proporciona la configuración a los microservicios. Lo anterior únicamente es infraestructura aún no hay ningún servicio que proporcione alguna funcionalidad, la funcionalidad que proporciona el servicio implementado con Spring es simplemente devolver un mensaje como respuesta a la petición que se le realice, se envía el &lt;em>job&lt;/em> del servicio a Nomad. Finalmente, el servicio es consumido por un cliente que realiza una petición al servicio cada 1 segundo.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./gradlew assemble
$ nomad job run nomad/traefik.nomad
$ nomad job run nomad/configserver.nomad
$ nomad job run nomad/service.nomad
$ nomad job run nomad/client.nomad&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/code/nomad-job-run.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/code/nomad-job-run.sh" target="_blank">nomad-job-run.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Definición de un servicio en un &lt;em>job&lt;/em> para Nomad. &lt;em>count&lt;/em> define cuantas instancias del servicio se inicia, la &lt;em>stanza&lt;/em> &lt;em>update&lt;/em> define como será la actualización cuando se actualice el servicio, la &lt;em>stanza&lt;/em> &lt;em>labels&lt;/em> contiene la configuración para Traefik, &lt;em>check&lt;/em> define los parámetros para la monitorización.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-HCL" data-lang="HCL">&lt;span class="k">job&lt;/span> &lt;span class="s2">&amp;#34;service&amp;#34;&lt;/span> {
&lt;span class="n"> datacenters&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;dc1&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">group&lt;/span> &lt;span class="s2">&amp;#34;service&amp;#34;&lt;/span> {
&lt;span class="n"> count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>
&lt;span class="k">update&lt;/span> {
&lt;span class="n"> max_parallel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>
&lt;span class="n"> health_check&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;checks&amp;#34;&lt;/span>
&lt;span class="n"> min_healthy_time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;20s&amp;#34;&lt;/span>
&lt;span class="n"> healthy_deadline&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;10m&amp;#34;&lt;/span>
&lt;span class="n"> progress_deadline&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;20m&amp;#34;&lt;/span>
&lt;span class="n"> canary&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>
&lt;span class="n"> stagger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;15s&amp;#34;&lt;/span>
}
&lt;span class="k">task&lt;/span> &lt;span class="s2">&amp;#34;service&amp;#34;&lt;/span> {
&lt;span class="n"> driver&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;docker&amp;#34;&lt;/span>
&lt;span class="k">config&lt;/span> {
&lt;span class="n"> image&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;openjdk:11-jdk&amp;#34;&lt;/span>
&lt;span class="n"> args&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;bash&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;-c&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n"> &amp;#34;(cd /app &amp;amp;&amp;amp; java -jar /app/service/build/libs/service-1.0.jar --port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">8080&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="k">port_map&lt;/span> {
&lt;span class="n"> http&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;8080&amp;#34;&lt;/span>
}
&lt;span class="n"> network_mode&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;nomad&amp;#34;&lt;/span>
&lt;span class="n"> extra_hosts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;traefik:172.30.0.3&amp;#34;&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="n"> volumes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;/home/picodotdev/Software/personal/blog-ejemplos/SpringCloudConsulNomadTraefik/:/app&amp;#34;&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="k">labels&lt;/span> {
&lt;span class="n"> traefik.http.middlewares.service1-stripprefix.stripprefix.prefixes&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/service&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n"> traefik.http.middlewares.service1-retry.retry.attempts&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;10&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n"> traefik.http.routers.service1.middlewares&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;service1-stripprefix,service1-retry&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n"> traefik.http.routers.service1.rule&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;PathPrefix(`/service`)&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n"> traefik.http.services.service1.loadbalancer.server.port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;8080&amp;#34;&lt;/span>
}
}
&lt;span class="k">service&lt;/span> {
&lt;span class="n"> name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;service&amp;#34;&lt;/span>
&lt;span class="n"> port&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;http&amp;#34;&lt;/span>
&lt;span class="k">check&lt;/span> {
&lt;span class="n"> type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;http&amp;#34;&lt;/span>
&lt;span class="n"> port&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;http&amp;#34;&lt;/span>
&lt;span class="n"> path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;/actuator/health&amp;#34;&lt;/span>
&lt;span class="n"> interval&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;5s&amp;#34;&lt;/span>
&lt;span class="n"> timeout&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;2s&amp;#34;&lt;/span>
}
}
&lt;span class="k">resources&lt;/span> {
&lt;span class="n"> cpu&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">200&lt;/span>
&lt;span class="n"> memory&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1024&lt;/span>
&lt;span class="k">network&lt;/span> {
&lt;span class="n"> mbits&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">20&lt;/span>
&lt;span class="k">port&lt;/span> &lt;span class="s2">&amp;#34;http&amp;#34;&lt;/span> {}
}
}
}
}
}&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/code/service.nomad" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/code/service.nomad" target="_blank">service.nomad&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Tanto Consul, Nomad como Traefik ofrecen una consola para ver su estado ubicadas en las siguientes direcciones respectivamente accesibles con el navegador &lt;em>http://127.0.0.1:8500&lt;/em>, &lt;em>http://127.0.0.1:4646&lt;/em>, &lt;em>http://127.0.0.1:8092&lt;/em>.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/consul_hudc42d06e92419bb68cedcf920ffbb9e1_66952_2560x1440_fit_box_2.png" title="Consul" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/consul_hudc42d06e92419bb68cedcf920ffbb9e1_66952_200x150_fit_box_2.png" width="200"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/nomad-1_hu236530498253a3dba6bcdeea43b58303_63779_2560x1440_fit_box_2.png" title="Nomad" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/nomad-1_hu236530498253a3dba6bcdeea43b58303_63779_200x150_fit_box_2.png" width="200"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/nomad-2_huf614ca5d87e91f36d0a6f0dc0f7e1da1_112167_2560x1440_fit_box_2.png" title="Nomad" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/nomad-2_huf614ca5d87e91f36d0a6f0dc0f7e1da1_112167_200x150_fit_box_2.png" width="200"/>&lt;/a>
&lt;/figure>
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/traefik-1_hu752c6a0b248029866df45cca04eee0f1_104793_2560x1440_fit_box_2.png" title="Traefik" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/traefik-1_hu752c6a0b248029866df45cca04eee0f1_104793_200x150_fit_box_2.png" width="200"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/traefik-2_hu3d23c9c51ffc17299ed33c1319107a0c_130051_2560x1440_fit_box_2.png" title="Traefik" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/traefik-2_hu3d23c9c51ffc17299ed33c1319107a0c_130051_200x150_fit_box_2.png" width="200"/>&lt;/a>
&lt;figcaption>Consolas de administración de Consul, Nomad y Traefik&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>El código del servicio, del cliente implementados con Spring y la salida del cliente son los siguientes.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springcloud.service&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@RestController&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">DefaultController&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">DefaultConfiguration&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Tracing&lt;/span> &lt;span class="n">tracing&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Tracer&lt;/span> &lt;span class="n">tracer&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Random&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Counter&lt;/span> &lt;span class="n">counter&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">DefaultController&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">MeterRegistry&lt;/span> &lt;span class="n">registry&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">random&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Random&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">counter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Counter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;service.invocations&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">description&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Total service invocations&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">register&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">registry&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">home&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">counter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">increment&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="c1">// Timeout simulation
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">//Thread.sleep(random.nextInt(4000));
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="n">TraceContext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Extractor&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">extractor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tracing&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">propagation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">extractor&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">carrier&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">carrier&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getHeader&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span> &lt;span class="o">}&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Span&lt;/span> &lt;span class="n">span&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tracer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">nextSpan&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">extractor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">extract&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Service Span (traceId: %s, spanId: %s)%n&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">span&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">context&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">traceIdString&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">span&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">context&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">spanIdString&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Hello world (url: %s, remoteAddress_%s, localAddress: %s, traceId: %s, spanId: %s, key: %s)&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getRequestURL&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getRemoteAddr&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getLocalAddr&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">span&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">context&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">traceIdString&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">span&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">context&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">spanIdString&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getKey&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/code/DefaultController.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/code/DefaultController.java" target="_blank">DefaultController.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springcloud.client&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@Component&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">ProxyService&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">LoadBalancerClient&lt;/span> &lt;span class="n">loadBalancer&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Tracing&lt;/span> &lt;span class="n">tracing&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Tracer&lt;/span> &lt;span class="n">tracer&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">CircuitBreakerConfig&lt;/span> &lt;span class="n">circuitBreakerConfiguration&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">TimeLimiterConfig&lt;/span> &lt;span class="n">timeLimiterConfiguration&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">HttpClient&lt;/span> &lt;span class="n">client&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">ProxyService&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">circuitBreakerConfiguration&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">CircuitBreakerConfig&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">custom&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">failureRateThreshold&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">50&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">recordExceptions&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">IOException&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">TimeoutException&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">timeLimiterConfiguration&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TimeLimiterConfig&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">custom&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">timeoutDuration&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Duration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">ofMillis&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">2500&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">cancelRunningFuture&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">HttpClient&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newBuilder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">version&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpClient&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Version&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">HTTP_2&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">ServiceInstance&lt;/span> &lt;span class="n">instance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">loadBalancer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">choose&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;traefik&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">URI&lt;/span> &lt;span class="n">uri&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">instance&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getUri&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">resource&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;%s%s&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">uri&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toString&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">replace&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;127.0.0.1&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;traefik&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;/service&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">HttpRequest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Builder&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">HttpRequest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newBuilder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">URI&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">resource&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">GET&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">Exception&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">getFallback&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">final&lt;/span> &lt;span class="n">HttpRequest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Builder&lt;/span> &lt;span class="n">request&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Span&lt;/span> &lt;span class="n">span&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tracer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newTrace&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">start&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">TraceContext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Injector&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">HttpRequest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Builder&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">injector&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tracing&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">propagation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">injector&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpRequest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Builder&lt;/span> &lt;span class="n">carrier&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="n">carrier&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">header&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span> &lt;span class="o">}&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">injector&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">inject&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">span&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">context&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Client Span (traceId: %s, spanId: %s)%n&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">span&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">context&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">traceIdString&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">span&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">context&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">spanIdString&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">CircuitBreaker&lt;/span> &lt;span class="n">circuitBreaker&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">CircuitBreaker&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;resilience4jCircuitBreakerProxyService&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">circuitBreakerConfiguration&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">TimeLimiter&lt;/span> &lt;span class="n">timeLimiter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TimeLimiter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">timeLimiterConfiguration&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Supplier&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CompletableFuture&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">get&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">CompletableFuture&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">supplyAsync&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">HttpResponse&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">send&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">HttpResponse&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">BodyHandlers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">ofString&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">body&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">Exception&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">getFallback&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Callable&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">getLimiter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TimeLimiter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">decorateFutureSupplier&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">timeLimiter&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">get&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Callable&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">getCircuitBreaker&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">CircuitBreaker&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">decorateCallable&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">circuitBreaker&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">getLimiter&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">Try&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">getCircuitBreaker&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="n">call&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">recover&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">throwable&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">getFallback&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getFallback&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;Fallback&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/code/ProxyService.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/code/ProxyService.java" target="_blank">ProxyService.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Como hay 2 instancias del servicio y Traefik realiza balanceo de carga utilizando el algoritmo &lt;em>round robbin&lt;/em> se observa en la salida con las respuestas que la dirección IP que ha atendido la petición es alternativamente una de las dos instancias del servicio.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">...
Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.4, traceId: 63afa4d0cd4f466c, spanId: 4719dfcc16b6104e, key: value)
Client Span (traceId: 57eeaa436aa09238, spanId: 57eeaa436aa09238)
Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.5, traceId: 57eeaa436aa09238, spanId: 26dc213be2d933ac, key: value)
Client Span (traceId: 23c748bf222052a6, spanId: 23c748bf222052a6)
Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.4, traceId: 23c748bf222052a6, spanId: 0404d949c6e04c18, key: value)
Client Span (traceId: c45d66a4ec9cf14c, spanId: c45d66a4ec9cf14c)
Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.5, traceId: c45d66a4ec9cf14c, spanId: e7f6ccf2efb8234b, key: value)
Client Span (traceId: 2fdb3b71a682d2e6, spanId: 2fdb3b71a682d2e6)
Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.4, traceId: 2fdb3b71a682d2e6, spanId: 24ac2a8d2bfb1e6e, key: value)
Client Span (traceId: a33b010e02709c6a, spanId: a33b010e02709c6a)
Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.5, traceId: a33b010e02709c6a, spanId: 0abe6074fc277af6, key: value)
...&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/code/System.out" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/code/System.out" target="_blank">System.out&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>En un momento posterior si surge la necesidad de querer desplegar una nueva versión del microservicio basta con generar de nuevo el artefacto del microservicio, cambiando la versión en el archivo &lt;em>build.gradle&lt;/em>. El despliegue de la nueva versión se realizan mediante la estrategia &lt;em>canary&lt;/em>, manteniendo las instancias con la versión anterior del servicio y añadiendo una nueva con la nueva versión. Si se descubre algún error en la instancia &lt;em>canary&lt;/em> se puede revertir el estado a la versión anterior, que consiste en detener la instancia &lt;em>canary&lt;/em>. Una vez se comprueba que la instancia con la nueva versión funciona correctamente analizando sus trazas y métricas se envía la order a Nomad de promocionar las instancias de forma progresiva con la versión antigua a la nueva versión.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ nomad job run nomad/service.nomad
$ nomad job promote service
$ nomad job revert service &lt;span class="m">0&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/code/nomad-job-promote.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/code/nomad-job-promote.sh" target="_blank">nomad-job-promote.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>El servicio exporta métricas en formato para Prometheus que con Grafana. Según se realizan peticiones al servicio el valor de métrica de contador de llamadas al servicio aumenta de forma progresiva.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ curl http://127.0.0.1:8093/service/actuator/prometheus &lt;span class="p">|&lt;/span> grep &lt;span class="s2">&amp;#34;service.invocations&amp;#34;&lt;/span>
&lt;span class="c1"># HELP service_invocations_total Total service invocations&lt;/span>
&lt;span class="c1"># TYPE service_invocations_total counter&lt;/span>
service_invocations_total 20.0
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/code/service-prometheus.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/code/service-prometheus.sh" target="_blank">service-prometheus.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloudConsulNomadTraefik">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./run.sh&lt;/code>.
&lt;/p></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/><category term="software"/><category term="software-libre"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2019/09/novedades-de-java-13/</id><title>Novedades de Java 13</title><updated>2019-10-22T19:00:00+02:00</updated><published>2019-09-27T16:30:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2019/09/novedades-de-java-13/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;p>Continuando las mejoras incrementales cada seis meses el 17 de septiembre se publico Java 13. Java 13 incorpora algunas nuevas características interesantes que mejoran un facilitan la lectura del código, entre las más destacadas están los bloques de texto y las expresiones &lt;em>switch&lt;/em> mejoradas.&lt;/p>
&lt;ul>
&lt;li>JEP 350: &lt;a href="https://openjdk.java.net/jeps/350">Dynamic CDS Archives&lt;/a>&lt;/li>
&lt;li>JEP 351: &lt;a href="https://openjdk.java.net/jeps/351">ZGC: Uncommit Unused Memory&lt;/a>&lt;/li>
&lt;li>JEP 353: &lt;a href="https://openjdk.java.net/jeps/353">Reimplement the Legacy Socket API&lt;/a>&lt;/li>
&lt;li>JEP 354: &lt;a href="https://openjdk.java.net/jeps/354">Switch Expressions (Preview)&lt;/a>&lt;/li>
&lt;li>JEP 355: &lt;a href="https://openjdk.java.net/jeps/355">Text Blocks (Preview)&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Casi coincidiendo con la publicación de Java 13 se publicado [Jakarta EE][jakarta] 8 que únicamente tiene como novedad que su propiedad ha pasado a estar baja la fundación Eclipse, es totalmente compatible con &lt;a href="https://picodotdev.github.io/blog-bitix/2018/11/novedades-de-java-ee-8/">Java EE 8 y sus últimas mejoras&lt;/a>, las novedades vendrán en versiones posteriores de Jakarta EE en las que se dará importancia a la tendencia de las aplicaciones para su funcionamiento en entornos orientados a la nube. Casi al mismo tiempo se ha publicado &lt;a href="https://openjfx.io/">JavaFX&lt;/a> 13 ya fuera del JDK en onde puede seguir su propio ciclo de publicaciones independiente del JDK.&lt;/p>
&lt;h3 id="bloques-de-texto">Bloques de texto&lt;/h3>
&lt;p>Para definir una cadena de caracteres que tuviese varias lineas en Java había que emplear concatenación de cadenas, si esa cadena contiene el caracter comilla doble &lt;em>&amp;ldquo;&lt;/em> de inicio de cadena había que escaparlo, si esa cadena contenía saltos de línea había que emplear el caracter de escape de salto de línea &lt;em>\n&lt;/em>. El resultado es una cadena con problemas de legibilidad por los caracteres de escape que incluye en el código fuente del lenguaje. Esto podría se al definir una cadena de texto que tuviese elementos HTML, JSON, sentencias SQL o expresiones regulares.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">String&lt;/span> &lt;span class="n">html&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;&amp;lt;html&amp;gt;\n&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="s">&amp;#34; &amp;lt;body&amp;gt;\n&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="s">&amp;#34; &amp;lt;p class=\&amp;#34;text\&amp;#34;&amp;gt;Hello, Escapes&amp;lt;/p&amp;gt;\n&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="s">&amp;#34; &amp;lt;/body&amp;gt;\n&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span>
&lt;span class="s">&amp;#34;&amp;lt;/html&amp;gt;\n&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/09/novedades-de-java-13/code/TextBlock-1.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/09/novedades-de-java-13/code/TextBlock-1.java" target="_blank">TextBlock-1.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Con los bloques de texto se emplean una triple comilla doble &lt;em>&amp;ldquo;&lt;/em> para la apertura y cierre de la cadena.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">String&lt;/span> &lt;span class="n">html&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="s">&amp;#34;
&lt;/span>&lt;span class="s"> &amp;lt;html&amp;gt;
&lt;/span>&lt;span class="s"> &amp;lt;body&amp;gt;
&lt;/span>&lt;span class="s"> &amp;lt;p class=&amp;#34;&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="s">&amp;#34;&amp;gt;Hello, Text Blocks&amp;lt;/p&amp;gt;
&lt;/span>&lt;span class="s"> &amp;lt;/body&amp;gt;
&lt;/span>&lt;span class="s"> &amp;lt;/html&amp;gt;&amp;#34;&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/09/novedades-de-java-13/code/TextBlock-2.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/09/novedades-de-java-13/code/TextBlock-2.java" target="_blank">TextBlock-2.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Como ayuda a las cadenas de texto en la clase &lt;a href="https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/String.html">String&lt;/a> se han añadido varios métodos para eliminar la indentación (&lt;em>String::stripIndent&lt;/em>), traducir los caracteres secuencia de escape (&lt;em>String::translateEscapes&lt;/em>) y formatear una cadena usando un método de instancia (&lt;em>String::formatted&lt;/em>).&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blogs.oracle.com/javamagazine/text-blocks-come-to-java">Text Blocks Come to Java&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="expresiones-switch-mejoradas">Expresiones switch mejoradas&lt;/h3>
&lt;p>En las &lt;a href="https://picodotdev.github.io/blog-bitix/2019/03/novedades-de-java-12/">novedades de Java 12&lt;/a> se añadió la posibilidad de los &lt;em>switch&lt;/em> fueran expresiones que retornan un valor en vez de sentencias y se evita el uso de la palabra reservada &lt;em>break&lt;/em>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">String&lt;/span> &lt;span class="n">numericString&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">switch&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">integer&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="s">&amp;#34;zero&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">3&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">5&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">7&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">9&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="s">&amp;#34;odd&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="n">2&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">4&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">6&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">8&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">10&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="s">&amp;#34;even&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">default&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="s">&amp;#34;N/A&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>&lt;span class="o">;&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/09/novedades-de-java-13/code/Switch-1.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/09/novedades-de-java-13/code/Switch-1.java" target="_blank">Switch-1.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>En Java 13 en vez únicamente el valor a retornar se permite crear bloques de sentencias para cada rama &lt;em>case&lt;/em> y retornar el valor con la palabra reservada &lt;em>yield&lt;/em>. En los bloques de sentencias puede haber algún cálculo más complejo que directamente retornar el valor deseado.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">String&lt;/span> &lt;span class="n">numericString&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">switch&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">integer&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">calculateZero&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">yield&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="o">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">3&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">5&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">7&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">9&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">calculateOdd&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">yield&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="n">2&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">4&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">6&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">8&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">10&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">calculateEven&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">yield&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">default&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">calculateDefault&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">yield&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>&lt;span class="o">;&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/09/novedades-de-java-13/code/Switch-2.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/09/novedades-de-java-13/code/Switch-2.java" target="_blank">Switch-2.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;a href="https://blogs.oracle.com/javamagazine/inside-java-13s-switch-expressions-and-reimplemented-socket-api">Inside Java 13’s switch Expressions and Reimplemented Socket API&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="otras-características">Otras características&lt;/h3>
&lt;p>Las las otras tres características destacadas &lt;em>Dynamic CDS Archives&lt;/em>, &lt;em>ZGC: Uncommit Unused Memory&lt;/em> para la mejora del recolector de basura y &lt;em>Reimplement the Legacy Socket API&lt;/em> reescribiendo el código para los &lt;em>sockets&lt;/em> en lenguaje Java son cambios internos que afectan a la plataforma Java pero no al lenguaje.&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://www.mkyong.com/java/what-is-new-in-java-13/">What is new in Java 13&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.codefx.org/java/java-13-guide/">Definitive Guide To Java 13&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://jaxenter.com/java-13-jdk-deep-dive-new-features-162272.html">Java 13 – a deep dive into the JDK’s new features&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://jaxenter.com/java-13-text-blocks-162278.html">Java 13 – why text blocks are worth the wait&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://jaxenter.com/jakarta-ee-8-future-enterprise-java-161984.html">Jakarta EE 8 is sprinting towards an exciting future for enterprise Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dzone.com/articles/the-differences-between-java-ee-jakarta-ee-and-mic"> The Differences Between Java EE, Jakarta EE, and MicroProfile&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://jakarta.ee/documents/insights/cloud_native_java_ebook.pdf">Cloud Native Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://jaxenter.com/openjfx-13-interview-dirk-lemmermann-161967.html">OpenJFX 13 – &amp;ldquo;JavaFX gets its own identity&amp;rdquo;&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2019/09/libreria-editor-de-markdown-javascript-y-procesador-de-markdown-para-generar-html-con-java/</id><title>Librería editor de markdown JavaScript y procesador de markdown para generar HTML con Java</title><updated>2019-09-20T15:00:00+02:00</updated><published>2019-09-20T13:30:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2019/09/libreria-editor-de-markdown-javascript-y-procesador-de-markdown-para-generar-html-con-java/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/javascript.svg" class="right " width="200" alt="JavaScript" title="JavaScript"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;p>Algunas aplicaciones permiten escribir contenido para posteriormente mostrarse en una página web. Permitir introducir directamente en texto en formato HTML es peligroso ya que puede causar problemas si no es correcto y ha de validarse para no permitir introducir archivos CSS, archivos JavaScript u otras etiquetas que supongan un problema de seguridad o desmaqueten la página web. Una alternativa es utilizar como entrada texto en formato &lt;em>markdown&lt;/em> y posteriormente transformarlo a contenido en formato HTML.&lt;/p>
&lt;p>&lt;em>Markdown&lt;/em> es un formato de texto simple con una sintaxis que permite introducir títulos, negritas, itálica, listas y listas numeradas, enlaces o imágenes. El texto en formato &lt;em>markdown&lt;/em> se puede transformar posteriormente a formato HTML. Hay múltiples librerías de JavaScript para crear un editor &lt;em>markdown&lt;/em> con algunos botones para introducir las opciones básicas e incluso previsualizar el contenido.&lt;/p>
&lt;p>Como editor JavaScript para &lt;em>markdown&lt;/em> de las varias opciones que he encontrado la que más me ha gustado es &lt;a href="https://pandao.github.io/editor.md/en.html">Editor.md&lt;/a> por sus numerosas opciones, documentación y ejemplos, aunque no tiene una versión reciente. Posee barra de herramientas para realizar opciones básicas de edición, previsualizador de contenido HTML, colapsador de secciones, manejadores de eventos, subir imágenes, internacionalización, personalizar la barra de herramientas como está descrito en su &lt;a href="https://pandao.github.io/editor.md/examples/index.html">sección de ejemplos&lt;/a>. En la &lt;a href="https://github.com/pandao/editor.md">página de Editor.md en GitHub&lt;/a> están documentadas las opciones de configuración.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-HTML" data-lang="HTML">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">link&lt;/span> &lt;span class="na">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;stylesheet&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;resources/css/editormd.css&amp;#34;&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text/javascript&amp;#34;&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/jquery/1.11.3/jquery.min.js&amp;#34;&lt;/span>&lt;span class="p">&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text/javascript&amp;#34;&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;resources/js/editormd.min.js&amp;#34;&lt;/span>&lt;span class="p">&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text/javascript&amp;#34;&lt;/span>&lt;span class="p">&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="nx">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">editor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">editormd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;test-editor&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// width : &amp;#34;100%&amp;#34;,
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// height : &amp;#34;100%&amp;#34;,
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">path&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;resources/lib/&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;test-editor&amp;#34;&lt;/span>&lt;span class="p">&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">textarea&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;display:none;&amp;#34;&lt;/span>&lt;span class="p">&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>### Editor.md
**Editor.md**: The open source embeddable online markdown editor, based on CodeMirror &lt;span class="err">&amp;amp;&lt;/span> jQuery &lt;span class="err">&amp;amp;&lt;/span> Marked.
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="nt">textarea&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="" target="_blank">index-1.html&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/09/libreria-editor-de-markdown-javascript-y-procesador-de-markdown-para-generar-html-con-java/images/editor-md_hu8590a6b882a54d9f2c5070316e74f92a_151427_2560x1440_fit_box_2.png" title="Editor JavaScript de markdown" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/09/libreria-editor-de-markdown-javascript-y-procesador-de-markdown-para-generar-html-con-java/images/editor-md_hu8590a6b882a54d9f2c5070316e74f92a_151427_650x450_fit_box_2.png" width="650"/>&lt;/a>
&lt;figcaption>Editor JavaScript de markdown&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Una vez que se obtiene el texto en formato &lt;em>markdown&lt;/em> en algún momento al visualizarlo como parte del código fuente en una página web hay que transformarlo a formato HTML, para esto en Java hay varias librerías algunas ya obsoletas, antiguas y sin mantenimiento. De las que su desarrollo sigue activa una es &lt;a href="https://github.com/vsch/flexmark-java">Flexmark Java&lt;/a>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">com.vladsch.flexmark.samples&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">com.vladsch.flexmark.util.ast.Node&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">com.vladsch.flexmark.html.HtmlRenderer&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">com.vladsch.flexmark.parser.Parser&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">com.vladsch.flexmark.util.data.MutableDataSet&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">BasicSample&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">MutableDataSet&lt;/span> &lt;span class="n">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">MutableDataSet&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="c1">// uncomment to set optional extensions
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">//options.set(Parser.EXTENSIONS, Arrays.asList(TablesExtension.create(), StrikethroughExtension.create()));
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="c1">// uncomment to convert soft-breaks to hard breaks
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">//options.set(HtmlRenderer.SOFT_BREAK, &amp;#34;&amp;lt;br /&amp;gt;\n&amp;#34;);
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="n">Parser&lt;/span> &lt;span class="n">parser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Parser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">options&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">HtmlRenderer&lt;/span> &lt;span class="n">renderer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">HtmlRenderer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">options&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="c1">// You can re-use parser and renderer instances
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">Node&lt;/span> &lt;span class="n">document&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">parser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">parse&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;This is *Sparta*&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">html&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">renderer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">render&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">document&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span> &lt;span class="c1">// &amp;#34;&amp;lt;p&amp;gt;This is &amp;lt;em&amp;gt;Sparta&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;\n&amp;#34;
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">html&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/09/libreria-editor-de-markdown-javascript-y-procesador-de-markdown-para-generar-html-con-java/code/Main.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/09/libreria-editor-de-markdown-javascript-y-procesador-de-markdown-para-generar-html-con-java/code/Main.java" target="_blank">Main.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Groovy" data-lang="Groovy">&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">implementation&lt;/span> &lt;span class="s2">&amp;#34;com.vladsch.flexmark:flexmark-all:0.50.40&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/09/libreria-editor-de-markdown-javascript-y-procesador-de-markdown-para-generar-html-con-java/code/build.gradle" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/09/libreria-editor-de-markdown-javascript-y-procesador-de-markdown-para-generar-html-con-java/code/build.gradle" target="_blank">build.gradle&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://www.markdownguide.org/getting-started">Markdown Guide&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.markdownguide.org/basic-syntax">Markdown Basic Syntax&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="java"/><category term="javascript"/><category term="planeta-codigo"/><category term="programacion"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2019/08/ejemplo-sencillo-de-como-crear-un-documento-pdf-con-java-y-pdfbox/</id><title>Ejemplo sencillo de como crear un documento PDF con Java y PDFBox</title><updated>2019-08-31T00:15:00+02:00</updated><published>2019-08-30T18:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2019/08/ejemplo-sencillo-de-como-crear-un-documento-pdf-con-java-y-pdfbox/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>&lt;strong>Leer un CSV, escribir un CSV, archivos excel, generar gráficas para visualizar datos junto con generar documentos PDF son tareas comunes de las aplicaciones como forma de exportar los datos de la base de datos de una aplicación. Generar un archivo PDF con PDFBox requiere unas pocas lineas de código para documentos con cierta complejidad quizá sea más adecuado usar la librería JasperReports.&lt;/strong>&lt;/p>
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;p>Generar documentos e informes de salida en una una tarea básica de cualquier aplicación y una forma de exportar los datos a otros formatos. Con &lt;a href="https://poi.apache.org/">Apache POI&lt;/a> se pueden generar hojas de cálculo excel para su procesamiento con &lt;a href="https://www.libreoffice.org/">LibreOffice&lt;/a> o &lt;a href="https://products.office.com/es-es/">Microsoft Office Excel&lt;/a>. En ocasiones también es necesario &lt;a href="https://picodotdev.github.io/blog-bitix/2017/10/visualizar-datos-y-generar-graficas-en-java-con-jfreechart/">generar gráficas para visualizar un conjunto grande de datos&lt;/a> para ser más fáciles de interpretar, descubrir tendencias, comparar, sacar conclusiones en base a las cuales tomar alguna acción. Los archivos PDF también son muy utilizados para imprimirlos en formato en papel o enviarlos adjuntos en correos electrónicos.&lt;/p>
&lt;p>Uno de estos casos podría ser la generación de una factura en base a una plantilla e incluir el el importe y consumo realizado por un cliente y que este pueda obtenerla en formato electrónico o le sea enviada por correo electrónico como un documento adjunto o &lt;a href="https://elblogdepicodev.blogspot.com.es/2011/02/enviar-correos-mediante-java-mail.html">enviar un correo electrónico&lt;/a> para indicar que tiene la factura disponible en su área de cliente lista para su descarga. Este es el caso de muchas empresas que ofrecen servicios como compañías eléctricas, de telecomunicaciones, servicios municipales de agua y basura, bancos para su justificantes y comprobantes, comercios, etc&amp;hellip;&lt;/p>
&lt;p>Para generar documentos en PDF en Java está disponible la librería &lt;a href="https://pdfbox.apache.org/">Apache PDFBox&lt;/a>. Un ejemplo sencillo de como generar un archivo PDF con algunos estilos de texto, fuentes, un tamaño específico de página y una imagen es el siguiente.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.javapdf&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.apache.pdfbox.pdmodel.PDDocument&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.apache.pdfbox.pdmodel.PDPage&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.apache.pdfbox.pdmodel.PDPageContentStream&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.apache.pdfbox.pdmodel.common.PDRectangle&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.apache.pdfbox.pdmodel.font.PDType1Font&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">PDDocument&lt;/span> &lt;span class="n">document&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">PDDocument&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">PDPage&lt;/span> &lt;span class="n">page&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">PDPage&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">PDRectangle&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">A6&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">document&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addPage&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">page&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">PDPageContentStream&lt;/span> &lt;span class="n">contentStream&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">PDPageContentStream&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">document&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">page&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="c1">// Text
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">contentStream&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">beginText&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">contentStream&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setFont&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">PDType1Font&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TIMES_BOLD&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">32&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">contentStream&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newLineAtOffset&lt;/span>&lt;span class="o">(&lt;/span> &lt;span class="n">20&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">page&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getMediaBox&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getHeight&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">52&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">contentStream&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">showText&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Hello World!&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">contentStream&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">endText&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="c1">// Image
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">PDImageXObject&lt;/span> &lt;span class="n">image&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">PDImageXObject&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">createFromByteArray&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">document&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getResourceAsStream&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/java.png&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">readAllBytes&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;Java Logo&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">contentStream&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">drawImage&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">image&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">20&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">20&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">image&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getWidth&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">3&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">image&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getHeight&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">3&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">contentStream&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">close&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">document&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">save&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;document.pdf&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/ejemplo-sencillo-de-como-crear-un-documento-pdf-con-java-y-pdfbox/code/Main.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/ejemplo-sencillo-de-como-crear-un-documento-pdf-con-java-y-pdfbox/code/Main.java" target="_blank">Main.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Groovy" data-lang="Groovy">&lt;span class="n">plugins&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;java&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;application&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">application&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">mainClassName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;io.github.picodotdev.blogbitix.javapdf.Main&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">repositories&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">jcenter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">compile&lt;/span> &lt;span class="s1">&amp;#39;org.apache.pdfbox:pdfbox:2.0.16&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/ejemplo-sencillo-de-como-crear-un-documento-pdf-con-java-y-pdfbox/code/build.gradle" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/ejemplo-sencillo-de-como-crear-un-documento-pdf-con-java-y-pdfbox/code/build.gradle" target="_blank">build.gradle&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>El resultado es el siguiente
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/ejemplo-sencillo-de-como-crear-un-documento-pdf-con-java-y-pdfbox/resources/document.pdf" title="">Documento PDF&lt;/a>.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/ejemplo-sencillo-de-como-crear-un-documento-pdf-con-java-y-pdfbox/images/document_hu045f61ea51f8069add370066a9a061bc_45351_2560x1440_fit_box_2.png" title="Documento generado con PDFBox" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/ejemplo-sencillo-de-como-crear-un-documento-pdf-con-java-y-pdfbox/images/document_hu045f61ea51f8069add370066a9a061bc_45351_600x450_fit_box_2.png" width="391"/>&lt;/a>
&lt;figcaption>Documento generado con PDFBox&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Una alternativa a PDFBox es &lt;a href="https://itextpdf.com/es">iText&lt;/a>, la primera tiene una &lt;a href="https://www.apache.org/licenses/LICENSE-2.0">licencia Apache&lt;/a> e iText una &lt;a href="https://www.gnu.org/licenses/agpl-3.0.en.html">licencia AGPL&lt;/a> o comercial lo que puede ser determinante para un proyecto. La licencia AGPL obliga a que una aplicación web haga público su código fuente lo que probablemente en usos comerciales no sea lo deseado y usar la versión de la licencia comercial obliga a adquirir el derecho de uso al que obliga la licencia que posee un coste tal vez indeseado o que directamente hace que quede descartada.&lt;/p>
&lt;p>PDFBox no posee una forma de escribir párrafos y tener saltos de línea automáticos según el ancho de la página, en el ejemplo el texto se posiciona de forma absoluta en la página estando la coordenada (0,0) en la parte inferior izquierda. Para añadir esta funcionalidad a PDFBox hay que usar el complemento &lt;a href="https://github.com/ralfstuckert/pdfbox-layout">pdfbox-layout&lt;/a>.&lt;/p>
&lt;p>Pero en vez de crear un documento PDF desde cero desde Java si se trata de una factura es más sencillo partir de un documento PDF a modo de plantilla con el diseño deseado en el que solo haya que incluir la información que varía en la ubicación del documento apropiada. Este sería en caso de una factura o justificante. Y si el documento es un informe con muchos datos o el diseño se desea cambia independientemente de la información que incluye o es complejo en vez de insertar cada campo de texto e imágenes individualmente con código está la opción de utilizar el generador de documentos &lt;a href="https://community.jaspersoft.com/project/jasperreports-library">JasperReports&lt;/a>.&lt;/p>
&lt;p>En el siguiente &lt;a href="https://www.tutorialspoint.com/pdfbox/index.htm">tutorial de PDFBox&lt;/a> se incluyen más ejemplos de tareas básicas al procesar documentos PDF con esta librería. Con PDFBox el documento PDF se genera completamente mediante código, si el PDF requiere cambios hay que modificar el código que para documentos sencillos es aceptable. Para documentos PDF complejos y para separar el estilo, la información que contiene y que el código no requiera modificaciones también se pueden &lt;a href="https://picodotdev.github.io/blog-bitix/2019/12/generar-documentos-informes-y-facturas-en-formato-pdf-con-jasperreports-y-java/">Generar documentos, informes y facturas en formato PDF con JasperReports&lt;/a>.&lt;/p>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaPdf">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./gradlew run&lt;/code>.
&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://dzone.com/articles/creating-pdf-documents-with-apache-pdfbox-2">Creating PDF Documents With Apache PDFBox 2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.tutorialspoint.com/pdfbox/pdfbox_inserting_image.htm">Inserting Image to a PDF Document&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://stackoverflow.com/a/27867740">Is iText Java library free of charge or have any fees to be paid?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hardmockcafe.blogspot.com/2016/04/pdf-text-layout-made-easy-with-pdfbox_17.html">PDF text layout made easy with PDFBox-Layout&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/</id><title>Utilizar credenciales de conexión a la base de datos generadas por Vault en una aplicación de Spring</title><updated>2019-08-23T09:00:00+02:00</updated><published>2019-08-23T09:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>&lt;strong>Spring Cloud Vault facilita la integración con Vault, una de sus usos es utilizarlo para obtener unas credenciales de conexión a la base de datos generadas bajo demanda y con un tiempo de vida limitado en vez de embeberlas en la configuración de la aplicación y con u tiempo de vida indefinido.&lt;/strong>&lt;/p>
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/spring.svg" class="right " width="200" alt="Spring" title="Spring"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/vault.svg" class="right " width="200" alt="Vault" title="Vault"/>
&lt;/div>
&lt;p>La herramienta &lt;a href="https://www.vaultproject.io/">Vault&lt;/a> de &lt;a href="https://www.hashicorp.com/">HashiCorp&lt;/a> permite almacenar secretos, otra de sus funcionalidad es ser capaz de generar credenciales de forma dinámica. Habitualmente una aplicación para conectarse a una base de datos incluye en su configuración las credenciales, usuario y contraseña, para autenticarse y crear las conexiones, estas credenciales tiene un tiempo de vida indefinido y comprometidas proporcionan acceso a la base de datos.&lt;/p>
&lt;p>Vault permite centralizar la seguridad, otorgar a cada aplicación los permisos para conectarse a una base de datos a través de la obtención de credenciales (usuario y contraseña), auditar su uso y limitar el tiempo de validez de las credenciales a unas horas en vez de forma indefinida.&lt;/p>
&lt;p>&lt;a href="https://cloud.spring.io/spring-cloud-vault/">Spring Cloud Vault&lt;/a> permite a una aplicación &lt;a href="https://spring.io/">Spring&lt;/a> simplificar la integración con Vault para obtener unas credenciales generadas dinámicamente.&lt;/p>
&lt;p>En el archivo de contrucción de la aplicación hay que incluir las dependencias de Spring para la integración con Vault.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Groovy" data-lang="Groovy">&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="n">implementation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-config&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">implementation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-vault-config&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">implementation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-vault-config-databases&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/build.gradle" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/build.gradle" target="_blank">build.gradle&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Obtener la credenciales de conexión a la base de datos es transparente para el código de la aplicación, lo único que se necesita es el usuario y contraseña además de la URL de conexión.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springcloudvault&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@SpringBootApplication&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">CommandLineRunner&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Value&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;${spring.datasource.username}&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Value&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;${spring.datasource.password}&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">password&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Username: %s%n&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Password: %s%n&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">password&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">Connection&lt;/span> &lt;span class="n">connection&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DriverManager&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getConnection&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;jdbc:postgresql://127.0.0.1:5432/app&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">password&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">connection&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Connected to the database!&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Failed to make connection!&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">SQLException&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">err&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;SQL State: %s\n%s&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getSQLState&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getMessage&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">Exception&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">e&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printStackTrace&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/Main.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/Main.java" target="_blank">Main.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">...
10:37:47.013 [main] INFO io.github.picodotdev.blogbitix.springcloudvault.Main - Started Main in 1.368 seconds (JVM running for 1.784)
Username: v-approle-app-gRlHQlNyPF8qJ3DCUz9U-1566549466
Passowrd: A1a-MPPFfvMD3OQUC00H
Connected to the database!
...&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/System.out" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/System.out" target="_blank">System.out&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>La parte más relevante está en la configuración necesaria de la aplicación. Hay que añadir como configuración la ubicación del servidor Vault, es necesario configurar un método de autenticación para Vault, para el caso de aplicaciones el recomendado es &lt;em>AppRole&lt;/em>. Con &lt;em>AppRole&lt;/em> cada aplicación necesita de un &lt;em>role-id&lt;/em> y un &lt;em>secret-id&lt;/em> que hay que generar previamente. Y el rol del que obtener las credenciales, &lt;em>app&lt;/em>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-YAML" data-lang="YAML">spring.application.name&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>app&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>spring.cloud.vault&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>uri&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>http&lt;span class="p">:&lt;/span>//&lt;span class="m">127.0&lt;/span>&lt;span class="m">.0&lt;/span>&lt;span class="m">.1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="m">8200&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>authentication&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>APPROLE&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>app-role&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>role-id&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>a248529d-882c-ef5f-f7e6-6a9d349afa57&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>secret-id&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>13b6c224-dc18&lt;span class="m">-0404&lt;/span>-7bc1-7c258c4c5a48&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>database&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>enabled&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>role&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>app&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>backend&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>database&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>username-property&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>spring.datasource.username&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>password-property&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>spring.datasource.password&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/bootstrap.yml" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/bootstrap.yml" target="_blank">bootstrap.yml&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Para probarlo hay que iniciar en este caso el servidor &lt;a href="https://www.consul.io/">Consul&lt;/a> ya que en el ejemplo se utiliza como el lugar donde se guardan los secretos. También hay que iniciar Vault.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ consul agent -dev
&lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span>&amp;gt; Starting Consul agent...
&lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span>&amp;gt; Consul agent running!
Version: &lt;span class="s1">&amp;#39;v1.5.0&amp;#39;&lt;/span>
Node ID: &lt;span class="s1">&amp;#39;2f523068-b196-e3bb-0b09-dc34e20989d2&amp;#39;&lt;/span>
Node name: &lt;span class="s1">&amp;#39;archlinux&amp;#39;&lt;/span>
Datacenter: &lt;span class="s1">&amp;#39;dc1&amp;#39;&lt;/span> &lt;span class="o">(&lt;/span>Segment: &lt;span class="s1">&amp;#39;&amp;lt;all&amp;gt;&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
Server: &lt;span class="nb">true&lt;/span> &lt;span class="o">(&lt;/span>Bootstrap: &lt;span class="nb">false&lt;/span>&lt;span class="o">)&lt;/span>
Client Addr: &lt;span class="o">[&lt;/span>127.0.0.1&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>HTTP: 8500, HTTPS: -1, gRPC: 8502, DNS: 8600&lt;span class="o">)&lt;/span>
Cluster Addr: 127.0.0.1 &lt;span class="o">(&lt;/span>LAN: 8301, WAN: 8302&lt;span class="o">)&lt;/span>
Encrypt: Gossip: false, TLS-Outgoing: false, TLS-Incoming: false&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/consul.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/consul.sh" target="_blank">consul.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ vault server -dev -config vault.hcl
&lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span>&amp;gt; Vault server configuration:
Api Address: http://127.0.0.1:8200
Cgo: disabled
Cluster Address: https://127.0.0.1:8201
Listener 1: tcp &lt;span class="o">(&lt;/span>addr: &lt;span class="s2">&amp;#34;127.0.0.1:8200&amp;#34;&lt;/span>, cluster address: &lt;span class="s2">&amp;#34;127.0.0.1:8201&amp;#34;&lt;/span>, max_request_duration: &lt;span class="s2">&amp;#34;1m30s&amp;#34;&lt;/span>, max_request_size: &lt;span class="s2">&amp;#34;33554432&amp;#34;&lt;/span>, tls: &lt;span class="s2">&amp;#34;disabled&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
Log Level: info
Mlock: supported: true, enabled: &lt;span class="nb">false&lt;/span>
Storage: consul &lt;span class="o">(&lt;/span>HA available&lt;span class="o">)&lt;/span>
Version: Vault v1.1.1
Version Sha: a3dcd63451cf6da1d04928b601bbe9748d53842e
WARNING! dev mode is enabled! In this mode, Vault runs entirely in-memory
and starts unsealed with a single unseal key. The root token is already
authenticated to the CLI, so you can immediately begin using Vault.
You may need to &lt;span class="nb">set&lt;/span> the following environment variable:
$ &lt;span class="nb">export&lt;/span> &lt;span class="nv">VAULT_ADDR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;http://127.0.0.1:8200&amp;#39;&lt;/span>
The unseal key and root token are displayed below in &lt;span class="k">case&lt;/span> you want to
seal/unseal the Vault or re-authenticate.
Unseal Key: &lt;span class="nv">jsBAedtA88Lm7uU1pCSYOBK1980Ervf9GSky4usmEdQ&lt;/span>&lt;span class="o">=&lt;/span>
Root Token: s.8wwm4fRuRRVFm1cbBUMgdNtE
Development mode should NOT be used in production installations!&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/vault.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/vault.sh" target="_blank">vault.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">ui = true
storage &amp;#34;consul&amp;#34; {
address = &amp;#34;127.0.0.1:8500&amp;#34;
path = &amp;#34;vault&amp;#34;
}&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/vault.hcl" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/vault.hcl" target="_blank">vault.hcl&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>La base de datos postgres se inicia como un contenedor de &lt;a href="https://www.docker.com/">Docker&lt;/a>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ docker run --rm -it -p &lt;span class="s2">&amp;#34;5432:5432&amp;#34;&lt;/span> -e &lt;span class="nv">POSTGRES_USER&lt;/span>&lt;span class="o">=&lt;/span>postgres -e &lt;span class="nv">POSTGRES_PASSWORD&lt;/span>&lt;span class="o">=&lt;/span>postgres postgres:alpine
docker ps
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
8fedf0ef1342 postgres:alpine &lt;span class="s2">&amp;#34;docker-entrypoint.s…&amp;#34;&lt;/span> &lt;span class="m">22&lt;/span> seconds ago Up &lt;span class="m">20&lt;/span> seconds 0.0.0.0:5432-&amp;gt;5432/tcp serene_leavitt
$ docker &lt;span class="nb">exec&lt;/span> -it 8fedf0ef1342 bash
bash-5.0# psql -U postgres
psql &lt;span class="o">(&lt;/span>11.4&lt;span class="o">)&lt;/span>
Type &lt;span class="s2">&amp;#34;help&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> help.
&lt;span class="nv">postgres&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="c1"># CREATE DATABASE app;&lt;/span>
CREATE DATABASE
&lt;span class="nv">postgres&lt;/span>&lt;span class="o">=&lt;/span>#&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/postgres.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/postgres.sh" target="_blank">postgres.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Para realizar la configuración de Vault primero hay que iniciar sesión, en el modo desarrollo del ejemplo utilizando el &lt;em>token root&lt;/em> que es generado y emitido en la salida al iniciarlo.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ &lt;span class="nb">export&lt;/span> &lt;span class="nv">VAULT_ADDR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;http://127.0.0.1:8200&amp;#39;&lt;/span>
$ vault login s.8wwm4fRuRRVFm1cbBUMgdNtE&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/vault-login.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/vault-login.sh" target="_blank">vault-login.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Como en el artículo &lt;a href="https://picodotdev.github.io/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/">Generar credenciales de conexión a base de datos bajo demanda con Vault&lt;/a> hay que activar el &lt;em>backend&lt;/em> de &lt;em>database&lt;/em> para generar credenciales de bases de datos, en las que básicamente se especifica la cadena de conexión a la base de datos de postgres con un usuario y contraseña con permisos suficientes para crear usuarios y la sentencia SQL que los crea. Se habilita y configura el &lt;em>backend database&lt;/em> del que obtener las credenciales.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ vault secrets &lt;span class="nb">enable&lt;/span> database
$ vault write database/config/app &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">plugin_name&lt;/span>&lt;span class="o">=&lt;/span>postgresql-database-plugin &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">allowed_roles&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;app&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">connection_url&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;postgresql://{{username}}:{{password}}@localhost:5432/?sslmode=disable&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">username&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;postgres&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">password&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;postgres&amp;#34;&lt;/span>
$ vault write database/roles/app &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">db_name&lt;/span>&lt;span class="o">=&lt;/span>app &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">creation_statements&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;CREATE ROLE \&amp;#34;{{name}}\&amp;#34; WITH LOGIN PASSWORD &amp;#39;{{password}}&amp;#39; VALID UNTIL &amp;#39;{{expiration}}&amp;#39;; GRANT SELECT ON ALL TABLES IN SCHEMA public TO \&amp;#34;{{name}}\&amp;#34;;&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">default_ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;1h&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">max_ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;24h&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/vault-database.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/vault-database.sh" target="_blank">vault-database.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Para que la aplicación de Spring Boot obtenga las credenciales ha de autenticarse en Vault en este caso utilizando el método recomendado para las aplicaciones que es utilizando en mecanismo de autenticación &lt;em>AppRole&lt;/em> que básicamente es un usuario y contraseña para las aplicaciones.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ vault auth &lt;span class="nb">enable&lt;/span> approle
$ vault write auth/approle/role/app &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">secret_id_ttl&lt;/span>&lt;span class="o">=&lt;/span>10m &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">token_num_uses&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">10&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">token_ttl&lt;/span>&lt;span class="o">=&lt;/span>20m &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">token_max_ttl&lt;/span>&lt;span class="o">=&lt;/span>30m &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">secret_id_num_uses&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">40&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">policies&lt;/span>&lt;span class="o">=&lt;/span>database-app
$ vault &lt;span class="nb">read&lt;/span> auth/approle/role/app/role-id
Key Value
--- -----
role_id a248529d-882c-ef5f-f7e6-6a9d349afa57
$ vault write -f auth/approle/role/app/secret-id
Key Value
--- -----
secret_id 13b6c224-dc18-0404-7bc1-7c258c4c5a48
secret_id_accessor fd9a0915-af6e-b0a8-4e6c-dbb6ee587903&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/vault-approle.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/vault-approle.sh" target="_blank">vault-approle.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>En Vault los permisos se otorgan con las &lt;em>policy&lt;/em>, los secretos se organiza en una estructura jerárquica de directorios y a cada una de los contextos se le otorga los permisos deseados. Spring obtiene las credenciales para la base de datos del contexto &lt;em>database/creds/app&lt;/em> por lo que al rol utilizando para obtener las credenciales hay que asocialer un &lt;em>policy&lt;/em> con permisos de lectura para este contexto.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ vault policy write database-app database-app.hcl&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/vault-policy.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/vault-policy.sh" target="_blank">vault-policy.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">path &amp;#34;secret/application&amp;#34; {
capabilities = [&amp;#34;read&amp;#34;]
}
path &amp;#34;secret/app&amp;#34; {
capabilities = [&amp;#34;read&amp;#34;]
}
path &amp;#34;database/creds/app&amp;#34; {
capabilities = [&amp;#34;read&amp;#34;]
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/database-app.hcl" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/database-app.hcl" target="_blank">database-app.hcl&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Obtenido un &lt;em>role-id&lt;/em> y un &lt;em>secret-id&lt;/em> so observa los &lt;em>policies&lt;/em> asociados además de otras propiedades.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ vault write auth/approle/login &lt;span class="nv">role_id&lt;/span>&lt;span class="o">=&lt;/span>a248529d-882c-ef5f-f7e6-6a9d349afa57 &lt;span class="nv">secret_id&lt;/span>&lt;span class="o">=&lt;/span>13b6c224-dc18-0404-7bc1-7c258c4c5a48
Key Value
--- -----
token s.yAKbv8Qz5tfXpc8n7C8oND01
token_accessor GPHO70D2NFRHFFdsiNiftmzO
token_duration 20m
token_renewable &lt;span class="nb">true&lt;/span>
token_policies &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;database-app&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;default&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
identity_policies &lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span>
policies &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;database-app&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;default&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
token_meta_role_name app&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/vault-role-id.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/code/vault-role-id.sh" target="_blank">vault-role-id.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>En este caso la aplicación de Spring incluye en su configuración las credenciales del &lt;em>AppRole&lt;/em>, también se puede proporcionar como variables de entorno y propiedades del sistema.&lt;/p>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloudVault">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a>.
&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://www.baeldung.com/spring-cloud-vault">An Intro to Spring Cloud Vault&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.spring.io/spring-cloud-vault/reference/html/#_approle_authentication">Spring Cloud Vault AppRole authentication&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.spring.io/spring-cloud-vault/reference/html/#vault.config.backends.database-backends">Spring Cloud Vault Database backends&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/</id><title>Generar credenciales de conexión a base de datos bajo demanda con Vault</title><updated>2019-08-15T09:00:00+02:00</updated><published>2019-08-15T09:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>&lt;strong>Una de las funcionalidades proporcionada por Vault es generar credenciales dinámicas para la conexión a bases de datos. Generar las credenciales de forma dinámica proporciona varios beneficios: no hay unas credenciales que usen las aplicaciones que tengan un tiempo de vida indefinido, las aplicaciones no necesitan guardar en su configuración las credenciales, las credenciales se rotan de forma automática y los permisos para obtenerlas se pueden revocar de forma centralizada con Vault para cuales quiera bases de datos que se utilicen. Soporta las bases de datos más populares entre ellas postgres.&lt;/strong>&lt;/p>
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/vault.svg" class="right " width="200" alt="Vault" title="Vault"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/postgresql.svg" class="right " width="200" alt="PostgreSQL" title="PostgreSQL"/>
&lt;/div>
&lt;p>Las base de datos para proteger los datos realizan autenticación del usuario que se conecta. Normalmente utilizando un usuario y contraseña, una vez autenticado el usuario mediante permisos se realiza la autorización de las operaciones que puede realizar, a que bases de datos se puede conectar, que tablas puede acceder y que operaciones puede realizar.&lt;/p>
&lt;p>Este modelo de autenticación tiene algunos inconvenientes. Uno de los inconvenientes es que los usuarios y contraseñas para mayor seguridad han de cambiarse con cierta frecuencia para evitar que si las credenciales quedan comprometidas no puedan utilizarse indefinidamente. Otro problema es que cada aplicación ha de conocer las credenciales de la base de datos, esto hace que haya múltiples posibilidades de que las credenciales queden comprometidas. Por otro lado el uso de las credenciales no queda registrado de forma centralizada que es necesario para saber ante una brecha de seguridad qué datos han sido accedidos y por quien.&lt;/p>
&lt;p>La herramienta &lt;a href="https://www.vaultproject.io/">Vault&lt;/a> de &lt;a href="https://www.hashicorp.com/">HashiCorp&lt;/a> da solución a estos problemas generando credenciales de acceso a las bases de datos de forma dinámica, bajo demanda y con un tiempo de concesión limitado. Las credenciales tiene un tiempo de vida limitado si no se renueva su concesión y la generación de las credenciales queda registrado. La forma que tiene Vault de generar credenciales de forma dinámica en una base de datos relacional como &lt;a href="https://www.postgresql.org/">postgres&lt;/a> es conectarse a la base de datos con un usuario con permisos para generarlas y ejecutar una sentencia SQL que crea las credenciales.&lt;/p>
&lt;p>Para permitir a Vault generar credenciales de conexión hay que activar el &lt;em>backend&lt;/em> de bases de datos, configurarlo con la sentencia SQL que se utilizará para generar las credenciales y crear el rol de Vault que genera las credenciales cuando se le solicite. En este ejemplo se muestra para la base de datos postgres pero Vault también soporta otras bases de datos como &lt;a href="https://www.mysql.com/">MySQL&lt;/a>. En el ejemplo la base de datos postgres se ejecuta en un contenedor de &lt;a href="https://www.docker.com/">Docker&lt;/a> en el que se asignan el usuario y contraseña del usuario &lt;em>root&lt;/em> que utiliza Vault para generar las credenciales de forma dinámica.&lt;/p>
&lt;p>Con las siguientes comandos se inicia &lt;a href="https://www.consul.io/">Consul&lt;/a> y Vault.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ consul agent -dev
&lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span>&amp;gt; Starting Consul agent...
&lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span>&amp;gt; Consul agent running!
Version: &lt;span class="s1">&amp;#39;v1.5.0&amp;#39;&lt;/span>
Node ID: &lt;span class="s1">&amp;#39;38d4f541-0958-6d7d-d49e-a31a15987286&amp;#39;&lt;/span>
Node name: &lt;span class="s1">&amp;#39;archlinux&amp;#39;&lt;/span>
Datacenter: &lt;span class="s1">&amp;#39;dc1&amp;#39;&lt;/span> &lt;span class="o">(&lt;/span>Segment: &lt;span class="s1">&amp;#39;&amp;lt;all&amp;gt;&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
Server: &lt;span class="nb">true&lt;/span> &lt;span class="o">(&lt;/span>Bootstrap: &lt;span class="nb">false&lt;/span>&lt;span class="o">)&lt;/span>
Client Addr: &lt;span class="o">[&lt;/span>127.0.0.1&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>HTTP: 8500, HTTPS: -1, gRPC: 8502, DNS: 8600&lt;span class="o">)&lt;/span>
Cluster Addr: 127.0.0.1 &lt;span class="o">(&lt;/span>LAN: 8301, WAN: 8302&lt;span class="o">)&lt;/span>
Encrypt: Gossip: false, TLS-Outgoing: false, TLS-Incoming: false&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/code/consul.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/code/consul.sh" target="_blank">consul.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ vault server -dev -config vault.hcl
&lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span>&amp;gt; Vault server configuration:
Api Address: http://127.0.0.1:8200
Cgo: disabled
Cluster Address: https://127.0.0.1:8201
Listener 1: tcp &lt;span class="o">(&lt;/span>addr: &lt;span class="s2">&amp;#34;127.0.0.1:8200&amp;#34;&lt;/span>, cluster address: &lt;span class="s2">&amp;#34;127.0.0.1:8201&amp;#34;&lt;/span>, max_request_duration: &lt;span class="s2">&amp;#34;1m30s&amp;#34;&lt;/span>, max_request_size: &lt;span class="s2">&amp;#34;33554432&amp;#34;&lt;/span>, tls: &lt;span class="s2">&amp;#34;disabled&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
Log Level: info
Mlock: supported: true, enabled: &lt;span class="nb">false&lt;/span>
Storage: consul &lt;span class="o">(&lt;/span>HA available&lt;span class="o">)&lt;/span>
Version: Vault v1.1.1
Version Sha: a3dcd63451cf6da1d04928b601bbe9748d53842e
WARNING! dev mode is enabled! In this mode, Vault runs entirely in-memory
and starts unsealed with a single unseal key. The root token is already
authenticated to the CLI, so you can immediately begin using Vault.
You may need to &lt;span class="nb">set&lt;/span> the following environment variable:
$ &lt;span class="nb">export&lt;/span> &lt;span class="nv">VAULT_ADDR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;http://127.0.0.1:8200&amp;#39;&lt;/span>
The unseal key and root token are displayed below in &lt;span class="k">case&lt;/span> you want to
seal/unseal the Vault or re-authenticate.
Unseal Key: &lt;span class="nv">jeW10eak6TxJzH2qFnwk7bWk7HcpDXd3KQOobi1rZTQ&lt;/span>&lt;span class="o">=&lt;/span>
Root Token: s.0YRcRzojVcPG8LbbzyUd1MEA
Development mode should NOT be used in production installations!&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/code/vault.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/code/vault.sh" target="_blank">vault.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">ui = true
storage &amp;#34;consul&amp;#34; {
address = &amp;#34;127.0.0.1:8500&amp;#34;
path = &amp;#34;vault&amp;#34;
}&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/code/vault.hcl" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/code/vault.hcl" target="_blank">vault.hcl&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>La base de datos se inicia en un contenedor de Docker, se crea una base de datos y una tabla.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ docker run -it -p &lt;span class="s2">&amp;#34;5432:5432&amp;#34;&lt;/span> -e &lt;span class="nv">POSTGRES_USER&lt;/span>&lt;span class="o">=&lt;/span>postgres -e &lt;span class="nv">POSTGRES_PASSWORD&lt;/span>&lt;span class="o">=&lt;/span>postgres postgres:alpine
$ docker ps
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
2792b13c36c1 postgres:alpine &lt;span class="s2">&amp;#34;docker-entrypoint.s…&amp;#34;&lt;/span> &lt;span class="m">3&lt;/span> minutes ago Up &lt;span class="m">3&lt;/span> minutes 0.0.0.0:5432-&amp;gt;5432/tcp distracted_keldysh
$ docker &lt;span class="nb">exec&lt;/span> -it 2792b13c36c1 bash
bash-5.0# psql -U postgres
psql &lt;span class="o">(&lt;/span>11.4&lt;span class="o">)&lt;/span>
Type &lt;span class="s2">&amp;#34;help&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> help.
&lt;span class="nv">postgres&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="c1"># CREATE DATABASE app;&lt;/span>
&lt;span class="nv">postgres&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="c1"># \connect app&lt;/span>
You are now connected to database &lt;span class="s2">&amp;#34;app&amp;#34;&lt;/span> as user &lt;span class="s2">&amp;#34;postgres&amp;#34;&lt;/span>.
&lt;span class="nv">app&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="c1"># CREATE TABLE product (&lt;/span>
id bigint PRIMARY KEY,
name varchar&lt;span class="o">(&lt;/span>256&lt;span class="o">)&lt;/span> NOT NULL
&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">app&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="c1"># \dt&lt;/span>
List of relations
Schema &lt;span class="p">|&lt;/span> Name &lt;span class="p">|&lt;/span> Type &lt;span class="p">|&lt;/span> Owner
--------+---------+-------+----------
public &lt;span class="p">|&lt;/span> product &lt;span class="p">|&lt;/span> table &lt;span class="p">|&lt;/span> postgres
&lt;span class="o">(&lt;/span>&lt;span class="m">1&lt;/span> row&lt;span class="o">)&lt;/span>
$ docker inspect -f &lt;span class="s1">&amp;#39;{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}&amp;#39;&lt;/span> 2792b13c36c1
172.17.0.2&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/code/postgres.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/code/postgres.sh" target="_blank">postgres.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>En Vault hay que crear la configuración para conectarse a la base de datos y un rol que contiene la configuración para generar las credenciales y permitir obtenerlas, básicamente es un sentencia SQL con el nombre del usuario y contraseña, los permisos que se le asignan y el tiempo de concesión.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ &lt;span class="nb">export&lt;/span> &lt;span class="nv">VAULT_ADDR&lt;/span>&lt;span class="o">=&lt;/span>http://127.0.0.1:8200
$ vault login s.0YRcRzojVcPG8LbbzyUd1MEA
$ vault secrets &lt;span class="nb">enable&lt;/span> database&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/code/vault-database.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/code/vault-database.sh" target="_blank">vault-database.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ vault write database/config/app &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">plugin_name&lt;/span>&lt;span class="o">=&lt;/span>postgresql-database-plugin &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">allowed_roles&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;app&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">connection_url&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;postgresql://{{username}}:{{password}}@localhost:5432/?sslmode=disable&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">username&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;postgres&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">password&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;postgres&amp;#34;&lt;/span>
$ vault write database/roles/app &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">db_name&lt;/span>&lt;span class="o">=&lt;/span>app &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">creation_statements&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;CREATE ROLE \&amp;#34;{{name}}\&amp;#34; WITH LOGIN PASSWORD &amp;#39;{{password}}&amp;#39; VALID UNTIL &amp;#39;{{expiration}}&amp;#39;; GRANT SELECT ON ALL TABLES IN SCHEMA public TO \&amp;#34;{{name}}\&amp;#34;;&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">default_ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;1h&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">max_ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;24h&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/code/vault-role.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/code/vault-role.sh" target="_blank">vault-role.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Las credenciales se generan en el momento de leer una propiedad de Vault.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ vault &lt;span class="nb">read&lt;/span> database/roles/app
Key Value
--- -----
creation_statements &lt;span class="o">[&lt;/span>CREATE ROLE &lt;span class="s2">&amp;#34;{{name}}&amp;#34;&lt;/span> WITH LOGIN PASSWORD &lt;span class="s1">&amp;#39;{{password}}&amp;#39;&lt;/span> VALID UNTIL &lt;span class="s1">&amp;#39;{{expiration}}&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> GRANT SELECT ON ALL TABLES IN SCHEMA public TO &lt;span class="s2">&amp;#34;{{name}}&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="o">]&lt;/span>
db_name app
default_ttl 1h
max_ttl 24h
renew_statements &lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span>
revocation_statements &lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span>
rollback_statements &lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span>
$ vault &lt;span class="nb">read&lt;/span> database/creds/app
Key Value
--- -----
lease_id database/creds/app/rFFlNmpNoxezccTVh3WufZOT
lease_duration 1h
lease_renewable &lt;span class="nb">true&lt;/span>
password A1a-6hRTGNaShFIEGLvp
username v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/code/vault-credentials.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/code/vault-credentials.sh" target="_blank">vault-credentials.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>En postgres la conexión desde la máquina local se permiten sin necesidad de credenciales, para simular realizar la conexión desde otra máquina hay que iniciar otro contenedor. En la conexión se utilizan las credenciales que ha proporcionado Vault. Dado que se realiza una operación de red hay que desactivar el &lt;em>firewall&lt;/em> del sistema o permitir la conexión al puerto de la base de datos que en postgres es el 5432 si fuera necesario. Listando los usuarios de la base de datos con el comando &lt;em>\du&lt;/em> se muestra el creado por Vault y si tiempo de validez.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ docker run -it postgres:alpine bash
bash-5.0# &lt;span class="nv">PGPASSWORD&lt;/span>&lt;span class="o">=&lt;/span>A1a-6hRTGNaShFIEGLvp psql -U v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370 -h 172.17.0.2 -d app
psql &lt;span class="o">(&lt;/span>11.4&lt;span class="o">)&lt;/span>
Type &lt;span class="s2">&amp;#34;help&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> help.
&lt;span class="nv">app&lt;/span>&lt;span class="o">=&lt;/span>&amp;gt; &lt;span class="se">\d&lt;/span>t
List of relations
Schema &lt;span class="p">|&lt;/span> Name &lt;span class="p">|&lt;/span> Type &lt;span class="p">|&lt;/span> Owner
--------+---------+-------+----------
public &lt;span class="p">|&lt;/span> product &lt;span class="p">|&lt;/span> table &lt;span class="p">|&lt;/span> postgres
&lt;span class="o">(&lt;/span>&lt;span class="m">1&lt;/span> row&lt;span class="o">)&lt;/span>
&lt;span class="nv">app&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="c1"># \du&lt;/span>
List of roles
Role name &lt;span class="p">|&lt;/span> Attributes &lt;span class="p">|&lt;/span> Member of
--------------------------------------------+------------------------------------------------------------+-----------
postgres &lt;span class="p">|&lt;/span> Superuser, Create role, Create DB, Replication, Bypass RLS &lt;span class="p">|&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="o">}&lt;/span>
v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370 &lt;span class="p">|&lt;/span> Password valid &lt;span class="k">until&lt;/span> 2019-08-15 09:22:55+00 &lt;span class="p">|&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="o">}&lt;/span>
&lt;span class="nv">app&lt;/span>&lt;span class="o">=&lt;/span>&amp;gt; quit&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/code/postgres-connect.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/code/postgres-connect.sh" target="_blank">postgres-connect.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Si el usuario y contraseña no es correcto no se permite la conexión a la base de datos.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">bash-5.0# &lt;span class="nv">PGPASSWORD&lt;/span>&lt;span class="o">=&lt;/span>tampered psql -U v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370 -h 172.17.0.2 -d app
psql: FATAL: password authentication failed &lt;span class="k">for&lt;/span> user &lt;span class="s2">&amp;#34;v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/code/postgres-connect-fail.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/code/postgres-connect-fail.sh" target="_blank">postgres-connect-fail.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>En las aplicaciones Java que utilizan &lt;a href="https://spring.io/">Spring&lt;/a> el proyecto &lt;a href="https://cloud.spring.io/spring-cloud-vault/">Spring Cloud Vault&lt;/a> proporciona las utilidades para simplificar en gran medida la obtención de las credenciales a la base de datos utilizando Vault.&lt;/p>
&lt;p>Esto permite que únicamente Vault conozca la cuenta &lt;em>root&lt;/em> de la base de datos o una con suficientes permisos para crear credenciales, las aplicaciones no almacenan en su configuración las credenciales para conectarse la base de datos solo las de Vault que le permiten obtener unas credenciales para la base de datos con un tiempo de vida limitado y que pueden revocarse desde Vault en caso de un problema de seguridad para cuales quiera bases de datos que se utilicen.&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/series/docker/">Serie de artículos sobre Docker&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-relacional-postgresql/">Introducción a la base de datos relacional PostgreSQL&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="programacion"/><category term="planeta-codigo"/><category term="software"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2019/08/iniciar-una-aplicacion-de-spring-boot-en-un-puerto-aleatorio/</id><title>Iniciar una aplicación de Spring Boot en un puerto aleatorio</title><updated>2019-08-09T18:00:00+02:00</updated><published>2019-08-09T18:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2019/08/iniciar-una-aplicacion-de-spring-boot-en-un-puerto-aleatorio/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>&lt;strong>En una arquitectura basada en microservicios es normal iniciar varias instancias de un mismo servicio, si están en la misma máquina ha de asignarse a cada instancia un puerto diferente. Asignar los puertos manualmente no es recomendable cuando se quieren varias instancias, Spring Boot ofrece la funcionalidad de iniciar la aplicación en un puerto aleatorio.&lt;/strong>&lt;/p>
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/spring.svg" class="right " width="200" alt="Spring" title="Spring"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;p>Mediante configuración se puede especificar el puerto en el que se desea iniciar una aplicación de &lt;a href="https://projects.spring.io/spring-boot/">Spring Boot&lt;/a> que ofrece un servicio de red. El puerto por convención suele ser el &lt;em>8080&lt;/em> y la propiedad de configuración de Spring Boot para modificarlo es &lt;em>server.port&lt;/em>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-YAML" data-lang="YAML">server&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>port&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>${port&lt;span class="p">:&lt;/span>&lt;span class="m">8080&lt;/span>}&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/iniciar-una-aplicacion-de-spring-boot-en-un-puerto-aleatorio/code/application-1.yml" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/iniciar-una-aplicacion-de-spring-boot-en-un-puerto-aleatorio/code/application-1.yml" target="_blank">application-1.yml&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./gradlew service:run
...
2019-08-09 17:02:40,417 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port&lt;span class="o">(&lt;/span>s&lt;span class="o">)&lt;/span>: &lt;span class="m">8080&lt;/span> &lt;span class="o">(&lt;/span>http&lt;span class="o">)&lt;/span> with context path &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
...&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/iniciar-una-aplicacion-de-spring-boot-en-un-puerto-aleatorio/code/run-1.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/iniciar-una-aplicacion-de-spring-boot-en-un-puerto-aleatorio/code/run-1.sh" target="_blank">run-1.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Cuando se tiene únicamente una aplicación este puerto por defecto es suficiente pero si se desean iniciar varias instancias de una aplicación o microservicio en una misma máquina es necesario asignar a cada una de ellas un puerto diferente para que no haya conflictos a usar el mismo puerto de red. Se puede hacer manualmente aunque con muchas instancias también se puede dejar a Spring Boot elegir un puerto aleatorio.&lt;/p>
&lt;p>Para dejar a Spring Boot elegir el puerto de forma aleatoria basta con especificar el puerto con valor &lt;em>0&lt;/em> en la propiedad de configuración &lt;em>server.port&lt;/em>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-YAML" data-lang="YAML">server&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>port&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>${port&lt;span class="p">:&lt;/span>&lt;span class="m">0&lt;/span>}&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/iniciar-una-aplicacion-de-spring-boot-en-un-puerto-aleatorio/code/application-2.yml" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/iniciar-una-aplicacion-de-spring-boot-en-un-puerto-aleatorio/code/application-2.yml" target="_blank">application-2.yml&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./gradlew service:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=0&amp;#34;&lt;/span>
...
2019-08-09 17:02:40,417 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port&lt;span class="o">(&lt;/span>s&lt;span class="o">)&lt;/span>: &lt;span class="m">45871&lt;/span> &lt;span class="o">(&lt;/span>http&lt;span class="o">)&lt;/span> with context path &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
...&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/iniciar-una-aplicacion-de-spring-boot-en-un-puerto-aleatorio/code/run-2.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/08/iniciar-una-aplicacion-de-spring-boot-en-un-puerto-aleatorio/code/run-2.sh" target="_blank">run-2.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Usando un &lt;a href="https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/">servicio de registro y descubrimiento como Eureka&lt;/a> el servicio registra su ubicación y los servicios que quieran acceder a él obtendrán del mismo servicio de registro y descubrimiento su ubicación, de forma que para los clientes es transparente en qué puerto se inicie.&lt;/p>
&lt;p>Sin embargo, por algún motivo con Eureka los servicios no se registran en el puerto aleatorio en el que realmente se inician sino que se registran incorrectamente en el puerto &lt;em>0&lt;/em>, quizá utilizando &lt;a href="https://www.consul.io/">Consul&lt;/a> el servicio de Spring Boot si se inicie en un puerto aleatorio.&lt;/p>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./gradle-run.sh&lt;/code>.
&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://javadeveloperzone.com/spring-boot/spring-boot-random-server-port/">Spring Boot Random Server Port&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/01/registro-y-descubrimiento-de-servicios-con-spring-cloud-y-consul/">Registro y descubrimiento de servicios con Spring Cloud y Consul&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/</id><title>Administrar secretos y proteger datos sensibles con Vault</title><updated>2019-07-27T23:00:00+02:00</updated><published>2019-07-27T18:30:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>&lt;strong>Herramientas de aprovisionamiento como Chef, Puppet y Ansible solucionan el problema de la seguridad de los secretos de forma similar, utilizando una única clave de cifrado. Los datos cifrados están siempre a un secreto (contraseña, clave, &amp;hellip;) de ser descifrados y generalmente no está bien protegidos dado que en un entorno elástico cada servidor necesita disponer de este secreto para descifrar los datos. Adicionalmente el acceso a los datos cifrados no está registrado de modo que si hay una intrusión no está claro que dato ha sido accedido y por quien. Utilizar variables de entorno para proporcionar secretos tampoco es seguro, y en entornos Docker suele usarse.&lt;/strong>&lt;/p>
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/vault.svg" class="right " width="200" alt="Vault" title="Vault"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/hashicorp.svg" class="right " width="200" alt="HashiCorp" title="HashiCorp"/>
&lt;/div>
&lt;p>La seguridad es un aspecto muy importante de los sistemas informáticos, no darle la consideración necesaria puede dar lugar a caídas de servicio y robo de datos potencialmente ocasionando importantes pérdidas de dinero, sanciones y pérdida de confianza de los clientes y proveedores de una organización.&lt;/p>
&lt;p>La seguridad se mantiene mediante mecanismos de autenticación identifican al solicitante solicitante, de autorización permitiendo realiza únicamente las acciones para las que se tienen permisos y mediante firma y cifrado para impedir la modificación de los datos y el acceso a la información sin las credenciales y autorización requerida.&lt;/p>
&lt;p>La infraestructura informática de los sistemas actuales es cada vez más compleja por el número y tipo de las distintas de piezas que emplean como bases de datos, sistemas de mensajes u otros servicios, también por el aspecto efímero en la tendencia actual de microservicios como por la utilización de entornos en la nube con una infraestructura no confiable al estar fuera del control de una organización y estar compartida con otras organizaciones.&lt;/p>
&lt;p>No es seguro utilizar archivos sin cifrar aún utilizando los permisos del sistema de archivos dado que una intrusión en el sistema posibilita el acceso al secreto. Cifrarlos los archivos es el mismo caso de herramientas como &lt;a href="https://www.getchef.com/">Chef&lt;/a>, &lt;a href="https://puppet.com/">Puppet&lt;/a> y &lt;a href="https://www.ansible.com/">Ansible&lt;/a>. Utilizar variables de entorno para proporcionar secretos tampoco es seguro ya que aunque los secretos no están en el sistema de archivos se pueden inspeccionar las variables de entorno de un proceso.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ env &lt;span class="p">|&lt;/span> grep SECRET
$ docker inspect
$ sudo cat /proc/&lt;span class="nv">$pid&lt;/span>/environ&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/code/commands.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/code/commands.sh" target="_blank">commands.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Por otra parte las contraseñas y claves han de rotarse regularmente para limitar en el tiempo el acceso ante el filtrado de las credenciales en un sistema o para denegar el acceso a una persona que en algún momento haya tenido credenciales de acceso como un empleado que ya no pertenece a la compañía.&lt;/p>
&lt;h3 id="vault">Vault&lt;/h3>
&lt;p>&lt;a href="https://www.vaultproject.io/">Vault&lt;/a> es una herramienta para acceder de forma segura a secretos. Un secreto es cualquier cosa a la que se quiera tener severamente controlado como claves de API, contraseñas y certificados. Vault proporciona una interfaz para cualquier secreto a la vez que mantiene un control de acceso y un &lt;em>log&lt;/em> de acceso detallado.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.vaultproject.io/docs/what-is-vault/index.html">Introduction to Vault&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.vaultproject.io/docs/use-cases/index.html">Use Cases&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Las características principales de Vault se engloban en tres aspectos de la seguridad: cifrado, control de acceso y ciclo de vida.&lt;/p>
&lt;ul>
&lt;li>Almacenamiento seguro de secretos: se pueden almacenar secretos arbitrarios clave/valor. Los secretos son cifrados previamente a ser almacenados en el almacenamiento persistente de modo que obtener acceso al almacenamiento persistente no es suficiente para acceder a los secretos. Vault puede almacenar los secretos en disco, &lt;a href="https://www.consul.io/">Consul&lt;/a> y más.&lt;/li>
&lt;li>Secretos dinámicos: puede &lt;a href="https://picodotdev.github.io/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/">generar secretos bajo demanda para bases de datos&lt;/a> o algunos sistemas como AWS. Por ejemplo, cuando una aplicación necesita acceso a una base de datos SQL solicita a Vault unas credenciales, Vault genera unas credenciales con los permisos adecuados. Después de crear estos secretos dinámicos también los revoca automáticamente una vez pasado su tiempo de concesión.&lt;/li>
&lt;li>Cifrado de datos: puede cifrar y descifrar datos sin almacenarlos. Esto permite definir parámetros de seguridad y los desarrolladores almacenar los datos cifrados en localizaciones como bases de datos sin tener que diseñar sus propios métodos de cifrado.&lt;/li>
&lt;li>Concesión y renovación: todos los secretos en Vault tienen un tiempo de concesión asociado. Al finalizar la concesión Vault los revoca automáticamente, los clientes pueden solicitar renovar las concesiones mediante las API disponibles de Vault.&lt;/li>
&lt;li>Revocación: integra la funcionalidad de revocación, no solo secretos individuales sino jerarquías de secretos. La revocación asiste en la rotación de las claves así como cerrar el sistema en caso de intrusión.&lt;/li>
&lt;/ul>
&lt;h3 id="conceptos">Conceptos&lt;/h3>
&lt;p>Los motores de secretos son uno de los conceptos en el ámbito de Vault. Son componentes que permite almacenar, generar o cifrar datos. Algunos motores de secretos simplemente almacenan y leen datos, otros se conectan a otros servicios y generan credenciales dinámicamente bajo demanda. Otros motores de secretos proporcionan el cifrado como servicio, &lt;em>tokens&lt;/em> de un solo uso, certificados y mucho más.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.vaultproject.io/api/secret/index.html">Secrets Engines&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.vaultproject.io/docs/secrets/kv/index.html">KV Secrets Engine&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.vaultproject.io/docs/secrets/databases/index.html">Databases Secrets Engine&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.vaultproject.io/docs/secrets/rabbitmq/index.html">RabbitMQ Secrets Engine&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.vaultproject.io/docs/secrets/pki/index.html">PKI Secrets Engine&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.vaultproject.io/docs/secrets/ssh/index.html">SSH Secrets Engine&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Otro concepto es la &lt;a href="https://www.vaultproject.io/docs/auth/index.html">autenticación&lt;/a>. Permiten realizar la autenticación y son responsables de asignar una identidad y un conjunto de &lt;em>policies&lt;/em> a un usuario. Por ejemplo, para los desarrolladores el método de autenticación de GitHub es fácil de usar pero para servidores el método &lt;em>AppRole&lt;/em> es el recomendado&lt;/p>
&lt;p>Los secretos necesitan &lt;a href="https://www.vaultproject.io/docs/configuration/storage/index.html">almacenamiento&lt;/a>. Algunos tipos de almacenamiento son mejores para la alta disponibilidad y otros facilitan la copia de seguridad y la restauración. Puede ser en memoria, sistema de archivos, una herramienta como Consul o varias bases de datos entre ellas bases de datos relacionales.&lt;/p>
&lt;p>La &lt;a href="(https://www.vaultproject.io/docs/audit/index.html)">auditoria&lt;/a> permite obtener una trazabilidad de las operaciones que se han realizado, dado que todas las operaciones se realizan mediante una API el &lt;em>log&lt;/em> de auditoría es simplemente cada interacción autenticada con Vault, incluidas los errores. Puede ser un archivo o un &lt;em>socket&lt;/em>.&lt;/p>
&lt;p>Todo en Vault está basado en &lt;em>paths&lt;/em>. Las &lt;a href="(https://www.vaultproject.io/docs/concepts/policies.html)">&lt;em>policies&lt;/em>&lt;/a> permiten o deniegan el acceso a ciertos &lt;em>paths&lt;/em>. Poseen la siguiente sintaxis, donde las &lt;em>capabilities&lt;/em> son las operaciones CRUD permitidas.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">path &amp;#34;secret/*&amp;#34; {
capabilities = [&amp;#34;create&amp;#34;, &amp;#34;read&amp;#34;, &amp;#34;update&amp;#34;, &amp;#34;delete&amp;#34;, &amp;#34;list&amp;#34;]
}&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/code/policy.hcl" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/code/policy.hcl" target="_blank">policy.hcl&lt;/a>
&lt;/div>
&lt;/div>
&lt;h3 id="instalación-y-un-caso-de-uso">Instalación y un caso de uso&lt;/h3>
&lt;p>La &lt;a href="https://www.vaultproject.io/docs/install/index.html">instalación de Vault&lt;/a> es muy sencilla ya que es un único binario sin más dependencias. En una distribución &lt;a href="https://www.gnu.org/">GNU&lt;/a>/&lt;a href="https://www.linux.com/">Linux&lt;/a> estará en los repositorios oficiales. En &lt;a href="https://www.archlinux.org/">Arch Linux&lt;/a> se instala con el comando.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ sudo pacman -S vault&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/code/install.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/code/install.sh" target="_blank">install.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>En el siguiente ejemplo en modo desarrollo de uso de Vault se inicia, se realiza la autenticación con el &lt;em>token&lt;/em> &lt;em>root&lt;/em> de superusuario y se crea un secreto. Aquí solo se muestra el caso de uso de guardar y recuperar secretos, otros son generar credenciales para conectarse a una base de datos y proporcionar cifrado y descifrado como servicio.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ vault server -dev
&lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span>&amp;gt; Vault server configuration:
Api Address: http://127.0.0.1:8200
Cgo: disabled
Cluster Address: https://127.0.0.1:8201
Listener 1: tcp &lt;span class="o">(&lt;/span>addr: &lt;span class="s2">&amp;#34;127.0.0.1:8200&amp;#34;&lt;/span>, cluster address: &lt;span class="s2">&amp;#34;127.0.0.1:8201&amp;#34;&lt;/span>, max_request_duration: &lt;span class="s2">&amp;#34;1m30s&amp;#34;&lt;/span>, max_request_size: &lt;span class="s2">&amp;#34;33554432&amp;#34;&lt;/span>, tls: &lt;span class="s2">&amp;#34;disabled&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
Log Level: info
Mlock: supported: true, enabled: &lt;span class="nb">false&lt;/span>
Storage: inmem
Version: Vault v1.1.1
Version Sha: a3dcd63451cf6da1d04928b601bbe9748d53842e
WARNING! dev mode is enabled! In this mode, Vault runs entirely in-memory
and starts unsealed with a single unseal key. The root token is already
authenticated to the CLI, so you can immediately begin using Vault.
You may need to &lt;span class="nb">set&lt;/span> the following environment variable:
$ &lt;span class="nb">export&lt;/span> &lt;span class="nv">VAULT_ADDR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;http://127.0.0.1:8200&amp;#39;&lt;/span>
The unseal key and root token are displayed below in &lt;span class="k">case&lt;/span> you want to
seal/unseal the Vault or re-authenticate.
Unseal Key: &lt;span class="nv">R6MKrMxcJtTTUuIjeQjwDxnv4sHbKtjmuRn0Fok98zk&lt;/span>&lt;span class="o">=&lt;/span>
Root Token: s.hQoeIivTHHgl1AtsoVz1UF1G
Development mode should NOT be used in production installations!&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/code/vault.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/code/vault.sh" target="_blank">vault.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ &lt;span class="nb">export&lt;/span> &lt;span class="nv">VAULT_ADDR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;http://127.0.0.1:8200&amp;#39;&lt;/span>
$ vault kv put secret/key &lt;span class="nv">key&lt;/span>&lt;span class="o">=&lt;/span>s3cr3t
Key Value
--- -----
created_time 2019-07-27T17:30:29.559274833Z
deletion_time n/a
destroyed &lt;span class="nb">false&lt;/span>
version &lt;span class="m">1&lt;/span>
$ vault kv get secret/key
&lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="nv">Metadata&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span>
Key Value
--- -----
created_time 2019-07-27T17:30:29.559274833Z
deletion_time n/a
destroyed &lt;span class="nb">false&lt;/span>
version &lt;span class="nv">1&lt;/span>
&lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="nv">Data&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span>
Key Value
--- -----
key s3cr3t&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/code/secret.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/code/secret.sh" target="_blank">secret.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Vault al igual que otras de las herramientas de &lt;a href="https://www.hashicorp.com/">HashiCorp&lt;/a> como Consul y &lt;a href="https://www.nomadproject.io/">Nomad&lt;/a> posee una interfaz gráfica accesible mediante el navegador que permite realizar las mismas operaciones que a través de la API o desde la linea de comandos.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/images/vault-ui-1_hu835606e7b9de313fbe556011bb61b531_35945_2560x1440_fit_box_2.png" title="Interfaz gráfica de Vault" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/images/vault-ui-1_hu835606e7b9de313fbe556011bb61b531_35945_300x200_fit_box_2.png" width="300"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/images/vault-ui-2_hu643c4f275edb6aabb6ede21353b42f5b_36609_2560x1440_fit_box_2.png" title="" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/images/vault-ui-2_hu643c4f275edb6aabb6ede21353b42f5b_36609_300x200_fit_box_2.png" width="300"/>&lt;/a>
&lt;figcaption>Interfaz gráfica de Vault&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Vault a igual que otras de las herramientas de HashiCorp tiene una muy buena documentación en formato de &lt;a href="https://learn.hashicorp.com/vault">guía&lt;/a> y en formato de &lt;a href="https://www.vaultproject.io/docs/">documentación&lt;/a>. En una aplicación Java el proyecto &lt;a href="https://spring.io/">Spring&lt;/a> facilita su uso con &lt;a href="https://projects.spring.io/spring-vault/">Spring Vault&lt;/a> y &lt;a href="https://cloud.spring.io/spring-cloud-vault/">Spring Cloud Vault&lt;/a>.&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://www.baeldung.com/vault">An Intro to Vault&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="planeta-codigo"/><category term="programacion"/><category term="software"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2019/07/publicacion-y-suscripcion-de-eventos-con-guava-eventbus-en-una-aplicacion-java/</id><title>Publicación y suscripción de eventos con Guava EventBus en una aplicación Java</title><updated>2019-07-19T19:00:00+02:00</updated><published>2019-07-19T19:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2019/07/publicacion-y-suscripcion-de-eventos-con-guava-eventbus-en-una-aplicacion-java/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>&lt;strong>Guava EventBus es una solución simple para la publicación y suscripción de eventos en una misma aplicación y como tal no posee muchas de las capacidades que si tiene JMS o RabbitMQ, sin embargo, en algunos casos puede ser muy útil, una solución sencilla y sin requerimientos adicionales de infraesrtuctura.&lt;/strong>&lt;/p>
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;p>En programación los eventos son una buena forma de comunicación que permite desacoplar el emisor del evento del receptor o receptores. Los eventos permiten reaccionar a situaciones que se producen a la aplicación. El emisor los lanza cuando considera adecuado y los receptores se suscriben a los eventos que quieren recibir y actúan según su funcionalidad.&lt;/p>
&lt;p>Hay herramientas especificas para eventos en Java está JMS si la aplicación está basada en &lt;a href="https://picodotdev.github.io/blog-bitix/2016/03/introduccion-y-nuevas-caracteristicas-de-java-ee-7/">la plataforma en Java EE&lt;/a>, en caso de necesitar un servidor de mensajes adecuado para múltiples plataformas y lenguajes uno de los más conocidos es &lt;a href="https://www.rabbitmq.com/">RabbitMQ&lt;/a>. Estas opciones permiten que el emisor y los receptores estén aplicaciones distintas.&lt;/p>
&lt;p>En el caso de que el emisor y receptor estén en la misma aplicación una opción más sencilla por no requerir un servidor de mensajería es usando la librería &lt;a href="https://github.com/google/guava">Guava&lt;/a> y su funcionalidad de &lt;a href="https://github.com/google/guava/wiki/EventBusExplained">Event Bus&lt;/a>. Una de las ventajas de Guava Event Bus es que el receptor no requiere un registro explícito en el emisor como ocurre en algunas de las soluciones con clases &lt;em>Listener&lt;/em> de Java.&lt;/p>
&lt;p>Para hacer uso de Guava Event Bus hay que obtener una referencia a la clase &lt;a href="https://guava.dev/releases/snapshot-jre/api/docs/com/google/common/eventbus/EventBus.html">EventBus&lt;/a> que usando &lt;a href="https://spring.io/">Spring&lt;/a> se puede definir como un &lt;em>bean singleton&lt;/em> en el contenedor de dependencias y ser inyectado en las clases que lo necesiten. Los eventos se envían a haciendo uso del método &lt;a href="https://guava.dev/releases/snapshot-jre/api/docs/com/google/common/eventbus/EventBus.html#post-java.lang.Object-">post()&lt;/a> con el objeto que representa el evento como argumento. Los manejadores de los eventos o &lt;em>listener&lt;/em> son simplemente un método anotado con &lt;a href="https://guava.dev/releases/snapshot-jre/api/docs/com/google/common/eventbus/Subscribe.html">@Suscribe&lt;/a> y el tipo del evento como argumento, la clases &lt;em>listener&lt;/em> han de registrarse en el &lt;em>EventBus&lt;/em> y una misma clase con múltiples métodos anotados puede manejar diferentes eventos.&lt;/p>
&lt;p>En el contenedor de Spring se define como un &lt;em>bean&lt;/em> la clase &lt;em>EventBus&lt;/em> que es inicializada con las clases &lt;em>listener&lt;/em> con métodos anotados con &lt;em>@Suscribe&lt;/em> registradas con el método &lt;a href="https://guava.dev/releases/snapshot-jre/api/docs/com/google/common/eventbus/EventBus.html#register-java.lang.Object-">register()&lt;/a>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.guava&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.boot.SpringApplication&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.context.annotation.Bean&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">com.google.common.eventbus.EventBus&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@SpringBootApplication&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">EventBus&lt;/span> &lt;span class="nf">eventBus&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">EventBus&lt;/span> &lt;span class="n">eventbus&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">EventBus&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">eventbus&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">register&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">EventListener&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">eventbus&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/publicacion-y-suscripcion-de-eventos-con-guava-eventbus-en-una-aplicacion-java/code/Main.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/publicacion-y-suscripcion-de-eventos-con-guava-eventbus-en-una-aplicacion-java/code/Main.java" target="_blank">Main.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.guava&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">com.google.common.eventbus.Subscribe&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">EventListener&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Subscribe&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">onEvent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Event&lt;/span> &lt;span class="n">event&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Event: %s%n&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">event&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getMessage&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/publicacion-y-suscripcion-de-eventos-con-guava-eventbus-en-una-aplicacion-java/code/EventListener.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/publicacion-y-suscripcion-de-eventos-con-guava-eventbus-en-una-aplicacion-java/code/EventListener.java" target="_blank">EventListener.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>En este ejemplo sencillo se lanza un evento cuando se realiza una petición y como reacción a este evento se imprime un mensaje en la salida. Una aplicación real del &lt;em>EventBus&lt;/em> será más complicada pero este ejemplo muestra perfectamente el mecanismo de lanzado y recepción de eventos en una misma aplicación. La clase que se lanza como evento en este caso es un &lt;em>POJO&lt;/em> sin ningún requerimiento especial.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.guava&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.beans.factory.annotation.Autowired&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.web.bind.annotation.RequestParam&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.web.bind.annotation.RestController&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.web.bind.annotation.RequestMapping&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">com.google.common.eventbus.EventBus&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@RestController&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">DefaultRestController&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">EventBus&lt;/span> &lt;span class="n">eventbus&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Event&lt;/span> &lt;span class="nf">hello&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nd">@RequestParam&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;message&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">defaultValue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Hello World!&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Event&lt;/span> &lt;span class="n">event&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Event&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">eventbus&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">post&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">event&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/publicacion-y-suscripcion-de-eventos-con-guava-eventbus-en-una-aplicacion-java/code/DefaultRestController.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/publicacion-y-suscripcion-de-eventos-con-guava-eventbus-en-una-aplicacion-java/code/DefaultRestController.java" target="_blank">DefaultRestController.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.guava&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Event&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">Event&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getMessage&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/publicacion-y-suscripcion-de-eventos-con-guava-eventbus-en-una-aplicacion-java/code/Event.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/publicacion-y-suscripcion-de-eventos-con-guava-eventbus-en-una-aplicacion-java/code/Event.java" target="_blank">Event.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Al realizar peticiones a la aplicación el controlador emite un evento que es recibido por &lt;em>listener&lt;/em> al procesar el evento, en la salida de la aplicación aparecen los mensajes.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">Event: Hello World!
Event: A message&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/publicacion-y-suscripcion-de-eventos-con-guava-eventbus-en-una-aplicacion-java/code/System.out" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/publicacion-y-suscripcion-de-eventos-con-guava-eventbus-en-una-aplicacion-java/code/System.out" target="_blank">System.out&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>En el proyecto hay que incluir como dependencia la librería Guava en este caso usando &lt;a href="https://gradle.org/">Gradle&lt;/a>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Groovy" data-lang="Groovy">&lt;span class="n">plugins&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;java&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;application&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot&amp;#39;&lt;/span> &lt;span class="n">version&lt;/span> &lt;span class="s1">&amp;#39;2.1.6.RELEASE&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">group&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;io.github.picodotdev.blogbitix&amp;#39;&lt;/span>
&lt;span class="n">version&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;0.0.1-SNAPSHOT&amp;#39;&lt;/span>
&lt;span class="n">sourceCompatibility&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">11&lt;/span>
&lt;span class="n">mainClassName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;io.github.picodotdev.blogbitix.guava.Main&amp;#39;&lt;/span>
&lt;span class="n">repositories&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">mavenCentral&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">implementation&lt;/span> &lt;span class="nf">platform&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;org.springframework.boot:spring-boot-dependencies:2.1.6.RELEASE&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">implementation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">implementation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-jersey&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">implementation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.google.guava:guava:28.0-jre&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/publicacion-y-suscripcion-de-eventos-con-guava-eventbus-en-una-aplicacion-java/code/build.gradle" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/publicacion-y-suscripcion-de-eventos-con-guava-eventbus-en-una-aplicacion-java/code/build.gradle" target="_blank">build.gradle&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/Guava">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./gradlew run&lt;/code>.
&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://www.baeldung.com/guava-eventbus">Guide to Guava’s EventBus&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2017/02/ejemplo-de-rabbitmq-con-java-para-enviar-y-recibir-mensajes/">Ejemplo de RabbitMQ con Java para enviar y recibir mensajes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2014/03/introduccion-y-ejemplo-sencillo-de-java-message-service-jms/">Introducción y ejemplo sencillo de Java Message Service (JMS)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picodotdev.github.io/blog-bitix/2016/04/aplicacion-de-ejemplo-usando-varias-especificaciones-de-java-ee-7/">Aplicación de ejemplo usando varias especificaciones de Java EE 7&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2019/07/recuperar-datos-eficientemente-en-graphql-usando-batching-con-data-loaders/</id><title>Recuperar datos eficientemente en GraphQL usando batching con data loaders</title><updated>2019-07-12T18:00:00+02:00</updated><published>2019-07-12T18:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2019/07/recuperar-datos-eficientemente-en-graphql-usando-batching-con-data-loaders/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>&lt;strong>Al diferencia de una API REST donde cada recurso posee un &lt;em>endpoint&lt;/em> propio en GraphQL los recursos están relacionados y forman un grafo. Por otro lado las propiedades devueltas en una consulta de GraphQL son las que se indiquen en la consulta en vez de prefijadas como en una API REST. Hay que tener en cuenta que GraphQL para recuperar las propiedades de las entidades usa un &lt;em>resolver&lt;/em> y las recupera una a una, si se devuelve una lista de elementos y de cada uno de esos elementos otra propiedad para la que hay que generar una consulta adicional a la base de datos el rendimiento no será bueno. Los &lt;em>data loaders&lt;/em> permiten recuperar las propiedades relacionadas de una colección de entidades eficientemente evitando el problema 1+N.&lt;/strong>&lt;/p>
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/graphql.svg" class="right " width="200" alt="GraphQL" title="GraphQL"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;p>Una de las dificultades a resolver en GraphQL es evitar los problemas de generar 1+N consultas dado que en algunas peticiones se recupera una lista de elementos para recuperar alguna otra propiedad de esos elementos para la que se realiza otra consulta. Suele ocurrir al navegar las relaciones de las entidades, por ejemplo al solicitar una lista de libros y de cada libro obtener su autor, para obtener los libros se necesita una consulta y hay que evitar que para recuperar el autor de cada libro generar otra consulta, si el número de libros recuperados es grande el número de consultas será grande y la consulta será poco eficiente, lenta y generará una carga a evitar en el servidor de base de datos.&lt;/p>
&lt;p>En el artículo &lt;a href="https://picodotdev.github.io/blog-bitix/2018/05/recuperar-datos-eficientemente-en-graphql-usando-batching/">Recuperar datos eficientemente en GraphQL usando batching&lt;/a> comentaba una estrategia para evitar este problema que consistía en dados una serie de elementos recuperados y si la propiedad estaba presente en la consulta se obtenían los identificativos de esos elementos y se recuperaba la propiedad para todos los elementos en una única consulta.&lt;/p>
&lt;p>Sin embargo, GraphQL posee otra estrategia para resolver el problema de los 1+N, mediante &lt;a href="https://www.graphql-java.com/documentation/v12/batching/">Data Loaders&lt;/a>. Para usar un &lt;em>data loader&lt;/em> en una propiedad de un tipo hay que crear una clase que implemente la interfaz &lt;em>MappedBatchLoader&lt;/em> o &lt;em>MappedBatchLoaderWithContext&lt;/em> de &lt;a href="https://github.com/graphql-java/java-dataloader">java-loader&lt;/a>. El método a implementar es &lt;em>load(Set&amp;lt;K&amp;gt;)&lt;/em> que recibe un conjunto de instancias de las que se quiere recuperar la propiedad y devuelve un &lt;em>Map&amp;lt;K,V&amp;gt;&lt;/em> cuya clave es la instancia de la colección y el valor de la propiedad recuperada.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.graphql.dataloader&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.graphql.type.Book&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.dataloader.BatchLoaderEnvironment&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.dataloader.MappedBatchLoaderWithContext&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.stereotype.Component&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@Component&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">IsbnDataLoader&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">MappedBatchLoaderWithContext&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Book&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">IsbnDataLoader&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">CompletionStage&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Book&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">load&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Set&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Book&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">books&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">BatchLoaderEnvironment&lt;/span> &lt;span class="n">environment&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Book&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">isbns&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">books&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">stream&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">collect&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Collectors&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toMap&lt;/span>&lt;span class="o">(&lt;/span>
&lt;span class="n">Function&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">identity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="n">Book&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="n">getIsbn&lt;/span>
&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">CompletableFuture&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">supplyAsync&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">isbns&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/recuperar-datos-eficientemente-en-graphql-usando-batching-con-data-loaders/code/IsbnDataLoader.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/recuperar-datos-eficientemente-en-graphql-usando-batching-con-data-loaders/code/IsbnDataLoader.java" target="_blank">IsbnDataLoader.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Una vez definidos los &lt;em>data loaders&lt;/em> hay que incluirlos en un registro e indicarlos en la clase del contexto de GraphQL. El método &lt;em>contextBuilder&lt;/em> recibe todas las instancias de &lt;em>data loaders&lt;/em>, el método &lt;em>dataLoaderRegistry&lt;/em> crea el registro y finalmente se asigna el registro al contexto. Los &lt;em>data loaders&lt;/em> cachean los datos de modo que si los datos no se deben compartir entre peticiones hay que construir los &lt;em>data loaders&lt;/em> en cada petición.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.graphql&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@SpringBootApplication&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">GraphQLContextBuilder&lt;/span> &lt;span class="nf">contextBuilder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">MappedBatchLoaderWithContext&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="o">?&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">mappedBatchLoaders&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">GraphQLContextBuilder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">GraphQLContext&lt;/span> &lt;span class="nf">build&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">HttpServletResponse&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">graphql&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">GraphQLContext&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">graphql&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">GraphQLContext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newContext&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">GraphQLContext&lt;/span> &lt;span class="n">context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DefaultGraphQLContext&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setDataLoaderRegistry&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">buildDataLoaderRegistry&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">mappedBatchLoaders&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">GraphQLContext&lt;/span> &lt;span class="nf">build&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Session&lt;/span> &lt;span class="n">session&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">HandshakeRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">graphql&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">GraphQLContext&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">graphql&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">GraphQLContext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newContext&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">GraphQLContext&lt;/span> &lt;span class="n">context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DefaultGraphQLContext&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">session&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setDataLoaderRegistry&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">buildDataLoaderRegistry&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">mappedBatchLoaders&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">GraphQLContext&lt;/span> &lt;span class="nf">build&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">graphql&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">GraphQLContext&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">graphql&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">GraphQLContext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newContext&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">GraphQLContext&lt;/span> &lt;span class="n">context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DefaultGraphQLContext&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setDataLoaderRegistry&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">buildDataLoaderRegistry&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">mappedBatchLoaders&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">DataLoaderRegistry&lt;/span> &lt;span class="nf">buildDataLoaderRegistry&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">MappedBatchLoaderWithContext&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="o">?&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">mappedBatchLoaders&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">GraphQLContext&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">DataLoaderRegistry&lt;/span> &lt;span class="n">registry&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DataLoaderRegistry&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">MappedBatchLoaderWithContext&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="o">?&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">loader&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">mappedBatchLoaders&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">registry&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">register&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">loader&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getClass&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getSimpleName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="n">DataLoader&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newMappedDataLoader&lt;/span>&lt;span class="o">(&lt;/span>
&lt;span class="n">loader&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="n">DataLoaderOptions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newOptions&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setBatchLoaderContextProvider&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">)&lt;/span>
&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">registry&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/recuperar-datos-eficientemente-en-graphql-usando-batching-con-data-loaders/code/Main.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/recuperar-datos-eficientemente-en-graphql-usando-batching-con-data-loaders/code/Main.java" target="_blank">Main.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Una vez creados los &lt;em>data loaders&lt;/em> hay que usarlos en los &lt;em>resolver&lt;/em> de las propiedades de una entidad en la que se desee que se cargue de forma &lt;em>batched&lt;/em>. El método de la propiedad del resolver debe devolver un &lt;a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/CompletableFuture.html">CompletableFuture&lt;/a>, el método recibe la instancia de la que se quiere recuperar una propiedad y una referencia de &lt;em>DataFetchingEnvironment&lt;/em> de la librería &lt;a href="https://www.graphql-java.com/">graphql-java&lt;/a>, se recupera el &lt;em>data loader&lt;/em> de esa propiedad y se le indica que acumule el conjunto de instancias de las que se quiere recuperar. GraphQL en algún momento llamará al método &lt;em>load(Set&lt;K>)&lt;/em> que recibe un conjunto de instancias para realizar la carga de todas en una única consulta.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.graphql.resolver&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">BookResolver&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">GraphQLResolver&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Book&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">CompletableFuture&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">getDataLoaderIsbn&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Book&lt;/span> &lt;span class="n">book&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">DataFetchingEnvironment&lt;/span> &lt;span class="n">environment&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">InterruptedException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">DataLoader&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Book&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">dataLoader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">environment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDataLoader&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">IsbnDataLoader&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getSimpleName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">dataLoader&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">load&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">book&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/recuperar-datos-eficientemente-en-graphql-usando-batching-con-data-loaders/code/BookResolver.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/recuperar-datos-eficientemente-en-graphql-usando-batching-con-data-loaders/code/BookResolver.java" target="_blank">BookResolver.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Al obtener los datos del conjunto de libros que utilizan un &lt;em>batch loader&lt;/em> se produce la siguiente salida.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">$ curl -XPOST -H &amp;#39;Content-Type: application/json&amp;#39; -d &amp;#39;{&amp;#34;query&amp;#34;:&amp;#34;query{books{id title dataLoaderIsbn}}&amp;#34;}&amp;#39; http://localhost:8080/graphql
{
&amp;#34;data&amp;#34;: {
&amp;#34;books&amp;#34;: [
{
&amp;#34;id&amp;#34;: 7,
&amp;#34;title&amp;#34;: &amp;#34;Ojo en el cielo&amp;#34;,
&amp;#34;dataLoaderIsbn&amp;#34;: &amp;#34;3a8441b1-fd9a-40d4-8765-2ccb0900a223&amp;#34;
},
{
&amp;#34;id&amp;#34;: 8,
&amp;#34;title&amp;#34;: &amp;#34;Muerte de la luz&amp;#34;,
&amp;#34;dataLoaderIsbn&amp;#34;: &amp;#34;06f217f7-5be0-4334-b946-1b29e93387a1&amp;#34;
},
{
&amp;#34;id&amp;#34;: 9,
&amp;#34;title&amp;#34;: &amp;#34;El nombre de la rosa&amp;#34;,
&amp;#34;dataLoaderIsbn&amp;#34;: &amp;#34;ffc704a3-b34a-4a06-80e1-506e33d20aab&amp;#34;
},
{
&amp;#34;id&amp;#34;: 10,
&amp;#34;title&amp;#34;: &amp;#34;Los tejedores de cabellos&amp;#34;,
&amp;#34;dataLoaderIsbn&amp;#34;: &amp;#34;21b70880-e245-405e-bffc-ab6c5975d837&amp;#34;
},
{
&amp;#34;id&amp;#34;: 11,
&amp;#34;title&amp;#34;: &amp;#34;Ready Player One&amp;#34;,
&amp;#34;dataLoaderIsbn&amp;#34;: &amp;#34;18cd56d3-8050-4467-9fa8-fb9aeb0d1ea5&amp;#34;
}
]
}
}&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/recuperar-datos-eficientemente-en-graphql-usando-batching-con-data-loaders/code/curl.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/07/recuperar-datos-eficientemente-en-graphql-usando-batching-con-data-loaders/code/curl.sh" target="_blank">curl.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/GraphQL">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./gradlew run&lt;/code>.
&lt;/p></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/></entry></feed>
<?xml version="1.0" encoding="utf-8"?><feed version="2.0" xmlns="http://www.w3.org/2005/Atom"><id>https://picodotdev.github.io/blog-bitix/tags/spring/</id><title type="text">Blog Bitix</title><subtitle>Recent content on Blog Bitix</subtitle><updated>2019-11-29T18:00:00+01:00</updated><author><name>picodotdev</name></author><generator>Hugo</generator><icon>https://picodotdev.github.io/blog-bitix/assets/images/logotipos/hugo.png</icon><logo>https://picodotdev.github.io/blog-bitix/assets/images/logotipos/hugo.png</logo><rights>https://creativecommons.org/licenses/by-sa/4.0/</rights><entry><id>https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/</id><title>Implementar un segundo factor de autenticación en una aplicación web Java con Spring</title><updated>2019-11-29T18:00:00+01:00</updated><published>2019-11-29T18:00:00+01:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>&lt;strong>El segundo factor de autenticación es una medida adicional en la autenticación que proporciona una notable mayor seguridad que utilizar solo un usuario y contraseña. Utilizando Spring y la aplicación para &lt;em>smatphone&lt;/em> Google Authenticator se puede implementar en una aplicación Java el segundo factor de autenticación o &lt;em>2FA&lt;/em> con códigos temporales o &lt;em>TOTP&lt;/em>.&lt;/strong>&lt;/p>
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/spring.svg" class="right " width="200" alt="Spring" title="Spring"/>
&lt;/div>
&lt;p>Comúnmente para realizar el proceso de autenticar a un usuario se ha realizado simplemente con el método de usuario y contraseña. Sin embargo, verificar la identidad mediante usuario y contraseña para algunos usuarios no es suficientemente seguro dado que los usuarios pueden elegir contraseñas débiles con pocos caracteres o sin usar una combinación que incluya letras, números y símbolos, pueden elegir contraseñas comunes muy utilizadas fáciles de adivinar con un ataque de diccionario, pueden usar la misma contraseña para varios servicios de modo que si las contraseñas de un servicio son descubiertas cualquier otro servicio que las utilice potencialmente corre un riesgo de seguridad. Usar solo usuario y contraseña no proporciona la suficiente seguridad para ciertos servicios que permiten realizar transacciones que involucra dinero, tratan datos sensibles o son servicios atractivos para ser atacados.&lt;/p>
&lt;p>Para que las contraseñas sean seguras las aplicaciones en sus bases de datos &lt;a href="https://picodotdev.github.io/blog-bitix/2015/04/guardar-contrasenas-usando-salted-password-hashing-y-otras-formas-correctas/">guardar las contraseñas usando &lt;em>Salted Password Hashing&lt;/em>&lt;/a>, los usuarios por su parte deben utilizar un generador de contraseñas, utilizar una contraseña distinta para cada servicio y &lt;a href="https://picodotdev.github.io/blog-bitix/2016/11/guardar-contrasenas-de-forma-segura-con-keepassxc/">guardalas en una base de datos cifrada como KeePassXC&lt;/a> para recordar cada una de ellas. Las contraseñas son algo que se conoce, cualquier persona que conozca la contraseña puede autenticarse, más recientemente una capa adicional de seguridad es requerir algo que se tiene, el segundo factor de autenticación o 2FA.&lt;/p>
&lt;p>La aplicación &lt;a href="https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&amp;amp;hl=en">Google Authenticator&lt;/a> para dispositivos móviles &lt;a href="https://www.android.com/">Android&lt;/a> permite utilizarse como segundo factor de autenticación, esta aplicación genera códigos con un tiempo corto de duración que son requeridos en un segundo paso de la autenticación después de introducir el usuario y contraseña. Con un segundo factor de autenticación se requiere algo que se sabe, el usuario y contraseña, y algo que se tiene, el dispositivo móvil que genera códigos con lo que aunque la contraseña quede comprometida no se podría realizar la autenticación sin poseer el segundo factor de autenticación.&lt;/p>
&lt;p>Dado que los códigos de verificación tienen un tiempo de vida corto, habitualmente de 30 segundos, y acceder al generador del segundo factor de autenticación requiere acceso físico al dispositivo móvil la combinación de que las credenciales queden comprometidas es significativamente más difícil y por tanto la seguridad aumenta al mismo tiempo. Los principales servicios de internet como &lt;a href="https://www.google.es/">Google&lt;/a>, &lt;a href="https://amzn.to/2flFhHA">Amazon&lt;/a>, &lt;a href="https://twitter.com/">Twitter&lt;/a> y otros servicios utilizados por millones de usuarios permiten ya utilizar 2FA, un fallo en su seguridad por la cantidad de usuarios e importante información que registran les supodría una muy mala imagen, pérdida de ingresos, costes, reputación, usuarios o dependiendo de la gravedad del fallo y los datos comprometidos multas millonarias.&lt;/p>
&lt;p>A través de &lt;a href="https://spring.io/projects/spring-security">Spring Security&lt;/a> y la librería &lt;a href="https://github.com/aerogear/aerogear-otp-java">aerogear-otp-java&lt;/a> una aplicación Java puede implementar el segundo factor de autenticación, incluso posibilitar de que el requerimiento de solicitar segundo factor de autenticación sea opcional según la preferencia de un usuario o como forma de que los usuarios progresivamente habiliten el 2FA. El primer paso es proporcionar al usuario una clave secreta a través de un código QR que codifica una clave secreta que se utiliza para generar los códigos de verificación, el usuario debe escanearlo con la aplicación Google Authenticator con la cámara para que genere código de 6 dígitos con una validez de 30 segundos en el momento de autenticarse, este paso se realiza en el momento de registrarse o de activar el 2FA si es opcional. Con Google Authenticator el código en vez con la cámara también se puede introducir mediante el teclado si la aplicación se lo proporciona en forma de texto en vez de como imagen QR. La ventaja del código QR es que es más rápido y cómodo.&lt;/p>
&lt;p>El primer paso de la autenticación utilizando 2FA es introducir el usuario y contraseña. El segundo paso es introducir el código del segundo factor de autenticación. Introducidos ambos el usuario es redirigido a la página de inicio.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-1_hua9ee30696f9356c56487d9b5ce908954_39508_2560x1440_fit_box_2.png" title="Autenticación con segundo factor de autenticación" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-1_hua9ee30696f9356c56487d9b5ce908954_39508_200x150_fit_box_2.png" width="120"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-2_hu444c0787e54ca21d9ef698a533bad663_23630_2560x1440_fit_box_2.png" title="Autenticación con segundo factor de autenticación" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-2_hu444c0787e54ca21d9ef698a533bad663_23630_200x150_fit_box_2.png" width="120"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-3_hu6d853ec4973549638fd3cc79bdd6076c_19573_2560x1440_fit_box_2.png" title="Autenticación con segundo factor de autenticación" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-3_hu6d853ec4973549638fd3cc79bdd6076c_19573_200x150_fit_box_2.png" width="120"/>&lt;/a>
&lt;figcaption>Autenticación con segundo factor de autenticación&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/google-authenticator_hud7c7130da01810ea81284c92c02cbefa_101109_2560x1440_fit_box_2.png" title="Aplicación Google Authenticator con varios generadores de códigos temporales" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/google-authenticator_hud7c7130da01810ea81284c92c02cbefa_101109_300x200_fit_box_2.png" width="113"/>&lt;/a>
&lt;figcaption>Aplicación Google Authenticator con varios generadores de códigos temporales&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Validado el código del 2FA al usuario se le asignan los permisos que le corresponden en el sistema y que le otorgan permisos para realizar acciones, en este caso entrar a la página de inicio.&lt;/p>
&lt;p>La implementación en código contiene las clases que representan una cuenta en el sistema, en &lt;em>InMemoryAccountRepository&lt;/em> se crean dos usuarios &lt;em>admin&lt;/em> y &lt;em>user&lt;/em> con sus contraseñas en el ejemplo en texto plano y los roles que tiene asignados que les otorgarán permisos para realizar acciones en la aplicación.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.spring2fa.account&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">AccountRepository&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Account&lt;/span> &lt;span class="nf">find&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/AccountRepository.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/AccountRepository.java" target="_blank">AccountRepository.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.spring2fa.account&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@Repository&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">InMemoryAccountRepository&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">AccountRepository&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">ADMIN_SECRET&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;6YFX5TVT76OHHNMS&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Account&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">accounts&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">InMemoryAccountRepository&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">accounts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Account&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">init&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">init&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Account&lt;/span> &lt;span class="n">admin&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Account&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">admin&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setUsername&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;admin&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">admin&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;{noop}password&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">admin&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setAuth2fa&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">admin&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setSecret&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ADMIN_SECRET&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">admin&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setRoles&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Arrays&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">asList&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;ROLE_USER&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Account&lt;/span> &lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Account&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setUsername&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;{noop}password&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setAuth2fa&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setRoles&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Arrays&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">asList&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;ROLE_USER&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">accounts&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">admin&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">accounts&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Account&lt;/span> &lt;span class="nf">find&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">accounts&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">stream&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">filter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">account&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">account&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getUsername&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">equals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findFirst&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">orElse&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/InMemoryAccountRepository.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/InMemoryAccountRepository.java" target="_blank">InMemoryAccountRepository.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.spring2fa.account&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Account&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">password&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">secret&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Boolean&lt;/span> &lt;span class="n">auth2fa&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">roles&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getUsername&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setUsername&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">username&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">password&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">password&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">password&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">password&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getSecret&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">secret&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setSecret&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">secret&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">secret&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">secret&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Boolean&lt;/span> &lt;span class="nf">isAuth2fa&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">auth2fa&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setAuth2fa&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Boolean&lt;/span> &lt;span class="n">auth2fa&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">auth2fa&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">auth2fa&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">getRoles&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">roles&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setRoles&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">roles&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">roles&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">roles&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/Account.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/Account.java" target="_blank">Account.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>La configuración de seguridad en Spring Security indica para cada URL que permisos se requieren. Para acceder a la página de contenido &lt;em>/home&lt;/em> de la aplicación se requiere el rol &lt;em>USER&lt;/em>, a la página de inicio de sesión &lt;em>/login&lt;/em> se permite acceder a los usuario no autenticados donde introducen sus credenciales de usuario y contraseña, una vez validado el usuario y contraseña el usuario autenticado tiene el rol &lt;em>PRE_AUTH_USER&lt;/em>, dependiendo de si el usuario en su prefrencia usa 2FA o no en el manejador de autenticación exitosa &lt;em>SecondFactorAuthenticationSuccessHandler&lt;/em> redirige al usuario a la página &lt;em>/home&lt;/em> o la página &lt;em>/code&lt;/em> para intorducir el código de verificación del segundo factor autenticación. Al usuario autenticado exitosamente de forma completa se le sustituye el permiso &lt;em>PRE_AUTH_USER&lt;/em> por los que tenga asignado, en el ejemplo el rol &lt;em>USER&lt;/em>.&lt;/p>
&lt;p>La verificación del código del segundo paso de autenticación se realiza en la clase &lt;em>CodeController&lt;/em> con la clase &lt;em>Totp&lt;/em> a partir del código enviado y el código secreto con el cual se generó la imagen de código QR.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="nd">@EnableWebSecurity&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">WebSecurityConfig&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">WebSecurityConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">UserDetailsService&lt;/span> &lt;span class="n">userDetailsService&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">AuthenticationSuccessHandler&lt;/span> &lt;span class="n">authenticationSuccessHandler&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">PasswordEncoder&lt;/span> &lt;span class="nf">encoder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">PasswordEncoderFactories&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">createDelegatingPasswordEncoder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">AuthenticationSuccessHandler&lt;/span> &lt;span class="nf">authenticationSuccessHandler&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">SecondFactorAuthenticationSuccessHandler&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpSecurity&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeRequests&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">antMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/static/**&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">permitAll&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">antMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/code&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">hasRole&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;PRE_AUTH_USER&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">antMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/home&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">hasRole&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;USER&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">anyRequest&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">authenticated&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">formLogin&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">loginPage&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/login&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">permitAll&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">successHandler&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">authenticationSuccessHandler&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">logout&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">permitAll&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">registerAuthentication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">AuthenticationManagerBuilder&lt;/span> &lt;span class="n">auth&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">auth&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">userDetailsService&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">userDetailsService&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/WebSecurityConfig.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/WebSecurityConfig.java" target="_blank">WebSecurityConfig.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@EnableWebMvc&lt;/span>
&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">WebMvcConfig&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">WebMvcConfigurer&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">addViewControllers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ViewControllerRegistry&lt;/span> &lt;span class="n">registry&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">registry&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addViewController&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/login&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setViewName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;login&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">registry&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addViewController&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/code&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setViewName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;code&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">registry&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addViewController&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/home&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setViewName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;home&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">addResourceHandlers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ResourceHandlerRegistry&lt;/span> &lt;span class="n">registry&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">registry&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addResourceHandler&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/static/**&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addResourceLocations&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;classpath:/static/&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">ClassLoaderTemplateResolver&lt;/span> &lt;span class="nf">templateResolver&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">ClassLoaderTemplateResolver&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ClassLoaderTemplateResolver&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setPrefix&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;templates/&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setSuffix&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;.html&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setTemplateMode&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;HTML&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">SpringTemplateEngine&lt;/span> &lt;span class="nf">templateEngine&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ClassLoaderTemplateResolver&lt;/span> &lt;span class="n">templateResolver&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringTemplateEngine&lt;/span> &lt;span class="n">templateEngine&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">SpringTemplateEngine&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">templateEngine&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addDialect&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">LayoutDialect&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">templateEngine&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setTemplateResolver&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">templateResolver&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">templateEngine&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">ThymeleafViewResolver&lt;/span> &lt;span class="nf">viewResolver&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SpringTemplateEngine&lt;/span> &lt;span class="n">engine&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">ThymeleafViewResolver&lt;/span> &lt;span class="n">viewResolver&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ThymeleafViewResolver&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">viewResolver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setTemplateEngine&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">engine&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">viewResolver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setCache&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">viewResolver&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/WebMvcConfig.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/WebMvcConfig.java" target="_blank">WebMvcConfig.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">SecondFactorAuthenticationSuccessHandler&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">AuthenticationSuccessHandler&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">RedirectStrategy&lt;/span> &lt;span class="n">redirectStrategy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DefaultRedirectStrategy&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">onAuthenticationSuccess&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">HttpServletResponse&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Authentication&lt;/span> &lt;span class="n">authentication&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">IOException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">handle&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">authentication&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">clearAuthenticationAttributes&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">handle&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">HttpServletResponse&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Authentication&lt;/span> &lt;span class="n">authentication&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">IOException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">targetUrl&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">getTargetUrl&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">authentication&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">isCommitted&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">redirectStrategy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sendRedirect&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">targetUrl&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getTargetUrl&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Authentication&lt;/span> &lt;span class="n">authentication&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">UserDetailsAdapter&lt;/span> &lt;span class="n">userDetailsAdapter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">UserDetailsAdapter&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">SecurityContextHolder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getContext&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAuthentication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getPrincipal&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">userDetailsAdapter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAccount&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">isAuth2fa&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;/code&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Utils&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setAuthentication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;/home&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">clearAuthenticationAttributes&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">HttpSession&lt;/span> &lt;span class="n">session&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getSession&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">session&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">session&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">removeAttribute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">WebAttributes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">AUTHENTICATION_EXCEPTION&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setRedirectStrategy&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">RedirectStrategy&lt;/span> &lt;span class="n">redirectStrategy&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">redirectStrategy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">redirectStrategy&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="n">RedirectStrategy&lt;/span> &lt;span class="nf">getRedirectStrategy&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">redirectStrategy&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/SecondFactorAuthenticationSuccessHandler.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/SecondFactorAuthenticationSuccessHandler.java" target="_blank">SecondFactorAuthenticationSuccessHandler.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Utils&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setAuthentication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Authentication&lt;/span> &lt;span class="n">authentication&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SecurityContextHolder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getContext&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAuthentication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">UserDetailsAdapter&lt;/span> &lt;span class="n">userDetailsAdapter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">UserDetailsAdapter&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">SecurityContextHolder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getContext&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAuthentication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getPrincipal&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">GrantedAuthority&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">authorities&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">AuthorityUtils&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">createAuthorityList&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">userDetailsAdapter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAccount&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getRoles&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toArray&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Authentication&lt;/span> &lt;span class="n">newAuth&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">UsernamePasswordAuthenticationToken&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">authentication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getPrincipal&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">authentication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getCredentials&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">authorities&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">SecurityContextHolder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getContext&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setAuthentication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">newAuth&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/Utils.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/Utils.java" target="_blank">Utils.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">UserDetailsAdapter&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">UserDetails&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Account&lt;/span> &lt;span class="n">account&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">UserDetailsAdapter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Account&lt;/span> &lt;span class="n">account&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">account&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">account&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Collection&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">GrantedAuthority&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">getAuthorities&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">AuthorityUtils&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">createAuthorityList&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;ROLE_PRE_AUTH_USER&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getUsername&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">account&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getUsername&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">account&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">boolean&lt;/span> &lt;span class="nf">isAccountNonExpired&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">boolean&lt;/span> &lt;span class="nf">isAccountNonLocked&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">boolean&lt;/span> &lt;span class="nf">isCredentialsNonExpired&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">boolean&lt;/span> &lt;span class="nf">isEnabled&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Account&lt;/span> &lt;span class="nf">getAccount&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">account&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/UserDetailsAdapter.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/UserDetailsAdapter.java" target="_blank">UserDetailsAdapter.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Java" data-lang="Java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@Component&lt;/span>
&lt;span class="nd">@Primary&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">UserDetailsServiceAdapter&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">UserDetailsService&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">AccountRepository&lt;/span> &lt;span class="n">accountRepository&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">UserDetails&lt;/span> &lt;span class="nf">loadUserByUsername&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">UsernameNotFoundException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Account&lt;/span> &lt;span class="n">account&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">accountRepository&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">find&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">account&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">UsernameNotFoundException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">UserDetailsAdapter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/UserDetailsServiceAdapter.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/UserDetailsServiceAdapter.java" target="_blank">UserDetailsServiceAdapter.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>El código QR es una imagen generada a partir del código secreto y una información adicional que al usurio le permite identificar la cuenta, hay &lt;em>webs&lt;/em> que permiten &lt;a href="https://zxing.org/w/decode.jspx">decodificar una imagen QR&lt;/a> para analizar que información incorpora, en esta la información de la cuenta &lt;em>Spring2FA (admin)&lt;/em> y el secreto &lt;em>6YFX5TVT76OHHNMS&lt;/em> utilizado para generar los códigos temporales. En el HTML devuelto se incluye una imagen con la información embebida en el enlace de la imagen, la imagen se genera por un servicio de Google.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/qr-code-decoder_hu0bd1b6584fcbf4a08a8542128e141a4a_43488_2560x1440_fit_box_2.png" title="Decodificador de imágenes código QR" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/qr-code-decoder_hu0bd1b6584fcbf4a08a8542128e141a4a_43488_300x200_fit_box_2.png" width="300"/>&lt;/a>
&lt;figcaption>Decodificador de imágenes código QR&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="cp">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span> &lt;span class="na">xmlns&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;http://www.w3.org/1999/xhtml&amp;#34;&lt;/span> &lt;span class="na">xmlns:th&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;http://www.thymeleaf.org&amp;#34;&lt;/span> &lt;span class="na">xmlns:layout&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;http://www.ultraq.net.nz/web/thymeleaf/layout&amp;#34;&lt;/span> &lt;span class="na">layout:decorate&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;~{layout}&amp;#34;&lt;/span>&lt;span class="p">&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
...
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://chart.googleapis.com/chart?chs=200x200&amp;amp;chld=M%7C0&amp;amp;cht=qr&amp;amp;chl=otpauth%3A%2F%2Ftotp%2FSpring2FA%20(admin)%3Fsecret%3D6YFX5TVT76OHHNMS&amp;#34;&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
...
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="" target="_blank">login.html&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Las dependencias de librerías son las siguientes.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-groovy" data-lang="groovy">&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;&lt;/span>
&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-security&amp;#39;&lt;/span>
&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.thymeleaf:thymeleaf-spring5:3.0.11.RELEASE&amp;#39;&lt;/span>
&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.4.1&amp;#39;&lt;/span>
&lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.jboss.aerogear:aerogear-otp-java:1.0.0&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/build.gradle" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/code/build.gradle" target="_blank">build.gradle&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Este ejemplo está hecho con la infraestructura que proporciona Spring pero el proceso de autenticación es igualmente implementable con cualquier otro &lt;em>framework&lt;/em> o librería.&lt;/p>
&lt;p>Muchos de los servicios populares en internet implementan 2FA como medida de proteger las cuentas de los usuarios y la información en esos servicios. Hay bancos que como contraseña de acceso solo tienen un número de seis dígitos con el riesgo que representa sus usuarios por la importancia que tiene la banca en línea de los datos que se trata.&lt;/p>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/Spring2FA">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./gradlew run&lt;/code>.
&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://www.baeldung.com/spring-security-two-factor-authentication-with-soft-token">Two Factor Auth with Spring Security&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.baeldung.com/spring_redirect_after_login">Redirect to Different Pages after Login with Spring Security&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/altfatterz/two-step-login/">Two Step Login Example&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/><category term="seguridad"/><category term="spring"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2019/04/aumentar-el-tamano-del-identificativo-de-la-cookie-de-sesion-de-tomcat-o-spring-session/</id><title>Aumentar el tamaño del identificativo de la cookie de sesión de Tomcat o Spring Session</title><updated>2019-04-12T19:00:00+02:00</updated><published>2019-04-12T17:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2019/04/aumentar-el-tamano-del-identificativo-de-la-cookie-de-sesion-de-tomcat-o-spring-session/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/tomcat.svg" class="right " width="200" alt="Tomcat" title="Tomcat"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/spring-boot.svg" class="right " width="200" alt="Spring Boot" title="Spring Boot"/>
&lt;/div>
&lt;p>El protocolo HTTP es un protocolo sin estado que quiere decir que entre las peticiones no se comparte estado ni se recuerda ningún dato. Por otro lado las &lt;em>cookies&lt;/em> es pequeño conjunto de datos que son almacenados en el cliente y son enviados en cada petición que se hace a un sitio web, cada sitio web mantiene su propia colección de &lt;em>cookies&lt;/em>, dos sitios distintos no comparten sus &lt;em>cookies&lt;/em>. Para mantener estado entre dos peticiones se hace uso de las &lt;em>cookies&lt;/em>.&lt;/p>
&lt;p>En Java los servidores web envían al cliente una &lt;em>cookie&lt;/em> con simplemente un identificativo de la sesión, el estado se suele mantener en el servidor en memoria, en almacenamiento de disco o &lt;a href="https://picodotdev.github.io/blog-bitix/2015/03/datos-de-sesion-externalizados-con-spring-session/">persistido en una base de datos como Redis&lt;/a>. El identificativo de la sesión por defecto usando un contenedor de &lt;em>servlets&lt;/em> como &lt;a href="https://tomcat.apache.org/">Tomcat&lt;/a> tiene una longitud de 16 bytes que codificados en hexadecimal da lugar a 32 caracteres o 128 bits. Para aumentar la seguridad por si alguien intenta adivinar el identificativo de cualquier usuario que tenga sesión iniciada por fuerza bruta de casualidad es posible aumentar el número de caracteres para identificar la &lt;em>cookie&lt;/em> de sesión. La clase de la API que lo permite en Tomcat es &lt;a href="https://tomcat.apache.org/tomcat-9.0-doc/config/manager.html">Manager&lt;/a>.&lt;/p>
&lt;p>Según &lt;a href="https://www.owasp.org/index.php/Insufficient_Session-ID_Length">Insufficient Session-ID Length&lt;/a> un identificativo con solo 64 bits (32 de entropía) un atacante haciendo 1000 intentos por segundo y 10000 sesiones válidas tarda solo 7,15 minutos en obtener una sesión válida (32 bit = 4294967296 / 10.000 = 429496, a 1000 intentos por segundo da 429 segundos o 7,15 minutos). Con 128 bits el tiempo crece a 292 años haciendo 10000 intentos por segundo y teniendo 100000 sesiones válidas, pero podría reducirse si el número de intentos por segundo aumentase o sesiones aumentase.&lt;/p>
&lt;p>Los datos se guardan en el servidor y la &lt;em>cookie&lt;/em> con el identicativo de sesión no ocupa mucho aún pasando de 32 caracteres hexadecimales a una cifra mayor como 128, el número de caracteres no es significativo para el rendimiento pero se dificulta en varios órdenes de magnitud la dificultad de adivinar una &lt;em>cookie&lt;/em>.&lt;/p>
&lt;p>Unsando &lt;a href="https://projects.spring.io/spring-boot/">Spring Boot&lt;/a> y &lt;em>Tomcat&lt;/em> basta con usar la clase &lt;em>Manager&lt;/em> para cambiar el valor por defecto de longitud de la sesión.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.springsession&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@SpringBootApplication&lt;/span>
&lt;span class="nd">@ComponentScan&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;io.github.picodotdev.springsession&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">SESSION_ID_LENGTH&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">64&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">WebServerFactoryCustomizer&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">TomcatServletWebServerFactory&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">cookieProcessorCustomizer&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">TomcatServletWebServerFactory&lt;/span> &lt;span class="n">factory&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">factory&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addContextCustomizers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Context&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getManager&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setManager&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">StandardManager&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getManager&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getSessionIdGenerator&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setSessionIdLength&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SESSION_ID_LENGTH&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/04/aumentar-el-tamano-del-identificativo-de-la-cookie-de-sesion-de-tomcat-o-spring-session/code/Main-1.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/04/aumentar-el-tamano-del-identificativo-de-la-cookie-de-sesion-de-tomcat-o-spring-session/code/Main-1.java" target="_blank">Main-1.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Persistiendo la sesión en &lt;a href="https://redis.io/">Redis&lt;/a> con &lt;a href="https://projects.spring.io/spring-session/">Spring Sesion&lt;/a> por defecto el identificativo de la sesión es generado a partir de un &lt;a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/UUID.html">UUID&lt;/a>, el identificativo de la sesión tiene el mismo valor por defecto de 128 bits pero para cambiar la longitud hay que proporcionar una clase que cambia el comportamiento.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.springsession&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@SpringBootApplication&lt;/span>
&lt;span class="nd">@EnableRedisHttpSession&lt;/span>
&lt;span class="nd">@ComponentScan&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;io.github.picodotdev.springsession&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">SESSION_ID_LENGTH&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">64&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">DefaultCookieSerializer&lt;/span> &lt;span class="nf">cookieSerializer&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">DefaultCookieSerializer&lt;/span> &lt;span class="n">cookieSerializer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DefaultCookieSerializer&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">cookieSerializer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setUseBase64Encoding&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">cookieSerializer&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="nd">@Primary&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">RedisOperationsSessionRepository&lt;/span> &lt;span class="nf">defaultSessionRepository&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">RedisOperations&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">sessionRedisOperations&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DefaultRedisOperationSessionRespository&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">sessionRedisOperations&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/04/aumentar-el-tamano-del-identificativo-de-la-cookie-de-sesion-de-tomcat-o-spring-session/code/Main-2.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/04/aumentar-el-tamano-del-identificativo-de-la-cookie-de-sesion-de-tomcat-o-spring-session/code/Main-2.java" target="_blank">Main-2.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">org.springframework.session.data.redis&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">DefaultRedisOperationSessionRespository&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">RedisOperationsSessionRepository&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">HEX_CHARACTERS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;0123456789ABCDEF&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">MAX_INACTIVE_INTERVAL_MINUTES&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">30&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">SESSION_ID_LENGTH&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">127&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">SecureRandom&lt;/span> &lt;span class="n">randomGenerator&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">DefaultRedisOperationSessionRespository&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">RedisOperations&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">sessionRedisOperations&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">super&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">sessionRedisOperations&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">RedisOperationsSessionRepository&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">RedisSession&lt;/span> &lt;span class="nf">createSession&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">randomGenerator&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">randomGenerator&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">SecureRandom&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kt">byte&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="n">bytes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="kt">byte&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">SESSION_ID_LENGTH&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">randomGenerator&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">nextBytes&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">bytes&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">getHex&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">bytes&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">RedisOperationsSessionRepository&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">RedisSession&lt;/span> &lt;span class="n">redisSession&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">RedisOperationsSessionRepository&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">RedisSession&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">MapSession&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">redisSession&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setMaxInactiveInterval&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Duration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">ofMinutes&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">MAX_INACTIVE_INTERVAL_MINUTES&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">redisSession&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getHex&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kt">byte&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="n">bytes&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">bytes&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">StringBuilder&lt;/span> &lt;span class="n">hex&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">StringBuilder&lt;/span>&lt;span class="o">(&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">bytes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">length&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="kt">byte&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">bytes&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">hex&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">append&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HEX_CHARACTERS&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">charAt&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">0xF0&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">4&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">append&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HEX_CHARACTERS&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">charAt&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">0x0F&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">hex&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toString&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/04/aumentar-el-tamano-del-identificativo-de-la-cookie-de-sesion-de-tomcat-o-spring-session/code/DefaultRedisOperationSessionRespository.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/04/aumentar-el-tamano-del-identificativo-de-la-cookie-de-sesion-de-tomcat-o-spring-session/code/DefaultRedisOperationSessionRespository.java" target="_blank">DefaultRedisOperationSessionRespository.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/04/aumentar-el-tamano-del-identificativo-de-la-cookie-de-sesion-de-tomcat-o-spring-session/images/spring-session_hu753693623e6b310d1a7f380031e464c8_72218_2560x1440_fit_box_2.png" title="Longitud del identificativo de sesión de 64 bytes o 128 caracteres hexadecimales" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/04/aumentar-el-tamano-del-identificativo-de-la-cookie-de-sesion-de-tomcat-o-spring-session/images/spring-session_hu753693623e6b310d1a7f380031e464c8_72218_600x450_fit_box_2.png" width="600"/>&lt;/a>
&lt;figcaption>Longitud del identificativo de sesión de 64 bytes o 128 caracteres hexadecimales&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">D2C631033F477F9A3111F40CFDBB83DA041BC7EB4C7CD3F824349945E9CA73E660FE3E0D4DC75A685E9255F7F3C538AC1CE07ED055547CA379BA2CB7B8A52516&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/04/aumentar-el-tamano-del-identificativo-de-la-cookie-de-sesion-de-tomcat-o-spring-session/code/session-id.txt" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/04/aumentar-el-tamano-del-identificativo-de-la-cookie-de-sesion-de-tomcat-o-spring-session/code/session-id.txt" target="_blank">session-id.txt&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Un libro dedicado a la seguridad muy bueno que he leído es &lt;a href="https://amzn.to/2DeAdi1">Iron-Clad Java Applications&lt;/a>, tiene montón de detalles dedicados a la seguridad de las aplicaciones web sean seguras, incluido como este dedicado a la longitud de los identificativos de la sesión.&lt;/p>
&lt;p>Una clave asimétrica considerada segura puedes ser de 2048 bits pero se puede &lt;a href="https://picodotdev.github.io/blog-bitix/2014/02/generar-y-convertir-claves-y-certificados-con-openssl/">generar una de hasta 8192 bits&lt;/a> con el mismo esfuerzo lo que aumenta la seguridad de forma exponencial ante un ataque de fuerza bruta que con el aumento de la capacidad de cómputo y en el futuro puede ser viable. El tiempo de cómputo requerido por usar una clave de mayor tamaño no creo que sea significativo para la mayoría de los casos pero igualmente la seguridad aumenta.&lt;/p>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringSession">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./gradlew run&lt;/code>.
&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://stackoverflow.com/questions/35062780/how-to-change-the-session-id-length-in-spring-boot">How to change the session id length in Spring Boot&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/spring-projects/spring-session/pull/204">Spring Session, Allow for configuration of session id generation and format&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="java"/><category term="planeta-codigo"/><category term="seguridad"/><category term="spring"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/</id><title>Ejemplo de máquina de estados con Spring Statemachine</title><updated>2019-03-31T23:00:00+02:00</updated><published>2019-03-31T06:30:00+01:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/spring.svg" class="right " width="200" alt="Spring" title="Spring"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;p>Hace ya unos años escribí un &lt;a href="https://picodotdev.github.io/blog-bitix/2015/08/implementacion-de-maquina-de-estados-finita-fsm-con-java-8/">ejemplo y un artículo con una implementación propia de una máquina de estado en Java&lt;/a>, para algún caso muy básico puede ser suficiente pero para algo serio no es la opción a elegir. Pasado un tiempo de ese ejemplo y artículo descubrí uno de los muchos proyectos de &lt;a href="https://spring.io/">Spring&lt;/a> útiles para una aplicación, para las necesidades más habítuales tiene un proyecto que lo proporciona y para las menos habituales es también posible que la proporcione como en el caso del proyecto &lt;a href="https://projects.spring.io/spring-statemachine/">Spring Statemachine&lt;/a> que precisamente tiene el mismo objetivo de implementar una máquina de estados cubriendo muchos casos de uso.&lt;/p>
&lt;p>El uso de una máquina de estados permite modelar un proceso con cierta complejidad. Puede ser el ciclo de vida de una compra, un envío, un proceso documental, financiero, &amp;hellip; cualquiera en el que intervengan estados, transiciones entre esos estados y realización de acciones necesarias para proporcionar la funcionalidad deseada.&lt;/p>
&lt;p>Una máquina de estados se compone de un conjunto de estados finito, de transiciones en esos estados, de eventos que disparan las transiciones y cambios de estado, de acciones asociadas a los estados, a las transiciones o a la entrada o salida de un estado, &lt;em>guards&lt;/em> que permiten decidir que transición se escoge entre varias en los &lt;em>choices&lt;/em>, &lt;em>forks&lt;/em> en las que el flujo sigue por varios caminos en paralelo, temporizadores que pasado un tiempo disparan una transición, seguridad para proteger la ejecución de eventos, transiciones y acciones con &lt;a href="https://spring.io/projects/spring-security">Spring Security&lt;/a>, persistencia tanto para la configuración como para el estado en bases de datos relacionales o NoSQL como &lt;a href="https://redis.io/">Redis&lt;/a> y &lt;a href="https://www.mongodb.com/">MongoDB&lt;/a>. Una lista bastante completa de características que cubrirá las necesidades de la mayoría de aplicaciones.&lt;/p>
&lt;p>Aparte de proporcionar una librería para crear máquinas de estados en Java otra ventaja es que el fujo de un proceso queda recogido y documentado en la implementación de la máquina de estados. De que estados, transiciones y eventos se compone en un punto más centralizado lo que en otro caso podría estar repartido por el código de la aplicación utilizando una solución propia codificada expresamente para el caso.&lt;/p>
&lt;p>En el ejemplo he definido el siguente grafo de estados y transiciones que contiene estado inicial, &lt;em>choice&lt;/em>, &lt;em>fork&lt;/em>, &lt;em>join&lt;/em>, jerarquía de estados con en el estado &lt;em>Tasks&lt;/em> y un estado final. Una selección completa del conjunto de tipos de estados. En este caso las flechas van únicamente en una dirección pero perfectamente el flujo podría tener transiciones que volviesen a estados anteriores creando ciclos.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/images/graph_hue3316206d4ba6e494d0821f7656ed998_24142_2560x1440_fit_box_2.png" title="Grafo de la máquina de estados" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/images/graph_hue3316206d4ba6e494d0821f7656ed998_24142_600x450_fit_box_2.png" width="600"/>&lt;/a>
&lt;figcaption>Grafo de la máquina de estados&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>El uso de &lt;em>Spring Statemachine&lt;/em> es relativamente sencillo. En el ejemplo se define en un enumerado la lista de estados, también la lista de eventos o transiciones. Una de las formas de definir el grafo dela máquina de estados es mediante código Java y utilizando Spring definiendo un &lt;em>bean&lt;/em>. La clase &lt;a href="https://docs.spring.io/spring-statemachine/docs/current/api/org/springframework/statemachine/config/StateMachineBuilder.html">StateMachineBuilder&lt;/a> facilita la construcción de la definición de la máquina de estados, por una parte está la configuración general o de infraestructura con el método &lt;a href="https://docs.spring.io/spring-statemachine/docs/current/api/org/springframework/statemachine/config/StateMachineBuilder.Builder.html#configureConfiguration--">configureConfiguration()&lt;/a>. Con el método &lt;a href="https://docs.spring.io/spring-statemachine/docs/current/api/org/springframework/statemachine/config/StateMachineBuilder.Builder.html#configureStates--">configureStates()&lt;/a> se define los estados de la máquina y su tipo (inicial, final, normal, &lt;em>choice&lt;/em>, &lt;em>fork&lt;/em>, &lt;em>join&lt;/em>,) así como las acciones que se deseen ejecutar al entrar, en el estado y al salir del estado con los métodos &lt;em>stateEntry()&lt;/em>, &lt;em>stateDo()&lt;/em> y &lt;em>stateExit()&lt;/em>. Con el método &lt;em>withStates()()&lt;/em> se pueden definir submáquinas o una jerarquía de estados como en el caso del estado &lt;em>Tasks&lt;/em>. Finalmente hay que definir cuales son las posibles transiciones de los estados y que eventos las disparan. Normalmente las transiciones se definen con el método &lt;a href="https://docs.spring.io/spring-statemachine/docs/current/api/org/springframework/statemachine/config/builders/StateMachineTransitionConfigurer.html#withExternal--">withExternal()&lt;/a> pero en los casos de los estados de tipo &lt;em>choice&lt;/em>, &lt;em>fork&lt;/em> y &lt;em>join&lt;/em> se define con los métodos &lt;a href="https://docs.spring.io/spring-statemachine/docs/current/api/org/springframework/statemachine/config/builders/StateMachineTransitionConfigurer.html#withChoice--">withChoice()&lt;/a>, &lt;a href="https://docs.spring.io/spring-statemachine/docs/current/api/org/springframework/statemachine/config/builders/StateMachineTransitionConfigurer.html#withFork--">withFork()&lt;/a> y &lt;a href="https://docs.spring.io/spring-statemachine/docs/current/api/org/springframework/statemachine/config/builders/StateMachineTransitionConfigurer.html#withJoin--">withJoin()&lt;/a>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springstatemachine&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@SpringBootApplication&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">CommandLineRunner&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kd">enum&lt;/span> &lt;span class="n">States&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">START&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">STATE1&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">CHOICE&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">CHOICE1&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">CHOICE2&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">FORK&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">TASKS&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">TASK11&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">TASK12&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">TASK13&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">TASK21&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">TASK22&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">TASK23&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">JOIN&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">STATE2&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">END&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kd">enum&lt;/span> &lt;span class="n">Events&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">START_STATE1&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">STATE1_CHOICE&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">CHOICE1_FORK&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">CHOICE2_FORK&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">TASK11_TASK12&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">TASK12_TASK13&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">TASK21_TASK22&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">TASK22_TASK23&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">STATE2_END&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">ApplicationContext&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">StateMachine&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Events&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">machine1&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">StateMachine&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Events&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">buildMachine&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">DefaultAction&lt;/span> &lt;span class="n">action&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">DefaultErrorAction&lt;/span> &lt;span class="n">errorAction&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">DefaultStateMachineEventListener&lt;/span> &lt;span class="n">listener&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">StateMachineBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Builder&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Events&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">builder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">StateMachineBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="c1">// https://github.com/spring-projects/spring-statemachine/issues/354
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">ThreadPoolTaskScheduler&lt;/span> &lt;span class="n">taskScheduler&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ThreadPoolTaskScheduler&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">taskScheduler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setDaemon&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">taskScheduler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">initialize&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">configureConfiguration&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">withConfiguration&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">taskScheduler&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">taskScheduler&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">configureStates&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withStates&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">initial&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">START&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">stateEntry&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">STATE1&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">action&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">errorAction&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">stateDo&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">STATE1&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">action&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">errorAction&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">stateExit&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">STATE1&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">action&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">errorAction&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">choice&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">CHOICE&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">state&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">CHOICE1&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">state&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">CHOICE2&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">fork&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">FORK&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">state&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASKS&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">join&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">JOIN&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">state&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">STATE2&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">end&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">END&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withStates&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">parent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASKS&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">initial&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK11&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">state&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK12&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">end&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK13&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withStates&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">parent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASKS&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">initial&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK21&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">state&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK22&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">end&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK23&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">configureTransitions&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withExternal&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">source&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">START&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">target&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">STATE1&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">event&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Events&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">START_STATE1&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">action&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Actions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">errorCallingAction&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">action&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">errorAction&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withExternal&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">source&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">STATE1&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">target&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">CHOICE&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">event&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Events&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">STATE1_CHOICE&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withChoice&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">source&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">CHOICE&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">first&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">CHOICE1&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">RandomGuard&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">last&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">CHOICE2&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withExternal&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">source&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">CHOICE1&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">target&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">FORK&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">event&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Events&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">CHOICE1_FORK&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withExternal&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">source&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">CHOICE2&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">target&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">FORK&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">event&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Events&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">CHOICE2_FORK&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withFork&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">source&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">FORK&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">target&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASKS&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withExternal&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">state&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASKS&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">source&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK11&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">target&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK12&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">event&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Events&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK11_TASK12&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withExternal&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">source&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK12&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">target&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK13&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">event&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Events&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK12_TASK13&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withExternal&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">source&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK21&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">target&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK22&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">event&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Events&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK21_TASK22&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withExternal&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">source&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK22&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">target&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK23&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">event&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Events&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK22_TASK23&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withJoin&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">source&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK13&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">source&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK23&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">target&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">JOIN&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withExternal&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">source&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">JOIN&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">target&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">STATE2&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withExternal&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">source&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">STATE2&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">target&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">END&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">event&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Events&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">STATE2_END&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">StateMachine&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">States&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Events&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">stateMachine&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">stateMachine&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addStateListener&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">listener&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">stateMachine&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/code/Main-1.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/code/Main-1.java" target="_blank">Main-1.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Las acciones asociadas a los estados del ejemplo simplemente emiten trazas pero tienen disponible el parámetro &lt;em>context&lt;/em> para obtener datos e implementar su lógica, como es un componente de Spring podría incluso hacer uso de inyección de dependencias para utilizar otros servicios que necesitase.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springstatemachine&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.slf4j.Logger&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.slf4j.LoggerFactory&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.statemachine.StateContext&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.statemachine.action.Action&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.stereotype.Component&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Component&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">DefaultAction&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">Action&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">States&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Events&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="n">Logger&lt;/span> &lt;span class="n">logger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LoggerFactory&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getLogger&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">DefaultAction&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">execute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">StateContext&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">States&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Events&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Action Source: {}, State: {}, Target: {}, Event: {}&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getSource&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getSource&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getStateMachine&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getState&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getTarget&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getTarget&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getEvent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/code/DefaultAction.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/code/DefaultAction.java" target="_blank">DefaultAction.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springstatemachine&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.statemachine.StateContext&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.statemachine.action.Action&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.stereotype.Component&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Component&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">DefaultErrorAction&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">Action&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">States&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Events&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">execute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">StateContext&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">States&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Events&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printStackTrace&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/code/DefaultErrorAction.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/code/DefaultErrorAction.java" target="_blank">DefaultErrorAction.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>En el caso de un &lt;em>choice&lt;/em> se utilizan los métodos &lt;a href="https://docs.spring.io/spring-statemachine/docs/current/api/org/springframework/statemachine/config/configurers/ChoiceTransitionConfigurer.html#first-S-org.springframework.statemachine.guard.Guard-">first()&lt;/a>, &lt;a href="https://docs.spring.io/spring-statemachine/docs/current/api/org/springframework/statemachine/config/configurers/ChoiceTransitionConfigurer.html#then-S-org.springframework.statemachine.guard.Guard-">then()&lt;/a> y &lt;a href="https://docs.spring.io/spring-statemachine/docs/current/api/org/springframework/statemachine/config/configurers/ChoiceTransitionConfigurer.html#last-S-">last()&lt;/a> que una cláusula &lt;em>guard&lt;/em> en los dos primeros determinan a que estado se transiciona. Una clásula &lt;em>guard&lt;/em> es una instancia de la clase &lt;a href="https://docs.spring.io/spring-statemachine/docs/current/api/org/springframework/statemachine/guard/Guard.html">Guard&lt;/a> que contiene un método que devuelve un &lt;em>boolean&lt;/em> según su lógica. Si es verdadero se seleciona el estado asociado, para la lógical se puede utilizar la información de contexto &lt;a href="https://docs.spring.io/spring-statemachine/docs/current/api/org/springframework/statemachine/StateContext.html">StateContext&lt;/a> entre otra información como la que se haya asociado en los diferentes estados con el método &lt;a href="https://docs.spring.io/spring-statemachine/docs/current/api/org/springframework/statemachine/StateContext.html#getExtendedState--">getExtendedState()&lt;/a> y la proporcionada en la ejecución del evento con &lt;a href="https://docs.spring.io/spring-statemachine/docs/current/api/org/springframework/statemachine/StateContext.html#getMessageHeaders--">getMessageHeaders()&lt;/a>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springstatemachine&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.statemachine.StateContext&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.statemachine.guard.Guard&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.util.Random&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">RandomGuard&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">Guard&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">States&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Events&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">boolean&lt;/span> &lt;span class="nf">evaluate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">StateContext&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">States&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Events&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Random&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">nextBoolean&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/code/RandomGuard.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/code/RandomGuard.java" target="_blank">RandomGuard.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>En este ejemplo se utiliza &lt;a href="https://projects.spring.io/spring-boot/">Spring Boot&lt;/a>, aparte de las configuraciones anteriores se realizan dos cosas adicionales. Una de ellas es utilizar un &lt;a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.html">ThreadPoolTaskScheduler&lt;/a> en modo demonio de modo que la máquina virtual y el programa pueda finalizar correctamente. La otra es que con una implementación de la clase &lt;a href="https://docs.spring.io/spring-statemachine/docs/current/api/org/springframework/statemachine/listener/StateMachineListenerAdapter.html">StateMachineListenerAdapter&lt;/a> se pueden recibir que acciones realiza la máquina de estados, en este caso para emitir trazas.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springstatemachine&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.slf4j.Logger&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.slf4j.LoggerFactory&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.messaging.Message&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.statemachine.StateContext&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.statemachine.StateMachine&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.statemachine.listener.StateMachineListenerAdapter&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.statemachine.state.State&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.statemachine.transition.Transition&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.stereotype.Component&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Component&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">DefaultStateMachineEventListener&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">StateMachineListenerAdapter&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">States&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Events&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="n">Logger&lt;/span> &lt;span class="n">logger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LoggerFactory&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getLogger&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">DefaultStateMachineEventListener&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">stateChanged&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">State&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">States&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Events&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">from&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">State&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">States&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Events&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">to&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Listener stateChanged from {} to {}&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">from&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">from&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">to&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">to&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">stateEntered&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">State&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">States&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Events&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">state&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Listener stateEntered in {}&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">state&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">stateExited&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">State&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">States&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Events&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">state&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Listener stateExited in {}&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">state&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">transition&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Transition&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">States&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Events&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">transition&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Listener transition from {} to {}&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">transition&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getSource&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">transition&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getSource&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">:&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">transition&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getTarget&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">transition&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getTarget&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">transitionStarted&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Transition&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">States&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Events&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">transition&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Listener transitionStarted from {} to {}&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">transition&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getSource&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">transition&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getSource&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">transition&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getTarget&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">transition&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getTarget&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">transitionEnded&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Transition&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">States&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Events&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">transition&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Listener transitionEnded from {} to {}&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">transition&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getSource&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">transition&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getSource&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">transition&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getTarget&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">transition&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getTarget&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">stateMachineStarted&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">StateMachine&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">States&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Events&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">stateMachine&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Listener stateMachineStarted&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">stateMachineStopped&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">StateMachine&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">States&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Events&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">stateMachine&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Listener stateMachineStopped&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">eventNotAccepted&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Message&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Events&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">event&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Listener eventNotAccepted {}&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">event&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">extendedStateChanged&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Object&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Listener extendedStateChanged {} to {}&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">stateMachineError&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">StateMachine&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">States&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Events&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">stateMachine&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="n">exception&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Listener stateMachineError {}&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">exception&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getMessage&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">stateContext&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">StateContext&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">States&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">Events&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">stateContext&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Listener stateContext (Message Payload: {}, Message Headers: {}, Variables: {}&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">stateContext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getMessage&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">stateContext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getMessage&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getPayload&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">stateContext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getMessageHeaders&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">stateContext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getExtendedState&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getVariables&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/code/DefaultStateMachineEventListener.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/code/DefaultStateMachineEventListener.java" target="_blank">DefaultStateMachineEventListener.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Una vez definida la máquina de estados su uso comienza con el método &lt;a href="https://docs.spring.io/spring-statemachine/docs/current/api/org/springframework/statemachine/region/Region.html#start--">start()&lt;/a>, a continuación ya se pueden enviar eventos par provocar cambios de estado y ejecución de acciones. Se puede proporcionar información de contexto para la máquina accesible desde cualquier estado en el mapa obtenido con &lt;a href="https://docs.spring.io/spring-statemachine/docs/current/api/org/springframework/statemachine/ExtendedState.html#getVariables--">ExtendedState.getVariables()&lt;/a> y al provocar eventos con la clase &lt;a href="https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/messaging/support/GenericMessage.html">GenericMessage&lt;/a>. En cualquier momento el método &lt;a href="https://docs.spring.io/spring-statemachine/docs/current/api/org/springframework/statemachine/support/AbstractStateMachine.html#getState--">getState()&lt;/a> devuelve en que estado se encuentra la máquina. Según la rama que haya elegido la clase &lt;em>RandomGuard&lt;/em> en la bifurcación y el estado en el que esté la máquina se envía la transición &lt;em>CHOICE1_FORK&lt;/em> o &lt;em>CHOICE2_FORK&lt;/em>. El &lt;em>fork&lt;/em> provoca que la máquina de estados ejecute en paralelo dos caminos, enviados los eventos correctos se llega a los estados finales de las dos ramas del subestado y se pasa automáticamente al estado &lt;em>JOIN&lt;/em> que a su vez pasa automáticamente a &lt;em>STATE2&lt;/em>, finalmente se pasa al estado &lt;em>END&lt;/em> y termina la máquina de estados.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springstatemachine&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@SpringBootApplication&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">CommandLineRunner&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Random&lt;/span> &lt;span class="n">random&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Random&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">machine1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">start&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">machine1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getExtendedState&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getVariables&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;variable&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">42&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">machine1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sendEvent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">GenericMessage&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Events&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">START_STATE1&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">singletonMap&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;key&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">31&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">machine1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sendEvent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Events&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">STATE1_CHOICE&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">machine1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sendEvent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">machine1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getState&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">States&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">CHOICE1&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">Events&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">CHOICE1_FORK&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">Events&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">CHOICE2_FORK&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">machine1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sendEvent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Events&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK11_TASK12&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">machine1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sendEvent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Events&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK21_TASK22&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">machine1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sendEvent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Events&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK12_TASK13&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">machine1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sendEvent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Events&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK22_TASK23&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">machine1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sendEvent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Events&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">STATE2_END&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">machine1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">stop&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/code/Main-2.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/code/Main-2.java" target="_blank">Main-2.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Otro caso de uso posible es en vez de iniciar la máquina de estados desde el inicio es iniciarla en un determinado estado para continuar con el flujo de una entidad que anteriormente se quedó en ese estado. En el caso del ejemplo la máquina de estados se continua desde el estado &lt;em>TASK11&lt;/em> y &lt;em>TASK22&lt;/em> utilizando el método &lt;a href="https://docs.spring.io/spring-statemachine/docs/current/api/org/springframework/statemachine/support/AbstractStateMachine.html#resetStateMachine-org.springframework.statemachine.StateMachineContext-">resetStateMachine()&lt;/a>, se vuelve a iniciar la máquina y se envían los eventos adecuados a partir de esos estados.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springstatemachine&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@SpringBootApplication&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">CommandLineRunner&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="n">machine1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">start&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">machine1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sendEvent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Events&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK11_TASK12&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">machine1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sendEvent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Events&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK22_TASK23&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">machine1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sendEvent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Events&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TASK12_TASK13&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">machine1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sendEvent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Events&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">STATE2_END&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">machine1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">stop&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/code/Main-3.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/code/Main-3.java" target="_blank">Main-3.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Por defecto el contenedor de dependencias de Spring utiliza el &lt;a href="https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/beans/factory/config/Scope.html">@Scope&lt;/a> &lt;em>singleton&lt;/em> para los &lt;em>beans&lt;/em> de modo que solo existe una única instancia, como las máquinas tiene estado no pueden compartirse, hay que crear una nueva en caso de querer utilizar dos simultáneamente como sería el caso de una aplicación web o un proceso que escucha mensajes de una cola, utilizando el &lt;em>scope prototype&lt;/em> se crea una instancia cada vez que se necesite. La creación de más máquina de estado se indica en la documentación que es algo costoso para no tener que crearlas, tener varias instancias y limitado a cierto número se puede utilizar un &lt;a href="https://docs.spring.io/spring-statemachine/docs/2.1.1.RELEASE/reference/htmlsingle/#statemachine-examples-eventservice">&lt;em>pool&lt;/em> de máquinas de estado&lt;/a>.&lt;/p>
&lt;p>En un cambio de estado se produce la siguiente secuencia de eventos y acciones.&lt;/p>
&lt;ul>
&lt;li>Se notifica del inicio de la transición.&lt;/li>
&lt;li>Se ejecuta la acción asociada a la transición.&lt;/li>
&lt;li>Se notifica de la transición, de la salida del estado anterior y de la entrada en el nuevo.&lt;/li>
&lt;li>Se ejecuta la acción de entrada al estado y del estado.&lt;/li>
&lt;li>Se notifica del cambio de estado.&lt;/li>
&lt;li>Se notifica de la finalización de la transición.&lt;/li>
&lt;/ul>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">... : Listener transitionStarted from START to STATE1
... : Action Source: START, State: START, Target: STATE1, Event: START_STATE1
... : Listener transition from START to STATE1
... : Listener stateExited in START
... : Listener stateEntered in STATE1
... : Action Source: START, State: STATE1, Target: STATE1, Event: START_STATE1
... : Action Source: START, State: STATE1, Target: STATE1, Event: START_STATE1
... : Listener stateChanged from START to STATE1
... : Listener transitionEnded from START to STATE1&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/code/System.out-3" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/code/System.out-3" target="_blank">System.out-3&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Estas son las dependencias necesarias a añadir n la herramienta de construcción y la salida en la terminal de las trazas ejecutando la máquina de estados desde el estado inicial e inicializada desde un estado en concreto.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Groovy" data-lang="Groovy">&lt;span class="n">plugins&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;java&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;application&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">mainClassName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;io.github.picodotdev.blogbitix.springstatemachine.Main&amp;#39;&lt;/span>
&lt;span class="n">ext&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">versions&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">[&lt;/span>
&lt;span class="nl">springBoot:&lt;/span> &lt;span class="s1">&amp;#39;2.1.3.RELEASE&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="o">]&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">repositories&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">jcenter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">implementation&lt;/span> &lt;span class="nf">platform&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;org.springframework.boot:spring-boot-dependencies:$versions.springBoot&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;org.springframework.boot:spring-boot-starter&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;org.springframework.boot:spring-boot-autoconfigure&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;org.springframework.statemachine:spring-statemachine-core:2.1.1.RELEASE&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/code/build.gradle" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/code/build.gradle" target="_blank">build.gradle&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;span class="lnt">147
&lt;/span>&lt;span class="lnt">148
&lt;/span>&lt;span class="lnt">149
&lt;/span>&lt;span class="lnt">150
&lt;/span>&lt;span class="lnt">151
&lt;/span>&lt;span class="lnt">152
&lt;/span>&lt;span class="lnt">153
&lt;/span>&lt;span class="lnt">154
&lt;/span>&lt;span class="lnt">155
&lt;/span>&lt;span class="lnt">156
&lt;/span>&lt;span class="lnt">157
&lt;/span>&lt;span class="lnt">158
&lt;/span>&lt;span class="lnt">159
&lt;/span>&lt;span class="lnt">160
&lt;/span>&lt;span class="lnt">161
&lt;/span>&lt;span class="lnt">162
&lt;/span>&lt;span class="lnt">163
&lt;/span>&lt;span class="lnt">164
&lt;/span>&lt;span class="lnt">165
&lt;/span>&lt;span class="lnt">166
&lt;/span>&lt;span class="lnt">167
&lt;/span>&lt;span class="lnt">168
&lt;/span>&lt;span class="lnt">169
&lt;/span>&lt;span class="lnt">170
&lt;/span>&lt;span class="lnt">171
&lt;/span>&lt;span class="lnt">172
&lt;/span>&lt;span class="lnt">173
&lt;/span>&lt;span class="lnt">174
&lt;/span>&lt;span class="lnt">175
&lt;/span>&lt;span class="lnt">176
&lt;/span>&lt;span class="lnt">177
&lt;/span>&lt;span class="lnt">178
&lt;/span>&lt;span class="lnt">179
&lt;/span>&lt;span class="lnt">180
&lt;/span>&lt;span class="lnt">181
&lt;/span>&lt;span class="lnt">182
&lt;/span>&lt;span class="lnt">183
&lt;/span>&lt;span class="lnt">184
&lt;/span>&lt;span class="lnt">185
&lt;/span>&lt;span class="lnt">186
&lt;/span>&lt;span class="lnt">187
&lt;/span>&lt;span class="lnt">188
&lt;/span>&lt;span class="lnt">189
&lt;/span>&lt;span class="lnt">190
&lt;/span>&lt;span class="lnt">191
&lt;/span>&lt;span class="lnt">192
&lt;/span>&lt;span class="lnt">193
&lt;/span>&lt;span class="lnt">194
&lt;/span>&lt;span class="lnt">195
&lt;/span>&lt;span class="lnt">196
&lt;/span>&lt;span class="lnt">197
&lt;/span>&lt;span class="lnt">198
&lt;/span>&lt;span class="lnt">199
&lt;/span>&lt;span class="lnt">200
&lt;/span>&lt;span class="lnt">201
&lt;/span>&lt;span class="lnt">202
&lt;/span>&lt;span class="lnt">203
&lt;/span>&lt;span class="lnt">204
&lt;/span>&lt;span class="lnt">205
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext"> . ____ _ __ _ _
/\\ / ___&amp;#39;_ __ _ _(_)_ __ __ _ \ \ \ \
( ( )\___ | &amp;#39;_ | &amp;#39;_| | &amp;#39;_ \/ _` | \ \ \ \
\\/ ___)| |_)| | | | | || (_| | ) ) ) )
&amp;#39; |____| .__|_| |_|_| |_\__, | / / / /
=========|_|==============|___/=/_/_/_/
:: Spring Boot :: (v2.1.3.RELEASE)
...
... : Starting Main on archlinux with PID 32679 (/home/picodotdev/Software/personal/blog-ejemplos/SpringStatemachine/build/classes/java/main started by picodotdev in /home/picodotdev/Software/personal/blog-ejemplos/SpringStatemachine)
... : No active profile set, falling back to default profiles: default
... : Initializing ExecutorService
... : Started Main in 0.719 seconds (JVM running for 0.948)
... : Listener transitionStarted from null to START
... : Listener stateContext (Message Payload: null, Message Headers: {id=8b954f2b-aeef-48dd-a4ca-e799c188d476, timestamp=1554007267639}, Variables: {}
... : Listener transition from null to START
... : Listener stateContext (Message Payload: null, Message Headers: {id=e1bf1cb1-c597-4975-6874-580b8d7c6a0a, timestamp=1554007267640}, Variables: {}
... : Listener stateEntered in START
... : Listener stateContext (Message Payload: null, Message Headers: {id=e938b91d-bada-c56b-d845-5f3958bba4f8, timestamp=1554007267641}, Variables: {}
... : Listener stateChanged from null to START
... : Listener stateContext (Message Payload: null, Message Headers: {id=b58324de-f43d-417b-cc38-86efdea7274f, timestamp=1554007267641}, Variables: {}
... : Listener stateMachineStarted
... : Listener stateContext (Message Payload: null, Message Headers: {id=747d233f-0d46-0bd0-78be-6cf026739dd8, timestamp=1554007267642}, Variables: {}
... : Listener transitionEnded from null to START
... : Listener stateContext (Message Payload: null, Message Headers: {id=1fe8b3a2-e176-4791-dcab-d8759b2e4dc6, timestamp=1554007267642}, Variables: {}
... : started org.springframework.statemachine.support.DefaultStateMachineExecutor@51e37590
... : started STATE1 TASKS TASK13 TASK11 TASK12 TASK21 TASK23 TASK22 CHOICE1 CHOICE2 START STATE2 END JOIN FORK CHOICE / START / uuid=a2882db4-b636-4fac-93d0-87c50434401e / id=null
... : Listener extendedStateChanged variable to 42
... : Listener stateContext (Message Payload: null, Message Headers: {id=afa8655f-09a8-a551-c11e-36a36cd2c92a, timestamp=1554007267643}, Variables: {variable=42}
... : Listener transitionStarted from START to STATE1
... : Listener stateContext (Message Payload: START_STATE1, Message Headers: {key=31, id=bf50ec37-b6f7-32d5-fd59-292d7f1ea265, timestamp=1554007267643}, Variables: {variable=42}
... : Action Source: START, State: START, Target: STATE1, Event: START_STATE1
... : Listener transition from START to STATE1
... : Listener stateContext (Message Payload: START_STATE1, Message Headers: {key=31, id=bf50ec37-b6f7-32d5-fd59-292d7f1ea265, timestamp=1554007267643}, Variables: {variable=42}
... : Listener stateExited in START
... : Listener stateContext (Message Payload: START_STATE1, Message Headers: {key=31, id=bf50ec37-b6f7-32d5-fd59-292d7f1ea265, timestamp=1554007267643}, Variables: {variable=42}
... : Listener stateEntered in STATE1
... : Listener stateContext (Message Payload: START_STATE1, Message Headers: {key=31, id=bf50ec37-b6f7-32d5-fd59-292d7f1ea265, timestamp=1554007267643}, Variables: {variable=42}
... : Action Source: START, State: STATE1, Target: STATE1, Event: START_STATE1
... : Action Source: START, State: STATE1, Target: STATE1, Event: START_STATE1
... : Listener stateChanged from START to STATE1
... : Listener stateContext (Message Payload: START_STATE1, Message Headers: {key=31, id=bf50ec37-b6f7-32d5-fd59-292d7f1ea265, timestamp=1554007267643}, Variables: {variable=42}
... : Listener transitionEnded from START to STATE1
... : Listener stateContext (Message Payload: START_STATE1, Message Headers: {key=31, id=bf50ec37-b6f7-32d5-fd59-292d7f1ea265, timestamp=1554007267643}, Variables: {variable=42}
... : Listener transitionStarted from STATE1 to CHOICE
... : Listener stateContext (Message Payload: STATE1_CHOICE, Message Headers: {id=8c969225-fec1-6603-63dd-7ae00f8ead10, timestamp=1554007267650}, Variables: {variable=42}
... : Listener transition from STATE1 to CHOICE
... : Listener stateContext (Message Payload: STATE1_CHOICE, Message Headers: {id=8c969225-fec1-6603-63dd-7ae00f8ead10, timestamp=1554007267650}, Variables: {variable=42}
... : Action Source: STATE1, State: STATE1, Target: CHOICE, Event: STATE1_CHOICE
... : Listener stateExited in STATE1
... : Listener stateContext (Message Payload: STATE1_CHOICE, Message Headers: {id=8c969225-fec1-6603-63dd-7ae00f8ead10, timestamp=1554007267650}, Variables: {variable=42}
... : Listener stateEntered in CHOICE1
... : Listener stateContext (Message Payload: STATE1_CHOICE, Message Headers: {id=8c969225-fec1-6603-63dd-7ae00f8ead10, timestamp=1554007267650}, Variables: {variable=42}
... : Listener stateChanged from STATE1 to CHOICE1
... : Listener stateContext (Message Payload: STATE1_CHOICE, Message Headers: {id=8c969225-fec1-6603-63dd-7ae00f8ead10, timestamp=1554007267650}, Variables: {variable=42}
... : Listener transitionEnded from STATE1 to CHOICE
... : Listener stateContext (Message Payload: STATE1_CHOICE, Message Headers: {id=8c969225-fec1-6603-63dd-7ae00f8ead10, timestamp=1554007267650}, Variables: {variable=42}
... : Listener transitionStarted from CHOICE1 to FORK
... : Listener stateContext (Message Payload: CHOICE1_FORK, Message Headers: {id=1f2f3a68-19e1-29d4-8677-2c63c5e360a3, timestamp=1554007267651}, Variables: {variable=42}
... : Listener transition from CHOICE1 to FORK
... : Listener stateContext (Message Payload: CHOICE1_FORK, Message Headers: {id=1f2f3a68-19e1-29d4-8677-2c63c5e360a3, timestamp=1554007267651}, Variables: {variable=42}
... : Listener stateExited in CHOICE1
... : Listener stateContext (Message Payload: CHOICE1_FORK, Message Headers: {id=1f2f3a68-19e1-29d4-8677-2c63c5e360a3, timestamp=1554007267651}, Variables: {variable=42}
... : Listener stateEntered in TASKS
... : Listener stateContext (Message Payload: CHOICE1_FORK, Message Headers: {id=1f2f3a68-19e1-29d4-8677-2c63c5e360a3, timestamp=1554007267651}, Variables: {variable=42}
... : Listener transitionStarted from null to TASK11
... : Listener stateContext (Message Payload: null, Message Headers: {id=37715a25-6933-14b8-2e25-756a447a3630, timestamp=1554007267652}, Variables: {variable=42}
... : Listener transition from null to TASK11
... : Listener stateContext (Message Payload: null, Message Headers: {id=62093291-042b-cd75-1405-4a96be2b5682, timestamp=1554007267652}, Variables: {variable=42}
... : Listener stateEntered in TASK11
... : Listener stateContext (Message Payload: null, Message Headers: {id=a7c34605-3515-c56f-ff7a-8977d2331fd9, timestamp=1554007267652}, Variables: {variable=42}
... : Listener stateChanged from null to TASK11
... : Listener stateContext (Message Payload: null, Message Headers: {id=7b000dca-0fb2-f95a-a6db-aaf6600e1f5f, timestamp=1554007267653}, Variables: {variable=42}
... : Listener stateMachineStarted
... : Listener stateContext (Message Payload: null, Message Headers: {id=908bcc73-0466-dec2-14b6-2822ad56c7ba, timestamp=1554007267653}, Variables: {variable=42}
... : Listener transitionEnded from null to TASK11
... : Listener stateContext (Message Payload: null, Message Headers: {id=e262f0fe-6047-9638-b592-c6e4bbc4e2ef, timestamp=1554007267653}, Variables: {variable=42}
... : started org.springframework.statemachine.support.DefaultStateMachineExecutor@5a865416
... : started TASK13 TASK11 TASK12 / TASK11 / uuid=b703837b-1a49-4dc4-83aa-5420f6cf0517 / id=null#8dd81b65-183c-43d0-8d27-c5ff71d2968a
... : Listener transitionStarted from null to TASK21
... : Listener stateContext (Message Payload: null, Message Headers: {id=fe645a0b-2b28-8734-e09a-271a7df04d17, timestamp=1554007267653}, Variables: {variable=42}
... : Listener transition from null to TASK21
... : Listener stateContext (Message Payload: null, Message Headers: {id=ab063429-8d97-27ce-c25b-3d8488bbc03f, timestamp=1554007267653}, Variables: {variable=42}
... : Listener stateEntered in TASK21
... : Listener stateContext (Message Payload: null, Message Headers: {id=309a6395-2545-89c6-833f-ba49a7893e2f, timestamp=1554007267654}, Variables: {variable=42}
... : Listener stateChanged from null to TASK21
... : Listener stateContext (Message Payload: null, Message Headers: {id=014531de-2bb4-efc8-1b8c-1bfcaf6f445c, timestamp=1554007267654}, Variables: {variable=42}
... : Listener stateMachineStarted
... : Listener stateContext (Message Payload: null, Message Headers: {id=1375e1a3-b78f-7efb-84ed-3536e7198715, timestamp=1554007267654}, Variables: {variable=42}
... : Listener transitionEnded from null to TASK21
... : Listener stateContext (Message Payload: null, Message Headers: {id=4fe6a6a2-f279-33fb-58fa-14731e111b70, timestamp=1554007267654}, Variables: {variable=42}
... : started org.springframework.statemachine.support.DefaultStateMachineExecutor@6dc1484
... : started TASK21 TASK23 TASK22 / TASK21 / uuid=74691d25-219e-4dca-83ff-2e80ffc74f93 / id=null#5260c53d-1cbb-47a6-984a-8ef1ceb3ab31
... : Listener stateChanged from CHOICE1 to TASKS
... : Listener stateContext (Message Payload: CHOICE1_FORK, Message Headers: {id=1f2f3a68-19e1-29d4-8677-2c63c5e360a3, timestamp=1554007267651}, Variables: {variable=42}
... : Listener transitionEnded from CHOICE1 to FORK
... : Listener stateContext (Message Payload: CHOICE1_FORK, Message Headers: {id=1f2f3a68-19e1-29d4-8677-2c63c5e360a3, timestamp=1554007267651}, Variables: {variable=42}
... : Listener transitionStarted from TASK11 to TASK12
... : Listener stateContext (Message Payload: TASK11_TASK12, Message Headers: {id=a5f14519-e027-16b9-e718-7884633feb01, timestamp=1554007267655}, Variables: {variable=42}
... : Listener transition from TASK11 to TASK12
... : Listener stateContext (Message Payload: TASK11_TASK12, Message Headers: {id=a5f14519-e027-16b9-e718-7884633feb01, timestamp=1554007267655}, Variables: {variable=42}
... : Listener stateExited in TASK11
... : Listener stateContext (Message Payload: TASK11_TASK12, Message Headers: {id=a5f14519-e027-16b9-e718-7884633feb01, timestamp=1554007267655}, Variables: {variable=42}
... : Listener stateEntered in TASK12
... : Listener stateContext (Message Payload: TASK11_TASK12, Message Headers: {id=a5f14519-e027-16b9-e718-7884633feb01, timestamp=1554007267655}, Variables: {variable=42}
... : Listener stateChanged from TASK11 to TASK12
... : Listener stateContext (Message Payload: TASK11_TASK12, Message Headers: {id=a5f14519-e027-16b9-e718-7884633feb01, timestamp=1554007267655}, Variables: {variable=42}
... : Listener transitionEnded from TASK11 to TASK12
... : Listener stateContext (Message Payload: TASK11_TASK12, Message Headers: {id=a5f14519-e027-16b9-e718-7884633feb01, timestamp=1554007267655}, Variables: {variable=42}
... : Listener eventNotAccepted GenericMessage [payload=TASK11_TASK12, headers={id=a5f14519-e027-16b9-e718-7884633feb01, timestamp=1554007267655}]
... : Listener stateContext (Message Payload: TASK11_TASK12, Message Headers: {id=a5f14519-e027-16b9-e718-7884633feb01, timestamp=1554007267655}, Variables: {variable=42}
... : Listener eventNotAccepted GenericMessage [payload=TASK21_TASK22, headers={id=2f048198-ef29-0b11-53d9-c22202b3a023, timestamp=1554007267656}]
... : Listener stateContext (Message Payload: TASK21_TASK22, Message Headers: {id=2f048198-ef29-0b11-53d9-c22202b3a023, timestamp=1554007267656}, Variables: {variable=42}
... : Listener eventNotAccepted GenericMessage [payload=TASK21_TASK22, headers={id=2f048198-ef29-0b11-53d9-c22202b3a023, timestamp=1554007267656}]
... : Listener stateContext (Message Payload: TASK21_TASK22, Message Headers: {id=2f048198-ef29-0b11-53d9-c22202b3a023, timestamp=1554007267656}, Variables: {variable=42}
... : Listener transitionStarted from TASK21 to TASK22
... : Listener stateContext (Message Payload: TASK21_TASK22, Message Headers: {id=2f048198-ef29-0b11-53d9-c22202b3a023, timestamp=1554007267656}, Variables: {variable=42}
... : Listener transition from TASK21 to TASK22
... : Listener stateContext (Message Payload: TASK21_TASK22, Message Headers: {id=2f048198-ef29-0b11-53d9-c22202b3a023, timestamp=1554007267656}, Variables: {variable=42}
... : Listener stateExited in TASK21
... : Listener stateContext (Message Payload: TASK21_TASK22, Message Headers: {id=2f048198-ef29-0b11-53d9-c22202b3a023, timestamp=1554007267656}, Variables: {variable=42}
... : Listener stateEntered in TASK22
... : Listener stateContext (Message Payload: TASK21_TASK22, Message Headers: {id=2f048198-ef29-0b11-53d9-c22202b3a023, timestamp=1554007267656}, Variables: {variable=42}
... : Listener stateChanged from TASK21 to TASK22
... : Listener stateContext (Message Payload: TASK21_TASK22, Message Headers: {id=2f048198-ef29-0b11-53d9-c22202b3a023, timestamp=1554007267656}, Variables: {variable=42}
... : Listener transitionEnded from TASK21 to TASK22
... : Listener stateContext (Message Payload: TASK21_TASK22, Message Headers: {id=2f048198-ef29-0b11-53d9-c22202b3a023, timestamp=1554007267656}, Variables: {variable=42}
... : Listener eventNotAccepted GenericMessage [payload=TASK12_TASK13, headers={id=1fd4d183-88d0-f30e-34a8-530c23e66b23, timestamp=1554007267657}]
... : Listener stateContext (Message Payload: TASK12_TASK13, Message Headers: {id=1fd4d183-88d0-f30e-34a8-530c23e66b23, timestamp=1554007267657}, Variables: {variable=42}
... : Listener eventNotAccepted GenericMessage [payload=TASK12_TASK13, headers={id=1fd4d183-88d0-f30e-34a8-530c23e66b23, timestamp=1554007267657}]
... : Listener stateContext (Message Payload: TASK12_TASK13, Message Headers: {id=1fd4d183-88d0-f30e-34a8-530c23e66b23, timestamp=1554007267657}, Variables: {variable=42}
... : Listener transitionStarted from TASK12 to TASK13
... : Listener stateContext (Message Payload: TASK12_TASK13, Message Headers: {id=1fd4d183-88d0-f30e-34a8-530c23e66b23, timestamp=1554007267657}, Variables: {variable=42}
... : Listener transition from TASK12 to TASK13
... : Listener stateContext (Message Payload: TASK12_TASK13, Message Headers: {id=1fd4d183-88d0-f30e-34a8-530c23e66b23, timestamp=1554007267657}, Variables: {variable=42}
... : Listener stateExited in TASK12
... : Listener stateContext (Message Payload: TASK12_TASK13, Message Headers: {id=1fd4d183-88d0-f30e-34a8-530c23e66b23, timestamp=1554007267657}, Variables: {variable=42}
... : Listener stateEntered in TASK13
... : Listener stateContext (Message Payload: TASK12_TASK13, Message Headers: {id=1fd4d183-88d0-f30e-34a8-530c23e66b23, timestamp=1554007267657}, Variables: {variable=42}
... : Listener stateChanged from TASK12 to TASK13
... : Listener stateContext (Message Payload: TASK12_TASK13, Message Headers: {id=1fd4d183-88d0-f30e-34a8-530c23e66b23, timestamp=1554007267657}, Variables: {variable=42}
... : stopped org.springframework.statemachine.support.DefaultStateMachineExecutor@5a865416
... : Listener stateMachineStopped
... : Listener stateContext (Message Payload: null, Message Headers: {id=887ca4d7-226b-9f99-3955-dce7151dcbae, timestamp=1554007267659}, Variables: {variable=42}
... : stopped TASK13 TASK11 TASK12 / / uuid=b703837b-1a49-4dc4-83aa-5420f6cf0517 / id=null#8dd81b65-183c-43d0-8d27-c5ff71d2968a
... : Listener transitionEnded from TASK12 to TASK13
... : Listener stateContext (Message Payload: TASK12_TASK13, Message Headers: {id=1fd4d183-88d0-f30e-34a8-530c23e66b23, timestamp=1554007267657}, Variables: {variable=42}
... : Listener eventNotAccepted GenericMessage [payload=TASK22_TASK23, headers={id=592d65e8-6ccc-b942-0d10-d5b9b645c558, timestamp=1554007267659}]
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=592d65e8-6ccc-b942-0d10-d5b9b645c558, timestamp=1554007267659}, Variables: {variable=42}
... : Listener eventNotAccepted GenericMessage [payload=TASK22_TASK23, headers={id=592d65e8-6ccc-b942-0d10-d5b9b645c558, timestamp=1554007267659}]
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=592d65e8-6ccc-b942-0d10-d5b9b645c558, timestamp=1554007267659}, Variables: {variable=42}
... : Listener transitionStarted from TASK22 to TASK23
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=592d65e8-6ccc-b942-0d10-d5b9b645c558, timestamp=1554007267659}, Variables: {variable=42}
... : Listener transition from TASK22 to TASK23
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=592d65e8-6ccc-b942-0d10-d5b9b645c558, timestamp=1554007267659}, Variables: {variable=42}
... : Listener stateExited in TASK22
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=592d65e8-6ccc-b942-0d10-d5b9b645c558, timestamp=1554007267659}, Variables: {variable=42}
... : Listener stateEntered in TASK23
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=592d65e8-6ccc-b942-0d10-d5b9b645c558, timestamp=1554007267659}, Variables: {variable=42}
... : Listener transitionStarted from TASK13 to JOIN
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=592d65e8-6ccc-b942-0d10-d5b9b645c558, timestamp=1554007267659}, Variables: {variable=42}
... : Listener transition from TASK13 to JOIN
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=592d65e8-6ccc-b942-0d10-d5b9b645c558, timestamp=1554007267659}, Variables: {variable=42}
... : Listener stateExited in TASK13
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=592d65e8-6ccc-b942-0d10-d5b9b645c558, timestamp=1554007267659}, Variables: {variable=42}
... : Listener transitionEnded from TASK13 to JOIN
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=592d65e8-6ccc-b942-0d10-d5b9b645c558, timestamp=1554007267659}, Variables: {variable=42}
... : Listener transitionStarted from TASK23 to JOIN
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=592d65e8-6ccc-b942-0d10-d5b9b645c558, timestamp=1554007267659}, Variables: {variable=42}
... : Listener transition from TASK23 to JOIN
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=592d65e8-6ccc-b942-0d10-d5b9b645c558, timestamp=1554007267659}, Variables: {variable=42}
... : Listener stateExited in TASK23
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=592d65e8-6ccc-b942-0d10-d5b9b645c558, timestamp=1554007267659}, Variables: {variable=42}
... : Listener transitionEnded from TASK23 to JOIN
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=592d65e8-6ccc-b942-0d10-d5b9b645c558, timestamp=1554007267659}, Variables: {variable=42}
... : stopped org.springframework.statemachine.support.DefaultStateMachineExecutor@6dc1484
... : Listener stateMachineStopped
... : Listener stateContext (Message Payload: null, Message Headers: {id=b65b9ec8-ef97-dba7-aa77-44b8b5588ff9, timestamp=1554007267662}, Variables: {variable=42}
... : stopped TASK21 TASK23 TASK22 / / uuid=74691d25-219e-4dca-83ff-2e80ffc74f93 / id=null#5260c53d-1cbb-47a6-984a-8ef1ceb3ab31
... : Listener stateExited in TASKS
... : Listener stateContext (Message Payload: null, Message Headers: {id=2664aa9e-1ec2-593f-3016-81231e9551a2, timestamp=1554007267662}, Variables: {variable=42}
... : Listener stateEntered in STATE2
... : Listener stateContext (Message Payload: null, Message Headers: {id=8510c1b9-6b2f-46ae-9412-9542b0098fec, timestamp=1554007267662}, Variables: {variable=42}
... : Listener stateChanged from TASKS to STATE2
... : Listener stateContext (Message Payload: null, Message Headers: {id=8d650465-62b7-f71a-070e-9b1dadf29861, timestamp=1554007267662}, Variables: {variable=42}
... : Listener stateChanged from TASK22 to TASK23
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=592d65e8-6ccc-b942-0d10-d5b9b645c558, timestamp=1554007267659}, Variables: {variable=42}
... : Listener transitionEnded from TASK22 to TASK23
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=592d65e8-6ccc-b942-0d10-d5b9b645c558, timestamp=1554007267659}, Variables: {variable=42}
... : Listener transitionStarted from STATE2 to END
... : Listener stateContext (Message Payload: STATE2_END, Message Headers: {id=f84d435c-bc74-e23d-f0b5-3191241118ef, timestamp=1554007267663}, Variables: {variable=42}
... : Listener transition from STATE2 to END
... : Listener stateContext (Message Payload: STATE2_END, Message Headers: {id=f84d435c-bc74-e23d-f0b5-3191241118ef, timestamp=1554007267663}, Variables: {variable=42}
... : Listener stateExited in STATE2
... : Listener stateContext (Message Payload: STATE2_END, Message Headers: {id=f84d435c-bc74-e23d-f0b5-3191241118ef, timestamp=1554007267663}, Variables: {variable=42}
... : Listener stateEntered in END
... : Listener stateContext (Message Payload: STATE2_END, Message Headers: {id=f84d435c-bc74-e23d-f0b5-3191241118ef, timestamp=1554007267663}, Variables: {variable=42}
... : Listener stateChanged from STATE2 to END
... : Listener stateContext (Message Payload: STATE2_END, Message Headers: {id=f84d435c-bc74-e23d-f0b5-3191241118ef, timestamp=1554007267663}, Variables: {variable=42}
... : stopped org.springframework.statemachine.support.DefaultStateMachineExecutor@51e37590
... : Listener stateMachineStopped
... : Listener stateContext (Message Payload: null, Message Headers: {id=cf95710c-ecb5-3df6-61e3-11799f0925d7, timestamp=1554007267664}, Variables: {variable=42}
... : stopped STATE1 TASKS TASK13 TASK11 TASK12 TASK21 TASK23 TASK22 CHOICE1 CHOICE2 START STATE2 END JOIN FORK CHOICE / / uuid=a2882db4-b636-4fac-93d0-87c50434401e / id=null
... : Listener transitionEnded from STATE2 to END
... : Listener stateContext (Message Payload: STATE2_END, Message Headers: {id=f84d435c-bc74-e23d-f0b5-3191241118ef, timestamp=1554007267663}, Variables: {variable=42}
...&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/code/System.out-1" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/code/System.out-1" target="_blank">System.out-1&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;span class="lnt">79
&lt;/span>&lt;span class="lnt">80
&lt;/span>&lt;span class="lnt">81
&lt;/span>&lt;span class="lnt">82
&lt;/span>&lt;span class="lnt">83
&lt;/span>&lt;span class="lnt">84
&lt;/span>&lt;span class="lnt">85
&lt;/span>&lt;span class="lnt">86
&lt;/span>&lt;span class="lnt">87
&lt;/span>&lt;span class="lnt">88
&lt;/span>&lt;span class="lnt">89
&lt;/span>&lt;span class="lnt">90
&lt;/span>&lt;span class="lnt">91
&lt;/span>&lt;span class="lnt">92
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">... : started ObjectState [getIds()=[TASK11], getClass()=class org.springframework.statemachine.state.ObjectState, hashCode()=1584833211, toString()=AbstractState [id=TASK11, pseudoState=org.springframework.statemachine.state.DefaultPseudoState@757194dc, deferred=[], entryActions=[], exitActions=[], stateActions=[], regions=[], submachine=null]]
... : started ObjectState [getIds()=[TASK22], getClass()=class org.springframework.statemachine.state.ObjectState, hashCode()=800456240, toString()=AbstractState [id=TASK22, pseudoState=null, deferred=[], entryActions=[], exitActions=[], stateActions=[], regions=[], submachine=null]]
... : started RegionState [getIds()=[TASKS, TASK11, TASK22], getClass()=class org.springframework.statemachine.state.RegionState, hashCode()=1311544814, toString()=AbstractState [id=TASKS, pseudoState=org.springframework.statemachine.state.DefaultPseudoState@d0ec63, deferred=[], entryActions=[], exitActions=[], stateActions=[], regions=[TASK13 TASK11 TASK12 / TASK11 / uuid=b703837b-1a49-4dc4-83aa-5420f6cf0517 / id=null, TASK21 TASK23 TASK22 / TASK22 / uuid=74691d25-219e-4dca-83ff-2e80ffc74f93 / id=null], submachine=null]]
... : started org.springframework.statemachine.support.DefaultStateMachineExecutor@51e37590
... : Listener stateMachineStarted
... : Listener stateContext (Message Payload: null, Message Headers: {id=a6be7fdd-8685-5b21-1f34-9dcf718ec374, timestamp=1554007267665}, Variables: {}
... : started org.springframework.statemachine.support.DefaultStateMachineExecutor@5a865416
... : Listener stateMachineStarted
... : Listener stateContext (Message Payload: null, Message Headers: {id=3eef6870-ee58-fa1d-8798-71987d336914, timestamp=1554007267665}, Variables: {}
... : started TASK13 TASK11 TASK12 / TASK11 / uuid=b703837b-1a49-4dc4-83aa-5420f6cf0517 / id=null
... : started org.springframework.statemachine.support.DefaultStateMachineExecutor@6dc1484
... : Listener stateMachineStarted
... : Listener stateContext (Message Payload: null, Message Headers: {id=aef5d00b-59ea-8eed-81ff-c840b1ce2b94, timestamp=1554007267666}, Variables: {}
... : started TASK21 TASK23 TASK22 / TASK22 / uuid=74691d25-219e-4dca-83ff-2e80ffc74f93 / id=null
... : started STATE1 TASKS TASK13 TASK11 TASK12 TASK21 TASK23 TASK22 CHOICE1 CHOICE2 START STATE2 END JOIN FORK CHOICE / TASKS,TASK11,TASK22 / uuid=a2882db4-b636-4fac-93d0-87c50434401e / id=null
... : Listener transitionStarted from TASK11 to TASK12
... : Listener stateContext (Message Payload: TASK11_TASK12, Message Headers: {id=dd47c963-48b4-a47b-093a-bd52cc4371f8, timestamp=1554007267666}, Variables: {}
... : Listener transition from TASK11 to TASK12
... : Listener stateContext (Message Payload: TASK11_TASK12, Message Headers: {id=dd47c963-48b4-a47b-093a-bd52cc4371f8, timestamp=1554007267666}, Variables: {}
... : Listener stateExited in TASK11
... : Listener stateContext (Message Payload: TASK11_TASK12, Message Headers: {id=dd47c963-48b4-a47b-093a-bd52cc4371f8, timestamp=1554007267666}, Variables: {}
... : Listener stateEntered in TASK12
... : Listener stateContext (Message Payload: TASK11_TASK12, Message Headers: {id=dd47c963-48b4-a47b-093a-bd52cc4371f8, timestamp=1554007267666}, Variables: {}
... : Listener stateChanged from TASK11 to TASK12
... : Listener stateContext (Message Payload: TASK11_TASK12, Message Headers: {id=dd47c963-48b4-a47b-093a-bd52cc4371f8, timestamp=1554007267666}, Variables: {}
... : Listener transitionEnded from TASK11 to TASK12
... : Listener stateContext (Message Payload: TASK11_TASK12, Message Headers: {id=dd47c963-48b4-a47b-093a-bd52cc4371f8, timestamp=1554007267666}, Variables: {}
... : Listener eventNotAccepted GenericMessage [payload=TASK11_TASK12, headers={id=dd47c963-48b4-a47b-093a-bd52cc4371f8, timestamp=1554007267666}]
... : Listener stateContext (Message Payload: TASK11_TASK12, Message Headers: {id=dd47c963-48b4-a47b-093a-bd52cc4371f8, timestamp=1554007267666}, Variables: {}
... : Listener eventNotAccepted GenericMessage [payload=TASK22_TASK23, headers={id=285c9e5d-930d-c150-0ef0-2de6cec651ab, timestamp=1554007267667}]
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=285c9e5d-930d-c150-0ef0-2de6cec651ab, timestamp=1554007267667}, Variables: {}
... : Listener eventNotAccepted GenericMessage [payload=TASK22_TASK23, headers={id=285c9e5d-930d-c150-0ef0-2de6cec651ab, timestamp=1554007267667}]
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=285c9e5d-930d-c150-0ef0-2de6cec651ab, timestamp=1554007267667}, Variables: {}
... : Listener transitionStarted from TASK22 to TASK23
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=285c9e5d-930d-c150-0ef0-2de6cec651ab, timestamp=1554007267667}, Variables: {}
... : Listener transition from TASK22 to TASK23
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=285c9e5d-930d-c150-0ef0-2de6cec651ab, timestamp=1554007267667}, Variables: {}
... : Listener stateExited in TASK22
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=285c9e5d-930d-c150-0ef0-2de6cec651ab, timestamp=1554007267667}, Variables: {}
... : Listener stateEntered in TASK23
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=285c9e5d-930d-c150-0ef0-2de6cec651ab, timestamp=1554007267667}, Variables: {}
... : Listener stateChanged from TASK22 to TASK23
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=285c9e5d-930d-c150-0ef0-2de6cec651ab, timestamp=1554007267667}, Variables: {}
... : stopped org.springframework.statemachine.support.DefaultStateMachineExecutor@6dc1484
... : Listener stateMachineStopped
... : Listener stateContext (Message Payload: null, Message Headers: {id=ff2f4d56-fde7-2ab0-c412-e5307b52cfc1, timestamp=1554007267668}, Variables: {}
... : stopped TASK21 TASK23 TASK22 / / uuid=74691d25-219e-4dca-83ff-2e80ffc74f93 / id=null
... : Listener transitionEnded from TASK22 to TASK23
... : Listener stateContext (Message Payload: TASK22_TASK23, Message Headers: {id=285c9e5d-930d-c150-0ef0-2de6cec651ab, timestamp=1554007267667}, Variables: {}
... : Listener eventNotAccepted GenericMessage [payload=TASK12_TASK13, headers={id=5ff52736-4f77-7bf1-e0ad-9e9cef73e1aa, timestamp=1554007267668}]
... : Listener stateContext (Message Payload: TASK12_TASK13, Message Headers: {id=5ff52736-4f77-7bf1-e0ad-9e9cef73e1aa, timestamp=1554007267668}, Variables: {}
... : Listener eventNotAccepted GenericMessage [payload=TASK12_TASK13, headers={id=5ff52736-4f77-7bf1-e0ad-9e9cef73e1aa, timestamp=1554007267668}]
... : Listener stateContext (Message Payload: TASK12_TASK13, Message Headers: {id=5ff52736-4f77-7bf1-e0ad-9e9cef73e1aa, timestamp=1554007267668}, Variables: {}
... : Listener transitionStarted from TASK12 to TASK13
... : Listener stateContext (Message Payload: TASK12_TASK13, Message Headers: {id=5ff52736-4f77-7bf1-e0ad-9e9cef73e1aa, timestamp=1554007267668}, Variables: {}
... : Listener transition from TASK12 to TASK13
... : Listener stateContext (Message Payload: TASK12_TASK13, Message Headers: {id=5ff52736-4f77-7bf1-e0ad-9e9cef73e1aa, timestamp=1554007267668}, Variables: {}
... : Listener stateExited in TASK12
... : Listener stateContext (Message Payload: TASK12_TASK13, Message Headers: {id=5ff52736-4f77-7bf1-e0ad-9e9cef73e1aa, timestamp=1554007267668}, Variables: {}
... : Listener stateEntered in TASK13
... : Listener stateContext (Message Payload: TASK12_TASK13, Message Headers: {id=5ff52736-4f77-7bf1-e0ad-9e9cef73e1aa, timestamp=1554007267668}, Variables: {}
... : stopped org.springframework.statemachine.support.DefaultStateMachineExecutor@5a865416
... : Listener stateMachineStopped
... : Listener stateContext (Message Payload: null, Message Headers: {id=ee20242f-e669-8719-8cef-869d2c7bbb13, timestamp=1554007267669}, Variables: {}
... : stopped TASK13 TASK11 TASK12 / / uuid=b703837b-1a49-4dc4-83aa-5420f6cf0517 / id=null
... : Listener stateExited in TASKS
... : Listener stateContext (Message Payload: null, Message Headers: {id=9835d889-b3e4-b056-2e8d-1dfc3850907e, timestamp=1554007267670}, Variables: {}
... : Listener stateEntered in STATE2
... : Listener stateContext (Message Payload: null, Message Headers: {id=e9f3c6bb-b384-455e-354c-7cc6d8b2f6a1, timestamp=1554007267670}, Variables: {}
... : Listener stateChanged from TASKS to STATE2
... : Listener stateContext (Message Payload: null, Message Headers: {id=6c0826b9-8ec5-84a8-f6d4-53b1c3311334, timestamp=1554007267670}, Variables: {}
... : Listener stateChanged from TASK12 to TASK13
... : Listener stateContext (Message Payload: TASK12_TASK13, Message Headers: {id=5ff52736-4f77-7bf1-e0ad-9e9cef73e1aa, timestamp=1554007267668}, Variables: {}
... : Listener transitionEnded from TASK12 to TASK13
... : Listener stateContext (Message Payload: TASK12_TASK13, Message Headers: {id=5ff52736-4f77-7bf1-e0ad-9e9cef73e1aa, timestamp=1554007267668}, Variables: {}
... : Listener transitionStarted from STATE2 to END
... : Listener stateContext (Message Payload: STATE2_END, Message Headers: {id=6be8a081-daec-2aca-268b-3f0af8940247, timestamp=1554007267670}, Variables: {}
... : Listener transition from STATE2 to END
... : Listener stateContext (Message Payload: STATE2_END, Message Headers: {id=6be8a081-daec-2aca-268b-3f0af8940247, timestamp=1554007267670}, Variables: {}
... : Listener stateExited in STATE2
... : Listener stateContext (Message Payload: STATE2_END, Message Headers: {id=6be8a081-daec-2aca-268b-3f0af8940247, timestamp=1554007267670}, Variables: {}
... : Listener stateEntered in END
... : Listener stateContext (Message Payload: STATE2_END, Message Headers: {id=6be8a081-daec-2aca-268b-3f0af8940247, timestamp=1554007267670}, Variables: {}
... : Listener stateChanged from STATE2 to END
... : Listener stateContext (Message Payload: STATE2_END, Message Headers: {id=6be8a081-daec-2aca-268b-3f0af8940247, timestamp=1554007267670}, Variables: {}
... : stopped org.springframework.statemachine.support.DefaultStateMachineExecutor@51e37590
... : Listener stateMachineStopped
... : Listener stateContext (Message Payload: null, Message Headers: {id=3825827b-07cb-6df6-f6bb-ebb391030e1e, timestamp=1554007267671}, Variables: {}
... : stopped STATE1 TASKS TASK13 TASK11 TASK12 TASK21 TASK23 TASK22 CHOICE1 CHOICE2 START STATE2 END JOIN FORK CHOICE / / uuid=a2882db4-b636-4fac-93d0-87c50434401e / id=null
... : Listener transitionEnded from STATE2 to END
... : Listener stateContext (Message Payload: STATE2_END, Message Headers: {id=6be8a081-daec-2aca-268b-3f0af8940247, timestamp=1554007267670}, Variables: {}
... : destroy called&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/code/System.out-2" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/code/System.out-2" target="_blank">System.out-2&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringStatemachine">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./gradle run&lt;/code>.
&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://docs.spring.io/spring-statemachine/docs/current/api/">Spring Statemachine Javadoc&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.baeldung.com/spring-state-machine">A Guide to the Spring State Machine Project&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://codeburst.io/spring-state-machine-what-is-it-and-do-you-need-it-e894c78f5d84">Spring State Machine: what is it and do you need it?&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="java"/><category term="planeta-codigo"/><category term="spring"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/</id><title>Servidor OAuth, gateway y servicio REST utilizando tokens JWT con Spring</title><updated>2019-02-08T20:00:00+01:00</updated><published>2019-02-08T20:00:00+01:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/spring.svg" class="right " width="200" alt="Spring" title="Spring"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;p>Hace unos días encontré un &lt;a href="https://www.idealista.com/labs/blog/spring-framework/autenticando-el-api-de-idealista-hipotecas-con-spring-oauth2-y-zuul/">articulo del blog técnido de los desarrolladores de Idealista&lt;/a>. En él comentaban que tenían una API para realizar simulaciones hipotecarias usando &lt;a href="https://spring.io/">Spring&lt;/a> como &lt;em>framework&lt;/em>, &lt;a href="https://spring.io/projects/spring-security-oauth">Spring Security OAuth&lt;/a> como forma de autenticación y autorización y JWT como forma de codificar el &lt;em>token&lt;/em> que otorga el servidor OAuth y contiene la información necesaria para que el servidor de recursos permita o no el acceso al recurso que aloja.&lt;/p>
&lt;p>Ya había oído mencionar JWT pero este artículo me ha permitido conocer su utilidad, y no es poca. Como se menciona en el artículo JWT tiene la ventaja de que que no es necesario persistirlo en una base de datos y contiene toda la información que el servidor de recursos necesita para realizar la autorización ya que es capaz de cargar con información arbitraria que el servicio desee en el momento de la emisión, la autenticación y comprobación de que ha sido emitido por el servidor OAuth la realiza sabiendo que el &lt;em>token&lt;/em> está firmado.&lt;/p>
&lt;p>Los &lt;em>tokens&lt;/em> son una serie de caracteres aparentemente sin sentido al estar &lt;em>hasheados&lt;/em> y firmados con una clave compartida entre servidor OAuth y el servidor de recurso o para mayor seguridad mediante clave privada en el servidor OAuth y su clave pública asociada en el servidor de recursos, con la firma el servidor de recursos el capaz de comprobar la autenticidad del &lt;em>token&lt;/em> sin necesidad de comunicarse con él. Los &lt;em>tokens&lt;/em> de OAuth son más cortos, los &lt;em>tokens&lt;/em> JWT con más largos ya que contienen información adicional. Se componen de tres partes separadas por un punto, una cabecera con el algoritmo &lt;em>hash&lt;/em> utilizado y tipo de &lt;em>token&lt;/em>, un documento JSON con datos y una firma de verificación.&lt;/p>
&lt;p>El hecho de que los &lt;em>tokens&lt;/em> JWT no sea necesario persistirlos en base de datos elimina la necesidad de tener su infraestructura, como desventaja es que no es tan fácil de revocar el acceso a un &lt;em>token&lt;/em> JWT y por ello se les concede un tiempo de expiración corto. En el articulo se analizaba su infraestructura y hay varios elementos configurables de diferentes formas, son:&lt;/p>
&lt;ul>
&lt;li>El servidor OAuth que proporciona los tokens, realiza la autenticación y proporciona las autorizaciones.&lt;/li>
&lt;li>El servidor del recurso al que se le envía el &lt;em>token&lt;/em>, en base a las autorizaciones otorgadas por el servidor OAuth al token y las autorizaciones necesarias para acceder al recurso concedo o no acceso al recurso.&lt;/li>
&lt;li>En el caso de múltiples servicios con múltiples recursos es conveniente un &lt;em>gateway&lt;/em> para que sea el punto de entrada de todos los servicios, de esta forma los clientes solo necesitarán conocer el &lt;em>gateway&lt;/em> en vez de los múltiples servicios individuales. El &lt;em>gateway&lt;/em> se encarga de hacer de &lt;em>proxy&lt;/em> en base a información en la petición como ruta, &lt;em>host&lt;/em>, parámetros, cabeceras, &amp;hellip; de redirigir la petición al servicio encargado de atenderla y devolver la respuesta. Un ejemplo de &lt;em>gateway&lt;/em> es &lt;a href="https://github.com/Netflix/zuul">Zuul&lt;/a> como ya he mostrado en el artículo &lt;a href="https://picodotdev.github.io/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/">Proxy para microservicios con Spring Cloud Netflix y Zuul&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>Puede haber más elementos en la infraestructura y quizá sea el caso de un sistema real como sería un servidor de descubrimiento con &lt;a href="https://github.com/Netflix/eureka">Eureka&lt;/a> o un servidor de configuración con &lt;a href="https://cloud.spring.io/spring-cloud-config/">Spring Cloud Config&lt;/a>, en la &lt;a href="https://picodotdev.github.io/blog-bitix/series/spring-cloud/">serie de artículos sobre Spring Cloud&lt;/a> los muestro. Para este ejemplo obvio estos otros servidores y me centro en los más relacionados con el artículo. Aunque lógicamente son diferentes servicios se puede crear uno que proporcione varios de ellos al mismo tiempo, por ejemplo, un servicio que haga al mismo tiempo de servidor de OAuth y de &lt;em>gateway&lt;/em> que es una de las posibles cambios que dejan al final en el artículo de Idealista.&lt;/p>
&lt;p>Spring ha creado su propio proyecto de &lt;em>gateway&lt;/em> para sustituir a Zuul, &lt;a href="https://spring.io/projects/spring-cloud-gateway">Spring Cloud Gateway&lt;/a> y será el que use en este artículo. Soporta &lt;a href="https://projects.spring.io/spring-boot/">Spring Boot&lt;/a> 2, &lt;a href="https://projects.spring.io/spring-framework/">Spring Framework&lt;/a> 5, coincidencia por cualquier parámetro de la petición, filtros y transformaciones o predicados, el patrón &lt;em>circuit breaker&lt;/em>, limitación de peticiones y reescritura de rutas.&lt;/p>
&lt;p>Los servicios los mantengo separados ya que al combinarlos pueden surgir problemas de integración al usar diferentes versiones de librerías de Spring aún cuando todos los proyectos son de Spring. Por ejemplo, Spring Cloud Gateway utiliza Spring WebFlux que puede ser diferente del lo que utilice Spring Security OAuth y la integración puede no estar exenta de problemas.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;img src="assets/images/logotipos/oauth.svg" alt="OAuth" title="OAuth" width="200"/>
&lt;img src="assets/images/logotipos/jwt.svg" alt="JWT" title="JWT" width="300"/>
&lt;/div>
&lt;h3 id="servidor-oauth">Servidor OAuth&lt;/h3>
&lt;p>Empezando por el servidor OAuth y las dependencias que necesita, son &lt;em>spring-security-oauth2&lt;/em> y para generar &lt;em>tokens&lt;/em> JWT &lt;em>spring-security-jwt&lt;/em>, el resto son dependencias necesarias de Spring Boot&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Groovy" data-lang="Groovy">&lt;span class="n">plugins&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;application&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot&amp;#39;&lt;/span> &lt;span class="n">version&lt;/span> &lt;span class="s1">&amp;#39;2.0.8.RELEASE&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">mainClassName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;io.github.picodotdev.blogbitix.springoauth.oauth.Main&amp;#39;&lt;/span>
&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">implementation&lt;/span> &lt;span class="nf">platform&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-dependencies:2.0.8.RELEASE&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">implementation&lt;/span> &lt;span class="nf">platform&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kt">def&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="n">exclude&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nl">group:&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nl">module:&lt;/span> &lt;span class="s1">&amp;#39;spring-boot-starter-logging&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-security&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-log4j2&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.security.oauth:spring-security-oauth2:2.3.4.RELEASE&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.security:spring-security-jwt:1.0.10.RELEASE&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.google.code.gson:gson:2.8.5&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.fasterxml.jackson.core:jackson-databind:2.9.6&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;javax.xml.bind:jaxb-api:2.3.0&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.sun.xml.bind:jaxb-impl:2.3.0&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.glassfish.jaxb:jaxb-runtime:2.3.0&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;javax.activation:activation:1.1.1&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/code/oauth/build.gradle" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/code/oauth/build.gradle" target="_blank">oauth/build.gradle&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>La clase principal de Spring Boot y que inicia la aplicación no tiene nada especial salvo la necesaria anotación &lt;em>@EnableAuthorizationServer&lt;/em> para habilitar el servidor OAuth.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springoauth.oauth&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@SpringBootApplication&lt;/span>
&lt;span class="nd">@EnableAuthorizationServer&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/code/oauth/Main.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/code/oauth/Main.java" target="_blank">oauth/Main.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>La parte importante está en la clase de configuración. La clase &lt;em>JwtAccessTokenConverter&lt;/em> se encarga de codificar el token, la clase &lt;em>TokenStore&lt;/em> de generarlos, &lt;em>DefaultTokenServices&lt;/em> contiene referencias a ambos, los métodos heredados &lt;em>configure()&lt;/em> configuran diferentes aspectos del servicio como los requisitos para acceder a los &lt;em>endpoint&lt;/em> para ver el contenido de un &lt;em>token&lt;/em> o los clientes OAuth que reconoce. Para cada cliente se necesita proporcionar el identificativo del cliente, su clave privada o &lt;em>secret&lt;/em>, identificativo del recurso, que tipos de concesiones, &lt;em>grants&lt;/em>, formas o flujos de obtener el &lt;em>token&lt;/em>, que autoridades y ámbitos o &lt;em>scopes&lt;/em> se le asigna al token.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springoauth.oauth&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="nd">@EnableAuthorizationServer&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">AuthorizationServerConfiguration&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">AuthorizationServerConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">ClientDetailsService&lt;/span> &lt;span class="n">clientDetailsService&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">JwtAccessTokenConverter&lt;/span> &lt;span class="n">tokenConverter&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">TokenStore&lt;/span> &lt;span class="n">tokenStore&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">DefaultTokenServices&lt;/span> &lt;span class="n">tokenServices&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">JwtAccessTokenConverter&lt;/span> &lt;span class="nf">tokenConverter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">JwtAccessTokenConverter&lt;/span> &lt;span class="n">converter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">JwtAccessTokenConverter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">converter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setSigningKey&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;1234567890&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">converter&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">TokenStore&lt;/span> &lt;span class="nf">tokenStore&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">JwtAccessTokenConverter&lt;/span> &lt;span class="n">tokenConverter&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">JwtTokenStore&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">tokenConverter&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="n">DefaultTokenServices&lt;/span> &lt;span class="nf">tokenServices&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">TokenStore&lt;/span> &lt;span class="n">tokenStore&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">JwtAccessTokenConverter&lt;/span> &lt;span class="n">tokenConverter&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">DefaultTokenServices&lt;/span> &lt;span class="n">tokenServices&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DefaultTokenServices&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">tokenServices&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setTokenStore&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">tokenStore&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">tokenServices&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setTokenEnhancer&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">tokenConverter&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">tokenServices&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">TokenStoreUserApprovalHandler&lt;/span> &lt;span class="nf">userApprovalHandler&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">TokenStore&lt;/span> &lt;span class="n">tokenStore&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ClientDetailsService&lt;/span> &lt;span class="n">clientDetailsService&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">TokenStoreUserApprovalHandler&lt;/span> &lt;span class="n">handler&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">TokenStoreUserApprovalHandler&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">handler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setTokenStore&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">tokenStore&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">handler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setRequestFactory&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">DefaultOAuth2RequestFactory&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">clientDetailsService&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">handler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setClientDetailsService&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">clientDetailsService&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">handler&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">ApprovalStore&lt;/span> &lt;span class="nf">approvalStore&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">TokenStore&lt;/span> &lt;span class="n">tokenStore&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">TokenApprovalStore&lt;/span> &lt;span class="n">store&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">TokenApprovalStore&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">store&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setTokenStore&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">tokenStore&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">store&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">AuthorizationServerSecurityConfigurer&lt;/span> &lt;span class="n">security&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">security&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">allowFormAuthenticationForClients&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tokenKeyAccess&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;isAuthenticated()&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">checkTokenAccess&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;isAuthenticated()&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">AuthorizationServerEndpointsConfigurer&lt;/span> &lt;span class="n">endpoints&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">endpoints&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tokenServices&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">tokenServices&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ClientDetailsServiceConfigurer&lt;/span> &lt;span class="n">clients&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">clients&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">inMemory&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">withClient&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;client&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">secret&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;{noop}1234567890&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">resourceIds&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;service&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">authorizedGrantTypes&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;client_credentials&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">authorities&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;CLIENT&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">scopes&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;read&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/code/oauth/AuthorizationServerConfiguration.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/code/oauth/AuthorizationServerConfiguration.java" target="_blank">oauth/AuthorizationServerConfiguration.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>El servidor OAuth de ejemplo se inicia con el comando &lt;em>./gradlew oauth:run&lt;/em>. Para obtener un &lt;em>token&lt;/em> se realiza con las siguientes peticiones. Por defecto, se solicita autenticación &lt;em>basic&lt;/em> pero la invocación al método &lt;em>allowFormAuthenticationForClients()&lt;/em> hace que los parámetros de las credenciales se puedan indicar por parámetros.&lt;/p>
&lt;p>Con el &lt;em>endpoint&lt;/em> &lt;em>/oauth/check_token&lt;/em> se decodifica el &lt;em>token&lt;/em>. En la página de JWT hay una herramienta para decodificar el token y verificar de la firma introduciendo clave de firma en la casilla.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ curl -X POST -u &lt;span class="s2">&amp;#34;client:1234567890&amp;#34;&lt;/span> -d &lt;span class="s2">&amp;#34;grant_type=client_credentials&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;http://localhost:8095/oauth/token&amp;#34;&lt;/span>
&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;access_token&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsic2VydmljZSJdLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU0OTY5MjQ0MSwiYXV0aG9yaXRpZXMiOlsiQ0xJRU5UIl0sImp0aSI6IjEwMzE0NTk4LTRjZDctNDRmNi1hMmM4LTNjYjA5MGE1MjUxZSIsImNsaWVudF9pZCI6ImNsaWVudCJ9.n8Dwcd8YTms2Hl0YgTho9QdBWD1hAnOEmkcS-Wefy6c&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;token_type&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;bearer&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;expires_in&amp;#34;&lt;/span>:43199,&lt;span class="s2">&amp;#34;scope&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;read&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;jti&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;10314598-4cd7-44f6-a2c8-3cb090a5251e&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span>
$ curl -X POST &lt;span class="s2">&amp;#34;http://localhost:8095/oauth/token?grant_type=client_credentials&amp;amp;client_id=client&amp;amp;client_secret=1234567890&amp;#34;&lt;/span>
&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;access_token&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsic2VydmljZSJdLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU0OTY5MjQ1OCwiYXV0aG9yaXRpZXMiOlsiQ0xJRU5UIl0sImp0aSI6IjEzYjM1M2Q2LTQwODUtNDdiMS1hYzkyLTRiZDJhNDg3MzFhOCIsImNsaWVudF9pZCI6ImNsaWVudCJ9.CueMcwrD7pTp3pj37_BzzcUODG7PcjCacSa14-l5_Hw&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;token_type&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;bearer&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;expires_in&amp;#34;&lt;/span>:43199,&lt;span class="s2">&amp;#34;scope&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;read&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;jti&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;13b353d6-4085-47b1-ac92-4bd2a48731a8&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span>
$ curl -X POST -u &lt;span class="s2">&amp;#34;client:1234567890&amp;#34;&lt;/span> -d &lt;span class="s2">&amp;#34;token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsic2VydmljZSJdLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU0OTY5MjQ1OCwiYXV0aG9yaXRpZXMiOlsiQ0xJRU5UIl0sImp0aSI6IjEzYjM1M2Q2LTQwODUtNDdiMS1hYzkyLTRiZDJhNDg3MzFhOCIsImNsaWVudF9pZCI6ImNsaWVudCJ9.CueMcwrD7pTp3pj37_BzzcUODG7PcjCacSa14-l5_Hw&amp;#34;&lt;/span> http://localhost:8095/oauth/check_token
&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;aud&amp;#34;&lt;/span>:&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;service&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>,&lt;span class="s2">&amp;#34;scope&amp;#34;&lt;/span>:&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;read&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>,&lt;span class="s2">&amp;#34;active&amp;#34;&lt;/span>:true,&lt;span class="s2">&amp;#34;exp&amp;#34;&lt;/span>:1549692458,&lt;span class="s2">&amp;#34;authorities&amp;#34;&lt;/span>:&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;CLIENT&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>,&lt;span class="s2">&amp;#34;jti&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;13b353d6-4085-47b1-ac92-4bd2a48731a8&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;client_id&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;client&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/code/oauth/curl.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/code/oauth/curl.sh" target="_blank">oauth/curl.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/images/encoded-decoded-jwt_hu1ab378b072a97342bd947994d891fa06_108022_2560x1440_fit_box_2.png" title="Token JWT codificado y decodificado" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/images/encoded-decoded-jwt_hu1ab378b072a97342bd947994d891fa06_108022_600x450_fit_box_2.png" width="494"/>&lt;/a>
&lt;figcaption>Token JWT codificado y decodificado&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;h3 id="servidor-gateway">Servidor Gateway&lt;/h3>
&lt;p>El servidor &lt;em>gateway&lt;/em> en realidad no interviene en la lógica de OAuth porque la autorización se delega en cada servicio que contiene el recurso. Como se indicaba en Idealista estaría bien que el &lt;em>gateway&lt;/em> librase de la responsabilidad de autorización a los servicios de los recursos para hacerlos más sencillos, creo que Spring Security en el momento del artículo no está soportado en Spring WebFlux que utiliza el &lt;em>gateway&lt;/em>.&lt;/p>
&lt;p>Lo único necesario par definir el &lt;em>gateway&lt;/em> son las dependencias del proyecto, poco más que &lt;em>spring-cloud-starter-gateway&lt;/em>, y la configuración de enrutado que &lt;em>matchea&lt;/em> peticiones según el parámetro &lt;em>predicates&lt;/em>, reescribe la URL hacia el servicio según el filtro &lt;em>RewritePath&lt;/em> y finalmente redirige la petición a la ubicación del servicio indicada en &lt;em>uri&lt;/em>. Se inicia con &lt;em>./gradlew gateway:run&lt;/em>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Groovy" data-lang="Groovy">&lt;span class="n">plugins&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;application&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot&amp;#39;&lt;/span> &lt;span class="n">version&lt;/span> &lt;span class="s1">&amp;#39;2.0.8.RELEASE&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">mainClassName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;io.github.picodotdev.blogbitix.springoauth.gateway.Main&amp;#39;&lt;/span>
&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">implementation&lt;/span> &lt;span class="nf">platform&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-dependencies:2.0.8.RELEASE&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">implementation&lt;/span> &lt;span class="nf">platform&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kt">def&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="n">exclude&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nl">group:&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nl">module:&lt;/span> &lt;span class="s1">&amp;#39;spring-boot-starter-logging&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-log4j2&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-gateway&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.google.code.gson:gson:2.8.5&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.fasterxml.jackson.core:jackson-databind:2.9.6&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/code/gateway/build.gradle" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/code/gateway/build.gradle" target="_blank">gateway/build.gradle&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Yaml" data-lang="Yaml">server.port&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">8090&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>spring&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>cloud&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>gateway&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>routes&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w"> &lt;/span>id&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>path_route&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>uri&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>http&lt;span class="p">:&lt;/span>//localhost&lt;span class="p">:&lt;/span>&lt;span class="m">8080&lt;/span>/&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>predicates&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w"> &lt;/span>Path=/service/&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>filters&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w"> &lt;/span>RewritePath=/service/&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>/&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/code/gateway/application.yml" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/code/gateway/application.yml" target="_blank">gateway/application.yml&lt;/a>
&lt;/div>
&lt;/div>
&lt;h3 id="servicio-servidor-de-recurso">Servicio, servidor de recurso&lt;/h3>
&lt;p>Dado que el servicio interpreta los &lt;em>tokens&lt;/em> JWT y aplica reglas de seguridad necesita las mismas dependencias que utiliza el servidor OAuth.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Groovy" data-lang="Groovy">&lt;span class="n">plugins&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;application&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot&amp;#39;&lt;/span> &lt;span class="n">version&lt;/span> &lt;span class="s1">&amp;#39;2.0.8.RELEASE&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">mainClassName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;io.github.picodotdev.blogbitix.springoauth.service.Main&amp;#39;&lt;/span>
&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">implementation&lt;/span> &lt;span class="nf">platform&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-dependencies:2.0.8.RELEASE&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">implementation&lt;/span> &lt;span class="nf">platform&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kt">def&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="n">exclude&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nl">group:&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nl">module:&lt;/span> &lt;span class="s1">&amp;#39;spring-boot-starter-logging&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-log4j2&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-security&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-oauth2&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.security.oauth:spring-security-oauth2:2.3.4.RELEASE&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.security:spring-security-jwt:1.0.10.RELEASE&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.google.code.gson:gson:2.8.5&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.fasterxml.jackson.core:jackson-databind:2.9.6&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;javax.xml.bind:jaxb-api:2.3.0&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.sun.xml.bind:jaxb-impl:2.3.0&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.glassfish.jaxb:jaxb-runtime:2.3.0&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;javax.activation:activation:1.1.1&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/code/service/build.gradle" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/code/service/build.gradle" target="_blank">service/build.gradle&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>El recurso es muy simple, solo devuelve un mensaje.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springoauth.service&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@RestController&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">DefaultController&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Random&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">DefaultController&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">random&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Random&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">home&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Hello world (%s)&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getRequestURL&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/code/service/DefaultController.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/code/service/DefaultController.java" target="_blank">service/DefaultController.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>El servicio comparte configuración similar al servidor de Ouath par el &lt;em>JwtAccessTokenConverter&lt;/em>, &lt;em>TokenStore&lt;/em> y &lt;em>DefaultTokenServices&lt;/em>. En el método configure se define que el &lt;em>endpoint&lt;/em> &lt;em>/&lt;/em> requiere el rol &lt;em>CLIENT&lt;/em> que se obtiene del token JWT enviado. Hay que utilizar la anotación &lt;em>@EnableResourceServer&lt;/em>, se inicia con el comando &lt;em>./gradlew service:run&lt;/em>.&lt;/p>
&lt;p>Hay que recalcar que el servicio para verificar el &lt;em>token&lt;/em> y comprobar la autorización no necesita comunicarse con el servidor OAuth toda la información que necesita está en el &lt;em>token&lt;/em>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springoauth.service&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="nd">@EnableResourceServer&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">ResourceServerConfiguration&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">ResourceServerConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">JwtAccessTokenConverter&lt;/span> &lt;span class="n">tokenConverter&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">TokenStore&lt;/span> &lt;span class="n">tokenStore&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">DefaultTokenServices&lt;/span> &lt;span class="n">tokenServices&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">JwtAccessTokenConverter&lt;/span> &lt;span class="nf">tokenConverter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">JwtAccessTokenConverter&lt;/span> &lt;span class="n">converter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">JwtAccessTokenConverter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">converter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setSigningKey&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;1234567890&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">converter&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">TokenStore&lt;/span> &lt;span class="nf">tokenStore&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">JwtAccessTokenConverter&lt;/span> &lt;span class="n">tokenConverter&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">JwtTokenStore&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">tokenConverter&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="n">DefaultTokenServices&lt;/span> &lt;span class="nf">tokenServices&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">TokenStore&lt;/span> &lt;span class="n">tokenStore&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">JwtAccessTokenConverter&lt;/span> &lt;span class="n">tokenConverter&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">DefaultTokenServices&lt;/span> &lt;span class="n">tokenServices&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DefaultTokenServices&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">tokenServices&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setTokenStore&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">tokenStore&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">tokenServices&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setTokenEnhancer&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">tokenConverter&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">tokenServices&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ResourceServerSecurityConfigurer&lt;/span> &lt;span class="n">resources&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">resources&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tokenServices&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">tokenServices&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">resourceId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;service&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpSecurity&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeRequests&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">antMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">hasAuthority&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;CLIENT&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/code/service/ResourceServerConfiguration.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/code/service/ResourceServerConfiguration.java" target="_blank">service/ResourceServerConfiguration.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Si no se envía el &lt;em>token&lt;/em> JWT se produce un error de autenticación con código de error &lt;em>401 Unauthorized&lt;/em>, si se envía un token correcto y la autoridad requerida del recurso la petición se devuelve el mensaje u el código de estado &lt;em>200 OK&lt;/em>, si se envía un &lt;em>token&lt;/em> JWT con una autoridad que no corresponde con la necesaria para el recurso, en el ejemplo una autoridad &lt;em>DUMMY&lt;/em>, se devuelve un código de estado &lt;em>403 Forbbiden&lt;/em>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ curl -v http://localhost:8090/service/
* Trying ::1...
* TCP_NODELAY &lt;span class="nb">set&lt;/span>
* Connected to localhost &lt;span class="o">(&lt;/span>::1&lt;span class="o">)&lt;/span> port &lt;span class="m">8090&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="c1">#0)&lt;/span>
&amp;gt; GET /service/ HTTP/1.1
&amp;gt; Host: localhost:8090
&amp;gt; User-Agent: curl/7.63.0
&amp;gt; Accept: */*
&amp;gt;
&amp;lt; HTTP/1.1 &lt;span class="m">401&lt;/span> Unauthorized
&amp;lt; transfer-encoding: chunked
&amp;lt; Cache-Control: no-store
&amp;lt; Pragma: no-cache
&amp;lt; WWW-Authenticate: Bearer &lt;span class="nv">realm&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;service&amp;#34;&lt;/span>, &lt;span class="nv">error&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;unauthorized&amp;#34;&lt;/span>, &lt;span class="nv">error_description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Full authentication is required to access this resource&amp;#34;&lt;/span>
&amp;lt; X-Content-Type-Options: nosniff
&amp;lt; X-XSS-Protection: 1&lt;span class="p">;&lt;/span> &lt;span class="nv">mode&lt;/span>&lt;span class="o">=&lt;/span>block
&amp;lt; X-Frame-Options: DENY
&amp;lt; Content-Type: application/json&lt;span class="p">;&lt;/span>&lt;span class="nv">charset&lt;/span>&lt;span class="o">=&lt;/span>UTF-8
&amp;lt; Date: Fri, &lt;span class="m">08&lt;/span> Feb &lt;span class="m">2019&lt;/span> 18:58:03 GMT
&amp;lt;
* Connection &lt;span class="c1">#0 to host localhost left intact&lt;/span>
&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;error&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;unauthorized&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;error_description&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;Full authentication is required to access this resource&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span>
$ curl -H &lt;span class="s2">&amp;#34;Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsic2VydmljZSJdLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU0OTY5MjQ1OCwiYXV0aG9yaXRpZXMiOlsiQ0xJRU5UIl0sImp0aSI6IjEzYjM1M2Q2LTQwODUtNDdiMS1hYzkyLTRiZDJhNDg3MzFhOCIsImNsaWVudF9pZCI6ImNsaWVudCJ9.CueMcwrD7pTp3pj37_BzzcUODG7PcjCacSa14-l5_Hw&amp;#34;&lt;/span> http://localhost:8090/service/
Hello world &lt;span class="o">(&lt;/span>http://localhost:8080/&lt;span class="o">)&lt;/span>
$ curl -X POST -u &lt;span class="s2">&amp;#34;client:1234567890&amp;#34;&lt;/span> -d &lt;span class="s2">&amp;#34;token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsic2VydmljZSJdLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU0OTY5MjQ1OCwiYXV0aG9yaXRpZXMiOlsiRFVNTVkiXSwianRpIjoiMTNiMzUzZDYtNDA4NS00N2IxLWFjOTItNGJkMmE0ODczMWE4IiwiY2xpZW50X2lkIjoiY2xpZW50In0.RaeQYdukn8Xr8S9ld5Vy2UnYboUjPyMkutNgyfVN-Bc&amp;#34;&lt;/span> http://localhost:8095/oauth/check_token
&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;aud&amp;#34;&lt;/span>:&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;service&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>,&lt;span class="s2">&amp;#34;scope&amp;#34;&lt;/span>:&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;read&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>,&lt;span class="s2">&amp;#34;active&amp;#34;&lt;/span>:true,&lt;span class="s2">&amp;#34;exp&amp;#34;&lt;/span>:1549692458,&lt;span class="s2">&amp;#34;authorities&amp;#34;&lt;/span>:&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;DUMMY&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>,&lt;span class="s2">&amp;#34;jti&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;13b353d6-4085-47b1-ac92-4bd2a48731a8&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;client_id&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;client&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span>
$ curl -v -H &lt;span class="s2">&amp;#34;Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsic2VydmljZSJdLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU0OTY5MjQ1OCwiYXV0aG9yaXRpZXMiOlsiRFVNTVkiXSwianRpIjoiMTNiMzUzZDYtNDA4NS00N2IxLWFjOTItNGJkMmE0ODczMWE4IiwiY2xpZW50X2lkIjoiY2xpZW50In0.RaeQYdukn8Xr8S9ld5Vy2UnYboUjPyMkutNgyfVN-Bc&amp;#34;&lt;/span> http://localhost:8090/service/
&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;error&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;access_denied&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;error_description&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;Access is denied&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span>
* Trying ::1...
* TCP_NODELAY &lt;span class="nb">set&lt;/span>
* Connected to localhost &lt;span class="o">(&lt;/span>::1&lt;span class="o">)&lt;/span> port &lt;span class="m">8090&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="c1">#0)&lt;/span>
&amp;gt; GET /service/ HTTP/1.1
&amp;gt; Host: localhost:8090
&amp;gt; User-Agent: curl/7.63.0
&amp;gt; Accept: */*
&amp;gt; Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsic2VydmljZSJdLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU0OTY5MjQ1OCwiYXV0aG9yaXRpZXMiOlsiRFVNTVkiXSwianRpIjoiMTNiMzUzZDYtNDA4NS00N2IxLWFjOTItNGJkMmE0ODczMWE4IiwiY2xpZW50X2lkIjoiY2x
pZW50In0.RaeQYdukn8Xr8S9ld5Vy2UnYboUjPyMkutNgyfVN-Bc
&amp;gt;
&amp;lt; HTTP/1.1 &lt;span class="m">403&lt;/span> Forbidden
&amp;lt; transfer-encoding: chunked
&amp;lt; Cache-Control: no-store
&amp;lt; Pragma: no-cache
&amp;lt; X-Content-Type-Options: nosniff
&amp;lt; X-XSS-Protection: 1&lt;span class="p">;&lt;/span> &lt;span class="nv">mode&lt;/span>&lt;span class="o">=&lt;/span>block
&amp;lt; X-Frame-Options: DENY
&amp;lt; Content-Type: application/json&lt;span class="p">;&lt;/span>&lt;span class="nv">charset&lt;/span>&lt;span class="o">=&lt;/span>UTF-8
&amp;lt; Date: Fri, &lt;span class="m">08&lt;/span> Feb &lt;span class="m">2019&lt;/span> 19:02:14 GMT
&amp;lt;
* Connection &lt;span class="c1">#0 to host localhost left intact&lt;/span>
&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;error&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;access_denied&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;error_description&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;Access is denied&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/code/service/curl.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/code/service/curl.sh" target="_blank">service/curl.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Los &lt;em>tokens&lt;/em> JWT además de firmar se pueden cifrar, en el ejemplo se usa una conexión no segura con el protocolo HTTP usando una conexión segura HTTPS ya se proporcionaría confidencialidad para los &lt;em>tokens&lt;/em> y es lo recomendado.&lt;/p>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringOauth">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./gradlew oauth:run, ./gradlew gateway:run, ./gradlew service:run&lt;/code>.
&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://www.baeldung.com/spring-security-oauth-jwt">Using JWT with Spring Security OAuth&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://websystique.com/spring-security/secure-spring-rest-api-using-oauth2/">Secure Spring REST API using OAuth2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.devglan.com/spring-security/spring-boot-oauth2-jwt-example">Spring Boot Security OAuth2 Jwt Auth Example&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.jorgehernandezramirez.com/2017/04/17/spring-boot-oauth-server/">Spring Boot – OAuth Server&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://stackoverflow.com/questions/23950068/spring-oauth2-full-authentication-is-required-to-access-this-resource">Spring OAuth2 &amp;ldquo;Full authentication is required to access this resource&amp;rdquo;&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://stackoverflow.com/questions/52606720/issue-with-having-multiple-websecurityconfigureradapter-in-spring-boot">Issue with having multiple WebSecurityConfigurerAdapter in spring-boot&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://stackoverflow.com/questions/49654143/spring-security-5-there-is-no-passwordencoder-mapped-for-the-id-null">Spring Security 5: There is no PasswordEncoder mapped for the id &amp;ldquo;null&amp;rdquo;&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/><category term="software"/><category term="spring"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/</id><title>Exponer las métricas de Hystrix en Grafana con Prometheus de una aplicación Spring Boot</title><updated>2018-12-21T11:30:00+01:00</updated><published>2018-12-21T11:30:00+01:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/spring.svg" class="right " width="200" alt="Spring" title="Spring"/>
&lt;/div>
&lt;p>&lt;a href="https://github.com/Netflix/Hystrix">Hystrix&lt;/a> es una implementación del patrón &lt;em>circuit breaker&lt;/em> para hacer que un servicio sea tolerante fallos cuando aquellos que utiliza fallan. Es conveniente tener una herramienta de monitorización para conocer el estado del sistema y actuar pronto o conocer si el comportamiento del sistema es diferente al hacer algún cambio. Hystrix proporciona varios datos como el número de peticiones realizadas, cuantas han fallado o cual es el estado del patrón &lt;em>circuit breaker&lt;/em>. &lt;a href="https://prometheus.io/">Prometheus&lt;/a> es una herramienta de monitorización que recoge las métricas de los servicios de forma periódica y las almacena para una consulta posterior, &lt;a href="https://grafana.com/">Grafana&lt;/a> es otra herramienta de monitorización que permite visualizar en gráficas las métricas almacenadas en Prometheus y observar los valores a lo largo del tiempo.&lt;/p>
&lt;p>En el artículo &lt;a href="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/">Tolerancia a fallos en un cliente de microservicio con Spring Cloud Netflix y Hystrix&lt;/a> explicaba como crear un servicio de &lt;a href="https://spring.io/">Spring&lt;/a> que implementa el patrón &lt;em>circuit breaker&lt;/em> con Hystrix y en el artículo &lt;a href="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/">Monitorizar una aplicación Java con Spring Boot, Micrometer, Prometheus y Grafana&lt;/a> explicaba como exportar las métricas de &lt;a href="https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#production-ready">Spring Boot Actuator&lt;/a> a Prometheus y como crear gráficas en Grafana.&lt;/p>
&lt;p>Hystrix ofrece un &lt;em>dashboard&lt;/em> algo espartano con los datos de Hystrix de la propia aplicación. Los datos de las métricas de Hystrix por defecto no se exponen en Spring Boot Actuator pero se pueden añadir creando un &lt;em>bean&lt;/em> &lt;em>HystrixMetricsBinder&lt;/em> en la configuración de Spring.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springcloud.client&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@SpringBootApplication&lt;/span>
&lt;span class="nd">@EnableDiscoveryClient&lt;/span>
&lt;span class="nd">@EnableCircuitBreaker&lt;/span>
&lt;span class="nd">@EnableHystrixDashboard&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">CommandLineRunner&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="n">HystrixMetricsBinder&lt;/span> &lt;span class="nf">hystrixMetricsBinder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">HystrixMetricsBinder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringApplication&lt;/span> &lt;span class="n">application&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">application&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setApplicationContextClass&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">AnnotationConfigApplicationContext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/code/Main.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/code/Main.java" target="_blank">Main.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Groovy" data-lang="Groovy">&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// Spring
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kt">def&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="n">exclude&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nl">group:&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nl">module:&lt;/span> &lt;span class="s1">&amp;#39;spring-boot-starter-logging&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-log4j2&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-actuator&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-config&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-netflix-eureka-client&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-netflix-ribbon&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-netflix-hystrix&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;io.micrometer:micrometer-registry-prometheus:1.0.8&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/code/build.gradle" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/code/build.gradle" target="_blank">build.gradle&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Una vez hecho esto Spring en el &lt;em>endpoint&lt;/em> &lt;em>/actuator/metrics&lt;/em> se exponen las métricas de Hystrix, si además se configura Spring añadiendo la dependencia &lt;em>io.micrometer:micrometer-registry-prometheus&lt;/em> para exponer las métricas en el formato para que Prometheus las recolecta también se añaden en el &lt;em>endpoint&lt;/em> &lt;em>/actuator/prometheus&lt;/em>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ curl http://client.127.0.0.1.xip.io:8095/actuator/metrics
$ curl http://client.127.0.0.1.xip.io:8095/actuator/metrics/hystrix.requests
$ curl http://client.127.0.0.1.xip.io:8095/actuator/metrics/hystrix.circuit.breaker.open
$ curl http://client.127.0.0.1.xip.io:8095/actuator/metrics/hystrix.fallback
$ http://client.127.0.0.1.xip.io:8095/actuator/metrics/hystrix.latency.total
$ http://client.127.0.0.1.xip.io:8095/actuator/metrics/hystrix.errors
$ curl http://client.127.0.0.1.xip.io:8095/actuator/prometheus
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/code/metrics-endpoints.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/code/metrics-endpoints.sh" target="_blank">metrics-endpoints.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;names&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="err">.&lt;/span>&lt;span class="err">.&lt;/span>&lt;span class="err">.&lt;/span>
&lt;span class="s2">&amp;#34;hystrix.requests&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;hystrix.command.other&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;hystrix.circuit.breaker.open&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;hystrix.fallback&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;hystrix.latency.execution&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;hystrix.execution&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;hystrix.latency.total&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;hystrix.threadpool.concurrent.execution.rolling.max&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;hystrix.errors&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;hystrix.threadpool.concurrent.execution.current&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="err">.&lt;/span>&lt;span class="err">.&lt;/span>&lt;span class="err">.&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/code/actuator-metrics.json" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/code/actuator-metrics.json" target="_blank">actuator-metrics.json&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">...
# HELP hystrix_threadpool_concurrent_execution_current
# TYPE hystrix_threadpool_concurrent_execution_current gauge
hystrix_threadpool_concurrent_execution_current{group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,threadpool=&amp;#34;ClientService&amp;#34;,} 0.0
# HELP hystrix_requests_total
# TYPE hystrix_requests_total counter
hystrix_requests_total{group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 137.0
# HELP hystrix_circuit_breaker_open
# TYPE hystrix_circuit_breaker_open gauge
hystrix_circuit_breaker_open{group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 0.0
# HELP hystrix_latency_execution_seconds_max
# TYPE hystrix_latency_execution_seconds_max gauge
hystrix_latency_execution_seconds_max{group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 0.472
# HELP hystrix_latency_execution_seconds
# TYPE hystrix_latency_execution_seconds summary
hystrix_latency_execution_seconds_count{group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 137.0
hystrix_latency_execution_seconds_sum{group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 2.839
# HELP hystrix_execution_total Execution results. See https://github.com/Netflix/Hystrix/wiki/Metrics-and-Monitoring#command-execution-event-types-comnetflixhystrixhystrixeventtype for type definitions
# TYPE hystrix_execution_total counter
hystrix_execution_total{event=&amp;#34;emit&amp;#34;,group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 0.0
hystrix_execution_total{event=&amp;#34;success&amp;#34;,group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 137.0
hystrix_execution_total{event=&amp;#34;failure&amp;#34;,group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 0.0
hystrix_execution_total{event=&amp;#34;timeout&amp;#34;,group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 0.0
hystrix_execution_total{event=&amp;#34;bad_request&amp;#34;,group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 0.0
hystrix_execution_total{event=&amp;#34;short_circuited&amp;#34;,group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 0.0
hystrix_execution_total{event=&amp;#34;thread_pool_rejected&amp;#34;,group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 0.0
hystrix_execution_total{event=&amp;#34;semaphore_rejected&amp;#34;,group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 0.0
# HELP hystrix_threadpool_concurrent_execution_rolling_max
# TYPE hystrix_threadpool_concurrent_execution_rolling_max gauge
hystrix_threadpool_concurrent_execution_rolling_max{group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,threadpool=&amp;#34;ClientService&amp;#34;,} 0.0
# HELP hystrix_command_other_total Other execution results. See https://github.com/Netflix/Hystrix/wiki/Metrics-and-Monitoring#other-command-event-types-comnetflixhystrixhystrixeventtype for type definitions
# TYPE hystrix_command_other_total counter
hystrix_command_other_total{event=&amp;#34;exception_thrown&amp;#34;,group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 0.0
hystrix_command_other_total{event=&amp;#34;response_from_cache&amp;#34;,group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 0.0
hystrix_command_other_total{event=&amp;#34;cancelled&amp;#34;,group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 0.0
hystrix_command_other_total{event=&amp;#34;collapsed&amp;#34;,group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 0.0
hystrix_command_other_total{event=&amp;#34;command_max_active&amp;#34;,group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 0.0
# HELP hystrix_latency_total_seconds_max
# TYPE hystrix_latency_total_seconds_max gauge
hystrix_latency_total_seconds_max{group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 0.474
# HELP hystrix_latency_total_seconds
# TYPE hystrix_latency_total_seconds summary
hystrix_latency_total_seconds_count{group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 137.0
hystrix_latency_total_seconds_sum{group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 2.857
# HELP hystrix_errors_total
# TYPE hystrix_errors_total counter
hystrix_errors_total{group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 0.0
# HELP hystrix_fallback_total Fallback execution results. See https://github.com/Netflix/Hystrix/wiki/Metrics-and-Monitoring#command-fallback-event-types-comnetflixhystrixhystrixeventtype for type definitions
# TYPE hystrix_fallback_total counter
hystrix_fallback_total{event=&amp;#34;fallback_emit&amp;#34;,group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 0.0
hystrix_fallback_total{event=&amp;#34;fallback_success&amp;#34;,group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 0.0
hystrix_fallback_total{event=&amp;#34;fallback_failure&amp;#34;,group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 0.0
hystrix_fallback_total{event=&amp;#34;fallback_rejection&amp;#34;,group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 0.0
hystrix_fallback_total{event=&amp;#34;fallback_missing&amp;#34;,group=&amp;#34;ClientService&amp;#34;,key=&amp;#34;get&amp;#34;,} 0.0
...&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/code/actuator-prometheus.prometheus" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/code/actuator-prometheus.prometheus" target="_blank">actuator-prometheus.prometheus&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Con estas métricas recolectadas por Prometheus se pueden visualizar en gráficas por Grafana. Hay algunos &lt;a href="https://grafana.com/dashboards?search=hystrix">paneles de Grafana para Hystrix&lt;/a> como el &lt;a href="https://grafana.com/dashboards/7145">7145&lt;/a> pero que necesitan ser adaptados según la nomenclatura de las propiedades expuestas por Spring Boot. En este caso se monitoriza el número de peticiones realizadas, el tiempo de latencia, si los circuitos están abiertos, los fallos, éxitos y &lt;em>tiemouts&lt;/em> así como el estado de los &lt;em>thread pools&lt;/em> que utiliza Hystrix para realizar las peticiones de un cliente a un servicio.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/images/grafana-hystrix-dashboard_hubb858c136f51315f74d2f101a3e561f6_151082_2560x1440_fit_box_2.png" title="Panel de Grafana pàra métricas de Hystrix" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/images/grafana-hystrix-dashboard_hubb858c136f51315f74d2f101a3e561f6_151082_600x450_fit_box_2.png" width="600"/>&lt;/a>
&lt;figcaption>Panel de Grafana para métricas de Hystrix&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Exponer las métricas en una aplicación de Spring Boot para Prometheus es muy sencillo y con Grafana se puede observar el estado del sistema de forma tan detallada como lo sean las métricas expuestas por la aplicación. Por defecto Spring Boot ya expone una buena cantidad de métricas del estado del servicio como uso de CPU, memoria, hilos o recolector de basura.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./gradlew discoveryserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8761&amp;#34;&lt;/span>
$ ./gradlew configserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8090&amp;#34;&lt;/span>
$ ./gradlew service:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8080&amp;#34;&lt;/span>
$ ./gradlew client:run&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/code/gradle-run.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/code/gradle-run.sh" target="_blank">gradle-run.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./gradle-run.sh&lt;/code>.
&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://github.com/spring-cloud/spring-cloud-netflix/issues/3004">Expose Hystrix metrics to Actuator /metrics (and /prometheus)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/><category term="software"/><category term="spring"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/</id><title>Monitorizar una aplicación Java de Spring Boot con Micrometer, Prometheus y Grafana</title><updated>2018-12-14T20:00:00+01:00</updated><published>2018-12-14T20:00:00+01:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/prometheus.svg" class="right " width="200" alt="Promehteus" title="Promehteus"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/grafana.svg" class="right " width="200" alt="Grafana" title="Grafana"/>
&lt;/div>
&lt;p>Los &lt;a href="https://spring.io/projects">proyectos de Spring&lt;/a> no son tan conservadores como Java EE o ahora Jakata EE y se desarrollan a una velocidad mayor cubriendo de forma más temprana las necesidades de los programadores según evolucionan las tecnologías y se adoptan nuevos modelos de arquitectura.&lt;/p>
&lt;p>Con el advenimiento de los microservicios, contenedores, la nube y aplicaciones autocontenidas Spring se ha adaptado con proyectos como &lt;a href="https://projects.spring.io/spring-boot/">Spring Boot&lt;/a> y &lt;a href="https://projects.spring.io/spring-cloud/">Spring Cloud&lt;/a>. En el asunto que ocupa este artículo de métricas con la versión 2 de Spring Boot se ha adoptado &lt;a href="https://micrometer.io/">Micrometer&lt;/a> como librería para proporcionar las métricas.&lt;/p>
&lt;p>Micrometer permite exportar a cualquiera de los más populares sistemas de monitorización los datos de las métricas. Usando Micrometer la aplicación se abstrae del sistema de métricas empleado pudiendo cambiar en un futuro si se desea. Uno de los sistemas más populares de monitorización es &lt;a href="https://prometheus.io/">Prometheus&lt;/a> que se encarga de recoger y almacenar los datos de las métricas expuestas por las aplicaciones y ofrece un lenguaje de consulta de los datos con el que otras aplicaciones pueden visualizarlos en gráficas y paneles de control. &lt;a href="https://grafana.com/">Grafana&lt;/a> es una de estas herramientas que permite visualizar los datos proporcionados por Prometheus. Estos sistemas de monitorización ofrecen un sistema de alertas que se integran entre otros con &lt;a href="https://slack.com/">Slack&lt;/a>.&lt;/p>
&lt;p>En el artículo &lt;a href="https://picodotdev.github.io/blog-bitix/2015/12/informacion-y-metricas-de-la-aplicacion-con-spring-boot-actuator/">Información y métricas de la aplicación con Spring Boot Actuator&lt;/a> mostraba como configurar Spring Boot y &lt;a href="https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#production-ready">Spring Boot Actuator&lt;/a> para exponer métricas en el &lt;em>endpoint&lt;/em> &lt;em>/actuator/metrics&lt;/em>, con estas herramientas solo se exponen la clave y valor de cada métrica y solo en un momento dado. Pueden ser métricas del servicio como cantidad de CPU usada, memoria consumida y libre, espacio en almacenamiento, etc&amp;hellip; o métricas de aplicación como número de peticiones realizadas al servicio, tiempo de respuesta, etc&amp;hellip; Una de las funcionalidades de Prometheus es recolectar cada cierto tiempo los valores de estas métricas que da lugar a una colección de datos que varía en el tiempo y que Grafana puede visualizar en gráficas para una mucha mayor facilidad de comprensión que la enorme cantidad de datos en crudo.&lt;/p>
&lt;p>Usando Spring Boot 2 exportar los datos para Prometheus es realmente sencillo, basta con incluir la dependencia &lt;em>io.micrometer:micrometer-registry-prometheus&lt;/em> mediante la herramienta de construcción, por ejemplo &lt;a href="https://gradle.org/">Gradle&lt;/a>, y automáticamente se expone en el &lt;em>endpoint&lt;/em> &lt;em>/actuator/prometheus&lt;/em> con la información de las métricas en el formato que espera Prometheus para recolectarla.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Groovy" data-lang="Groovy">&lt;span class="n">plugins&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;application&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot&amp;#39;&lt;/span> &lt;span class="n">version&lt;/span> &lt;span class="s1">&amp;#39;2.0.7.RELEASE&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;io.spring.dependency-management&amp;#39;&lt;/span> &lt;span class="n">version&lt;/span> &lt;span class="s1">&amp;#39;1.0.6.RELEASE&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">mainClassName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;io.github.picodotdev.blogbitix.springcloud.service.Main&amp;#39;&lt;/span>
&lt;span class="n">dependencyManagement&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">imports&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">mavenBom&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// Spring
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kt">def&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="n">exclude&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nl">group:&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nl">module:&lt;/span> &lt;span class="s1">&amp;#39;spring-boot-starter-logging&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;org.springframework.boot:spring-boot-starter-web&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-log4j2&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;org.springframework.boot:spring-boot-starter-actuator&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-config&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-bus-amqp&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-netflix-eureka-client&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;io.micrometer:micrometer-registry-prometheus:1.0.8&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.google.code.gson:gson:2.8.5&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.fasterxml.jackson.core:jackson-databind:2.9.6&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/code/build.gradle" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/code/build.gradle" target="_blank">build.gradle&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Micrometer y Prometheus ofrecen varios tipos de métricas:&lt;/p>
&lt;ul>
&lt;li>&lt;em>Counter&lt;/em>: representa un valor que se va incrementando a lo largo del tiempo. Puede ser el número de invocaciones recibidas por servicio.&lt;/li>
&lt;li>&lt;em>Gauge&lt;/em>: representa un valor que arbitrariamente puede subir o bajar. Puede ser la cantidad de memoria usada.&lt;/li>
&lt;li>&lt;em>Timer&lt;/em>: mide periodos de tiempo. Puede ser el tiempo de respuesta empleado para atender una petición de un servicio.&lt;/li>
&lt;li>&lt;em>Distribution summaries&lt;/em>: recolecta la distribución de una serie de datos con los que se pueden obtener percentiles.&lt;/li>
&lt;/ul>
&lt;p>Utilizando el ejemplo que hice para la &lt;a href="https://picodotdev.github.io/blog-bitix/series/spring-cloud/">serie de artículos sobre Spring Cloud&lt;/a> he añadido al micro servicio &lt;em>service&lt;/em> un contador con el número de invocaciones que se le ha realizado. Este dato se expone en el &lt;em>endpoint&lt;/em> con la clave &lt;em>service.invocations&lt;/em> como se ha definido al registrar el contador en Micrometer con la clase &lt;em>MeterRegistry&lt;/em>. Además de esta métrica propia del servicio Spring Boot Actuator añade otras muchas más del uso de la CPU, memoria, &amp;hellip;&lt;/p>
&lt;p>Una clase de una aplicación de Spring Boot que utiliza un &lt;em>Counter&lt;/em>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springcloud.service&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">io.micrometer.core.instrument.Counter&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">io.micrometer.core.instrument.MeterRegistry&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.beans.factory.annotation.Autowired&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.web.bind.annotation.RequestMapping&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.web.bind.annotation.RestController&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">javax.servlet.http.HttpServletRequest&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.util.Random&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@RestController&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">DefaultController&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">DefaultConfiguration&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Random&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Counter&lt;/span> &lt;span class="n">counter&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">DefaultController&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">MeterRegistry&lt;/span> &lt;span class="n">registry&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">random&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Random&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">counter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Counter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;service.invocations&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">description&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Total service invocations&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">register&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">registry&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">home&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">counter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">increment&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="c1">// Timeout simulation
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">//Thread.sleep(random.nextInt(2000));
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Hello world (%s, %s)&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getRequestURL&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getKey&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/code/DefaultController.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/code/DefaultController.java" target="_blank">DefaultController.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Las claves de las métricas por defecto exportadas por Spring Boot Actuator.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;names&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;jvm.memory.max&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;jvm.threads.states&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;http.server.requests&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;process.files.max&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;jvm.gc.memory.promoted&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;tomcat.cache.hit&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;rabbitmq.channels&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;system.load.average.1m&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;tomcat.cache.access&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;jvm.memory.used&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;jvm.gc.max.data.size&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;jvm.gc.pause&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;jvm.memory.committed&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;system.cpu.count&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;spring.integration.channels&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;rabbitmq.connections&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;tomcat.global.sent&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;jvm.buffer.memory.used&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;tomcat.sessions.created&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;jvm.threads.daemon&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;system.cpu.usage&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;jvm.gc.memory.allocated&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;tomcat.global.request.max&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;tomcat.global.request&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;rabbitmq.rejected&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;tomcat.sessions.expired&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;jvm.threads.live&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;jvm.threads.peak&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;tomcat.global.received&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;process.uptime&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;tomcat.sessions.rejected&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;process.cpu.usage&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;tomcat.threads.config.max&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;jvm.classes.loaded&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;rabbitmq.consumed&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;jvm.classes.unloaded&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;tomcat.global.error&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;tomcat.sessions.active.current&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;service.invocations&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;tomcat.sessions.alive.max&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;jvm.gc.live.data.size&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;tomcat.servlet.request.max&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;tomcat.threads.current&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;tomcat.servlet.request&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;process.files.open&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;jvm.buffer.count&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;jvm.buffer.total.capacity&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;tomcat.sessions.active.max&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;spring.integration.handlers&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;tomcat.threads.busy&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;rabbitmq.published&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;process.start.time&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;tomcat.servlet.error&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;spring.integration.sources&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;rabbitmq.acknowledged&amp;#34;&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/code/actuator-metrics.json" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/code/actuator-metrics.json" target="_blank">actuator-metrics.json&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Los datos de una métrica en el &lt;em>enpoint&lt;/em> &lt;em>/actuator/metrics/service.invocations&lt;/em>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;service.invocations&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;description&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;Total service invocations&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;baseUnit&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;measurements&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;statistic&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;COUNT&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">1.0&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;availableTags&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="p">[&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/code/actuator-metrics-service-invocations.json" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/code/actuator-metrics-service-invocations.json" target="_blank">actuator-metrics-service-invocations.json&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Y las mismas métricas en el formato que espera Prometheus.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;span class="lnt">147
&lt;/span>&lt;span class="lnt">148
&lt;/span>&lt;span class="lnt">149
&lt;/span>&lt;span class="lnt">150
&lt;/span>&lt;span class="lnt">151
&lt;/span>&lt;span class="lnt">152
&lt;/span>&lt;span class="lnt">153
&lt;/span>&lt;span class="lnt">154
&lt;/span>&lt;span class="lnt">155
&lt;/span>&lt;span class="lnt">156
&lt;/span>&lt;span class="lnt">157
&lt;/span>&lt;span class="lnt">158
&lt;/span>&lt;span class="lnt">159
&lt;/span>&lt;span class="lnt">160
&lt;/span>&lt;span class="lnt">161
&lt;/span>&lt;span class="lnt">162
&lt;/span>&lt;span class="lnt">163
&lt;/span>&lt;span class="lnt">164
&lt;/span>&lt;span class="lnt">165
&lt;/span>&lt;span class="lnt">166
&lt;/span>&lt;span class="lnt">167
&lt;/span>&lt;span class="lnt">168
&lt;/span>&lt;span class="lnt">169
&lt;/span>&lt;span class="lnt">170
&lt;/span>&lt;span class="lnt">171
&lt;/span>&lt;span class="lnt">172
&lt;/span>&lt;span class="lnt">173
&lt;/span>&lt;span class="lnt">174
&lt;/span>&lt;span class="lnt">175
&lt;/span>&lt;span class="lnt">176
&lt;/span>&lt;span class="lnt">177
&lt;/span>&lt;span class="lnt">178
&lt;/span>&lt;span class="lnt">179
&lt;/span>&lt;span class="lnt">180
&lt;/span>&lt;span class="lnt">181
&lt;/span>&lt;span class="lnt">182
&lt;/span>&lt;span class="lnt">183
&lt;/span>&lt;span class="lnt">184
&lt;/span>&lt;span class="lnt">185
&lt;/span>&lt;span class="lnt">186
&lt;/span>&lt;span class="lnt">187
&lt;/span>&lt;span class="lnt">188
&lt;/span>&lt;span class="lnt">189
&lt;/span>&lt;span class="lnt">190
&lt;/span>&lt;span class="lnt">191
&lt;/span>&lt;span class="lnt">192
&lt;/span>&lt;span class="lnt">193
&lt;/span>&lt;span class="lnt">194
&lt;/span>&lt;span class="lnt">195
&lt;/span>&lt;span class="lnt">196
&lt;/span>&lt;span class="lnt">197
&lt;/span>&lt;span class="lnt">198
&lt;/span>&lt;span class="lnt">199
&lt;/span>&lt;span class="lnt">200
&lt;/span>&lt;span class="lnt">201
&lt;/span>&lt;span class="lnt">202
&lt;/span>&lt;span class="lnt">203
&lt;/span>&lt;span class="lnt">204
&lt;/span>&lt;span class="lnt">205
&lt;/span>&lt;span class="lnt">206
&lt;/span>&lt;span class="lnt">207
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext"># HELP jvm_buffer_total_capacity_bytes An estimate of the total capacity of the buffers in this pool
# TYPE jvm_buffer_total_capacity_bytes gauge
jvm_buffer_total_capacity_bytes{id=&amp;#34;direct&amp;#34;,} 40960.0
jvm_buffer_total_capacity_bytes{id=&amp;#34;mapped&amp;#34;,} 0.0
# HELP process_files_max_files The maximum file descriptor count
# TYPE process_files_max_files gauge
process_files_max_files 4096.0
# HELP system_cpu_count The number of processors available to the Java virtual machine
# TYPE system_cpu_count gauge
system_cpu_count 8.0
# HELP tomcat_global_request_seconds
# TYPE tomcat_global_request_seconds summary
tomcat_global_request_seconds_count{name=&amp;#34;http-nio-8080&amp;#34;,} 2.0
tomcat_global_request_seconds_sum{name=&amp;#34;http-nio-8080&amp;#34;,} 0.111
# HELP jvm_threads_states_threads The current number of threads having NEW state
# TYPE jvm_threads_states_threads gauge
jvm_threads_states_threads{state=&amp;#34;runnable&amp;#34;,} 7.0
jvm_threads_states_threads{state=&amp;#34;blocked&amp;#34;,} 0.0
jvm_threads_states_threads{state=&amp;#34;waiting&amp;#34;,} 16.0
jvm_threads_states_threads{state=&amp;#34;timed-waiting&amp;#34;,} 9.0
jvm_threads_states_threads{state=&amp;#34;new&amp;#34;,} 0.0
jvm_threads_states_threads{state=&amp;#34;terminated&amp;#34;,} 0.0
# HELP tomcat_cache_access_total
# TYPE tomcat_cache_access_total counter
tomcat_cache_access_total 0.0
# HELP rabbitmq_acknowledged_total
# TYPE rabbitmq_acknowledged_total counter
rabbitmq_acknowledged_total{name=&amp;#34;rabbit&amp;#34;,} 0.0
# HELP process_uptime_seconds The uptime of the Java virtual machine
# TYPE process_uptime_seconds gauge
process_uptime_seconds 46.087
# HELP jvm_gc_memory_allocated_bytes_total Incremented for an increase in the size of the young generation memory pool after one GC to before the next
# TYPE jvm_gc_memory_allocated_bytes_total counter
jvm_gc_memory_allocated_bytes_total 8.47628712E8
# HELP rabbitmq_consumed_total
# TYPE rabbitmq_consumed_total counter
rabbitmq_consumed_total{name=&amp;#34;rabbit&amp;#34;,} 0.0
# HELP tomcat_global_error_total
# TYPE tomcat_global_error_total counter
tomcat_global_error_total{name=&amp;#34;http-nio-8080&amp;#34;,} 0.0
# HELP jvm_threads_peak_threads The peak live thread count since the Java virtual machine started or peak was reset
# TYPE jvm_threads_peak_threads gauge
jvm_threads_peak_threads 34.0
# HELP jvm_gc_pause_seconds Time spent in GC pause
# TYPE jvm_gc_pause_seconds summary
jvm_gc_pause_seconds_count{action=&amp;#34;end of major GC&amp;#34;,cause=&amp;#34;Metadata GC Threshold&amp;#34;,} 1.0
jvm_gc_pause_seconds_sum{action=&amp;#34;end of major GC&amp;#34;,cause=&amp;#34;Metadata GC Threshold&amp;#34;,} 0.137
jvm_gc_pause_seconds_count{action=&amp;#34;end of minor GC&amp;#34;,cause=&amp;#34;Metadata GC Threshold&amp;#34;,} 1.0
jvm_gc_pause_seconds_sum{action=&amp;#34;end of minor GC&amp;#34;,cause=&amp;#34;Metadata GC Threshold&amp;#34;,} 0.014
jvm_gc_pause_seconds_count{action=&amp;#34;end of minor GC&amp;#34;,cause=&amp;#34;Allocation Failure&amp;#34;,} 2.0
jvm_gc_pause_seconds_sum{action=&amp;#34;end of minor GC&amp;#34;,cause=&amp;#34;Allocation Failure&amp;#34;,} 0.052
# HELP jvm_gc_pause_seconds_max Time spent in GC pause
# TYPE jvm_gc_pause_seconds_max gauge
jvm_gc_pause_seconds_max{action=&amp;#34;end of major GC&amp;#34;,cause=&amp;#34;Metadata GC Threshold&amp;#34;,} 0.137
jvm_gc_pause_seconds_max{action=&amp;#34;end of minor GC&amp;#34;,cause=&amp;#34;Metadata GC Threshold&amp;#34;,} 0.014
jvm_gc_pause_seconds_max{action=&amp;#34;end of minor GC&amp;#34;,cause=&amp;#34;Allocation Failure&amp;#34;,} 0.033
# HELP http_server_requests_seconds
# TYPE http_server_requests_seconds summary
http_server_requests_seconds_count{exception=&amp;#34;None&amp;#34;,method=&amp;#34;GET&amp;#34;,status=&amp;#34;200&amp;#34;,uri=&amp;#34;/&amp;#34;,} 1.0
http_server_requests_seconds_sum{exception=&amp;#34;None&amp;#34;,method=&amp;#34;GET&amp;#34;,status=&amp;#34;200&amp;#34;,uri=&amp;#34;/&amp;#34;,} 0.038397291
http_server_requests_seconds_count{exception=&amp;#34;None&amp;#34;,method=&amp;#34;GET&amp;#34;,status=&amp;#34;200&amp;#34;,uri=&amp;#34;/**/favicon.ico&amp;#34;,} 1.0
http_server_requests_seconds_sum{exception=&amp;#34;None&amp;#34;,method=&amp;#34;GET&amp;#34;,status=&amp;#34;200&amp;#34;,uri=&amp;#34;/**/favicon.ico&amp;#34;,} 0.010500544
# HELP http_server_requests_seconds_max
# TYPE http_server_requests_seconds_max gauge
http_server_requests_seconds_max{exception=&amp;#34;None&amp;#34;,method=&amp;#34;GET&amp;#34;,status=&amp;#34;200&amp;#34;,uri=&amp;#34;/&amp;#34;,} 0.038397291
http_server_requests_seconds_max{exception=&amp;#34;None&amp;#34;,method=&amp;#34;GET&amp;#34;,status=&amp;#34;200&amp;#34;,uri=&amp;#34;/**/favicon.ico&amp;#34;,} 0.010500544
# HELP tomcat_sessions_created_sessions_total
# TYPE tomcat_sessions_created_sessions_total counter
tomcat_sessions_created_sessions_total 0.0
# HELP rabbitmq_published_total
# TYPE rabbitmq_published_total counter
rabbitmq_published_total{name=&amp;#34;rabbit&amp;#34;,} 0.0
# HELP spring_integration_handlers The number of message handlers
# TYPE spring_integration_handlers gauge
spring_integration_handlers 2.0
# HELP jvm_memory_used_bytes The amount of used memory
# TYPE jvm_memory_used_bytes gauge
jvm_memory_used_bytes{area=&amp;#34;heap&amp;#34;,id=&amp;#34;PS Survivor Space&amp;#34;,} 0.0
jvm_memory_used_bytes{area=&amp;#34;heap&amp;#34;,id=&amp;#34;PS Old Gen&amp;#34;,} 4.2640064E7
jvm_memory_used_bytes{area=&amp;#34;heap&amp;#34;,id=&amp;#34;PS Eden Space&amp;#34;,} 2.21190608E8
jvm_memory_used_bytes{area=&amp;#34;nonheap&amp;#34;,id=&amp;#34;Metaspace&amp;#34;,} 6.2586488E7
jvm_memory_used_bytes{area=&amp;#34;nonheap&amp;#34;,id=&amp;#34;Code Cache&amp;#34;,} 1.9553024E7
jvm_memory_used_bytes{area=&amp;#34;nonheap&amp;#34;,id=&amp;#34;Compressed Class Space&amp;#34;,} 8220544.0
# HELP tomcat_servlet_error_total
# TYPE tomcat_servlet_error_total counter
tomcat_servlet_error_total{name=&amp;#34;default&amp;#34;,} 0.0
# HELP rabbitmq_connections
# TYPE rabbitmq_connections gauge
rabbitmq_connections{name=&amp;#34;rabbit&amp;#34;,} 0.0
# HELP spring_integration_sources The number of message sources
# TYPE spring_integration_sources gauge
spring_integration_sources 0.0
# HELP tomcat_sessions_active_max_sessions
# TYPE tomcat_sessions_active_max_sessions gauge
tomcat_sessions_active_max_sessions 0.0
# HELP tomcat_global_received_bytes_total
# TYPE tomcat_global_received_bytes_total counter
tomcat_global_received_bytes_total{name=&amp;#34;http-nio-8080&amp;#34;,} 0.0
# HELP tomcat_threads_current_threads
# TYPE tomcat_threads_current_threads gauge
tomcat_threads_current_threads{name=&amp;#34;http-nio-8080&amp;#34;,} 10.0
# HELP tomcat_sessions_active_current_sessions
# TYPE tomcat_sessions_active_current_sessions gauge
tomcat_sessions_active_current_sessions 0.0
# HELP tomcat_global_request_max_seconds
# TYPE tomcat_global_request_max_seconds gauge
tomcat_global_request_max_seconds{name=&amp;#34;http-nio-8080&amp;#34;,} 0.1
# HELP tomcat_sessions_expired_sessions_total
# TYPE tomcat_sessions_expired_sessions_total counter
tomcat_sessions_expired_sessions_total 0.0
# HELP jvm_memory_committed_bytes The amount of memory in bytes that is committed for the Java virtual machine to use
# TYPE jvm_memory_committed_bytes gauge
jvm_memory_committed_bytes{area=&amp;#34;heap&amp;#34;,id=&amp;#34;PS Survivor Space&amp;#34;,} 3.2505856E7
jvm_memory_committed_bytes{area=&amp;#34;heap&amp;#34;,id=&amp;#34;PS Old Gen&amp;#34;,} 3.00941312E8
jvm_memory_committed_bytes{area=&amp;#34;heap&amp;#34;,id=&amp;#34;PS Eden Space&amp;#34;,} 6.17086976E8
jvm_memory_committed_bytes{area=&amp;#34;nonheap&amp;#34;,id=&amp;#34;Metaspace&amp;#34;,} 6.6060288E7
jvm_memory_committed_bytes{area=&amp;#34;nonheap&amp;#34;,id=&amp;#34;Code Cache&amp;#34;,} 2.0512768E7
jvm_memory_committed_bytes{area=&amp;#34;nonheap&amp;#34;,id=&amp;#34;Compressed Class Space&amp;#34;,} 8912896.0
# HELP jvm_gc_memory_promoted_bytes_total Count of positive increases in the size of the old generation memory pool before GC to after GC
# TYPE jvm_gc_memory_promoted_bytes_total counter
jvm_gc_memory_promoted_bytes_total 2.5852976E7
# HELP system_load_average_1m The sum of the number of runnable entities queued to available processors and the number of runnable entities running on the available processors averaged over a period of time
# TYPE system_load_average_1m gauge
system_load_average_1m 1.23
# HELP system_cpu_usage The &amp;#34;recent cpu usage&amp;#34; for the whole system
# TYPE system_cpu_usage gauge
system_cpu_usage 0.09841353781068218
# HELP jvm_buffer_count_buffers An estimate of the number of buffers in the pool
# TYPE jvm_buffer_count_buffers gauge
jvm_buffer_count_buffers{id=&amp;#34;direct&amp;#34;,} 5.0
jvm_buffer_count_buffers{id=&amp;#34;mapped&amp;#34;,} 0.0
# HELP jvm_memory_max_bytes The maximum amount of memory in bytes that can be used for memory management
# TYPE jvm_memory_max_bytes gauge
jvm_memory_max_bytes{area=&amp;#34;heap&amp;#34;,id=&amp;#34;PS Survivor Space&amp;#34;,} 3.2505856E7
jvm_memory_max_bytes{area=&amp;#34;heap&amp;#34;,id=&amp;#34;PS Old Gen&amp;#34;,} 5.59939584E9
jvm_memory_max_bytes{area=&amp;#34;heap&amp;#34;,id=&amp;#34;PS Eden Space&amp;#34;,} 2.735210496E9
jvm_memory_max_bytes{area=&amp;#34;nonheap&amp;#34;,id=&amp;#34;Metaspace&amp;#34;,} -1.0
jvm_memory_max_bytes{area=&amp;#34;nonheap&amp;#34;,id=&amp;#34;Code Cache&amp;#34;,} 2.5165824E8
jvm_memory_max_bytes{area=&amp;#34;nonheap&amp;#34;,id=&amp;#34;Compressed Class Space&amp;#34;,} 1.073741824E9
# HELP jvm_threads_live_threads The current number of live threads including both daemon and non-daemon threads
# TYPE jvm_threads_live_threads gauge
jvm_threads_live_threads 32.0
# HELP service_invocations_total
# TYPE service_invocations_total counter
service_invocations_total 1.0
# HELP tomcat_threads_config_max_threads
# TYPE tomcat_threads_config_max_threads gauge
tomcat_threads_config_max_threads{name=&amp;#34;http-nio-8080&amp;#34;,} 200.0
# HELP jvm_threads_daemon_threads The current number of live daemon threads
# TYPE jvm_threads_daemon_threads gauge
jvm_threads_daemon_threads 29.0
# HELP process_start_time_seconds Start time of the process since unix epoch.
# TYPE process_start_time_seconds gauge
process_start_time_seconds 1.544815302414E9
# HELP rabbitmq_rejected_total
# TYPE rabbitmq_rejected_total counter
rabbitmq_rejected_total{name=&amp;#34;rabbit&amp;#34;,} 0.0
# HELP tomcat_servlet_request_max_seconds
# TYPE tomcat_servlet_request_max_seconds gauge
tomcat_servlet_request_max_seconds{name=&amp;#34;default&amp;#34;,} 0.0
# HELP process_files_open_files The open file descriptor count
# TYPE process_files_open_files gauge
process_files_open_files 189.0
# HELP jvm_buffer_memory_used_bytes An estimate of the memory that the Java virtual machine is using for this buffer pool
# TYPE jvm_buffer_memory_used_bytes gauge
jvm_buffer_memory_used_bytes{id=&amp;#34;direct&amp;#34;,} 40960.0
jvm_buffer_memory_used_bytes{id=&amp;#34;mapped&amp;#34;,} 0.0
# HELP tomcat_threads_busy_threads
# TYPE tomcat_threads_busy_threads gauge
tomcat_threads_busy_threads{name=&amp;#34;http-nio-8080&amp;#34;,} 1.0
# HELP jvm_gc_live_data_size_bytes Size of old generation memory pool after a full GC
# TYPE jvm_gc_live_data_size_bytes gauge
jvm_gc_live_data_size_bytes 4.2640064E7
# HELP tomcat_servlet_request_seconds
# TYPE tomcat_servlet_request_seconds summary
tomcat_servlet_request_seconds_count{name=&amp;#34;default&amp;#34;,} 0.0
tomcat_servlet_request_seconds_sum{name=&amp;#34;default&amp;#34;,} 0.0
# HELP jvm_gc_max_data_size_bytes Max size of old generation memory pool
# TYPE jvm_gc_max_data_size_bytes gauge
jvm_gc_max_data_size_bytes 5.59939584E9
# HELP tomcat_sessions_alive_max_seconds
# TYPE tomcat_sessions_alive_max_seconds gauge
tomcat_sessions_alive_max_seconds 0.0
# HELP tomcat_global_sent_bytes_total
# TYPE tomcat_global_sent_bytes_total counter
tomcat_global_sent_bytes_total{name=&amp;#34;http-nio-8080&amp;#34;,} 1004.0
# HELP rabbitmq_channels
# TYPE rabbitmq_channels gauge
rabbitmq_channels{name=&amp;#34;rabbit&amp;#34;,} 0.0
# HELP tomcat_sessions_rejected_sessions_total
# TYPE tomcat_sessions_rejected_sessions_total counter
tomcat_sessions_rejected_sessions_total 0.0
# HELP spring_integration_channels The number of message channels
# TYPE spring_integration_channels gauge
spring_integration_channels 4.0
# HELP jvm_classes_unloaded_classes_total The total number of classes unloaded since the Java virtual machine has started execution
# TYPE jvm_classes_unloaded_classes_total counter
jvm_classes_unloaded_classes_total 0.0
# HELP process_cpu_usage The &amp;#34;recent cpu usage&amp;#34; for the Java Virtual Machine process
# TYPE process_cpu_usage gauge
process_cpu_usage 0.0012776292616022062
# HELP tomcat_cache_hit_total
# TYPE tomcat_cache_hit_total counter
tomcat_cache_hit_total 0.0
# HELP jvm_classes_loaded_classes The number of classes that are currently loaded in the Java virtual machine
# TYPE jvm_classes_loaded_classes gauge
jvm_classes_loaded_classes 12793.0
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/code/actuator-metrics-prometheus.txt" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/code/actuator-metrics-prometheus.txt" target="_blank">actuator-metrics-prometheus.txt&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Para iniciar el ejemplo de Spring Cloud que consta de un servicio de registro y descubrimiento, un servicio de configuración, un servicio del que se pueden iniciar varias instancias y un cliente que hace peticiones hay que utilizar la siguiente serie de comandos.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./gradlew discoveryserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8761&amp;#34;&lt;/span>
$ ./gradlew configserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8090&amp;#34;&lt;/span>
$ ./gradlew service:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8080&amp;#34;&lt;/span>
$ ./gradlew client:run&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/code/gradlew-run.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/code/gradlew-run.sh" target="_blank">gradlew-run.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Una vez expuestas las métricas en el formato que espera Prometheus este ya puede recolectarlas. Para usar Prometheus y posteriormente Grafana de forma fácil evitando tener que instalar y configurar nada se puede usar &lt;a href="https://www.docker.com/">Docker&lt;/a>, en este caso con &lt;a href="https://docs.docker.com/compose/">Docker Compose&lt;/a>. En la &lt;a href="https://picodotdev.github.io/blog-bitix/series/docker/">serie de artículos sobre Docker&lt;/a> explico que proporciona Docker y como usar las varias herramientas que ofrece.&lt;/p>
&lt;p>El archivo de Docker Compose contiene dos contenedores uno para Prometheus y otro para Grafana, con sus archivos de configuración. En la configuración de Prometheus se crean un &lt;em>job&lt;/em> que recolecta las métricas cada pocos segundos del servicio a través del &lt;em>endpoint&lt;/em> de métricas. En la configuración de Grafana se añade como una fuente de datos Prometheus, se puede añadir otras varias.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ docker-compose up
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/code/docker-compose.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/code/docker-compose.sh" target="_blank">docker-compose.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-YAML" data-lang="YAML">version&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;3&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>services&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>prometheus&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>image&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>prom/prometheus&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>ports&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;9090:9090&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>volumes&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w"> &lt;/span>./prometheus.yml&lt;span class="p">:&lt;/span>/etc/prometheus/prometheus.yml&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>network_mode&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;host&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>grafana&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>image&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>grafana/grafana&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>ports&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;3000:3000&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>volumes&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w"> &lt;/span>./grafana-datasources.yml&lt;span class="p">:&lt;/span>/etc/grafana/provisioning/datasources/grafana-datasources.yml&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>network_mode&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;host&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>depends_on&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w"> &lt;/span>prometheus&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/code/docker-compose.yml" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/code/docker-compose.yml" target="_blank">docker-compose.yml&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-YAML" data-lang="YAML">scrape_configs&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w"> &lt;/span>job_name&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;spring-actuator&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>metrics_path&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;/actuator/prometheus&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>scrape_interval&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>5s&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>static_configs&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w"> &lt;/span>targets&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;service.127.0.0.1.xip.io:8080&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>tls_config&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>insecure_skip_verify&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/code/prometheus.yml" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/code/prometheus.yml" target="_blank">prometheus.yml&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-YAML" data-lang="YAML">datasources&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>-&lt;span class="w"> &lt;/span>name&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>Prometheus&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>type&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>prometheus&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>access&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>direct&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>url&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>http&lt;span class="p">:&lt;/span>//prometheus&lt;span class="m">.127&lt;/span>&lt;span class="m">.0&lt;/span>&lt;span class="m">.0&lt;/span>&lt;span class="m">.1&lt;/span>.xip.io&lt;span class="p">:&lt;/span>&lt;span class="m">9090&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>basic_auth&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>with_credentials&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>is_default&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>version&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/code/grafana-datasources.yml" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/code/grafana-datasources.yml" target="_blank">grafana-datasources.yml&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Prometheus posee la funcionalidad básica de crear gŕaficas con las métricas recogidas pero no tiene la habilidad de crear paneles que recogen una colección de gráficas relacionadas o un editor de consultas más avanzado como tiene Grafana.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/images/prometheus-graph_hudb4fb1b3b4c5fc9bfe9195d2743ad9f9_62771_2560x1440_fit_box_2.png" title="Métrica de la aplicación en Prometheus" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/images/prometheus-graph_hudb4fb1b3b4c5fc9bfe9195d2743ad9f9_62771_300x200_fit_box_2.png" width="179"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/images/grafana-graph_hu70e557534c16596229235e47193c737c_53439_2560x1440_fit_box_2.png" title="Métrica de la aplicación en Grafana" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/images/grafana-graph_hu70e557534c16596229235e47193c737c_53439_300x200_fit_box_2.png" width="300"/>&lt;/a>
&lt;figcaption>Métrica de la aplicación en Prometheus y Grafana&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Una vez que Prometheus recolecta los datos de las métricas al introducir las expresiones se proporciona asistencia de código. Por otro lado, en la sección &lt;em>Status &amp;gt; Targets&lt;/em> de
Prometheus se puede ver el estado de los servicios de los que recolecta métricas.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/images/prometheus-targets_hufff0caf060b535c26e9dd0ca59058429_51904_2560x1440_fit_box_2.png" title="Estado de servicios en Prometheus" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/images/prometheus-targets_hufff0caf060b535c26e9dd0ca59058429_51904_300x200_fit_box_2.png" width="284"/>&lt;/a>
&lt;figcaption>Estado de los servicios rastreados por Prometheus&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Como Spring Boot Actuator exporta muchas métricas del funcionamiento del servicio Grafana puede crear gráficas de todas ellas. No hace falta crear un &lt;em>dashboard&lt;/em> desde cero, se pueden descargar e importar &lt;em>dashboards&lt;/em>. Este &lt;a href="https://grafana.com/dashboards/4701">ejemplo para Micrometer&lt;/a> recoge la memoria de la JVM (&lt;em>heap&lt;/em> y no &lt;em>heap&lt;/em>), uso de CPU, carga, hilos, estado de hilos, descriptores de archivos, recolector de basura, &lt;em>classloader&lt;/em> y entrada/salida básica.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/images/grafana-spring-boot-micrometer-dashboard_hu1e421ff25cd5fbc7f190e3d824bd4790_201078_2560x1440_fit_box_2.png" title="Estado de servicios en Prometheus" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/images/grafana-spring-boot-micrometer-dashboard_hu1e421ff25cd5fbc7f190e3d824bd4790_201078_600x450_fit_box_2.png" width="600"/>&lt;/a>
&lt;figcaption>Dashboard de una aplicación Spring Boot en Grafana&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>&lt;a href="https://grafana.com/plugins">Grafana tiene &lt;em>plugins&lt;/em>&lt;/a> para añadir como fuentes de datos bases de datos relacionales para extraer mediante sentencias SQL y visualizar datos almacenados en &lt;a href="https://www.mysql.com/">MySQL&lt;/a>, &lt;a href="https://www.postgresql.org/">PostgreSQL&lt;/a> u &lt;a href="https://www.oracle.com/">Oracle&lt;/a>.&lt;/p>
&lt;p>Con la información de las métricas se conoce más en detalle cual es el comportamiento normal de una aplicación y observar de forma rápida cuando se introducen cambios como afectan al comportamiento de la misma tanto de forma negativa como de forma positiva. En cualquier aplicación que ofrece un servicio es importante conocer su estado y actuar incluso antes de que ofrezca un mal comportamiento e incluso deje de prestar su servicio. La monitorización no sustituye sino que complementa un sistema de trazas que en una aplicación Java es común que se realice con &lt;a href="https://www.slf4j.org/">SLF4J&lt;/a> o &lt;a href="https://logging.apache.org/log4j/2.x/">Log4j&lt;/a>.&lt;/p>
&lt;p>Aún quedan algunas preguntas por responder ¿como agregar los datos de múltiples instancias? ¿si se crean nuevas instancias del servicio como puede conocer Prometheus los nuevos &lt;em>targets&lt;/em> que se han creado? En el ejemplo solo hay una instancia del servicio y la configuración de Prometheus es proporcionada por un archivo estático. Aún desconozco las respuestas, no lo he investigado en detalle, hay alguna &lt;a href="https://stackoverflow.com/questions/46910839/is-it-possible-to-setup-prometheus-with-eureka-sd-without-file-sd-configs">pregunta sobre este tema en StackOverflow&lt;/a> y por la respuesta Prometheus no tiene un adaptador para Eureka entre los &lt;a href="https://prometheus.io/docs/prometheus/latest/configuration/configuration/">varios servicios de descubrimiento que sí soporta en su configuración&lt;/a>.&lt;/p>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./gradlew-run.sh, docker-compose up&lt;/code>.
&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://njalnordmark.wordpress.com/2017/05/08/using-prometheus-with-spring-boot/">Using Prometheus with Spring Boot&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://raymondhlee.wordpress.com/2016/09/24/monitoring-spring-boot-applications-with-prometheus/">Monitoring Spring Boot Applications with Prometheus – Part 1&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://raymondhlee.wordpress.com/2016/10/03/monitoring-spring-boot-applications-with-prometheus-part-2/">Monitoring Spring Boot Applications with Prometheus – Part 2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.sebastian-daschner.com/entries/prometheus-java-ee">Prometheus with Java EE&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/prometheus/prometheus/pull/3369">Add Eureka Service Discovery&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/><category term="software"/><category term="spring"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/</id><title>Proxy para microservicios con Spring Cloud Netflix y Zuul</title><updated>2018-10-13T23:00:00+02:00</updated><published>2018-10-13T23:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/spring.svg" class="right " width="200" alt="Spring" title="Spring"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;p>Teniendo una buen número de microservicios con múltiples instancias ofreciendo cada uno una API y en una ubicación diferente para simplificar la visión de los que actúen clientes de los microservicios se puede utilizar un &lt;em>proxy&lt;/em>. Con un &lt;em>proxy&lt;/em> es posible centralizar todas las peticiones, que sea éste el encargado de conocer la ubicación de todas las instancias de los microservicios y de hacer la llamada allí donde se encuentre cada una de ellas.&lt;/p>
&lt;p>Entre las varias funcionalidades que proporcionar el proyecto &lt;a href="https://cloud.spring.io/spring-cloud-netflix/">Spring Cloud Netflix&lt;/a> es esta de &lt;em>proxy&lt;/em> mediante &lt;a href="https://github.com/Netflix/zuul">Zuul&lt;/a>. Para hacer de &lt;em>proxy&lt;/em> Zuul necesita tener una correspondencia entre URLs y servicios que realmente proporcionan la funcionalidad, una forma que tiene Zuul de conocer la ubicación de las instancias es utilizando el servicio de registro y descubrimiento &lt;a href="https://github.com/Netflix/eureka">Eureka&lt;/a>. Además, Zuul como cliente de los microservicios posee la funcionalidad de &lt;a href="https://github.com/Netflix/Hystrix">Hystrix&lt;/a> que implementa el patrón &lt;em>circuit breaker&lt;/em> para tolerancia a fallos, &lt;a href="https://github.com/Netflix/ribbon">Ribbon&lt;/a> para hacer balanceo de carga entre varias instancias de los microservicios a nivel de servidor además de reintentos cuando una instancia falla.&lt;/p>
&lt;p>En el ejemplo que he utilizado para esta &lt;a href="https://picodotdev.github.io/blog-bitix/series/spring-cloud/">serie de artículos sobre Spring Cloud&lt;/a> hay un servicio que por defecto se inicia en el puerto &lt;em>8080&lt;/em> y ofrece un &lt;em>endpoint&lt;/em> &lt;em>/&lt;/em> que devuelve un mensaje. Para crear un microservicio &lt;em>proxy&lt;/em> con Zuul hay que crear una aplicación &lt;a href="https://projects.spring.io/spring-boot/">Spring Boot&lt;/a> anotar la clase principal con la anotación &lt;em>@EnableZuulProxy&lt;/em> y proporcionar la configuración para la correspondencia de rutas y microservicios, además de las propiedades para hacer reintentos en caso de que un microservicio falle y de &lt;em>timeouts&lt;/em> en caso de que se comporte no como se espera en cuanto tiempos de respuesta.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springcloud.proxy&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@SpringBootApplication&lt;/span>
&lt;span class="nd">@EnableDiscoveryClient&lt;/span>
&lt;span class="nd">@EnableZuulProxy&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringApplication&lt;/span> &lt;span class="n">application&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">application&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setApplicationContextClass&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">AnnotationConfigApplicationContext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/code/Main%20%28zuul%29.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/code/Main%20%28zuul%29.java" target="_blank">Main (zuul).java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Groovy" data-lang="Groovy">&lt;span class="n">plugins&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;application&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot&amp;#39;&lt;/span> &lt;span class="n">version&lt;/span> &lt;span class="s1">&amp;#39;2.0.7.RELEASE&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;io.spring.dependency-management&amp;#39;&lt;/span> &lt;span class="n">version&lt;/span> &lt;span class="s1">&amp;#39;1.0.6.RELEASE&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">mainClassName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;io.github.picodotdev.blogbitix.springcloud.proxy.Main&amp;#39;&lt;/span>
&lt;span class="n">dependencyManagement&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">imports&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">mavenBom&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// Spring
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kt">def&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="n">exclude&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nl">group:&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nl">module:&lt;/span> &lt;span class="s1">&amp;#39;spring-boot-starter-logging&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-log4j2&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-actuator&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-config&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-bus-amqp&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-netflix-eureka-client&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-netflix-zuul&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.retry:spring-retry:1.2.2.RELEASE&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.google.code.gson:gson:2.8.5&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.fasterxml.jackson.core:jackson-databind:2.9.6&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/code/build.gradle" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/code/build.gradle" target="_blank">build.gradle&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Se puede establecer un tiempo máximo para establecer la conexión, de tiempo de petición, el número de reintentos en la misma instancia si falla o en otro número de instancias, el número máximo de conexiones y el número máximo de conexiones al mismo &lt;em>host&lt;/em>. Todas ellas definibles en cada servicio de forma individual bajo las propiedades &lt;em>hystrix.command.service&lt;/em> y &lt;em>service.ribbon&lt;/em> donde &lt;em>service&lt;/em> es el identificativo del servicio. Las rutas se indican bajo la propiedad &lt;em>zuul.routes&lt;/em> con la relación identificativo del servicio y &lt;em>path&lt;/em>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-YAML" data-lang="YAML">server&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>port&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>${port&lt;span class="p">:&lt;/span>&lt;span class="m">8095&lt;/span>}&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>zuul&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>routes&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>service&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;/service/**&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>retryable&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>hystrix&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>command&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>service&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>execution&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>isolation&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>thread&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>timeoutInMilliseconds&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">20000&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>circuitBreaker&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>requestVolumeThreshold&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>errorThresholdPercentage&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">50&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>service&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>ribbon&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>ConnectTimeout&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1000&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>ReadTimeout&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">2000&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>MaxTotalHttpConnections&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">100&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>MaxConnectionsPerHost&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">100&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>MaxAutoRetries&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>MaxAutoRetriesNextServer&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>ServerListRefreshInterval&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">2000&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>OkToRetryOnAllOperations&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>retryableStatusCodes&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">500&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">404&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/code/proxy.yml" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/code/proxy.yml" target="_blank">proxy.yml&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Dado que Zuul es un &lt;em>proxy&lt;/em> para múltiples instancias de microservicios a cada microservicio hay que darle una ruta, cuando Zuul realiza la llamada a una instancia del microservicio se encarga de omitirla. En el ejemplo, la ruta en Zuul &lt;em>/service/**&lt;/em> está asociada al microservicio &lt;em>service&lt;/em> pero el servicio &lt;em>service&lt;/em> ofrece su &lt;em>endpoint&lt;/em> en &lt;em>/&lt;/em>, Zuul se encarga de omitir la parte de la ruta para el &lt;em>proxy&lt;/em> y hace la llamada a la ruta &lt;em>/&lt;/em> como espera el microservicio.&lt;/p>
&lt;p>Lógicamente los clientes deben contactar con el &lt;em>proxy&lt;/em> en vez de con el microservicio directamente. Arrancado el servicio de descubrimiento y registro Eureka, el servidor de configuración de Spring Cloud, dos instancias del servicio y el &lt;em>proxy&lt;/em> con Zuul haciendo las llamadas al &lt;em>proxy&lt;/em> se observa que se obtiene el resultado del microservicio. Como en el ejemplo hay varias instancias del servicio Zuul realiza balanceo de carga entre ellas con Ribbon utilizando la política &lt;em>round-robin&lt;/em> y el mensaje es diferente en cada una de las respuestas según la instancia invocada. Con Zuul además se consigue balanceo de carga a nivel de servidor que Ribbon solo ofrece a nivel de cliente.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springcloud.client&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@SpringBootApplication&lt;/span>
&lt;span class="nd">@EnableDiscoveryClient&lt;/span>
&lt;span class="nd">@EnableCircuitBreaker&lt;/span>
&lt;span class="nd">@EnableHystrixDashboard&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">CommandLineRunner&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">DefaultConfiguration&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">ClientService&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">ProxyService&lt;/span> &lt;span class="n">proxy&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Valor de propiedad de configuración (%s): %s%n&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;config.key&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getKey&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Valor de propiedad de configuración (%s): %s%n&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;config.password&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Valor de propiedad de configuración (%s): %s%n&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;config.service&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getService&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="o">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">20000&lt;/span>&lt;span class="o">;&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getService&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">equals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;service&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">proxy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Service response: %s%n&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Thread&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sleep&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">100&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringApplication&lt;/span> &lt;span class="n">application&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">application&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setApplicationContextClass&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">AnnotationConfigApplicationContext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/code/Main%20%28client%29.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/code/Main%20%28client%29.java" target="_blank">Main (client).java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springcloud.client&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@Component&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">ProxyService&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">LoadBalancerClient&lt;/span> &lt;span class="n">loadBalancer&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@HystrixCommand&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">fallbackMethod&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;getFallback&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">commandProperties&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@HystrixProperty&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;circuitBreaker.requestVolumeThreshold&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;4&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="nd">@HystrixProperty&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;circuitBreaker.errorThresholdPercentage&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;50&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="nd">@HystrixProperty&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;execution.isolation.thread.timeoutInMilliseconds&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;25000&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">ServiceInstance&lt;/span> &lt;span class="n">instance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">loadBalancer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">choose&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;proxy&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">URI&lt;/span> &lt;span class="n">uri&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">instance&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getUri&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">resource&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;%s%s&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">uri&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toString&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;/service&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">Client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">create&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">resource&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">resource&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getFallback&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;Fallback&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/code/ProxyService.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/code/ProxyService.java" target="_blank">ProxyService.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./gradlew discoveryserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8761&amp;#34;&lt;/span>
$ ./gradlew configserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8090&amp;#34;&lt;/span>
$ ./gradlew service:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8080&amp;#34;&lt;/span>
$ ./gradlew service:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8081&amp;#34;&lt;/span>
$ ./gradlew service:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8082&amp;#34;&lt;/span>
$ ./gradlew proxy:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8085&amp;#34;&lt;/span>
$ ./gradlew client:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--service=proxy&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/code/gradle-run.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/code/gradle-run.sh" target="_blank">gradle-run.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Las URLs del servicio en el microservicio y en el &lt;em>proxy&lt;/em> son.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># Microservicio&lt;/span>
$ curl http://192.168.1.4:8080/
&lt;span class="c1"># Microservicio en el proxy&lt;/span>
$ curl http://192.168.1.4:8085/service
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/code/curl.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/code/curl.sh" target="_blank">curl.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>El cliente de ejemplo realiza peticiones al &lt;em>proxy&lt;/em>, en la salida se muestra el resultado del balanceo de carga cuando hay varias instancias, cuando se añade una nueva instancia entra a formar parte del balanceo de carga. Otro beneficio de Zuul es que ofrece la funcionalidad de reintentos de modo que si una instancia de un servicio falla la petición se reintenta en otra. En el artículo &lt;a href="https://picodotdev.github.io/blog-bitix/2018/10/balanceo-de-carga-y-resilencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/">Balanceo de carga y resilencia en un microservicio con Spring Cloud Netflix y Ribbon&lt;/a> usando solo Ribbon se observaba que cuando una instancia falla se le siguen haciendo peticiones hasta que la lista de instancias del servicio en Eureka se actualiza quitando la fallida, con Hystrix se obtiene la respuesta &lt;em>fallback&lt;/em> pero no se evita completamente el error. Zuul puede ocultar el error provocado por una instancia que falla reintentado la petición en la misma nuevamente, en otra u otras instancias según se configure. El comportamiento con Zuul cuando una instancia falla se puede comparar con el comportamiento incluido en el &lt;a href="https://picodotdev.github.io/blog-bitix/2018/10/balanceo-de-carga-y-resilencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/">artículo anterior usando en el cliente los microservicios directamente&lt;/a>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">$ ./gradlew client:run --args=&amp;#34;--service=proxy&amp;#34;
... # initially two service instances (8080, 8081)
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8081/, value)
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8081/, value)
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8081/, value)
... # new service instance, ./gradlew service:run --args=&amp;#34;--port=8082&amp;#34;
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8081/, value)
Service response: Hello world (http://192.168.1.4:8082/, value)
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8081/, value)
Service response: Hello world (http://192.168.1.4:8082/, value)
... # kill service instance (8082), Ctrl+C
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8081/, value)
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8081/, value)
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8081/, value)&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/code/System.out" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/code/System.out" target="_blank">System.out&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Zuul además es capaz de proporciona otras muchas funcionalidades como:&lt;/p>
&lt;ul>
&lt;li>Autenticación&lt;/li>
&lt;li>Seguridad&lt;/li>
&lt;li>Recolección de métricas y monitorización&lt;/li>
&lt;li>Pruebas de carga&lt;/li>
&lt;li>Pruebas de verificación o &lt;em>canary testing&lt;/em>&lt;/li>
&lt;li>Enrutado dinámico&lt;/li>
&lt;li>Migración de servicio&lt;/li>
&lt;li>Abandono de carga o &lt;em>load shedding&lt;/em>&lt;/li>
&lt;li>Manejo de respuesta estática&lt;/li>
&lt;li>Gestión de tráfico active/active&lt;/li>
&lt;/ul>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./gradlew-run.sh&lt;/code>.
&lt;/p></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/><category term="spring"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/10/balanceo-de-carga-y-resilencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/</id><title>Balanceo de carga y resilencia en un microservicio con Spring Cloud Netflix y Ribbon</title><updated>2018-10-12T20:46:00+02:00</updated><published>2018-10-12T11:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/10/balanceo-de-carga-y-resilencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/spring.svg" class="right " width="200" alt="Spring" title="Spring"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;p>Un servicio que recibe numerosas peticiones o es crítico para el funcionamiento de una aplicación es necesario escalarlo o crear múltiples instancias de él para atender toda la carga que se demanda o para que en caso de que una instancia falle haya otras disponibles que funcionen correctamente para atender las peticiones.&lt;/p>
&lt;p>En este entorno de múltiples instancias se hace necesario un servicio de registro y descubrimiento que usando &lt;a href="https://spring.io/">Spring&lt;/a>, &lt;a href="https://projects.spring.io/spring-boot/">Spring Boot&lt;/a> y &lt;a href="https://cloud.spring.io/spring-cloud-netflix/">Spring Cloud Netflix&lt;/a> una implementación es &lt;a href="https://github.com/Netflix/eureka">Eureka&lt;/a>. Una vez descubiertas las instancias que hay del servicio es necesario hacer balanceo de carga para conseguir escalabilidad y tolerancia a fallos, en el mismo proyecto de Spring Cloud Netflix para realizar balanceo de carga en el cliente se ofrece &lt;a href="https://github.com/Netflix/ribbon">Ribbon&lt;/a>.&lt;/p>
&lt;p>Hay varias formas de usar Ribbon una de ellas es con lo que denominan &lt;em>feign client&lt;/em>, con &lt;a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/client/RestTemplate.html">Spring RestTemplate&lt;/a> o directamente con &lt;em>LoadBalancerClient&lt;/em> que es la que muestro en este artículo. Este cliente con Ribbon obtiene del servicio de registro y descubrimiento la lista inicial de instancias de un servicios registrado con sus ubicaciones siendo el &lt;em>host&lt;/em> en el que se encuentran y el puerto en el que ofrecen su servicio. Con esta lista y el estado de los servicios se realiza el balanceo de carga. Sin embargo, dada la naturaleza de los microservicios se pueden añadir con posterioridad más instancias de un servicio o algunas pueden empezar fallar, Ribbon se encarga de mantener actualizada la lista de instancias de un servicio.&lt;/p>
&lt;p>Combinado con &lt;a href="https://github.com/Netflix/Hystrix">Hystrix&lt;/a> un ejemplo de cliente que hace peticiones a un servicio es el siguiente. Para demostrar su funcionamiento el cliente realiza varias llamadas a un servicio cada unos pocos milisegundos balanceando la carga entre las instancias que existan. Si con posterioridad se añade una nueva instancia del servicio Ribbon al cabo de un tiempo de que haya sido iniciada lo añadirá a la lista y empieza a seleccionarla para enviarle peticiones. Si una instancia falla hasta que Eureka no marca la instancia como fuera de servicio y el cliente no actualiza su lista de instancias en el ejemplo de cliente seguirá enviando peticiones a la instancia fuera de servicio y con Hystrix utilizando el método de &lt;em>fallback&lt;/em> como respuesta.&lt;/p>
&lt;p>Ante el fallo de una instancia para evitar que temporalmente el cliente empiece a fallar cuando le redirige una petición este puede reintentar las peticiones en otra instancia, esta funcionalidad se proporciona con &lt;a href="https://github.com/spring-projects/spring-retry">Spring Retry&lt;/a> o utilizando &lt;a href="https://github.com/Netflix/zuul">Zuul&lt;/a> como &lt;em>proxy&lt;/em>.&lt;/p>
&lt;p>El cliente usa la clase &lt;em>LoadBalancerClient&lt;/em> que en cada invocación del método &lt;em>choose()&lt;/em> devuelve una instancia diferente de servicio realizando balanceo de carga utilizando el método &lt;em>round-robin&lt;/em>. La clase &lt;em>ServiceInstance&lt;/em> proporciona la URL de la instancia del servicio.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springcloud.client&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@SpringBootApplication&lt;/span>
&lt;span class="nd">@EnableDiscoveryClient&lt;/span>
&lt;span class="nd">@EnableCircuitBreaker&lt;/span>
&lt;span class="nd">@EnableHystrixDashboard&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">CommandLineRunner&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">DefaultConfiguration&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">ClientService&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Valor de propiedad de configuración (%s): %s%n&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;config.key&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getKey&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Valor de propiedad de configuración (%s): %s%n&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;config.password&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="o">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">20000&lt;/span>&lt;span class="o">;&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Service response: %s%n&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Thread&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sleep&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">100&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringApplication&lt;/span> &lt;span class="n">application&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">application&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setApplicationContextClass&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">AnnotationConfigApplicationContext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/balanceo-de-carga-y-resilencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/code/Main.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/balanceo-de-carga-y-resilencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/code/Main.java" target="_blank">Main.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springcloud.client&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.net.URI&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Component&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">ClientService&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">LoadBalancerClient&lt;/span> &lt;span class="n">loadBalancer&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@HystrixCommand&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">fallbackMethod&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;getFallback&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">commandProperties&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@HystrixProperty&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;circuitBreaker.requestVolumeThreshold&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;4&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="nd">@HystrixProperty&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;circuitBreaker.errorThresholdPercentage&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;50&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="nd">@HystrixProperty&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;execution.isolation.thread.timeoutInMilliseconds&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;1000&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">ServiceInstance&lt;/span> &lt;span class="n">instance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">loadBalancer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">choose&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;service&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">URI&lt;/span> &lt;span class="n">uri&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">instance&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getUri&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">Client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">create&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">resource&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">uri&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getFallback&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;Fallback&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/balanceo-de-carga-y-resilencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/code/ClientService.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/balanceo-de-carga-y-resilencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/code/ClientService.java" target="_blank">ClientService.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Groovy" data-lang="Groovy">&lt;span class="n">plugins&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;application&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot&amp;#39;&lt;/span> &lt;span class="n">version&lt;/span> &lt;span class="s1">&amp;#39;2.0.7.RELEASE&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;io.spring.dependency-management&amp;#39;&lt;/span> &lt;span class="n">version&lt;/span> &lt;span class="s1">&amp;#39;1.0.6.RELEASE&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">mainClassName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;io.github.picodotdev.blogbitix.springcloud.client.Main&amp;#39;&lt;/span>
&lt;span class="n">dependencyManagement&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">imports&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">mavenBom&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// Spring
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kt">def&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="n">exclude&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nl">group:&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nl">module:&lt;/span> &lt;span class="s1">&amp;#39;spring-boot-starter-logging&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-log4j2&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-actuator&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-config&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-netflix-eureka-client&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-netflix-ribbon&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-netflix-hystrix&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.glassfish.jersey.core:jersey-client:2.27&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.glassfish.jersey.inject:jersey-hk2:2.27&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.google.code.gson:gson:2.8.5&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.fasterxml.jackson.core:jackson-databind:2.9.6&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/balanceo-de-carga-y-resilencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/code/build.gradle" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/balanceo-de-carga-y-resilencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/code/build.gradle" target="_blank">build.gradle&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>La clase del servicio y los comandos para iniciar el servicio de registro y descubrimiento, el servicio de configuración, las instancias del servicio en diferentes puertos y el cliente.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springcloud.service&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@RestController&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">DefaultController&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">DefaultConfiguration&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Random&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">DefaultController&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">random&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Random&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">home&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// Timeout simulation
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">//Thread.sleep(random.nextInt(2000));
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Hello world (%s, %s)&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getRequestURL&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getKey&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/balanceo-de-carga-y-resilencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/code/DefaultController.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/balanceo-de-carga-y-resilencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/code/DefaultController.java" target="_blank">DefaultController.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./gradlew discoveryserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8761&amp;#34;&lt;/span>
$ ./gradlew configserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8090&amp;#34;&lt;/span>
$ ./gradlew service:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8080&amp;#34;&lt;/span>
$ ./gradlew service:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8081&amp;#34;&lt;/span>
$ ./gradlew service:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8082&amp;#34;&lt;/span>
$ ./gradlew client:run&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/balanceo-de-carga-y-resilencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/code/gradle-run.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/balanceo-de-carga-y-resilencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/code/gradle-run.sh" target="_blank">gradle-run.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Esta es la salida y funcionamiento del cliente realizando balanceado la carga entre las mútiples instancias y que ocurre cuando se añade una nueva o una empieza a fallar y se elimina de la lista.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">$ ./gradlew client:run
... # initially two service instances (8080, 8081)
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8081/, value)
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8081/, value)
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8081/, value)
... # new service instance, ./gradlew service:run --args=&amp;#34;--port=8082&amp;#34;
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8081/, value)
Service response: Hello world (http://192.168.1.4:8082/, value)
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8081/, value)
Service response: Hello world (http://192.168.1.4:8082/, value)
... # kill service instance (8082), Ctrl+C
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8081/, value)
Service response: Fallback
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8081/, value)
Service response: Fallback
... # service instances list is updated
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8081/, value)
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8081/, value)
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8081/, value)&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/balanceo-de-carga-y-resilencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/code/System.out" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/balanceo-de-carga-y-resilencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/code/System.out" target="_blank">System.out&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>&lt;a href="https://github.com/Netflix/ribbon/blob/master/ribbon-core/src/main/java/com/netflix/client/config/CommonClientConfigKey.java">Ribbon posee numerosas propiedades de configuración&lt;/a> a nivel global para todos los clientes de servicios o de forma específica para cada servicio ya sea con la anotación &lt;em>@RibbonClient&lt;/em> o mediante la configuración en archivos externos de Spring Boot. Algunas propiedades de configuración interesantes son las de &lt;em>timeout&lt;/em> que permiten que un cliente no agote sus recursos esperando a que a los servicios que llama si tardan en responder y a su vez el cliente actuando de servidor recibe muchas llamadas de sus clientes. En un comando de Hystrix también se puede especificar un &lt;em>timeout&lt;/em> de modo que si se realizan reintentos el tiempo total para Hystrix deberá ser superior que el tiempo total de todos los posibles reintentos teniendo en cuenta el &lt;em>timeout&lt;/em> del cliente con Ribbon. Unsando el cliente HTTP &lt;a href="https://jersey.github.io/">Jersey&lt;/a> como en este caso también pueden establecerse &lt;a href="https://jersey.github.io/apidocs/1.19.1/jersey/com/sun/jersey/api/client/Client.html">&lt;em>timeouts&lt;/em> para una petición&lt;/a>.&lt;/p>
&lt;p>El balanceo de carga que con Ribbon se realiza en el cliente es más sencillo que realizar el balanceo de carga en el servidor ya que no requiere una pieza más en la infraestructura pero requiere que el cliente tenga algo de lógica para hacer el balanceo de carga.&lt;/p>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./gradle-run.sh&lt;/code>.
&lt;/p></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/><category term="spring"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/</id><title>Tolerancia a fallos en un cliente de microservicio con Spring Cloud Netflix y Hystrix</title><updated>2019-10-10T19:00:00+01:00</updated><published>2018-10-05T20:30:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/spring.svg" class="right " width="200" alt="Spring" title="Spring"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;p>Los microservicios son independientes unos de otros y se comunican mediante operaciones de red. Dado que las operaciones se realizan a través de un medio no confiable como la red, dada su naturaleza efímera y a que pueden fallar en los microservicios es importante que los clientes estén preparados ante posibles fallos.&lt;/p>
&lt;p>Un patrón o técnica que se suele emplear es el de &lt;a href="https://www.martinfowler.com/bliki/CircuitBreaker.html">Circuit Breaker&lt;/a>, en Java y con &lt;a href="https://spring.io/">Spring&lt;/a> se ofrece en el proyecto &lt;a href="https://cloud.spring.io/spring-cloud-netflix/">Spring Cloud Netflix&lt;/a> mediante &lt;a href="https://github.com/Netflix/Hystrix">Hystrix&lt;/a> y &lt;a href="https://github.com/Netflix/Hystrix/tree/master/hystrix-contrib/hystrix-javanica">Javanica&lt;/a>. Este patrón soluciona dos problemas cuando un microservicio del que se depende falla y hace al microservicio que lo usa tolerante a fallos.&lt;/p>
&lt;ul>
&lt;li>Uno es que cuando un microservicio empieza a fallar es necesario dejar de hacerle peticiones para permitirle recuperarse si está saturado que provoca esos fallos. Cuando ocurre un fallo es posible realizar una acción en sustitución de la llamada al microservicio y devolver un valor alternativo como medida paliativa y hacer que el microsevicio afectado tenga la posibilidad de seguir ofreciendo su servicio aunque sea de forma degradada.&lt;/li>
&lt;li>Otro problema es que el microservicio aunque no falle tarde demasiado en responder, se puede establecer un &lt;em>timeout&lt;/em> que si se supera se deja de esperar e igualmente se realiza la acción de sustitución lo que evita que los microservicios que usan uno que tarda demasiado en responder agoten sus recursos y empiecen a fallar o tardar demasiado también.&lt;/li>
&lt;/ul>
&lt;p>En ambos casos se evita que la cadena de microservicios empiece a fallar y con ello sistema completo. El proyecto &lt;a href="https://dzone.com/articles/resilience4j-and-sentinel-two-open-source-alternat">Hystrix ha dejado de desarrollarse de forma activa&lt;/a> tal como aparece en el propio &lt;a href="https://github.com/Netflix/Hystrix/blob/master/README.md">README.md&lt;/a> y como alternativa se recomienda usar &lt;a href="https://github.com/resilience4j/resilience4j">Resilience4j&lt;/a> que además está diseñado para Java 8 y la programacion funcional, en el artículo &lt;a href="https://picodotdev.github.io/blog-bitix/2019/08/implementar-tolerancia-a-fallos-con-resilience4j/">Implementar tolerancia a fallos con Resilience4j&lt;/a> muestro su implementación.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/hystrix_hub9140d7d7b18b1dc3937691a78958e9a_86330_650x450_fit_box_2.png" width="640" class="" alt="Hystrix" title="Hystrix"/>
&lt;/figure>
&lt;/div>
&lt;p>El patrón &lt;em>circuit breaker&lt;/em> se denomina así ya que implementa una lógica similar a un circuito eléctrico. El circuito en su estado normal está cerrado y se realizan las llamadas al microservicio servidor. Si el microservicio servidor empieza a fallar se llama a la acción alternativa con su valor, si se supera un umbral de errores el circuito pasa a estado abierto y se dejan de hacer llamadas al microservicio servidor. Cada cierto tiempo definido se realiza una llamada al servicio servidor para comprobar su estado de forma que si responde correctamente el circuito pasa a estado cerrado nuevamente y las siguientes llamadas se realizan al microservicio servidor dejándose de utilizar la acción alternativa.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-diagram_hu4845d342695fc4ba4f8fa8d72c767f7b_90482_2560x1440_fit_box_2.png" title="Diagrama del patrón circuit breaker" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-diagram_hu4845d342695fc4ba4f8fa8d72c767f7b_90482_300x200_fit_box_2.png" width="127"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-states_hu56e2a01b6636c9453b9193ae50db8c8e_29040_2560x1440_fit_box_2.png" title="Diagrama de estados" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-states_hu56e2a01b6636c9453b9193ae50db8c8e_29040_300x200_fit_box_2.png" width="222"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/hystrix-fallback_hu341ff0d18f5e14bb81f44a2d6d1769ba_44880_2560x1440_fit_box_2.png" title="Fallback del patrón circuit breaker" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/hystrix-fallback_hu341ff0d18f5e14bb81f44a2d6d1769ba_44880_300x200_fit_box_2.png" width="300"/>&lt;/a>
&lt;figcaption>Diagrama del patrón circuit breaker, de estados y método fallback&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Para utilizar Hystrix como implementación del patrón &lt;em>circuit breaker&lt;/em> en una aplicación Java con &lt;a href="https://projects.spring.io/spring-boot/">Spring Boot&lt;/a> el método que realiza la llamada al microservicio servidor ha de encapsularse en un método anotado con la anotación &lt;a href="https://netflix.github.io/Hystrix/javadoc/com/netflix/hystrix/HystrixCommand.html">@HystrixCommand&lt;/a>, como parámetro se indica un método con la acción alternativa o &lt;em>fallback&lt;/em> que obtiene un valor en los fallos. También se puede indicar el &lt;em>tiemout&lt;/em> de espera antes de considerar que la llamada ha fallado con la propiedad &lt;em>execution.isolation.thread.timeoutInMilliseconds&lt;/em>. Igualmente se pueden indicar los valores para abrir el circuito con &lt;em>circuitBreaker.requestVolumeThreshold&lt;/em> y &lt;em>circuitBreaker.errorThresholdPercentage&lt;/em>. Esos son los básicos para utilizar este patrón de tolerancia a fallos. Tiene &lt;a href="https://github.com/Netflix/Hystrix/tree/master/hystrix-contrib/hystrix-javanica#configuration">algunos valores adicionales más que se pueden configurar&lt;/a> para adaptar el patrón a los valores óptimos de la aplicación.&lt;/p>
&lt;p>En el ejemplo el cliente en un bucle realiza las llamadas al servicio con un método &lt;em>get()&lt;/em> anotado con &lt;em>@HystrixCommand&lt;/em>. En este método se encapsula la petición HTTP que puede fallar, utilizando la librería &lt;a href="https://jersey.github.io/">Jersey&lt;/a> y obtenida la ubicación de una instancia del servicio a su vez del servicio de registro y descubrimiento &lt;a href="https://github.com/Netflix/eureka">Eureka&lt;/a>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springcloud.client&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@Component&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">ClientService&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">LoadBalancerClient&lt;/span> &lt;span class="n">loadBalancer&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@HystrixCommand&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">fallbackMethod&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;getFallback&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">commandProperties&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@HystrixProperty&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;circuitBreaker.requestVolumeThreshold&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;4&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="nd">@HystrixProperty&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;circuitBreaker.errorThresholdPercentage&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;50&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="nd">@HystrixProperty&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;execution.isolation.thread.timeoutInMilliseconds&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;1000&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">ServiceInstance&lt;/span> &lt;span class="n">instance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">loadBalancer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">choose&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;service&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">URI&lt;/span> &lt;span class="n">uri&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">instance&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getUri&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">Client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">create&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">resource&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">uri&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getFallback&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;Fallback&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/code/ClientService.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/code/ClientService.java" target="_blank">ClientService.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springcloud.client&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@SpringBootApplication&lt;/span>
&lt;span class="nd">@EnableDiscoveryClient&lt;/span>
&lt;span class="nd">@EnableCircuitBreaker&lt;/span>
&lt;span class="nd">@EnableHystrixDashboard&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">CommandLineRunner&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">DefaultConfiguration&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">ClientService&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Valor de propiedad de configuración (%s): %s%n&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;config.key&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getKey&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Valor de propiedad de configuración (%s): %s%n&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;config.password&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="o">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">20000&lt;/span>&lt;span class="o">;&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Service response: %s%n&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Thread&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sleep&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">100&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringApplication&lt;/span> &lt;span class="n">application&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">application&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setApplicationContextClass&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">AnnotationConfigApplicationContext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/code/Main.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/code/Main.java" target="_blank">Main.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Groovy" data-lang="Groovy">&lt;span class="n">plugins&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;application&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot&amp;#39;&lt;/span> &lt;span class="n">version&lt;/span> &lt;span class="s1">&amp;#39;2.0.7.RELEASE&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;io.spring.dependency-management&amp;#39;&lt;/span> &lt;span class="n">version&lt;/span> &lt;span class="s1">&amp;#39;1.0.6.RELEASE&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">mainClassName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;io.github.picodotdev.blogbitix.springcloud.client.Main&amp;#39;&lt;/span>
&lt;span class="n">dependencyManagement&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">imports&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">mavenBom&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// Spring
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kt">def&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="n">exclude&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nl">group:&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nl">module:&lt;/span> &lt;span class="s1">&amp;#39;spring-boot-starter-logging&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-log4j2&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-actuator&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-config&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-netflix-eureka-client&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-netflix-ribbon&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-netflix-hystrix&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.glassfish.jersey.core:jersey-client:2.27&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.glassfish.jersey.inject:jersey-hk2:2.27&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.google.code.gson:gson:2.8.5&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.fasterxml.jackson.core:jackson-databind:2.9.6&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/code/build.gradle" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/code/build.gradle" target="_blank">build.gradle&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>El circuito se abre cuando el número de llamadas supera un umbral y un porcentaje de fallos, se han de cumplir las dos condiciones. Si el número de llamadas que se realizan no superan el umbral aunque todas fallen el circuito permanece cerrado. Ambos valores son personalizables con las propiedades &lt;em>circuitBreaker.requestVolumeThreshold&lt;/em> y &lt;em>circuitBreaker.errorThresholdPercentage&lt;/em>. El circuito permanece abierto al menos durante el tiempo indicado por &lt;em>metrics.rollingStats.timeInMilliseconds&lt;/em>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springcloud.service&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@RestController&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">DefaultController&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">DefaultConfiguration&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Random&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">DefaultController&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">random&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Random&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">home&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// Timeout simulation
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">//Thread.sleep(random.nextInt(2000));
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Hello world (%s, %s)&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getRequestURL&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getKey&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/code/DefaultController.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/code/DefaultController.java" target="_blank">DefaultController.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>En la aplicación ejemplo hay un microservicio servidor y un microservicio cliente, iniciada una instancia de microservicio servidor y una instancia del microservicio cliente que implementa el patrón &lt;em>circuit breaker&lt;/em> inicialmente las peticiones se realizarán correctamente si no ocurre un &lt;em>timeout&lt;/em>. Si se finaliza el proceso del microservicio servidor las peticiones del cliente al servidor empezarán a fallar y este obtiene el valor alternativo del método &lt;em>fallback&lt;/em>, si se supera el umbral de llamadas y de fallos el circuito pasa a estado abierto. Mientras el circuito permanezca abierto el cliente sondea con una petición cada cierto tiempo el estado del servidor, si el servicio servidor se inicia unos instantes después de que esté disponible el cliente con la petición de sondeo comprobará que el servidor funciona, se cerrará el circuito y el cliente empezará a obtener los valores devueltos por el microservicio servidor.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">$ ./gradlew client:run
...
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8080/, value)
... # kill service, Ctrl+C
Service response: Fallback
Service response: Fallback
Service response: Fallback
Service response: Fallback
Service response: Fallback
Service response: Fallback
Service response: Fallback
... # restart service
Service response: Fallback
Service response: Fallback
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8080/, value)
Service response: Hello world (http://192.168.1.4:8080/, value)
...&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/code/System.out" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/code/System.out" target="_blank">System.out&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Para monitorizar en tiempo real el estado del sistema y de los circuitos se ofrece un &lt;em>dashboard&lt;/em> en el que visualizan el número de peticiones que se están realizando, las fallidas, el estado de los circuitos, las que fallan por &lt;em>timeout&lt;/em> o las que fallan con error. Para tener acceso a esta página hay que incluir la dependencia &lt;em>org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard&lt;/em>. La página &lt;em>dashboard&lt;/em> está disponible en la dirección &lt;em>http://localhost:8085/hystrix&lt;/em>. Este &lt;em>dahsboard&lt;/em> que ofrece Hystrix es muy básico y con un diseño mejorable, se pueden &lt;a href="https://picodotdev.github.io/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/">exponer las métricas de Hystrix en Grafana con Prometheus&lt;/a> para tener un panel con exactamente la información que se desee en una gráficas muhco más vistosas además de observar los datos exactamente en el periodo de tiempo deseado.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-closed_huce59696db4bb781bd0e709b415bf52e8_382684_2560x1440_fit_box_2.png" title="Circuit breaker cerrado" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-closed_huce59696db4bb781bd0e709b415bf52e8_382684_300x200_fit_box_2.png" width="300"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-open_huce59696db4bb781bd0e709b415bf52e8_384418_2560x1440_fit_box_2.png" title="Circuit breaker abierto" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-open_huce59696db4bb781bd0e709b415bf52e8_384418_300x200_fit_box_2.png" width="300"/>&lt;/a>
&lt;figcaption>Estados del circuit breaker&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./gradlew discoveryserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8761&amp;#34;&lt;/span>
$ ./gradlew configserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8090&amp;#34;&lt;/span>
$ ./gradlew service:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8080&amp;#34;&lt;/span>
$ ./gradlew client:run&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/code/gradle-run.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/code/gradle-run.sh" target="_blank">gradle-run.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./gradle-run.sh&lt;/code>.
&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://www.martinfowler.com/bliki/CircuitBreaker.html">CircuitBreaker&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://cloud.spring.io/spring-cloud-static/spring-cloud-netflix/2.0.1.RELEASE/single/spring-cloud-netflix.html#_circuit_breaker_hystrix_clients">Circuit Breaker: Hystrix Clients&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/Netflix/Hystrix/tree/master/hystrix-contrib/hystrix-javanica#configuration">Hyxtrix Configuration (1)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/Netflix/Hystrix/wiki/Configuration">Hyxtrix Configuration (2)&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.javamagazine.mozaicreader.com/SeptemberOctober2018/Twitter">Java Magazine Sep/Oct 2018&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/><category term="spring"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/</id><title>Almacenar cifrados los valores de configuración sensibles en Spring Cloud Config</title><updated>2018-09-30T01:40:00+02:00</updated><published>2018-09-30T01:30:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/spring.svg" class="right " width="200" alt="Spring" title="Spring"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;p>Para no tener que hacer cambios en el código que implica recompilar la aplicación y generar de nuevos los artefactos al cambiar algunos valores de la aplicación se utilizan los archivos de configuración. Los archivos de configuración son archivos de texto plano que pueden seguir algún formato como &lt;em>properties&lt;/em>, &lt;em>xml&lt;/em> o &lt;em>yaml&lt;/em>, externos a la aplicación pero que lee sus propiedades al iniciarse. Algunas propiedades de configuración de ejemplo pueden ser la cadena de conexión a una base de datos, el usuario y contraseña.&lt;/p>
&lt;p>Dado que algunos valores de configuración son sensibles como en el ejemplo anterior la cadena de conexión, usuario y contraseña es recomendable por mayor seguridad almacenar estos valores cifrados y que la aplicación los descifre con la clave correspondiente al necesitar su valor original. Estos valores no deben estar en el código fuente para &lt;a href="https://picodotdev.github.io/blog-bitix/2019/01/las-contrasenas-e-informacion-sensible-en-el-codigo-fuente-o-bytecode-de-java-no-son-seguras/">evitar un problema de seguridad aún con el código fuente compilado&lt;/a>.&lt;/p>
&lt;p>&lt;a href="https://cloud.spring.io/spring-cloud-config/">Spring Cloud Config&lt;/a> permite guardar los archivos de configuración con algunos valores cifrados. Hay varias posibilidades de configuración para guardar los datos cifrados: mediante clave simétrica, clave privada-pública, guardarlos en el servicio externo &lt;a href="https://www.vaultproject.io/">Vault&lt;/a> de &lt;a href="https://www.hashicorp.com/">Hashicorp&lt;/a>, mantenerlos cifrados solo en el almacenamiento persistente o transmitirlos cifrados y que sea el cliente el que los descifre.&lt;/p>
&lt;p>Utilizando la forma más simple para mantener los datos cifrados con una clave simétrica en el servicio de configuración hay que mantener en una propiedad de configuración la clave simétrica para cifrar y descifrar los datos, &lt;em>encrypt.key&lt;/em>. En este ejemplo la clave simétrica y las propiedades cifradas están en archivos de configuración diferentes pero incluidos en el mismo servidor de configuración. Esto no parece que aporte mucha seguridad ya que si se tiene acceso al archivo de configuración de un servicio con una propiedad cifrada probablemente se tenga acceso al archivo con la clave cifrada y la medida de seguridad no es útil. Sin embargo, esto permite al estar separados los archivos de configuración añadir el archivo con la propiedad cifrada a un repositorio público sin peligro siempre y cuando la clave de cifrado se mantenga en secreto. Los archivos de configuración de los servicios en el servidor de configuración se podrían añadir a un repositorio de Git.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-YAML" data-lang="YAML">spring&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>cloud&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>config&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>server&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>native&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>searchLocations&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>file&lt;span class="p">:&lt;/span>./misc/config&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>encrypt&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>key&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>ma8FvTm1t8uWRlYE3ghPsQxxESaZwpOGdlsFwIyPNIWE25yNg1dsvvnd7orlZL9FH0qJyRkG8kcf5CBVdjmi8b2yxKzpXyfxpMXj&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/code/bootstrap.yml" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/code/bootstrap.yml" target="_blank">bootstrap.yml&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Definida la clave simétrica e iniciado el servidor de configuración este ofrece dos &lt;em>endpoints&lt;/em> para cifrar y descifrar datos. Utilizando el de cifrado se obtiene el valor cifrado del dato sensible que se quiere proteger. Con el &lt;em>endpoint&lt;/em> de descifrado se puede descifrar. Se observa que utilizando varias veces el &lt;em>endpoint&lt;/em> de cifrado se devuelve en cada una un valor distinto, sin embargo, descifrando cada uno de estos valores con el &lt;em>endpoint&lt;/em> de descifrado siempre se obtiene el valor original. Esto es debido seguramente a que en la operación de cifrado se utiliza la técnica del &lt;em>salt&lt;/em> para que a los valores cifrados se les pueda aplicar un ataque de diccionario, el &lt;em>salt&lt;/em> es incluido en el valor devuelto para que la operación de descifrado devuelva el valor original.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ curl localhost:8090/encrypt -d secret
fb416133716acf5b6e3ffb64a396d521cd68fb0c2cb58727d5e938badefa942b
$ curl localhost:8090/encrypt -d secret
2b5ab02e4653bebb1b325e88eb9711df0e97e8f7efbbffc0dd0c5ae532dceedc
$ curl localhost:8090/encrypt -d secret
df06bcf1e36d910851a6e3f866d0f014388d3ddcb479b9f0e43194d7cfb5d72c
$ curl localhost:8090/decrypt -d fb416133716acf5b6e3ffb64a396d521cd68fb0c2cb58727d5e938badefa942b
secret
$ curl localhost:8090/decrypt -d 2b5ab02e4653bebb1b325e88eb9711df0e97e8f7efbbffc0dd0c5ae532dceedc
secret
$ curl localhost:8090/decrypt -d df06bcf1e36d910851a6e3f866d0f014388d3ddcb479b9f0e43194d7cfb5d72c
secret&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/code/curl-1.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/code/curl-1.sh" target="_blank">curl-1.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>El valor cifrado obtenido por este &lt;em>endpoint&lt;/em> se puede guardar en los archivos de configuración entrecomillándolo y precediéndolo con la cadena &lt;em>{cipher}&lt;/em>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-YAML" data-lang="YAML">config&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>key&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>dev&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>password&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;{cipher}fb416133716acf5b6e3ffb64a396d521cd68fb0c2cb58727d5e938badefa942b&amp;#39;&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/code/client.yml" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/code/client.yml" target="_blank">client.yml&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>En este caso el servicio al iniciarse obtiene su configuración del servicio de configuración, los datos se transmiten en forma plana sin cifrar y el cifrado utilizando en el servidor de configuración es transparente para el cliente. Accediendo al &lt;em>endpoint&lt;/em> del servidor de configuración que devuelve la configuración de un servicio con una propiedad cifrada se observa que al obtener el valor se devuelve en texto plano al cliente, esta petición es la misma que hace el servicio para obtener su configuración, de modo que aunque la información está cifrada en el servidor de configuración se transmite al servicio sin cifrar en texto plano. En este ejemplo se utiliza el protocolo inseguro HTTP, lo recomendable es utilizar el protocolo HTTPS para cifrar el tráfico entre el servidor de configuración y el cliente de modo que los valores sensibles queden protegidos también en la transmisión.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ curl http://localhost:8090/client/default.yml
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;client&amp;#34;&lt;/span>,
&lt;span class="s2">&amp;#34;profiles&amp;#34;&lt;/span>:&lt;span class="o">[&lt;/span>
&lt;span class="s2">&amp;#34;default.yml&amp;#34;&lt;/span>
&lt;span class="o">]&lt;/span>,
&lt;span class="s2">&amp;#34;label&amp;#34;&lt;/span>:null,
&lt;span class="s2">&amp;#34;version&amp;#34;&lt;/span>:null,
&lt;span class="s2">&amp;#34;state&amp;#34;&lt;/span>:null,
&lt;span class="s2">&amp;#34;propertySources&amp;#34;&lt;/span>:&lt;span class="o">[&lt;/span>
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;file:misc/config/client.yml&amp;#34;&lt;/span>,
&lt;span class="s2">&amp;#34;source&amp;#34;&lt;/span>:&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;server.port&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nv">8085&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>,
&lt;span class="s2">&amp;#34;management.endpoints.web.exposure.include&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;*&amp;#34;&lt;/span>,
&lt;span class="s2">&amp;#34;circuitBreaker.requestVolumeThreshold&amp;#34;&lt;/span>:4,
&lt;span class="s2">&amp;#34;circuitBreaker.errorThresholdPercentage&amp;#34;&lt;/span>:50,
&lt;span class="s2">&amp;#34;metrics.rollingStats.timeInMilliseconds&amp;#34;&lt;/span>:10000,
&lt;span class="s2">&amp;#34;config.key&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;dev&amp;#34;&lt;/span>,
&lt;span class="s2">&amp;#34;config.password&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;secret&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">]&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/code/curl-2.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/code/curl-2.sh" target="_blank">curl-2.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Iniciado el servicio de descubrimiento, el de configuración y un servicio que tiene un dato cifrado de configuración el valor que obtiene está ya descifrado. En este caso el servicio &lt;em>client&lt;/em> obtiene el valor de la propiedad &lt;em>config.password&lt;/em> descifrado con el valor &lt;em>secret&lt;/em>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./gradlew discoveryserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8761&amp;#34;&lt;/span>
$ ./gradlew configserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8090&amp;#34;&lt;/span>
$ ./gradlew service:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8080&amp;#34;&lt;/span>
$ ./gradlew client:run&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/code/gradlew-run.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/code/gradlew-run.sh" target="_blank">gradlew-run.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">$ ./gradlew client:run
...
2018-09-30 00:56:08,193 INFO org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler [&amp;#34;http-nio-8085&amp;#34;]
2018-09-30 00:56:08,283 INFO org.apache.tomcat.util.net.NioSelectorPool Using a shared selector for servlet write/read
2018-09-30 00:56:08,689 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8085 (http) with context path &amp;#39;&amp;#39;
2018-09-30 00:56:08,691 INFO netflix.eureka.serviceregistry.EurekaAutoServiceRegistration Updating port to 8085
2018-09-30 00:56:08,695 INFO io.github.picodotdev.blogbitix.springcloud.client.Main Started Main in 19.901 seconds (JVM running for 22.013)
Valor de propiedad de configuración (config.key): dev
Valor de propiedad de configuración (config.password): secret&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/code/System.out" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/code/System.out" target="_blank">System.out&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springcloud.client&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@SpringBootApplication&lt;/span>
&lt;span class="nd">@EnableDiscoveryClient&lt;/span>
&lt;span class="nd">@EnableCircuitBreaker&lt;/span>
&lt;span class="nd">@EnableHystrixDashboard&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">CommandLineRunner&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">DefaultConfiguration&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">ClientService&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Valor de propiedad de configuración (%s): %s%n&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;config.key&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getKey&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">printf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Valor de propiedad de configuración (%s): %s%n&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;config.password&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringApplication&lt;/span> &lt;span class="n">application&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">application&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setApplicationContextClass&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">AnnotationConfigApplicationContext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/code/Main.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/code/Main.java" target="_blank">Main.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springcloud.client&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.beans.factory.annotation.Value&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.context.annotation.Configuration&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">DefaultConfiguration&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Value&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;${config.key}&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Value&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;${config.password}&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">password&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getKey&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setKey&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">password&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setPassword&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">password&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">password&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">password&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/code/DefaultConfiguration.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/code/DefaultConfiguration.java" target="_blank">DefaultConfiguration.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./gradle-run.sh, ./curl-1.sh&lt;/code>.
&lt;/p></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/><category term="spring"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/</id><title>Recargar sin reiniciar la configuración de una aplicación Spring Boot con Spring Cloud Config</title><updated>2018-09-23T00:50:00+02:00</updated><published>2018-09-23T00:15:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/spring.svg" class="right " width="200" alt="Spring" title="Spring"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;p>No es raro la necesidad de querer cambiar algunos valores de la configuración de una aplicación sin ningún cambio adicional en el código. Normalmente la configuración se externaliza en un archivo de texto en un determinado formato como &lt;em>properties&lt;/em> o &lt;em>yaml&lt;/em> que se lee al iniciarse la aplicación pero que al querer hacer cambios y hacerlos efectivos requiere reiniciar la aplicación.&lt;/p>
&lt;p>Para evitar la caída de servicio en un reinicio de aplicación requiere tener varias instancias de la aplicación, ir sacando del balanceador las instancias para que no le soliciten nuevas peticiones, reiniciarlas y añadirlas de nuevo al balanceador si se hace balanceo de carga en el servidor o reiniciar las aplicaciones progresivamente si se hace en el cliente. Y esto con todas las instancias del servicio. &lt;a href="https://cloud.spring.io/spring-cloud-config/">Spring Cloud Config&lt;/a> y &lt;a href="https://projects.spring.io/spring-boot/">Spring Boot&lt;/a> entre sus funcionalidades de configuración posee una que consiste en recargar la configuración o ciertas partes de la misma. Para ello &lt;a href="https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#production-ready">Spring Boot Actuator&lt;/a> ofrece un &lt;em>endpoint&lt;/em> con el que disparar la recarga.&lt;/p>
&lt;p>En el siguiente ejemplo de microservicio que posee una clase de configuración con algunas propiedades. El valor de estas propiedades se utilizan para el resultado de una acción en un &lt;em>endpoint&lt;/em> del servicio.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springcloud.service&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.beans.factory.annotation.Value&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.cloud.context.config.annotation.RefreshScope&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.context.annotation.Configuration&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="nd">@RefreshScope&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">DefaultConfiguration&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Value&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;${config.key}&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getKey&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setKey&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/code/DefaultConfiguration.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/code/DefaultConfiguration.java" target="_blank">DefaultConfiguration.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springcloud.service&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.beans.factory.annotation.Autowired&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.web.bind.annotation.RequestMapping&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.web.bind.annotation.RestController&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">javax.servlet.http.HttpServletRequest&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@RestController&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">DefaultController&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">DefaultConfiguration&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@RequestMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">home&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Hello world (%s, %s)&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getRequestURL&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getKey&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/code/DefaultController.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/code/DefaultController.java" target="_blank">DefaultController.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-YAML" data-lang="YAML">server&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>port&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>${port&lt;span class="p">:&lt;/span>&lt;span class="m">8080&lt;/span>}&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>spring&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>profiles&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>active&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>cloud&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>rabbitmq&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>host&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>localhost&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>port&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">5672&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>username&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>guest&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>password&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>guest&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>management&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>endpoints&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>web&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>exposure&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>include&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;*&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>config&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>key&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>value&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/code/service.yml" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/code/service.yml" target="_blank">service.yml&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Iniciada la aplicación que requiere iniciar previamente el servicio de registro y descubrimiento y el servidor de configuración, la aplicación al iniciarse obtiene su configuración del servidor de configuración. Si se cambia la configuración de la variable &lt;em>config.key&lt;/em> la aplicación no obtendrá el valor actualizado hasta que se invoque el &lt;em>endpoint&lt;/em> &lt;em>http://localhost:8080/actuator/refresh&lt;/em>. Para que Spring Boot recargue la configuración es necesario anotar con &lt;em>@RefreshScope&lt;/em> la clase de configuración. Invocado el &lt;em>endpoint&lt;/em> de recarga de configuración la aplicación toma de nuevo los nuevos valores del servicio de configuración.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./gradlew discoveryserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8761&amp;#34;&lt;/span>
$ ./gradlew configserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8090&amp;#34;&lt;/span>
$ ./gradlew service:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8080&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/code/gradle-run-1.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/code/gradle-run-1.sh" target="_blank">gradle-run-1.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ curl -i -X POST http://localhost:8080/
Hello world &lt;span class="o">(&lt;/span>http://localhost:8080/, value&lt;span class="o">)&lt;/span>
$ vim configserver/misc/config/service.yml
&lt;span class="c1"># config.key: secret&lt;/span>
$ curl -i -X POST http://localhost:8080/actuator/refresh
HTTP/1.1 &lt;span class="m">200&lt;/span>
Content-Type: application/vnd.spring-boot.actuator.v2+json&lt;span class="p">;&lt;/span>&lt;span class="nv">charset&lt;/span>&lt;span class="o">=&lt;/span>UTF-8
Transfer-Encoding: chunked
Date: Sat, &lt;span class="m">22&lt;/span> Sep &lt;span class="m">2018&lt;/span> 21:19:03 GMT
&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;config.key&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
$ curl http://localhost:8080/
Hello world &lt;span class="o">(&lt;/span>http://localhost:8080/, secret&lt;span class="o">)&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/code/curl-1.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/code/curl-1.sh" target="_blank">curl-1.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>En una aplicación orientada microservicios es muy posible que haya múltiples instancias del mismo servicio y para recargar la configuración de cada uno de ellos hay que hacerlo de forma individual con su &lt;em>endpoint&lt;/em> de recarga de configuración. Dado el número de microservicios y su ubicación distribuida hacerlo de forma individual es un inconveniente.&lt;/p>
&lt;p>Para resolver este inconveniente integrando &lt;a href="https://cloud.spring.io/spring-cloud-bus/">Spring Cloud Bus&lt;/a> en las aplicaciones es posible recargar la configuración de todos los microservicios haciendo una única llamada al &lt;em>endpoint&lt;/em> &lt;em>http://localhost:8090/monitor&lt;/em> indicando el servicio a actualizar su configuración lo que es independiente del número de instancias y de su ubicación. Integrar Spring Clud Bus requiere disponer de una instancia de mensajes como &lt;a href="https://www.rabbitmq.com/">RabbitMQ&lt;/a> e incluir como dependencia tanto en el servidor de configuración como en el servicio la dependencia &lt;em>spring-cloud-starter-bus-amqp&lt;/em>. Para esta comunicación de mensajes Spring Cloud Config crea en RabbitMQ una cola de mensajes que empieza por &lt;em>springCloudBus&lt;/em>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Groovy" data-lang="Groovy">&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-bus-amqp&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/code/configserver.gradle" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/code/configserver.gradle" target="_blank">configserver.gradle&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Groovy" data-lang="Groovy">&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-bus-amqp:2.0.0.RELEASE&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="n">exclude&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nl">group:&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nl">module:&lt;/span> &lt;span class="s1">&amp;#39;spring-boot-starter-logging&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/code/service.gradle" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/code/service.gradle" target="_blank">service.gradle&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Los pasos para probar estas funcionalidades con Spring Cloud Bus en una o varias varias instancias son iniciar una instancia o más del servidor de registro y descubrimiento, iniciar una o más instancias del servidor de configuración, iniciar una o varias instancias del servicio todas las instancias en un puerto y terminal diferente, invocar el servicio cuyo valor de respuesta depende de una propiedad de configuración, modificar el valor de la propiedad de configuración, recargar la configuración e invocar de nuevo el servicio para comprobar que el nuevo valor se ha hecho efectivo.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./gradlew discoveryserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8761&amp;#34;&lt;/span>
$ ./gradlew configserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8090&amp;#34;&lt;/span>
$ ./gradlew service:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8080&amp;#34;&lt;/span>
$ ./gradlew service:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8081&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/code/gradle-run-2.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/code/gradle-run-2.sh" target="_blank">gradle-run-2.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ curl -i -X POST http://localhost:8080/
Hello world &lt;span class="o">(&lt;/span>http://localhost:8080/, value&lt;span class="o">)&lt;/span>
$ curl -i -X POST http://localhost:8081/
Hello world &lt;span class="o">(&lt;/span>http://localhost:8081/, value&lt;span class="o">)&lt;/span>
$ vim configserver/misc/config/service.yml
&lt;span class="c1"># config.key: secret&lt;/span>
$ curl -X POST -d &lt;span class="s1">&amp;#39;path=service&amp;#39;&lt;/span> http://localhost:8090/monitor
&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;service&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
$ curl http://localhost:8080/
Hello world &lt;span class="o">(&lt;/span>http://localhost:8080/, secret&lt;span class="o">)&lt;/span>
$ curl http://localhost:8081/
Hello world &lt;span class="o">(&lt;/span>http://localhost:8081/, secret&lt;span class="o">)&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/code/curl-2.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/code/curl-2.sh" target="_blank">curl-2.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./gradle-run-1.sh, ./curl-1.sh&lt;/code>.
&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="http://cloud.spring.io/spring-cloud-static/spring-cloud-bus/2.0.0.RELEASE/single/spring-cloud-bus.html#_quick_start">Spring Cloud Bus - Quick Start&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.0.1.RELEASE/single/spring-cloud-config.html#_push_notifications_and_spring_cloud_bus">Spring CloudBus - Push Notifications and Spring Cloud Bus&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-configuration-classes.html">Spring Boot - Configuration Classes&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/><category term="spring"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/</id><title>Servicio de configuración para microservicios con Spring Cloud Config</title><updated>2018-09-15T19:30:00+02:00</updated><published>2018-09-15T16:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/spring.svg" class="right " width="200" alt="Spring" title="Spring"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;p>Al igual que un servicio de registro y descubrimiento es esencial para los microservicios un servicio de obtención de configuración de donde puedan obtener su configuración es también básico. Dado el gran número de microservicios de los que puede estar compuesta una aplicación, su carácter efímero, los varios entornos de ejecución (desarrollo, pruebas, producción, &amp;hellip;) mantener centralizada la configuración en un único sitio hace las cosas mucho más sencillas cuando hay que cambiar el valor de alguna propiedad, en vez de la alternativa aún externalizada del artefacto del microservicio en el sistema de archivos del entorno de ejecución.&lt;/p>
&lt;p>Dado que este servicio de configuración es esencial para que los microservicios puedan obtener su configuración sin la cual no podrían proporcionar su funcionalidad hay que configurarlo de tal manera que sea tolerante a fallos. Una de las medidas para hacerlo tolerante a fallos es iniciar varias instancias de servidores de configuración, estas instancias se autoregistran en el servicio de descubrimiento para que los microservicios puedan descubrirlos y obtener su configuración al iniciarse.&lt;/p>
&lt;p>Con el comando &lt;code>./gradlew configserver:run &amp;ndash;args=&amp;ldquo;&amp;ndash;port=8090&amp;rdquo;&lt;/code> se inicia una instancia de servicio de configuración en el puerto &lt;em>8090&lt;/em>, cambiando el número de puerto se puede iniciar otra instancia en el puerto especificado. Una vez iniciadas varias instancias en el &lt;em>dashboard&lt;/em> del servicio de descubrimiento se observa como se autoregistran y su estado.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./gradlew discoveryserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8761&amp;#34;&lt;/span>
$ ./gradlew discoveryserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8762&amp;#34;&lt;/span>
$ ./gradlew discoveryserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8763&amp;#34;&lt;/span>
$ ./gradlew configserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8090&amp;#34;&lt;/span>
$ ./gradlew configserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8091&amp;#34;&lt;/span>
$ ./gradlew configserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8092&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/code/gradlew-run.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/code/gradlew-run.sh" target="_blank">gradlew-run.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/images/spring-eureka-2_hub1cbfdfec6fa7e0b16e220ff391ac48f_114116_2560x1440_fit_box_2.png" title="Servicios registrados en el servicio de registro y descubrimiento" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/images/spring-eureka-2_hub1cbfdfec6fa7e0b16e220ff391ac48f_114116_300x200_fit_box_2.png" width="244"/>&lt;/a>
&lt;figcaption>Servicios y su estado registrados en el servicio de registro y descubrimiento&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Dado que los servicios de configuración no pueden confiar en obtener su configuración de una instancia de su servicio de configuración ha de establecerse en el propio microservicio los nombres de &lt;em>host&lt;/em> de las instancias de registro y descubrimiento en las que registrarse, en la propiedad &lt;em>eureka.client.serviceUrl.defaultZone&lt;/em>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-YAML" data-lang="YAML">spring&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>cloud&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>config&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>server&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>native&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>searchLocations&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>file&lt;span class="p">:&lt;/span>./misc/config&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>encrypt&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>key&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>ma8FvTm1t8uWRlYE3ghPsQxxESaZwpOGdlsFwIyPNIWE25yNg1dsvvnd7orlZL9FH0qJyRkG8kcf5CBVdjmi8b2yxKzpXyfxpMXj&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/code/bootstrap.yml" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/code/bootstrap.yml" target="_blank">bootstrap.yml&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-YAML" data-lang="YAML">server&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>port&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>${port&lt;span class="p">:&lt;/span>&lt;span class="m">8090&lt;/span>}&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>spring&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>application&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>name&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>configserver&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>profiles&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>active&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>native&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>rabbitmq&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>host&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>localhost&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>port&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">5672&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>username&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>guest&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>password&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>guest&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>eureka&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>client&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>serviceUrl&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>defaultZone&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>http&lt;span class="p">:&lt;/span>//ds1&lt;span class="m">.127&lt;/span>&lt;span class="m">.0&lt;/span>&lt;span class="m">.0&lt;/span>&lt;span class="m">.1&lt;/span>.xip.io&lt;span class="p">:&lt;/span>&lt;span class="m">8761&lt;/span>/eureka/&lt;span class="p">,&lt;/span>http&lt;span class="p">:&lt;/span>//ds2&lt;span class="m">.127&lt;/span>&lt;span class="m">.0&lt;/span>&lt;span class="m">.0&lt;/span>&lt;span class="m">.1&lt;/span>.xip.io&lt;span class="p">:&lt;/span>&lt;span class="m">8762&lt;/span>/eureka/&lt;span class="p">,&lt;/span>http&lt;span class="p">:&lt;/span>//ds3&lt;span class="m">.127&lt;/span>&lt;span class="m">.0&lt;/span>&lt;span class="m">.0&lt;/span>&lt;span class="m">.1&lt;/span>.xip.io&lt;span class="p">:&lt;/span>&lt;span class="m">8763&lt;/span>/eureka/&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/code/application.yml" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/code/application.yml" target="_blank">application.yml&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Los archivos de configuración para los microservicios en este ejemplo están en el directorio &lt;em>misc/config&lt;/em> donde siguiendo algunas convenciones para asignar el nombre a los archivos se pueden personalizar las configuraciones de los microservicios según el entorno y perfil con el que se active. En este caso se utiliza lo que &lt;a href="https://cloud.spring.io/spring-cloud-config/">Spring Cloud Config&lt;/a> denomina un &lt;em>filesystem backend&lt;/em>, sin embargo, hay otras disponibles como un repositorio de &lt;a href="https://git-scm.com/">git&lt;/a> el cual ofrece varias ventajas propias de un repositorio de código como historial, ramas de trabajo y hacer cambios con un &lt;em>commit&lt;/em>.&lt;/p>
&lt;p>Un microservicio o aplicación de &lt;a href="https://spring.io/">Spring&lt;/a> que use un servidor de Spring Cloud Config una de las primeras acciones que realiza al iniciarse es obtener su configuración en función del nombre del microservicio y perfil con el que se inicie. Dado que la configuración se obtiene en el inicio en base a su nombre y perfil tanto el nombre del microservicio y su perfil de configuración se ha de configurar en el archivo &lt;em>bootstrap.yml&lt;/em>.&lt;/p>
&lt;p>El proceso de configuración de un microservicio está formado por dos pasos, en el primero el servicio se conecta al servicio de registro y descubrimiento obtiene los servicios registrados de configuración y en el segundo paso solicita a uno de ellos su configuración.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-YAML" data-lang="YAML">spring&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>application&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>name&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>service&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>cloud&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>config&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>failFast&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>discovery&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>enabled&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/code/bootstrap-service.yml" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/code/bootstrap-service.yml" target="_blank">bootstrap-service.yml&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-YAML" data-lang="YAML">server&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>port&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>${port&lt;span class="p">:&lt;/span>&lt;span class="m">8080&lt;/span>}&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>spring&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>application&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>name&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>service&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>profiles&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>active&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>cloud&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>rabbitmq&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>host&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>localhost&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>port&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">5672&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>username&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>guest&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>password&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>guest&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>management&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>endpoints&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>web&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>exposure&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>include&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;*&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>config&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>key&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>value&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/code/service.yml" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/code/service.yml" target="_blank">service.yml&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-YAML" data-lang="YAML">server&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>port&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>${port&lt;span class="p">:&lt;/span>&lt;span class="m">8085&lt;/span>}&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>management&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>endpoints&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>web&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>exposure&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>include&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;*&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>circuitBreaker&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>requestVolumeThreshold&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>errorThresholdPercentage&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">50&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>metrics&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>rollingStats&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>timeInMilliseconds&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">10000&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>config&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>key&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>dev&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>password&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;{cipher}fb416133716acf5b6e3ffb64a396d521cd68fb0c2cb58727d5e938badefa942b&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/code/client.yml" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/code/client.yml" target="_blank">client.yml&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>El servicio de configuración es accesible mediante una interfaz REST. Para obtener la configuración del servicio &lt;em>service&lt;/em> y del servicio &lt;em>client&lt;/em> de este ejemplo las URLs para obtenerlas son las siguientes. Estos &lt;em>endpoints&lt;/em> devuelven en formato &lt;em>json&lt;/em> un documento con los valores de las propiedades principalmente están en el mapa &lt;em>source&lt;/em> entre otros datos que Spring al iniciar la aplicación con ellos configura la aplicación.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ curl http://localhost:8090/service/default.yml
$ curl http://localhost:8090/client/default.yml&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/code/curl.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/code/curl.sh" target="_blank">curl.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;service&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;profiles&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;default.yml&amp;#34;&lt;/span>
&lt;span class="p">]&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;label&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;version&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;state&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;propertySources&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;file:misc/config/service.yml&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;source&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;server.port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;${port:8080}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;spring.application.name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;service&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;spring.profiles.active&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;cloud&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;spring.rabbitmq.host&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;localhost&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;spring.rabbitmq.port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">5672&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;spring.rabbitmq.username&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;guest&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;spring.rabbitmq.password&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;guest&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;management.endpoints.web.exposure.include&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;*&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;config.key&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/code/service-config.json" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/code/service-config.json" target="_blank">service-config.json&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;client&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;profiles&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;default.yml&amp;#34;&lt;/span>
&lt;span class="p">]&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;label&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;version&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;state&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;propertySources&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;file:misc/config/client.yml&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;source&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;server.port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;${port:8085}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;management.endpoints.web.exposure.include&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;*&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;circuitBreaker.requestVolumeThreshold&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;circuitBreaker.errorThresholdPercentage&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;metrics.rollingStats.timeInMilliseconds&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">10000&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;config.key&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;dev&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;config.password&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;secret&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/code/client-config.json" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/code/client-config.json" target="_blank">client-config.json&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>En otro artículo relacionado con la configuración de los microservicios comentaré &lt;a href="https://picodotdev.github.io/blog-bitix/2018/09/recargar-la-configuracion-sin-reiniciar-una-aplicacion-spring-boot-con-spring-cloud-config/">como recargar la configuración de los microservicios sin necesidad de reiniciarlos&lt;/a> y &lt;em>como almacenar datos sensibles de forma cifrada&lt;/em> para mayor seguridad.&lt;/p>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./gradlew run:configserver --args=&amp;#34;port=8090&amp;#34;&lt;/code>.
&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="http://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.0.1.RELEASE/single/spring-cloud-config.html#_git_backend">Spring Cloud Config, Git&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.0.1.RELEASE/single/spring-cloud-config.html#vault-backend">Spring Cloud Config, Vault&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.0.1.RELEASE/single/spring-cloud-config.html#_jdbc_backend">Spring Cloud Config, JDBC&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.spring.io/spring-boot/docs/2.0.4.RELEASE/reference/htmlsingle/#boot-features-external-config">Spring Cloud Config, Externalized Configuration&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/><category term="spring"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/</id><title>Registro y descubrimiento de servicios con Spring Cloud Netflix</title><updated>2018-09-07T19:00:00+02:00</updated><published>2018-09-07T19:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/spring.svg" class="right " width="200" alt="Spring" title="Spring"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;p>Los microservicios en una aplicación con una arquitectura de microservicios son efímeros, se crean, se escalan para atender picos de mayor demanda, pueden desaparecer por problemas de la red de comunicaciones que no es fiable y volverse a crear en una ubicación diferente. Por esta naturaleza efímera es necesario un servicio con el cual los clientes de los microservicios puedan encontrarlos y que los microservicios utilizan para registrarse cuando se inician.&lt;/p>
&lt;p>Este servicio de registro y descubrimiento es esencial y crítico en una aplicación orientada a microservicios ya que sin él los clientes no pueden encontrar los servicios que necesitan. Dado que es un servicio esencial es necesario que esté siempre disponible y para ello es recomendable crear un cluster de servicios de registro y descubrimiento para que en caso de que una instancia de este servicio falle estén disponibles otras instancias para los clientes.&lt;/p>
&lt;p>Una &lt;a href="https://picodotdev.github.io/blog-bitix/2017/01/registro-y-descubrimiento-de-servicios-con-spring-cloud-y-consul/">implementación de registro y descubrimiento es Consul&lt;/a>, &lt;a href="https://www.consul.io/">Consul&lt;/a> es un servicio externo creado por &lt;a href="https://www.hashicorp.com/">Hashicorp&lt;/a>. &lt;a href="https://projects.spring.io/spring-cloud/">Spring Cloud&lt;/a> entre sus proyectos, &lt;a href="https://cloud.spring.io/spring-cloud-netflix/">Spring Cloud Netflix&lt;/a>, proporciona una implementación con &lt;a href="https://github.com/Netflix/eureka">Eureka&lt;/a> de servicio de registro y descubrimiento que se pueden embeber en una aplicación de &lt;a href="https://projects.spring.io/spring-boot/">Spring Boot&lt;/a>.&lt;/p>
&lt;p>Para crear un servidor Eureka con Spring y Spring Boot hay que crear una aplicación con las dependencias adecuadas y la anotación &lt;em>@EnableEurekaServer&lt;/em> para habilitar el inicio del servidor de registro y descubrimiento. Además, establecer las propiedades de configuración adecuadas para que el cluster de servidores Eureka se forme. Este microservicio es el primero que ha de iniciarse en una aplicación orientada a microservicios.&lt;/p>
&lt;p>Utilizando &lt;a href="https://gradle.org/">Gradle&lt;/a> las dependencias y la anotación &lt;em>@EnableEurekaServer&lt;/em> a añadir a la clase principal de la aplicación son las siguientes.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Groovy" data-lang="Groovy">&lt;span class="n">plugins&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;application&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot&amp;#39;&lt;/span> &lt;span class="n">version&lt;/span> &lt;span class="s1">&amp;#39;2.0.7.RELEASE&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;io.spring.dependency-management&amp;#39;&lt;/span> &lt;span class="n">version&lt;/span> &lt;span class="s1">&amp;#39;1.0.6.RELEASE&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">mainClassName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;io.github.picodotdev.blogbitix.springcloud.discoveryserver.Main&amp;#39;&lt;/span>
&lt;span class="n">dependencyManagement&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">imports&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">mavenBom&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// Spring
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kt">def&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="n">exclude&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nl">group:&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nl">module:&lt;/span> &lt;span class="s1">&amp;#39;spring-boot-starter-logging&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-log4j2&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">compile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;org.springframework.cloud:spring-cloud-starter-netflix-eureka-server&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">excludeSpringBootStarterLogging&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.google.code.gson:gson:2.8.5&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.fasterxml.jackson.core:jackson-databind:2.9.6&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">runtime&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/code/build.gradle" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/code/build.gradle" target="_blank">build.gradle&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.springcloud.discoveryserver&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.boot.CommandLineRunner&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.boot.SpringApplication&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.cloud.netflix.eureka.server.EnableEurekaServer&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.context.annotation.AnnotationConfigApplicationContext&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@SpringBootApplication&lt;/span>
&lt;span class="nd">@EnableEurekaServer&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">CommandLineRunner&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringApplication&lt;/span> &lt;span class="n">application&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">application&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setApplicationContextClass&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">AnnotationConfigApplicationContext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/code/Main.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/code/Main.java" target="_blank">Main.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>La propiedad de configuración principal para formar el cluster es &lt;em>eureka.client.serviceURL.defaultZone&lt;/em> donde se especifica una lista &lt;em>hostnames&lt;/em> donde están los servidores de registro y descubrimiento. Para dar a cada servidor en local un nombre de dominio distinto he usado el servicio de DNS &lt;a href="http://xip.io/">xip.io&lt;/a> que resuleve el nombre de dominio a la dirección IP indicada en el propio nombre de dominio, así &lt;em>ds1.127.0.0.1.xip.io&lt;/em> se resuelve a &lt;em>127.0.0.1&lt;/em> que es la dirección para la propia máquina local al igual que &lt;em>ds2.127.0.0.1.xip.io&lt;/em> y &lt;em>ds3.127.0.0.1.xip.io&lt;/em>. El servicio de xip.io evita tener que crear en el archivo de &lt;em>hosts&lt;/em> local una correspondencia entre nombre de &lt;em>hostname&lt;/em> y la dirección IP de &lt;em>loopback&lt;/em> de la propia máquina local.&lt;/p>
&lt;p>En el archivo de configuración hay tres perfiles distintos que varían algunas propiedades según sea el perfil que se active al iniciar la instancia del servicio. En el perfil &lt;em>ds1&lt;/em> el puerto donde se inicia el servicio es &lt;em>8761&lt;/em>, con el perfil &lt;em>ds2&lt;/em> el servicio se inicia en el puerto &lt;em>8762&lt;/em> y con &lt;em>ds3&lt;/em> en el &lt;em>8763&lt;/em>, además se cambia el &lt;em>hostname&lt;/em> para que la instancia sepa cual es.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-YAML" data-lang="YAML">server&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>port&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>${port&lt;span class="p">:&lt;/span>&lt;span class="m">8761&lt;/span>}&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>spring&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>application&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>name&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>discoveryserver&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>eureka&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>environment&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>default&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>client&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>registerWithEureka&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>fetchRegistry&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>serviceUrl&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>defaultZone&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>http&lt;span class="p">:&lt;/span>//ds1&lt;span class="m">.127&lt;/span>&lt;span class="m">.0&lt;/span>&lt;span class="m">.0&lt;/span>&lt;span class="m">.1&lt;/span>.xip.io&lt;span class="p">:&lt;/span>&lt;span class="m">8761&lt;/span>/eureka/&lt;span class="p">,&lt;/span>http&lt;span class="p">:&lt;/span>//ds2&lt;span class="m">.127&lt;/span>&lt;span class="m">.0&lt;/span>&lt;span class="m">.0&lt;/span>&lt;span class="m">.1&lt;/span>.xip.io&lt;span class="p">:&lt;/span>&lt;span class="m">8762&lt;/span>/eureka/&lt;span class="p">,&lt;/span>http&lt;span class="p">:&lt;/span>//ds3&lt;span class="m">.127&lt;/span>&lt;span class="m">.0&lt;/span>&lt;span class="m">.0&lt;/span>&lt;span class="m">.1&lt;/span>.xip.io&lt;span class="p">:&lt;/span>&lt;span class="m">8763&lt;/span>/eureka/&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>---&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>server&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>port&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">8761&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>spring&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>profiles&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>ds1&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>eureka&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>instance&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>hostname&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>ds1&lt;span class="m">.127&lt;/span>&lt;span class="m">.0&lt;/span>&lt;span class="m">.0&lt;/span>&lt;span class="m">.1&lt;/span>.xip.io&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>---&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>server&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>port&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">8762&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>spring&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>profiles&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>ds2&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>eureka&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>instance&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>hostname&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>ds2&lt;span class="m">.127&lt;/span>&lt;span class="m">.0&lt;/span>&lt;span class="m">.0&lt;/span>&lt;span class="m">.1&lt;/span>.xip.io&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>---&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>server&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>port&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">8763&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>spring&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>profiles&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>ds3&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>eureka&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>instance&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>hostname&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>ds3&lt;span class="m">.127&lt;/span>&lt;span class="m">.0&lt;/span>&lt;span class="m">.0&lt;/span>&lt;span class="m">.1&lt;/span>.xip.io&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/code/application.yml" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/code/application.yml" target="_blank">application.yml&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Los comandos para arrancar tres instancias de servidor de registro y descubrimiento utilizando varios perfiles de configuración de Spring son los siguientes.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./gradlew discoveryserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--spring.profiles.active=ds1&amp;#34;&lt;/span>
$ ./gradlew discoveryserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--spring.profiles.active=ds2&amp;#34;&lt;/span>
$ ./gradlew discoveryserver:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--spring.profiles.active=ds3&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/code/run-discoveryserver.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/code/run-discoveryserver.sh" target="_blank">run-discoveryserver.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Estando disponible el servicio de registro y descubrimiento ya se puede iniciar el servicio de configuración. Con estos dos servicios de infraestructura iniciados los que sería un servicio de la aplicación ya puede iniciarse que consiste en este caso en obtener una referencia de una instancia del servicio de configuración registada en el servicio de registro y descubrimiento, con esta referencia obtiene su configuración y se inicia.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./gradlew configserver:run
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/code/run-configserver.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/code/run-configserver.sh" target="_blank">run-configserver.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./gradlew service:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8080&amp;#34;&lt;/span>
$ ./gradlew service:run --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--port=8081&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/code/run-service.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/code/run-service.sh" target="_blank">run-service.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Una vez iniciados los servidores de descubrimiento en la página &lt;em>dashboard&lt;/em> de cualquiera de ellos cambiando el puerto de la dirección &lt;em>http://ds1.127.0.0.1.xip.io:8761/&lt;/em> se observan varias propiedades como la lista de servidores del cluster, las réplicas registradas y disponibles y los servicios registrados con su ubicación y puerto. En este caso hay tres instancias del servicio de registro y descubrimiento, una de servidor de configuración y dos instancias de un servicio.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/images/spring-eureka-1_hucbae4859ed8e1c01a78ce54eb118f2fc_101099_2560x1440_fit_box_2.png" title="Cluster del servicio de registro y descubrimiento" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/images/spring-eureka-1_hucbae4859ed8e1c01a78ce54eb118f2fc_101099_300x200_fit_box_2.png" width="258"/>&lt;/a>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/images/spring-eureka-2_hub1cbfdfec6fa7e0b16e220ff391ac48f_114116_2560x1440_fit_box_2.png" title="Servicios registrados en el servicio de registro y descubrimiento" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/images/spring-eureka-2_hub1cbfdfec6fa7e0b16e220ff391ac48f_114116_300x200_fit_box_2.png" width="244"/>&lt;/a>
&lt;figcaption>Servicios y su estado registrados en el servicio de registro y descubrimiento&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./gradlew discoveryserver:run --args=&amp;#34;--spring.profiles.active=ds1&amp;#34;&lt;/code>.
&lt;/p></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/><category term="spring"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2018/08/aplicaciones-basadas-en-microservicios/</id><title>Aplicaciones basadas en microservicios</title><updated>2018-09-02T12:00:00+02:00</updated><published>2018-08-31T18:00:00+02:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2018/08/aplicaciones-basadas-en-microservicios/"/><author><name>picodotdev</name></author><content type="html">
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/spring.svg" class="right " width="200" alt="Spring" title="Spring"/>
&lt;/div>
&lt;div class="logotypes" style="float: right; clear: right;">
&lt;img src="assets/images/logotipos/java.svg" class="right " width="200" alt="Java" title="Java"/>
&lt;/div>
&lt;p>La arquitectura de las aplicaciones está cambiando en lo que era lo habitual hace no tanto. Con el desarrollo de las redes de comunicación entre computadoras tanto en una red local con ethernet como en internet con el protocolo TCP/IP se desarrollaron las primeras aplicaciones cliente/servidor como es un servidor web y un navegador o una base de datos y una aplicación.&lt;/p>
&lt;p>A las páginas HTML de los servidores web, estáticas hasta entonces, se les añadió lógica de servidor para procesar datos y generar el contenido dinámicamente, se crearon las aplicaciones web ejecutadas en el servidor en un principio en lo que ahora denominamos monolitos en forma de &lt;a href="https://es.wikipedia.org/wiki/C%C3%B3digo_espagueti">código espagueti&lt;/a> o más estructurado con los denominados &lt;em>frameworks&lt;/em> del lenguaje de programación de turno empleando el &lt;a href="https://es.wikipedia.org/wiki/Programaci%C3%B3n_por_capas">modelo de tres capas&lt;/a> formadas por la presentación, lógica y base de datos.&lt;/p>
&lt;p>Más recientemente con las nuevas posibilidades de la virtualización, los contenedores, la computación en nube con la flexibilidad que aporta de reservar recursos de computación bajo demanda en minutos y para evitar varios problemas que presentan los monolitos se evoluciona hacia microservicios. Esto no quiere decir que los monolitos con este nombre con cierto matiz peyorativo que ha adquirido no sigan siendo perfectamente válidos en algunos contextos en los que ahora se usan sin embargo en el contexto de la computación en la nube y servicio para un gran número de peticiones, usuarios o aplicación funcionalmente grande los microservicios son una mejor adaptación.&lt;/p>
&lt;p>Los problemas que presentan las aplicaciones monolíticas donde toda la lógica está en una aplicación en un servidor son:&lt;/p>
&lt;ul>
&lt;li>Son grandes y difíciles de modificar.&lt;/li>
&lt;li>Realizan múltiples funcionalidades.&lt;/li>
&lt;li>Hay un único punto de fallo, un error puede afectar al sistema entero.&lt;/li>
&lt;li>Requieren escalar el monolito entero lo que es poco eficiente.&lt;/li>
&lt;li>Hacen muy difícil emplear la tecnología más adecuada para cada problema de la aplicación o adoptar nuevas.&lt;/li>
&lt;li>Los despliegues de nuevas versiones pueden ser problemáticos por el tamaño de la aplicación.&lt;/li>
&lt;/ul>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/08/aplicaciones-basadas-en-microservicios/images/monolith_hub198199ec8a492668d0853105928e4f9_159372_2560x1440_fit_box_2.png" title="Arquitectura basada en 3 capas" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/08/aplicaciones-basadas-en-microservicios/images/monolith_hub198199ec8a492668d0853105928e4f9_159372_600x450_fit_box_2.png" width="600"/>&lt;/a>
&lt;figcaption>Arquitectura basada en 3 capas&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Los microservicios surgen como alternativa tratando de resolver los problemas de las aplicaciones monolíticas aunque planteando nuevos retos pero también varios beneficios:&lt;/p>
&lt;ul>
&lt;li>Las aplicaciones basadas en microservicios se componen de múltiples aplicaciones cada una con un contexto delimitado pequeño que se comunican mediante la red.&lt;/li>
&lt;li>Son más pequeños con una base de código menor y por tanto más fáciles de modificar o en su caso reemplazar siempre se implemente la misma interfaz o contrato.&lt;/li>
&lt;li>No son tan dependientes de la tecnología pudiendo elegir la más adecuada en cada uno de ellos.&lt;/li>
&lt;li>Al ser más pequeños se pueden escalar más fácilmente horizontalmente si no mantienen estado, basta con escalar el servicio que lo requiera.&lt;/li>
&lt;li>Arrancan más rápido y son más fáciles de desplegar.&lt;/li>
&lt;li>Cada microservicio puede estar desarrollado por un equipo diferente centrado en ese servicio.&lt;/li>
&lt;/ul>
&lt;p>Pueden ser una aplicación que ofrezca una API en forma de REST, &lt;a href="https://graphql.org/">GraphQL&lt;/a> o RPC para una determinada funcionalidad o una aplicación que consuma otros microservicios y proporcione la interfaz para un navegador web.&lt;/p>
&lt;div class="media" style="text-align: center;">
&lt;figure>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/08/aplicaciones-basadas-en-microservicios/images/microservices_huec52a617b10c65603c9de79792885935_24996_2560x1440_fit_box_2.png" title="Arquitectura basada en microservicios" data-gallery>&lt;img src="https://picodotdev.github.io/blog-bitix/blog-bitix/2018/08/aplicaciones-basadas-en-microservicios/images/microservices_huec52a617b10c65603c9de79792885935_24996_600x450_fit_box_2.png" width="600"/>&lt;/a>
&lt;figcaption>Arquitectura basada en microservicios&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Algunos nuevos retos de los microservicios son:&lt;/p>
&lt;ul>
&lt;li>Añaden complejidad. Son más numerosos y requieren más procesos para su ejecución. Esto obliga a automatizar su gestión para que sea manejable con el menor número de tareas manuales posibles. Forman un sistema distribuido.&lt;/li>
&lt;li>Difícil integrar cambios si afectan a varios servicios.&lt;/li>
&lt;li>Cada microservicio al ser responsable de sus propios datos y formar un sistema de información distribuido plantea problemas en como compartirlos y dificultando la transaccionalidad y consistencia del sistema, se suele optar por una eventual consistencia. Al estar los datos distribuidos se plantea la dificultad de elaborar informes, una posibilidad es consolidar los datos en un única base de datos para la tarea mediante exportaciones de las bases de datos origen.&lt;/li>
&lt;li>Como centralizar los registros de trazas.&lt;/li>
&lt;li>Como centralizar los accesos.&lt;/li>
&lt;li>Obtener métricas y monitorización, a nivel de microservicio (cpu, memoria, espacio disco, red, &amp;hellip;) y de negocio (eventos, operaciones, transacciones, &amp;hellip;).&lt;/li>
&lt;li>Como hacer que los microservicios se descubran entre ellos.&lt;/li>
&lt;li>Si un microservicios falla los que dependan de él fallarán, al comunicarse por un medio no totalmente fiable como la red se pueden producir errores. El sistema se ha de hacer tolerante a fallos.&lt;/li>
&lt;/ul>
&lt;p>Para modelar los microservicios y definir que funcionalidad contiene cada uno de los que forman el sistema se opta por utilizar &lt;em>bounded contex&lt;/em> y &lt;em>domain driven design&lt;/em>. Cada microservicio debe ser altamente cohesivo donde toda su funcionalidad esté relacionada y realizar una o muy pocas tareas siendo propietario de los datos de su contexto delimitado.&lt;/p>
&lt;p>En el ámbito Java el proyecto &lt;a href="https://spring.io/">Spring&lt;/a> se compone de varios adaptados a la nueva realidad de los microservicios y &lt;a href="https://www.oracle.com/technetwork/java/javaee/overview/index.html">Java EE&lt;/a> a partir de la versión 8 ahora denominada &lt;a href="https://jakarta.ee/">Jakarta EE&lt;/a> y &lt;a href="https://microprofile.io/">Microprofile&lt;/a> proporcionan funcionalidades más adaptadas a las necesidades de las arquitecturas basadas en microservicios.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://projects.spring.io/spring-boot/">Spring Boot&lt;/a> como una forma de embeber en una aplicación Java con un servidor web de forma que la aplicación sea autocontenida y no requiera un servidor web preinstalado.&lt;/li>
&lt;li>&lt;a href="https://cloud.spring.io/spring-cloud-config/">Spring Cloud Config&lt;/a> para gestionar la configuración.&lt;/li>
&lt;li>&lt;a href="https://projects.spring.io/spring-session/">Spring Session&lt;/a> para hacer que los microservicios web no mantengan estado y sean escalables.&lt;/li>
&lt;li>&lt;a href="https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#production-ready">Spring Boot Actautor&lt;/a> para monitorización y métricas.&lt;/li>
&lt;li>&lt;a href="https://github.com/Netflix/eureka">Eureka&lt;/a> para registro y descubrimiento de servicios.&lt;/li>
&lt;li>&lt;a href="https://github.com/Netflix/Hystrix">Hystrix&lt;/a> con una implementación del patrón &lt;em>circuit breaker&lt;/em> para proporcionar resilencia.&lt;/li>
&lt;/ul>
&lt;p>De varios de estos proyectos ya he escrito varios artículos pero escribiré algunos más para completar varias áreas que aún no he comentado. Algunos de ellos serán:&lt;/p>
&lt;ul>
&lt;li>Como hacer el &lt;a href="https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/">descubrimiento de servicios con Spring Cloud utilizando el servidor Eureka&lt;/a> mostrando incluso como crear un &lt;em>cluster&lt;/em> de servicios de descubrimiento para mayor disponibilidad y tolerancia a fallos, esto útil al mismo tiempo que de gran importancia ya que este servicio es crítico para el correcto funcionamiento de los microservicios.&lt;/li>
&lt;li>Como crear un &lt;a href="https://picodotdev.github.io/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/">servicio de configuración del cual los microservicios obtengan su configuración&lt;/a> por ejemplo según el entorno o para mantenerla centralizada, este servicio también es crítico y requiere de varias instancias de este servicio.&lt;/li>
&lt;li>Como &lt;a href="https://picodotdev.github.io/blog-bitix/2018/09/recargar-la-configuracion-sin-reiniciar-una-aplicacion-spring-boot-con-spring-cloud-config/">cambiar la configuración de los microservicios sin necesidad de reiniciarlos&lt;/a>.&lt;/li>
&lt;li>Como mantener cifrada partes sensibles de la configuración como son las contraseñas, &lt;em>bearers&lt;/em> de autenticación, URLs de conexión u otra información especialmente sensible para la seguridad.&lt;/li>
&lt;li>Un cliente que realiza balanceo de carga entre múltiples instancias de los servicios utilizando Ribbon.&lt;/li>
&lt;li>Un cliente de microservicio que implementa el patrón &lt;em>circuit breaker&lt;/em> con la librería Hystrix y &lt;em>timeouts&lt;/em> para ser tolerante a fallos al llamar a otros microservicios.&lt;/li>
&lt;/ul>
&lt;p>Según vaya escribiendo y publicando los artículos aparecerán en la lista de la serie de artículos. El ejemplo en el que me basaré para estos lo añado a continuación.&lt;/p>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a>.
&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://articles.microservices.com/monolithic-vs-microservices-architecture-5c4848858f59">Monolithic vs. Microservices Architecture&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="planeta-codigo"/><category term="programacion"/><category term="spring"/></entry><entry><id>https://picodotdev.github.io/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/</id><title>Ejemplo de GraphQL para una interfaz de un servicio con Spring Boot y Java</title><updated>2019-06-15T00:55:00+02:00</updated><published>2017-11-01T12:00:00+01:00</published><link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/"/><author><name>picodotdev</name></author><content type="html">
&lt;p>&lt;strong>GraphQL es una alternativa a una interfaz REST con las ventajas de poder realizar varias consultas en una misma petición y devolviendo únicamente los datos que requiera el cliente. Es una especificación y hay una implementación para los lenguajes de programación más populares entre ellos Java. Este artículo es una introducción con un ejemplo completo que muestra cómo se hacen consultas y modificaciones en los datos.&lt;/strong>&lt;/p>
&lt;div class="logotypes" style="float: right;">
&lt;img src="assets/images/logotipos/graphql.svg" class="right " width="200" alt="GraphQL" title="GraphQL"/>
&lt;/div>
&lt;p>Con anterioridad las aplicaciones que lo necesitaban ofrecían una interfaz como un servicio mediante &lt;em>web services&lt;/em>, sin embargo, esta tecnología era complicada por usar XML y no de fácil utilización en clientes JavaScript. La evolución que a día de hoy sigue siendo mayoritaria son las interfaces &lt;a href="https://es.wikipedia.org/wiki/Representational_State_Transfer">REST&lt;/a> que emplean la semántica de los verbos del protocolo HTTP para realizar operaciones de búsqueda, creación, modificación y eliminación y normalmente empleando JSON como formato para intercambiar los datos. Sin embargo, REST no está exento de algunos problemas como la necesidad de realizar varias peticiones a cada uno de los recursos que ofrece si se necesitan datos de varios de ellos, otro es que los datos ofrecidos por los servicios REST está prefijados en tiempo de desarrollo no adaptándose a lo que necesita el cliente. En cierta medida estas dos cosas se pueden implementar en la interfaz REST con algunos parámetros pero requiere codificarlo explícitamente.&lt;/p>
&lt;p>Más recientemente ha aparecido otra forma de implementar una interfaz de un servicio con &lt;a href="https://graphql.org/">GraphQL&lt;/a> considerándose una &lt;a href="https://www.howtographql.com/basics/1-graphql-is-the-better-rest/">alternativa mejor a REST&lt;/a> que solventa los dos problemas de las interfaces REST anteriores. REST ofrece en varios &lt;em>endpoints&lt;/em> los recursos que pueden ser accedidos mediante los verbos HTTP (&lt;em>GET&lt;/em>, &lt;em>PUT&lt;/em>, &lt;em>POST&lt;/em>, &lt;em>DELETE&lt;/em>), en GraphQL por el contrario hay un único &lt;em>endpoint&lt;/em>, los puntos de entrada al grafo y los tipos que se relacionan entre si que son consultados para obtener los datos con el lenguaje de consulta que ofrece GraphQL.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.howtographql.com/basics/0-introduction/">Basics Tutorial - Introduction&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.howtographql.com/basics/1-graphql-is-the-better-rest/">GraphQL is the better REST&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.howtographql.com/basics/2-core-concepts/">Core Concepts&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.howtographql.com/basics/3-big-picture/">Big Picture (Architecture)&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>En GraphQL se define un &lt;a href="https://graphql.org/learn/schema/">esquema&lt;/a> con la definición de los tipos en la API, se diferencia la obtención de los datos que es realizada por las &lt;a href="https://graphql.org/learn/queries/">&lt;em>queries&lt;/em>&lt;/a> y de las modificaciones que es realizada por los &lt;a href="https://graphql.org/learn/queries/#mutations">&lt;em>mutators&lt;/em>&lt;/a>, el esquema se puede definir en un archivo de texto como en este ejemplo o de forma programática con código que es necesario para algunas personalizaciones. Otras tareas que pueden ser necesarias en una API son &lt;a href="https://www.howtographql.com/graphql-java/5-authentication/">autenticación&lt;/a> que es posible capturando los datos del contexto provenientes en los datos o como cabeceras de la petición posiblemente en forma de &lt;em>token&lt;/em> de &lt;a href="https://oauth.net/">OAuth&lt;/a> y la autorización en la lógica del servicio en base al sujeto autenticado. Se puede &lt;a href="https://graphql.org/learn/schema/#scalar-types">usar datos propios con &lt;em>scalar&lt;/em>&lt;/a> para los cuales se ha de proporcionar una clase que realice la transformación implementando una clase GraphQLScalarType. Posee &lt;a href="https://graphql.org/learn/introspection/">funcionalidades de introspección&lt;/a> y también &lt;a href="https://www.howtographql.com/graphql-java/9-filtering/">filtrado&lt;/a>, &lt;a href="https://www.howtographql.com/graphql-java/10-pagination/">paginación&lt;/a>, &lt;a href="https://www.howtographql.com/graphql-java/7-error-handling/">gestión de errores&lt;/a> y &lt;a href="https://graphql.org/learn/caching/">cacheo&lt;/a> aunque esto último es menos efectivo en GraphQL al depender de los datos a devolver que solicite el cliente.&lt;/p>
&lt;p>Para usar GraphQL hay que definir un &lt;em>schema&lt;/em> que incluye los tipos, sus propiedades y tipos. También se pueden usar &lt;a href="https://graphql.org/learn/caching/">fragmentos&lt;/a> para reutilizar partes de la definición de los tipos. Cada &lt;em>type&lt;/em> representa una entidad que definen las propiedades que posee ya sean datos escalares o referencias a otras entidades formando de esta manera grafos de objetos, los tipos de las variables que poseen una exclamación al final quiere decir que son opcionales, por defecto todos los datos son distinto de nulo. Las listas se definen con corchetes y el tipo entre ellos. Este es el IDL del esquema del ejemplo.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">type Book {
id: Long
title: String
author: Author
}
type Author {
id: Long
name: String
}
type Query {
books: [Book]!
authors: [Author]!
author(id: Long): Author!
}
type Mutation {
addBook(title: String, author: Long): Book
}
schema {
query: Query
mutation: Mutation
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/library.graphqls" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/library.graphqls" target="_blank">library.graphqls&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Una definido el esquema hay que desarrollar los &lt;em>resolvers&lt;/em> que son encargados de obtener los datos seguramente de una base de datos externa ya sea una base de datos SQL o NoSQL en este caso utilizando una clase que implementa el patrón repositorio y que abstrae del sistema de persistencia donde se almacenan los datos.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.graphql.resolver&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Query&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">GraphQLQueryResolver&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">LibraryRepository&lt;/span> &lt;span class="n">libraryRepository&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">Query&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">LibraryRepository&lt;/span> &lt;span class="n">libraryRepository&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">libraryRepository&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">libraryRepository&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Book&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">books&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">BookFilter&lt;/span> &lt;span class="n">filter&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">DataFetchingEnvironment&lt;/span> &lt;span class="n">environment&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">InterruptedException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Book&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">books&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">libraryRepository&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findBooks&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">filter&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">DefaultGraphQLContext&lt;/span> &lt;span class="n">context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">environment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getContext&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">books&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Publication&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">publications&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">libraryRepository&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findPublications&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Book&lt;/span> &lt;span class="nf">book&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Long&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">libraryRepository&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findBookById&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">orElse&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Author&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">authors&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">libraryRepository&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAuthors&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Author&lt;/span> &lt;span class="nf">author&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Long&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">libraryRepository&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findAuthorById&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">orElse&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">SelectedField&lt;/span> &lt;span class="nf">getField&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">DataFetchingEnvironment&lt;/span> &lt;span class="n">environment&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">environment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getSelectionSet&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getField&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/Query.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/Query.java" target="_blank">Query.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.graphql.repository&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.graphql.misc.AuthContext&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.graphql.misc.PermissionException&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.graphql.misc.ValidationException&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.graphql.type.Author&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.graphql.type.Book&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.graphql.type.BookFilter&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.graphql.type.Comment&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.graphql.type.Magazine&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.graphql.type.Publication&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.time.LocalDate&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.util.ArrayList&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.util.Collections&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.util.List&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.util.Optional&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.util.stream.Collectors&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.util.stream.LongStream&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.util.stream.Stream&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">LibraryRepository&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="n">sequence&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Book&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">books&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Comment&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">comments&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Author&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">authors&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Magazine&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">magazines&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">LibraryRepository&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sequence&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">0l&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">books&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">comments&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">authors&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">magazines&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Author&lt;/span> &lt;span class="n">a1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Author&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">nextId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;Philip K. Dick&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Author&lt;/span> &lt;span class="n">a2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Author&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">nextId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;George R. R. Martin&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Author&lt;/span> &lt;span class="n">a3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Author&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">nextId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;Umberto Eco&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Author&lt;/span> &lt;span class="n">a4&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Author&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">nextId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;Andreas Eschbach&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Author&lt;/span> &lt;span class="n">a5&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Author&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">nextId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;Ernest Cline&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Author&lt;/span> &lt;span class="n">a6&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Author&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">nextId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;Anónimo&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">authors&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addAll&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">a1&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">a2&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">a3&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">a4&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">a5&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">a6&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">LongStream&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">range&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">forEach&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">comments&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">Comment&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="s">&amp;#34;Comment &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">books&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addAll&lt;/span>&lt;span class="o">(&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>
&lt;span class="k">new&lt;/span> &lt;span class="n">Book&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">nextId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;Ojo en el cielo&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">a1&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">LocalDate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">1957&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">comments&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="k">new&lt;/span> &lt;span class="n">Book&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">nextId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;Muerte de la luz&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">a2&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">LocalDate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">1977&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">comments&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="k">new&lt;/span> &lt;span class="n">Book&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">nextId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;El nombre de la rosa&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">a3&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">LocalDate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">1980&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">comments&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="k">new&lt;/span> &lt;span class="n">Book&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">nextId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;Los tejedores de cabellos&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">a4&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">LocalDate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">1995&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">comments&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="k">new&lt;/span> &lt;span class="n">Book&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">nextId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;Ready Player One&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">a5&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">LocalDate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">2011&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">comments&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">)&lt;/span>
&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">magazines&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addAll&lt;/span>&lt;span class="o">(&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="o">(&lt;/span>
&lt;span class="k">new&lt;/span> &lt;span class="n">Magazine&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">nextId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;Muy interesante&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">65L&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="k">new&lt;/span> &lt;span class="n">Magazine&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">nextId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;PC Actual&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">90L&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">)&lt;/span>
&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Book&lt;/span> &lt;span class="nf">findBook&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Long&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">books&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">stream&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">filter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">equals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findFirst&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">orElse&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Book&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">findBooks&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">BookFilter&lt;/span> &lt;span class="n">filter&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Stream&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Book&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">stream&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">books&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">stream&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">filter&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">stream&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stream&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">filter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getTitle&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">matches&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">filter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getTitle&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">stream&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">collect&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Collectors&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toList&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Publication&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">findPublications&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Publication&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">publications&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">publications&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addAll&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">books&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">publications&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addAll&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">magazines&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">publications&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Optional&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Book&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">findBookById&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Long&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">books&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">stream&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">filter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">equals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findFirst&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Comment&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">findComments&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Long&lt;/span> &lt;span class="n">idBook&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Long&lt;/span> &lt;span class="n">idAfter&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Long&lt;/span> &lt;span class="n">limit&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Book&lt;/span> &lt;span class="n">book&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">findBook&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">idBook&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">Stream&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Comment&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">stream&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">book&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getComments&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">stream&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">idAfter&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">stream&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stream&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">dropWhile&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">idAfter&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="o">&amp;amp;&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">equals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">idAfter&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">skip&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">limit&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">stream&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stream&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">limit&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">limit&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">stream&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">collect&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Collectors&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toList&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Author&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">getAuthors&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">authors&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Optional&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Author&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">findAuthorById&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Long&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">authors&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">stream&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">filter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">equals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findFirst&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Book&lt;/span> &lt;span class="nf">addBook&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">title&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Long&lt;/span> &lt;span class="n">idAuthor&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">AuthContext&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">PermissionException&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ValidationException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getUser&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getUser&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">equals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;admin&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">PermissionException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Invalid permissions&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">Optional&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Author&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">author&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">findAuthorById&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">idAuthor&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">author&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">isPresent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ValidationException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Invalid author&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">Book&lt;/span> &lt;span class="n">book&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Book&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">nextId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">title&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">author&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">LocalDate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">now&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">EMPTY_LIST&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">books&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">book&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">book&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="nf">nextId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">sequence&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/LibraryRepository.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/LibraryRepository.java" target="_blank">LibraryRepository.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.graphql.type&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.time.LocalDate&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.util.List&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Book&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">Publication&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Long&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">title&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Author&lt;/span> &lt;span class="n">author&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">LocalDate&lt;/span> &lt;span class="n">date&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Comment&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">comments&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">Book&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Long&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">title&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Author&lt;/span> &lt;span class="n">author&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">LocalDate&lt;/span> &lt;span class="n">date&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Comment&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">comments&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">title&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">author&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">author&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">date&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">comments&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">comments&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Long&lt;/span> &lt;span class="nf">getId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Long&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getTitle&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">title&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setTitle&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">title&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">title&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Author&lt;/span> &lt;span class="nf">getAuthor&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">author&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setAuthor&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Author&lt;/span> &lt;span class="n">author&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">author&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">author&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">LocalDate&lt;/span> &lt;span class="nf">getDate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">date&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setDate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">LocalDate&lt;/span> &lt;span class="n">date&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">date&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Comment&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">getComments&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">comments&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setComments&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Comment&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">comments&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">comments&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">comments&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/Book.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/Book.java" target="_blank">Book.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.graphql.type&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Author&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Long&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">Author&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Long&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Long&lt;/span> &lt;span class="nf">getId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Long&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/Author.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/Author.java" target="_blank">Author.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Los &lt;em>mutators&lt;/em> son los encargados de procesar las peticiones de modificación.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.graphql.resolver&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Mutation&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">GraphQLMutationResolver&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">LibraryRepository&lt;/span> &lt;span class="n">libraryRepository&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">Mutation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">LibraryRepository&lt;/span> &lt;span class="n">libraryRepository&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">libraryRepository&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">libraryRepository&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Book&lt;/span> &lt;span class="nf">addBook&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">title&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Long&lt;/span> &lt;span class="n">author&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">DataFetchingEnvironment&lt;/span> &lt;span class="n">env&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">//String user = request.getHeader(&amp;#34;User&amp;#34;);
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">libraryRepository&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addBook&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">author&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">env&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">AuthContext&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">getContext&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/Mutation.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/Mutation.java" target="_blank">Mutation.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Usando una aplicación de &lt;a href="https://projects.spring.io/spring-boot/">Spring Boot&lt;/a> para ofrecer el servicio hay que realizar la contribución adecuada al contenedor de dependencias, en Java GraphQL se define como un &lt;a href="https://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServlet.html">&lt;em>servlet&lt;/em>&lt;/a> al cual hay que proporcionarle la configuración de los &lt;em>resolvers&lt;/em>, &lt;em>mutators&lt;/em>, procesador de contexto que en este caso se utiliza para la autenticación y definición del esquema entre otras posibles cosas.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.graphql&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="nd">@SpringBootApplication&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="n">Logger&lt;/span> &lt;span class="n">logger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LoggerFactory&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getLogger&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">LibraryRepository&lt;/span> &lt;span class="nf">buildLibraryRepository&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">LibraryRepository&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">GraphQLSchema&lt;/span> &lt;span class="nf">graphQLSchema&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">LibraryRepository&lt;/span> &lt;span class="n">libraryRepository&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">IOException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">SchemaParser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newParser&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">schemaString&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">IOUtils&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">resourceToString&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/library.graphqls&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Charset&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">forName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">resolvers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">Query&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">libraryRepository&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Mutation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">libraryRepository&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">BookResolver&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">libraryRepository&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">MagazineResolver&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">libraryRepository&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">scalars&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">GraphQLScalarType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newScalar&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">name&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;LocalDate&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">description&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;LocalDate scalar&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">coercing&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">LocalDateCoercing&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">dictionary&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Magazine&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">makeExecutableSchema&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/Main.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/Main.java" target="_blank">Main.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.graphql.misc&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">javax.servlet.http.HttpServletRequest&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">javax.servlet.http.HttpServletResponse&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">AuthContext&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">HttpServletResponse&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">AuthContext&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">HttpServletResponse&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">request&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getUser&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="nf">getRequest&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">HttpServletResponse&lt;/span> &lt;span class="nf">getResponse&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/AuthContext.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/AuthContext.java" target="_blank">AuthContext.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>El lenguaje de consulta GraphQL permite consultar el grafo de objetos y recuperar los datos deseados. En el siguiente ejemplo se obtienen los libros, los autores y los libros con los datos de sus autores de una clase que implementa el patrón &lt;em>repository&lt;/em>. En el ejemplo los datos del repositorio están definidos en la propia clase de forma estática pero como su función es abstraer de donde se obtienen los datos el cambio sería sencillo para que los obtuviese de una base de datos SQL o NoSQL ya que los cambios estarían encapsulados principalmente en esa clase. Los datos son devueltos en formato JSON.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;span class="lnt">79
&lt;/span>&lt;span class="lnt">80
&lt;/span>&lt;span class="lnt">81
&lt;/span>&lt;span class="lnt">82
&lt;/span>&lt;span class="lnt">83
&lt;/span>&lt;span class="lnt">84
&lt;/span>&lt;span class="lnt">85
&lt;/span>&lt;span class="lnt">86
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ curl -XPOST -H &lt;span class="s1">&amp;#39;Content-Type: application/json&amp;#39;&lt;/span> -d &lt;span class="s1">&amp;#39;{&amp;#34;query&amp;#34;:&amp;#34;query{books{title}}&amp;#34;}&amp;#39;&lt;/span> http://localhost:8080/graphql
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;books&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Ojo en el cielo&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>,
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Muerte de la luz&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>,
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;El nombre de la rosa&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>,
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Los tejedores de cabellos&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>,
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Ready Player One&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">]&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
$ curl -XPOST -H &lt;span class="s1">&amp;#39;Content-Type: application/json&amp;#39;&lt;/span> -d &lt;span class="s1">&amp;#39;{&amp;#34;query&amp;#34;:&amp;#34;query{authors{name}}&amp;#34;}&amp;#39;&lt;/span> http://localhost:8080/graphql
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;authors&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Philip K. Dick&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>,
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;George R. R. Martin&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>,
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Umberto Eco&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>,
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Andreas Eschbach&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>,
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Ernest Cline&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>,
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Anónimo&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">]&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
$ curl -XPOST -H &lt;span class="s1">&amp;#39;Content-Type: application/json&amp;#39;&lt;/span> -d &lt;span class="s1">&amp;#39;{&amp;#34;query&amp;#34;:&amp;#34;query{books{title author{name}}}&amp;#34;}&amp;#39;&lt;/span> http://localhost:8080/graphql
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;books&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Ojo en el cielo&amp;#34;&lt;/span>,
&lt;span class="s2">&amp;#34;author&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Philip K. Dick&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>,
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Muerte de la luz&amp;#34;&lt;/span>,
&lt;span class="s2">&amp;#34;author&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;George R. R. Martin&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>,
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;El nombre de la rosa&amp;#34;&lt;/span>,
&lt;span class="s2">&amp;#34;author&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Umberto Eco&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>,
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Los tejedores de cabellos&amp;#34;&lt;/span>,
&lt;span class="s2">&amp;#34;author&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Andreas Eschbach&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>,
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Ready Player One&amp;#34;&lt;/span>,
&lt;span class="s2">&amp;#34;author&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Ernest Cline&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">]&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/curl-1.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/curl-1.sh" target="_blank">curl-1.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Una de las ventajas de GraphQL sobre REST es que es posible realizar una única petición lo que en REST podrían ser varias. Por ejemplo, la siguiente consulta obtiene en una única consulta todos los libros, todos los autores y el autor con identificativo 1 de la biblioteca, esto mejora el rendimiento ya que en REST se hubiesen requerido varias peticiones una para obtener libros, otra para los autores y otra para el autor 1. La otra ventaja sobre REST es que se devuelven únicamente los datos que el cliente solicita y no una lista prefijada por el desarrollador de la interfaz.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ curl -XPOST -H &lt;span class="s1">&amp;#39;Content-Type: application/json&amp;#39;&lt;/span> -d &lt;span class="s1">&amp;#39;{&amp;#34;query&amp;#34;:&amp;#34;query{books{title} authors{name} author(id:1){name}}&amp;#34;}&amp;#39;&lt;/span> http://localhost:8080/graphql
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;books&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Ojo en el cielo&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>,
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Muerte de la luz&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>,
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;El nombre de la rosa&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>,
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Los tejedores de cabellos&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>,
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Ready Player One&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">]&lt;/span>,
&lt;span class="s2">&amp;#34;authors&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Philip K. Dick&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>,
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;George R. R. Martin&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>,
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Umberto Eco&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>,
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Andreas Eschbach&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>,
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Ernest Cline&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>,
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Anónimo&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">]&lt;/span>,
&lt;span class="s2">&amp;#34;author&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Philip K. Dick&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/curl-2.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/curl-2.sh" target="_blank">curl-2.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>Las peticiones de modificación se envían mediante &lt;em>POST&lt;/em>. Este es el caso para añadir un libro a la biblioteca y los casos de que el autor del libro no sea válido o que el usuario que añade el libro no tenga permisos. En el ejemplo los errores no son descriptivos de lo que realmente ha sucedido, habría que hacer el &lt;a href="https://picodotdev.github.io/blog-bitix/2017/11/devolver-mensajes-de-error-descriptivos-en-graphql/">tratamiento de errores adecuado para que los mensajes fuesen más descriptivos&lt;/a>.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ curl -XPOST -H &lt;span class="s2">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> -H &lt;span class="s2">&amp;#34;User: admin&amp;#34;&lt;/span> -d &lt;span class="s1">&amp;#39;{&amp;#34;query&amp;#34;: &amp;#34;mutation addBook($title: String, $author: Long){addBook(title: $title, author: $author){title}}&amp;#34;, &amp;#34;variables&amp;#34;: { &amp;#34;title&amp;#34;: &amp;#34;El lazarillo de Tormes&amp;#34;, &amp;#34;author&amp;#34;: 6}}&amp;#39;&lt;/span> http://localhost:8080/graphql
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;addBook&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;El lazarillo de Tormes&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
$ curl -XPOST -H &lt;span class="s2">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> -H &lt;span class="s2">&amp;#34;User: admin&amp;#34;&lt;/span> -d &lt;span class="s1">&amp;#39;{&amp;#34;query&amp;#34;: &amp;#34;mutation addBook($title: String, $author: Long){addBook(title: $title, author: $author){title}}&amp;#34;, &amp;#34;variables&amp;#34;: { &amp;#34;title&amp;#34;: &amp;#34;El lazarillo de Tormes&amp;#34;, &amp;#34;author&amp;#34;: 99}}&amp;#39;&lt;/span> http://localhost:8080/graphql
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;addBook&amp;#34;&lt;/span>: null
&lt;span class="o">}&lt;/span>,
&lt;span class="s2">&amp;#34;errors&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;message&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Internal Server Error(s) while executing query&amp;#34;&lt;/span>,
&lt;span class="s2">&amp;#34;extensions&amp;#34;&lt;/span>: null,
&lt;span class="s2">&amp;#34;path&amp;#34;&lt;/span>: null
&lt;span class="o">}&lt;/span>
&lt;span class="o">]&lt;/span>
&lt;span class="o">}&lt;/span>
io.github.picodotdev.blogbitix.graphql.ValidationException: Invalid author
at io.github.picodotdev.blogbitix.graphql.repository.LibraryRepository.addBook&lt;span class="o">(&lt;/span>LibraryRepository.java:57&lt;span class="o">)&lt;/span> ~&lt;span class="o">[&lt;/span>main/:na&lt;span class="o">]&lt;/span>
at io.github.picodotdev.blogbitix.graphql.resolver.Mutation.addBook&lt;span class="o">(&lt;/span>Mutation.java:18&lt;span class="o">)&lt;/span> ~&lt;span class="o">[&lt;/span>main/:na&lt;span class="o">]&lt;/span>
at io.github.picodotdev.blogbitix.graphql.resolver.MutationMethodAccess.invoke&lt;span class="o">(&lt;/span>Unknown Source&lt;span class="o">)&lt;/span> ~&lt;span class="o">[&lt;/span>reflectasm-1.11.3.jar:na&lt;span class="o">]&lt;/span>
at com.coxautodev.graphql.tools.MethodFieldResolverDataFetcher.get&lt;span class="o">(&lt;/span>MethodFieldResolver.kt:111&lt;span class="o">)&lt;/span> ~&lt;span class="o">[&lt;/span>graphql-java-tools-4.1.2.jar:na&lt;span class="o">]&lt;/span>
...
$ curl -XPOST -H &lt;span class="s2">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> -d &lt;span class="s1">&amp;#39;{&amp;#34;query&amp;#34;: &amp;#34;mutation addBook($title: String, $author: Long){addBook(title: $title, author: $author){title}}&amp;#34;, &amp;#34;variables&amp;#34;: { &amp;#34;title&amp;#34;: &amp;#34;El lazarillo de Tormes&amp;#34;, &amp;#34;author&amp;#34;: 6}}&amp;#39;&lt;/span> http://localhost:8080/graphql
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;addBook&amp;#34;&lt;/span>: null
&lt;span class="o">}&lt;/span>,
&lt;span class="s2">&amp;#34;errors&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;message&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Internal Server Error(s) while executing query&amp;#34;&lt;/span>,
&lt;span class="s2">&amp;#34;extensions&amp;#34;&lt;/span>: null,
&lt;span class="s2">&amp;#34;path&amp;#34;&lt;/span>: null
&lt;span class="o">}&lt;/span>
&lt;span class="o">]&lt;/span>
&lt;span class="o">}&lt;/span>
io.github.picodotdev.blogbitix.graphql.PermissionException: Invalid permissions
at io.github.picodotdev.blogbitix.graphql.repository.LibraryRepository.addBook&lt;span class="o">(&lt;/span>LibraryRepository.java:53&lt;span class="o">)&lt;/span> ~&lt;span class="o">[&lt;/span>main/:na&lt;span class="o">]&lt;/span>
at io.github.picodotdev.blogbitix.graphql.resolver.Mutation.addBook&lt;span class="o">(&lt;/span>Mutation.java:18&lt;span class="o">)&lt;/span> ~&lt;span class="o">[&lt;/span>main/:na&lt;span class="o">]&lt;/span>
at io.github.picodotdev.blogbitix.graphql.resolver.MutationMethodAccess.invoke&lt;span class="o">(&lt;/span>Unknown Source&lt;span class="o">)&lt;/span> ~&lt;span class="o">[&lt;/span>reflectasm-1.11.3.jar:na&lt;span class="o">]&lt;/span>
at com.coxautodev.graphql.tools.MethodFieldResolverDataFetcher.get&lt;span class="o">(&lt;/span>MethodFieldResolver.kt:111&lt;span class="o">)&lt;/span> ~&lt;span class="o">[&lt;/span>graphql-java-tools-4.1.2.jar:na&lt;span class="o">]&lt;/span>
...&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/curl-3.sh" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/curl-3.sh" target="_blank">curl-3.sh&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.graphql.misc&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">PermissionException&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">GraphQLError&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">PermissionException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">super&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">getExtensions&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">extensions&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">LinkedHashMap&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">extensions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;foo&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;bar&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">extensions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;fizz&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;whizz&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">extensions&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SourceLocation&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">getLocations&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">ErrorType&lt;/span> &lt;span class="nf">getErrorType&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/PermissionException.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/PermissionException.java" target="_blank">PermissionException.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">io.github.picodotdev.blogbitix.graphql.misc&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">ValidationException&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">GraphQLError&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">ValidationException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">super&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SourceLocation&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">getLocations&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">ErrorType&lt;/span> &lt;span class="nf">getErrorType&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/ValidationException.java" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/ValidationException.java" target="_blank">ValidationException.java&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>La forma explicada en las guías de GraphQL para Java es que el &lt;em>mutator&lt;/em> reciba los datos y este delegue la funcionalidad en una clase que implemente el patrón &lt;em>repository&lt;/em> que abstrae del sistema de almacenamiento (base de datos SQL, NoSQL o cualquier otro), además, este patrón &lt;em>repository&lt;/em> o clase de lógica de negocio se recomienda que implemente la funcionalidad necesaria para aplicar la autorización. En el ejemplo aunque de forma sencilla solo en usuario &lt;em>admin&lt;/em> tiene permitido añadir libros, en un proyecto es posible realizar la autenticación usando &lt;a href="https://www.keycloak.org/">Keycloak&lt;/a> como sistema de OAuth, usar el &lt;em>token&lt;/em> de OAuth para implementar la autorización y un &lt;em>framework&lt;/em> de seguridad como &lt;a href="https://shiro.apache.org/">Apache Shiro&lt;/a> para aplicar los permisos a las funcionalidades.&lt;/p>
&lt;p>Los artículos &lt;a href="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/">Autenticación con OAuth y Keycloak en un servicio REST con JAX-RS y Spring Boot&lt;/a> y &lt;a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/">Integrar autenticación OAuth con Keycloak, Shiro, Apache Tapestry y Spring Boot&lt;/a> pueden servir como base para añadir autenticación OAuth a un servicio GraphQL con Keycloak.&lt;/p>
&lt;p>Finalmente, el archivo de construcción de &lt;a href="https://gradle.org/">Gradle&lt;/a> del ejemplo con las dependencias necesarias. &lt;a href="https://github.com/graphql-java/graphql-java">graphql-java&lt;/a> contiene la implementación para Java de GraphQL, &lt;a href="https://github.com/graphql-java/graphql-java-servlet">graphql-java-servlet&lt;/a> la implementación de GraphQL mediante un &lt;em>servlet&lt;/em> y &lt;a href="https://github.com/graphql-java/graphql-java-tools">graphql-java-tools&lt;/a> son varias utilidades que facilitan en gran medida el desarrollo de un servicio para GraphQL como la construcción del esquema mediante su definición IDL o crear &lt;em>resolvers&lt;/em> fácilmente.&lt;/p>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-YAML" data-lang="YAML">graphql&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>servlet&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>mapping&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/graphql&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>enabled&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>corsEnabled&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># if you want to @ExceptionHandler annotation for custom GraphQLErrors&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>exception-handlers-enabled&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/application.yml" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/application.yml" target="_blank">application.yml&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="code">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-Groovy" data-lang="Groovy">&lt;span class="n">plugins&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;java&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;application&amp;#39;&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot&amp;#39;&lt;/span> &lt;span class="n">version&lt;/span> &lt;span class="s1">&amp;#39;2.1.5.RELEASE&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">mainClassName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;io.github.picodotdev.blogbitix.graphql.Main&amp;#39;&lt;/span>
&lt;span class="n">repositories&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">jcenter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">mavenCentral&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">implementation&lt;/span> &lt;span class="nf">platform&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;org.springframework.boot:spring-boot-dependencies:2.1.5.RELEASE&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">implementation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;org.springframework.boot:spring-boot-starter&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">implementation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;org.springframework.boot:spring-boot-starter-web&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">implementation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;com.graphql-java-kickstart:graphql-spring-boot-starter:5.9.0&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">implementation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;com.graphql-java-kickstart:graphiql-spring-boot-starter:5.9.0&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">implementation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;com.graphql-java-kickstart:graphql-java-tools:5.6.0&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">implementation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;org.apache.commons:commons-lang3:3.7&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">implementation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;commons-io:commons-io:2.6&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">run&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">systemProperty&lt;/span> &lt;span class="s2">&amp;#34;tomcat.util.http.parser.HttpParser.requestTargetAllow&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s2">&amp;#34;|{}&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight-meta">
&lt;span class="raw">&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/build.gradle" target="_blank">view raw&lt;/a>&lt;/span>
&lt;a href="https://picodotdev.github.io/blog-bitix/blog-bitix/2017/11/ejemplo-de-graphql-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/code/build.gradle" target="_blank">build.gradle&lt;/a>
&lt;/div>
&lt;/div>
&lt;p>
El &lt;a href="https://github.com/picodotdev/blog-ejemplos/tree/master/GraphQL">código fuente completo del ejemplo&lt;/a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href="https://github.com/">GitHub&lt;/a> y probarlo en tu equipo ejecutando el comando &lt;code>./gradlew run&lt;/code>.
&lt;/p>
&lt;div class="reference">
Referencia:&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://graphql.org/">GraphQL&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://graphql-java.readthedocs.io/en/v5/">Welcome to graphql-java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/graphql-java/graphql-java">GraphQL Java implementation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.howtographql.com/graphql-java/2-queries/">Queries&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/graphql-java/graphql-java-tools">A schema-first tool for graphql-java inspired by graphql-tools for JS&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.graph.cool">GraphQL Backend Development Framework&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.genbetadev.com/desarrollo-aplicaciones-moviles/por-que-deberiamos-abandonar-rest-y-empezar-a-usar-graphql-en-nuestras-apis">¿Por qué deberíamos abandonar REST y empezar a usar GraphQL en nuestras APIs?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.paradigmadigital.com/dev/graphql-todos-uno-uno-todos/">GraphQL: ¡todos para uno y uno para todos!&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.adictosaltrabajo.com/tutoriales/introduccion-a-graphql/">Introducción a GraphQL&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div></content><category term="java"/><category term="planeta-codigo"/><category term="programacion"/><category term="spring"/></entry></feed>
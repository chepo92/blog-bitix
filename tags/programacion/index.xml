<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://picodotdev.github.io/blog-bitix/tags/programacion/</id>
    <title type="text">Blog Bitix</title>
    <subtitle>Recent content on Blog Bitix</subtitle>
    <updated>2017-07-16T12:30:00+02:00</updated>
    <author><name>pico.dev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix//assets/images/logotipos/hugo.png</icon>
    <logo>https://picodotdev.github.io/blog-bitix//assets/images/logotipos/hugo.png</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/07/4-formas-de-hacer-un-bucle-for-en-java/</id>
        <title>4 formas de hacer un bucle for en Java</title>        
        <updated>2017-07-16T12:30:00+02:00</updated>
        <published>2017-07-16T12:30:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/07/4-formas-de-hacer-un-bucle-for-en-java/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right&#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Hasta Java 5 para hacer un bucle desde 0 a N elementos había que usar una variable para mantener un contador, hacer una comparación para comprobar si se había llegado al límite e incrementar la variable en la siguiente ejecución. El código era bastante verboso y dado que los bucles son una construcción básica de cualquier lenguaje de programación es empleada numerosas veces en cualquier algoritmo. Antes de Java 5 un bucle &lt;em&gt;for&lt;/em&gt; de 0 a 5 y de una colección se realizaba de la siguiente manera:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/1c1ec809be02caae060a9055bcab2cf3.js?file=For.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/1c1ec809be02caae060a9055bcab2cf3.js?file=Iterator.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;En Java 5 el bucle &lt;em&gt;for&lt;/em&gt; se enriqueció notablemente, con el &lt;em&gt;foreach&lt;/em&gt; se puede recorrer una colección y cualquier objeto que implemente la interfaz &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html&#34;&gt;Iterable&lt;/a&gt;. Con el bucle &lt;em&gt;foreach&lt;/em&gt; una &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html&#34;&gt;Collection&lt;/a&gt; se recorre de la siguiente manera.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/1c1ec809be02caae060a9055bcab2cf3.js?file=Foreach.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;Pero esto es para las colecciones si se quiere hacer un bucle un número fijo de veces como en el primer caso de 0 a 5 conociendo que para usar el &lt;em&gt;foreach&lt;/em&gt; basta que le indiquemos un objeto que implemente la interfaz &lt;em&gt;Iterable&lt;/em&gt; podemos usar la siguiente expresión y su implementación que tiene la ventaja de no tener que incluir la expresión de comparación y el incremento de la variable, la clase &lt;em&gt;Counter&lt;/em&gt; implementa la interfaz &lt;em&gt;Iterable&lt;/em&gt; y devuelve un &lt;em&gt;Iterator&lt;/em&gt; sobre los valores del rango indicado:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/1c1ec809be02caae060a9055bcab2cf3.js?file=CounterIterable.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/1c1ec809be02caae060a9055bcab2cf3.js?file=Counter.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;En Java 8 con la introducción de los &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html&#34;&gt;Stream&lt;/a&gt; y de &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/stream/IntStream.html&#34;&gt;IntStream&lt;/a&gt; podemos usar el método &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/stream/IntStream.html#range-int-int-&#34;&gt;range&lt;/a&gt; y &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/stream/IntStream.html#rangeClosed-int-int-&#34;&gt;rangeClosed&lt;/a&gt; para obtener un &lt;em&gt;Stream&lt;/em&gt; de enteros y hacer un bucle con un comportamiento similar a los anteriores.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/1c1ec809be02caae060a9055bcab2cf3.js?file=Stream.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;Los &lt;em&gt;Stream&lt;/em&gt; de Java 8 están muy bien para simplificar algunas operaciones complejas pero para un bucle &lt;em&gt;for&lt;/em&gt; sencillo tiene sus inconvenientes como ofuscar significativamente el &lt;em&gt;stacktrace&lt;/em&gt; en caso de producirse alguna excepción. Se puede usar cualquier opción pero la primera con el tradicional bucle &lt;em&gt;for&lt;/em&gt; sea la menos recomendable teniendo a nuestra disposición la clase &lt;em&gt;Counter&lt;/em&gt; con Java 5 o los &lt;em&gt;Stream&lt;/em&gt; y &lt;em&gt;lambdas&lt;/em&gt; con Java 8.&lt;/p&gt;

&lt;p&gt;El siguiente programa muestra las cuatro opciones, su salida en la consola sería el siguiente:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/1c1ec809be02caae060a9055bcab2cf3.js?file=Main.java&#34;&gt;&lt;/script&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/247/bucles-java.png&#34; title=&#34;4 formas de hacer un bucle en Java&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/247/bucles-java-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;4 formas de hacer un bucle en Java&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/JavaForeach&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew run&lt;/code&gt;.
&lt;/p&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/07/iniciacion-a-la-programacion-concurrente-en-java/</id>
        <title>Iniciación a la programación concurrente en Java</title>        
        <updated>2017-07-15T00:00:00+02:00</updated>
        <published>2017-07-15T00:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/07/iniciacion-a-la-programacion-concurrente-en-java/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Java proporciona en su API numerosas primitivas para realizar programación concurrente. La programación concurrente permite realizar varias tareas simultáneamente aprovechando los múltiples núcleos de los procesadores modernos con un tiempo de ejecución total para un conjunto de tareas significativamente menor. Dos de los problemas de concurrencia más conocidos son el problema de los filósofos y del barbero que en este artículo muestro como implementar usando varias de las primitivas ofrecidas por Java.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right&#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;En todo el tiempo que llevo programando en Java no he tenido necesidad de conocer en detalle las primitivas de concurrencia que ofrece el lenguaje y la API. Java desde sus primeras versiones ya ofrecía el soporte básico para la programación concurrente con las clases &lt;a href=&#34;http://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html&#34;&gt;Thread&lt;/a&gt; y &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/lang/Runnable.html&#34;&gt;Runnable&lt;/a&gt; y algunas primitivas de sincronización como la palabra clave reservada &lt;em&gt;syncrhonized&lt;/em&gt;, los &lt;em&gt;locks&lt;/em&gt; intrínsecos de los objetos y algunos métodos de la clase &lt;em&gt;Thread&lt;/em&gt; como &lt;a href=&#34;http://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#sleep-long-&#34;&gt;sleep&lt;/a&gt;, &lt;a href=&#34;http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--&#34;&gt;wait&lt;/a&gt; y &lt;a href=&#34;http://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#join--&#34;&gt;join&lt;/a&gt;. Entre la documentación de Java está el siguiente &lt;a href=&#34;https://docs.oracle.com/javase/tutorial/essential/concurrency/&#34;&gt;tutorial sobre la concurrencia en Java&lt;/a&gt; que es muy recomendable leer.&lt;/p&gt;

&lt;p&gt;Las computadoras realizan varias tareas de forma concurrente con la ayuda del sistema operativo que permite compartir el procesador para realizar diferentes tareas (navegar por internet, editar un documento, escuchar música, &amp;hellip;) cambiando cada muy poco tiempo (medido en ms) entre procesos, con los procesadores de varios núcleos las tareas se ejecutan silmultáneamente en diferentes núcleos. Los &lt;em&gt;threads&lt;/em&gt; en Java se comunican principalmente compartiendo referencias a objetos, este tipo de comunicación es eficiente pero posibilita dos tipos de errores, interferencias entre &lt;em&gt;threads&lt;/em&gt; y errores de consistencia, la herramienta para evitarlos es la sincronización. Sin embargo, la sincronización introduce contención cuando dos o más hilos intentan acceder al mismo recurso simultáneamente y provocan una pérdida de rendimiento. El bloqueo mutuo o &lt;em&gt;deadlock&lt;/em&gt;, la inanición o &lt;em&gt;starvation&lt;/em&gt; y un bloqueo vivo o &lt;em&gt;livelock&lt;/em&gt; son problemas de la sincronización. Seguramente te suenen los objetos inmutables, en la programación concurrente son especialmente útiles dado que su estado no cambia y no pueden corromperse ni quedar en un estado inconsistente por la interferencia entre &lt;em&gt;threads&lt;/em&gt; evitando de esta manera errores que suelen ser difíciles de depurar por ofrecer un comportamiento errático.&lt;/p&gt;

&lt;p&gt;En vez de usar los &lt;em&gt;locks&lt;/em&gt; implícitos de los objetos la API de Java para concurrencia ofrece varios tipos más con propiedades adicionales como la habilidad de salir si el intento de adquirir el &lt;em&gt;lock&lt;/em&gt; falla. En el paquete &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/locks/package-summary.html&#34;&gt;java.util.concurrent.locks&lt;/a&gt; está listados. Otro tipo de primitivas de sincronización para &lt;em&gt;threads&lt;/em&gt; son los &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Semaphore.html&#34;&gt;Semaphore&lt;/a&gt;, &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CyclicBarrier.html&#34;&gt;CyclicBarrier&lt;/a&gt; y &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CountDownLatch.html&#34;&gt;CountDownLatch&lt;/a&gt; entre otros como &lt;a href=&#34;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Phaser.html&#34;&gt;Phaser&lt;/a&gt; y &lt;a href=&#34;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Exchanger.html&#34;&gt;Exchanger&lt;/a&gt;. En el paquete &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/atomic/package-summary.html&#34;&gt;java.util.concurrent.atomic&lt;/a&gt; hay varios tipos de datos básicos que realizan sus operaciones de forma atómica como por ejemplo contadores.&lt;/p&gt;

&lt;p&gt;Con los &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executors.html&#34;&gt;Executors&lt;/a&gt; y &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html&#34;&gt;ExecutorService&lt;/a&gt; no hace falta que manejemos los hilos a bajo nivel, es posible obtener un &lt;em&gt;pool&lt;/em&gt; de &lt;em&gt;threads&lt;/em&gt; de una tamaño específico y enviar clases &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html&#34;&gt;Callable&lt;/a&gt; o &lt;em&gt;Runnable&lt;/em&gt; que devuelven un resultado para que se ejecuten con un &lt;em&gt;thread&lt;/em&gt; del &lt;em&gt;pool&lt;/em&gt; cuando esté libre. Con la clase &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ScheduledExecutorService.html&#34;&gt;ScheduledExecutorService&lt;/a&gt; se programa la ejecución de tareas de forma periódica. En los &lt;em&gt;streams&lt;/em&gt; añadidos a Java 8 el procesamiento se puede realizar de forma paralela aprovechando los microprocesadores multinúcleo sin tener que usar de forma explícita ninguna de las utilidades anteriores, internamente usa el &lt;em&gt;Fork/Join&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;El soporte para la programación concurrente ofrecido en Java es suficiente para la mayoría de tareas que podamos necesitar y ha mejorado bastante desde las primeras versiones.&lt;/p&gt;

&lt;p&gt;El primer ejemplo que muestro es usando concurrencia ejecutar varias tareas y como realizándolas de forma secuencial el tiempo total empleado es la suma del tiempo de las tareas individuales y como usando concurrencia es la suma de la tarea que más tarda. El ejemplo se trata de 8 tareas que de forma secuencial tardan aproximadamente 24 segundos ya que cada tarea emplea 3 segundos, en el caso empleando concurrencia el tiempo es de aproximadamente 6 segundos ya se se emplea en &lt;em&gt;pool&lt;/em&gt; de &lt;em&gt;threads&lt;/em&gt; de 4 de capacidad con lo que las primeras 4 tareas tardan 3 segundos y el siguiente lote de 4 tareas tarda otros 3 segundos para un total de 6 segundos.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/b18f1c1e32d73b4ef03d4ae3670f80b6.js?file=Main.java&#34;&gt;&lt;/script&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
        &lt;script type=&#34;text/javascript&#34; src=&#34;https://asciinema.org/a/GjXM3ACFPPW027eLqKiZlrvMh.js&#34; id=&#34;asciicast-GjXM3ACFPPW027eLqKiZlrvMh&#34; async&gt;&lt;/script&gt;
        &lt;noscript&gt;&lt;a href=&#34;https://asciinema.org/a/GjXM3ACFPPW027eLqKiZlrvMh&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/GjXM3ACFPPW027eLqKiZlrvMh.png&#34; width=&#34;734&#34;/&gt;&lt;/a&gt;&lt;/noscript&gt;
        
        &lt;figcaption&gt;Ejecución secuencial y concurrente de tareas&lt;/figcaption&gt;
        
    &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Dos de los problemas más conocidos en la programación concurrente son el de &lt;a href=&#34;https://es.wikipedia.org/wiki/Problema_de_la_cena_de_los_fil%C3%B3sofos&#34;&gt;La cena de los filósofos&lt;/a&gt; y el de &lt;a href=&#34;https://es.wikipedia.org/wiki/Problema_del_barbero_durmiente&#34;&gt;El barbero durmiente&lt;/a&gt;. Usando algunas de las primitivas comentadas en este artículo este sería el código para para resolver ambos problemas en Java.&lt;/p&gt;

&lt;p&gt;En este código del problema de los filósofos la clase &lt;em&gt;Table&lt;/em&gt; crea los filósofos asignándoles los &lt;em&gt;Fork&lt;/em&gt; que tienen que compartir para comer después de estar un tiempo pensando. En la ejecución se observa que el primer filósofo que intenta comer puede hacerlo ya que sus tenedores adyacentes está libres pero posteriormente se observa que en algunas ocasiones algún filósofo no puede hacerlo porque sus tenedores están siendo usados por alguno de sus compañeros adyacentes.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/b18f1c1e32d73b4ef03d4ae3670f80b6.js?file=PhilosophersMain.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/b18f1c1e32d73b4ef03d4ae3670f80b6.js?file=Table.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/b18f1c1e32d73b4ef03d4ae3670f80b6.js?file=Fork.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/b18f1c1e32d73b4ef03d4ae3670f80b6.js?file=Philosopher.java&#34;&gt;&lt;/script&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
        &lt;script type=&#34;text/javascript&#34; src=&#34;https://asciinema.org/a/kxDfAc6SNNZ3EFdR4Zrc1U163.js&#34; id=&#34;asciicast-kxDfAc6SNNZ3EFdR4Zrc1U163&#34; async&gt;&lt;/script&gt;
        &lt;noscript&gt;&lt;a href=&#34;https://asciinema.org/a/kxDfAc6SNNZ3EFdR4Zrc1U163&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/kxDfAc6SNNZ3EFdR4Zrc1U163.png&#34; width=&#34;734&#34;/&gt;&lt;/a&gt;&lt;/noscript&gt;
        
        &lt;figcaption&gt;Ejemplo de concurrencia de los filósofos&lt;/figcaption&gt;
        
    &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;En el caso de ejemplo del barbero cuando solo hay un barbero los clientes se acumulan ya que estos entran en la tienda a razón de 1 entre 1500 y 3500ms y el barbero tarda afeitar un cliente entre 2000 y 7000ms. Poniendo en la barbería dos barberos los clientes ya no se acumulan en la sala de espera.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/b18f1c1e32d73b4ef03d4ae3670f80b6.js?file=BarberShopMain.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/b18f1c1e32d73b4ef03d4ae3670f80b6.js?file=BarberShop.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/b18f1c1e32d73b4ef03d4ae3670f80b6.js?file=Street.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/b18f1c1e32d73b4ef03d4ae3670f80b6.js?file=Barber.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/b18f1c1e32d73b4ef03d4ae3670f80b6.js?file=Client.java&#34;&gt;&lt;/script&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
        &lt;script type=&#34;text/javascript&#34; src=&#34;https://asciinema.org/a/BeA6bcKy5yoSGfByRUfE1HfYD.js&#34; id=&#34;asciicast-BeA6bcKy5yoSGfByRUfE1HfYD&#34; async&gt;&lt;/script&gt;
        &lt;noscript&gt;&lt;a href=&#34;https://asciinema.org/a/BeA6bcKy5yoSGfByRUfE1HfYD&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/BeA6bcKy5yoSGfByRUfE1HfYD.png&#34; width=&#34;734&#34;/&gt;&lt;/a&gt;&lt;/noscript&gt;
        
        &lt;figcaption&gt;Ejemplo de concurrencia del barbero (1 barbero)&lt;/figcaption&gt;
        
    &lt;/figure&gt;
&lt;/div&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
        &lt;script type=&#34;text/javascript&#34; src=&#34;https://asciinema.org/a/K7Ug6RT60mjWRbNcwRGapw7V6.js&#34; id=&#34;asciicast-K7Ug6RT60mjWRbNcwRGapw7V6&#34; async&gt;&lt;/script&gt;
        &lt;noscript&gt;&lt;a href=&#34;https://asciinema.org/a/K7Ug6RT60mjWRbNcwRGapw7V6&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/K7Ug6RT60mjWRbNcwRGapw7V6.png&#34; width=&#34;734&#34;/&gt;&lt;/a&gt;&lt;/noscript&gt;
        
        &lt;figcaption&gt;Ejemplo de concurrencia del barbero (2 barberos)&lt;/figcaption&gt;
        
    &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/JavaconCurrency&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew run&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/tutorial/essential/concurrency/&#34;&gt;Tutorial sobre la concurrencia en Java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/07/iniciar-rapido-un-proyecto-de-java-con-gradle-o-de-spring-con-spring-initializr/</id>
        <title>Iniciar rápido un proyecto de Java con Gradle o de Spring con Spring Initializr</title>        
        <updated>2017-07-09T13:00:00+02:00</updated>
        <published>2017-07-09T13:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/07/iniciar-rapido-un-proyecto-de-java-con-gradle-o-de-spring-con-spring-initializr/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/gradle.svg&#34; class=&#34;right&#34; width=&#34;200&#34; alt=&#34;Gradle&#34; title=&#34;Gradle&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/spring.svg&#34; class=&#34;right&#34; width=&#34;200&#34; alt=&#34;Spring&#34; title=&#34;Spring&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right&#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Cuando se empieza un proyecto nuevo desde cero se debe disponer de una herramienta de construcción, una estructura de directorios que siga las convenciones de la herramienta de construcción, añadir las dependencias que vayamos a utilizar y alguna clase que muestre algo al ejecutarlo para comprobar que disponemos de la infraestructura básica de compilación, teses, generación de artefactos e inicio de proyecto.&lt;/p&gt;

&lt;p&gt;Dado que las clases Java hay que compilarlas para facilitar la tarea están las herramientas de construcción y estas siguen una serie de convenciones en la estructura de directorios además de requerir algunos archivos. En un proyecto de duración de varios meses o años el tiempo dedicado a crear esta infraestructura básica es despreciable y no complicado si nos basamos en un proyecto similar del que copiar, sin embargo, para hacer alguna prueba rápida es costoso.&lt;/p&gt;

&lt;p&gt;En &lt;a href=&#34;https://maven.apache.org/&#34;&gt;Maven&lt;/a&gt; existen los arquetipos que construyen el esqueleto básico del proyecto en base a unas plantillas. En &lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle&lt;/a&gt; el equivalente es el &lt;a href=&#34;https://docs.gradle.org/current/userguide/build_init_plugin.html&#34;&gt;&lt;em&gt;plugin&lt;/em&gt; init &lt;/a&gt; pudiendo elegir crear la estructura de una librería o aplicación Java, &lt;a href=&#34;http://www.groovy-lang.org/&#34;&gt;Groovy&lt;/a&gt; o &lt;a href=&#34;https://www.scala-lang.org/&#34;&gt;Scala&lt;/a&gt; ejecutable. También se puede elegir el &lt;em&gt;framework&lt;/em&gt; para hacer las pruebas automatizadas unitarias, de integración o funcionales.&lt;/p&gt;

&lt;p&gt;Al usar el &lt;em&gt;plugin&lt;/em&gt; &lt;em&gt;init&lt;/em&gt; de Gradle se especifica el tipo de artefacto, aplicación o librería, y el &lt;em&gt;framework&lt;/em&gt; para las pruebas unitarias en este caso &lt;a href=&#34;https://code.google.com/p/spock/&#34;&gt;Spock&lt;/a&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/195fab0e57a91bfd17328db9b24d84ef.js?file=gradle-init.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Para proyectos que usen &lt;a href=&#34;http://projects.spring.io/spring-boot/&#34;&gt;Spring Boot&lt;/a&gt; está disponible la herramienta &lt;a href=&#34;https://start.spring.io/&#34;&gt;Spring Initializr&lt;/a&gt; que en pocos minutos permite disponer de una aplicación funcional con las propiedades que se seleccionen. Se puede elegir la herramienta de construcción, Maven o Gradle, la versión de Spring Boot, los metadatos de la aplicación para el paquete de las clases y artefacto, las dependencias de otros módulos de Spring y otras librerías populares.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/245/spring-initalizr.png&#34; title=&#34;Generador de proyectos Spring Initalizr&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/245/spring-initalizr-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Cambiando a la versión completa del generador es posible cambiar el tipo de empaquetado (&lt;em&gt;jar&lt;/em&gt; o &lt;em&gt;war&lt;/em&gt;), la versión de Java o el lenguaje de programación, además seleccionar aquellas dependencias que inicialmente sean necesarias, muchas son de otros proyectos de Spring. Las dependencias están agrupadas por categorías y van desde seguridad, &lt;em&gt;framework&lt;/em&gt; web, motores de plantillas, SQL, NoSQL, numerosas herramientas para la nube, integración con redes sociales, entrada/salida o utilidades para operaciones.&lt;/p&gt;

&lt;p&gt;Una vez seleccionadas las opciones se genera el proyecto y descarga un archivo comprimido &lt;em&gt;zip&lt;/em&gt;. Con el comando &lt;code&gt;gradlew bootRun&lt;/code&gt; si inicia la aplicación, pero dependiendo de las dependencias incluidas quizá sea necesaria hacer alguna configuración adicional antes de poder iniciar la aplicación, por ejemplo si seleccionamos la dependencia de &lt;a href=&#34;http://www.jooq.org/&#34;&gt;jOOQ&lt;/a&gt; hay que definir las propiedades para el &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/javax/sql/DataSource.html&#34;&gt;DataSource&lt;/a&gt; en el archivo &lt;em&gt;application.properties&lt;/em&gt; con las que el contenedor inversión de control de Spring pueda crear las conexiones a la base de datos.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/195fab0e57a91bfd17328db9b24d84ef.js?file=tree-initializr.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Como con todos los generadores de código es recomendable saber suficientemente que es código que generan para en caso de modificaciones posteriores saber como aplicarlas. También es posible que no se adapte exactamente a lo que necesitamos, por ejemplo, si queremos hacer un &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/09/ejemplo-de-multiproyecto-con-gradle/&#34;&gt;multiproyecto con Gradle&lt;/a&gt; o si una dependencia necesaria no está incluida en la lista de categorías hay añadirla después. A partir de aquí se empieza a programar el proyecto.&lt;/p&gt;

&lt;p&gt;En el libro &lt;a href=&#34;http://amzn.to/2tvCJMs&#34;&gt;Spring Boot in Action&lt;/a&gt; se comenta detalladamente Spring Boot que ofrece múltiples nuevas posibilidades que hace más fácil el desarrollo de un proyecto con Spring. Por otro lado para conocer más detalladamente y ampliamente el ecosistema de Spring está el libro &lt;a href=&#34;http://amzn.to/2tZInqM&#34;&gt;Mastering Spring 5.0&lt;/a&gt; que también inlcuye secciones sobre Spring Boot.&lt;/p&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1617292540&amp;linkId=86ce91eca968f6de1d0a777f48ca3069&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01N750Z7H&amp;linkId=e4f7f44a8b854b00a547d526b83f6469&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;En definitiva el &lt;em&gt;plugin&lt;/em&gt; &lt;em&gt;init&lt;/em&gt; de Gradle y la utilidad Spring Initializr son unas buenas herramientas para empezar un proyecto Java rápidamente y en pocos minutos disponer de un proyecto básico funcional y listo para implementar la funcionalidad de la aplicación.&lt;/p&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/07/portlets-con-el-framework-apache-tapestry-y-apache-pluto/</id>
        <title>Portlets con el framework Apache Tapestry y Apache Pluto</title>        
        <updated>2017-07-08T13:30:00+02:00</updated>
        <published>2017-07-07T23:30:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/07/portlets-con-el-framework-apache-tapestry-y-apache-pluto/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Los portales ofrecen una solución para los casos de uso de integración de aplicaciones, edición de contenido a modo de CMS, agregación de blogs, foros, colaboración entre personas, red social entre otros. La pieza fundamental de un portal en Java es un &lt;em&gt;portlet&lt;/em&gt;. Desarrollar un &lt;em&gt;portlet&lt;/em&gt; usando la API directamente no es simple, algunos &lt;em&gt;frameworks&lt;/em&gt; que usaríamos para desarrollar aplicaciones y páginas web son usables para desarrollar &lt;em&gt;portlets&lt;/em&gt;, Apache Tapestry es uno de ellos como muestro con un ejemplo en este artículo.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/apache-tapestry-5.svg&#34; class=&#34;right&#34; width=&#34;400&#34; alt=&#34;Apache Tapestry&#34; title=&#34;Apache Tapestry&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/apache-pluto.png&#34; class=&#34;right&#34; width=&#34;300&#34; alt=&#34;Apache Pluto&#34; title=&#34;Apache Pluto&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right&#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;La API ofrecida de los &lt;em&gt;portlets&lt;/em&gt; se puede considerar de bajo nivel y para facilitar la tarea de su programación es posible emplear un &lt;em&gt;framework&lt;/em&gt; al igual que ocurre al programar una aplicación web con los &lt;em&gt;servlets&lt;/em&gt; utilizando el lenguaje Java. Aún así es importante conocer los conceptos subyacentes de los &lt;em&gt;portlets&lt;/em&gt; que están explicados de forma didáctica en el libro &lt;a href=&#34;http://amzn.to/2tzpbjL&#34;&gt;Portlets in Action&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Explicado como &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/07/introduccion-a-los-portales-y-ejemplo-de-portlet-con-liferay/&#34;&gt;crear un &lt;em&gt;portlet&lt;/em&gt; directamente con su API&lt;/a&gt; usaré el mismo ejemplo pero usando el &lt;em&gt;framework&lt;/em&gt; &lt;a href=&#34;http://tapestry.apache.org&#34;&gt;Apache Tapestry&lt;/a&gt; que también es usable para realizar aplicaciones web pero para el que existe un &lt;a href=&#34;https://github.com/got5/tapestry5-portlet&#34;&gt;módulo para desarrollar &lt;em&gt;portlets&lt;/em&gt;&lt;/a&gt; y una pequeña &lt;a href=&#34;http://got5.github.io/tapestry5-portlet/&#34;&gt;documentación&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.liferay.com/&#34;&gt;Liferay&lt;/a&gt; 7 debe usar algún mecanismo especial para cargar las clases no compatible con Tapestry por ello en este ejemplo usaré el contenedor de &lt;em&gt;portlets&lt;/em&gt; &lt;a href=&#34;https://portals.apache.org/pluto/&#34;&gt;Apache Pluto&lt;/a&gt;. Apache Pluto es la implementación de referencia para la API de los &lt;em&gt;portlets&lt;/em&gt;, inicia el servidor significativamente más rápido que Liferay aunque no incorpora tantos &lt;em&gt;portlets&lt;/em&gt; listos para usar.&lt;/p&gt;

&lt;p&gt;El libro &lt;a href=&#34;http://amzn.to/2tzpbjL&#34;&gt;Portlets in Action&lt;/a&gt; define portal de la siguiente manera traducida al español:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Un portal es una colección de miniaplicaciones web llamadas &lt;em&gt;portlets&lt;/em&gt;. Un portal soporta características como personalización, agregación de contenido o autenticación. Los &lt;em&gt;portlets&lt;/em&gt; actúan como aplicaciones web dentro del portal mostradas en ventanas donde cada ventana en una página del portal representa un &lt;em&gt;portlet&lt;/em&gt;. El portal agrega la información y proporciona una vista consolidada al usuario.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;El ejemplo consiste en un mensaje de saludo que incluye un nombre el cual se introduce con un formulario desde el mismo &lt;em&gt;portlet&lt;/em&gt;. Los &lt;em&gt;portlets&lt;/em&gt; usando Apache Tapestry son muy similares a una aplicación web, con lo que gran parte del conocimiento es el mismo, pero en los que están a disposición varios servicios adicionales de la API de los &lt;em&gt;portlets&lt;/em&gt; como &lt;a href=&#34;https://github.com/got5/tapestry5-portlet/blob/master/src/main/java/org/apache/tapestry5/portlet/services/PortletRequestGlobals.java&#34;&gt;PortletRequestGlobals&lt;/a&gt; donde están agregados varios objetos relativos las peticiones y respuestas como &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/PortletRequest.html&#34;&gt;PortletRequest&lt;/a&gt; para la petición con &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/ActionRequest.html&#34;&gt;ActionRequest&lt;/a&gt;, &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/EventRequest.html&#34;&gt;EventRequest&lt;/a&gt;,  &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/RenderRequest.html&#34;&gt;RenderRequest&lt;/a&gt; y &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/ResourceRequest.html&#34;&gt;ResourceRequest&lt;/a&gt;, y  &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/PortletResponse.html&#34;&gt;PortletResponse&lt;/a&gt; para la respuesta con &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/ActionResponse.html&#34;&gt;ActionResponse&lt;/a&gt;, &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/EventResponse.html&#34;&gt;EventResponse&lt;/a&gt;, &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/RenderResponse.html&#34;&gt;RenderResponse&lt;/a&gt;, &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/ResourceResponse.html&#34;&gt;ResourceResponse&lt;/a&gt;, &amp;hellip; y la amplia colección de componentes reusables de toda aplicación con uno específico para enlazar páginas en un &lt;em&gt;portlet&lt;/em&gt;, &lt;a href=&#34;https://github.com/got5/tapestry5-portlet/blob/master/src/main/java/org/apache/tapestry5/corelib/components/PortletPageLink.java&#34;&gt;PortletPageLink&lt;/a&gt;. Apache Tapestry permite abstraerse en gran medida de la API subyacente de los &lt;em&gt;portlets&lt;/em&gt; y las diferencias con una aplicación web no serán muy significativas. Todos los conceptos conocidos para desarrollar aplicaciones y páginas web sirven prácticamente en su totalidad para desarrollar &lt;em&gt;portlets&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Los &lt;a href=&#34;http://tapestry.apache.org/component-reference.html&#34;&gt;componentes usables&lt;/a&gt; en las plantillas de las páginas, salvo alguno adicional son los mismos que en una aplicación web. Unos 57 componentes listos para usar además de los propios y específicos de la aplicación.&lt;/p&gt;

&lt;p&gt;Al igual que en el &lt;em&gt;framework&lt;/em&gt; están incluidos múltiples componentes el contenedor de dependencias que tiene integrado Tapestry ofrece muchos servicios que es posible inyectar en las páginas y en componentes nuevos y propios, también desarrollar nuevos servicios que necesiten los &lt;em&gt;portlets&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Para hacer el ejemplo &lt;em&gt;Hola Mundo&lt;/em&gt; hay que definir dos páginas, una para mostrar el mensaje y otra para obtener un nombre, cada página se compone de una clase Java y una plantilla asociada que genera el HTML, ambos elementos son muy simples. El &lt;em&gt;portlet&lt;/em&gt; hará uso del mecanismo de preferencias proporcionado por el portal con la clase &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/PortletPreferences.html&#34;&gt;PorletPreferences&lt;/a&gt; y que se encarga de persistir en su propia base de datos para obtener y guardar valores en este caso el nombre usado en el mensaje. El &lt;em&gt;portlet&lt;/em&gt; usa un formulario que envía el nombre donde se utilizan los componentes &lt;a href=&#34;http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Form.html&#34;&gt;Form&lt;/a&gt;, &lt;a href=&#34;http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Label.html&#34;&gt;Label&lt;/a&gt; y &lt;a href=&#34;http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/TextField.html&#34;&gt;TextField&lt;/a&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/71e519379b23ab0c4a54d0aed927a3f3.js?file=Index.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/71e519379b23ab0c4a54d0aed927a3f3.js?file=Index.tml&#34;&gt;&lt;/script&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/71e519379b23ab0c4a54d0aed927a3f3.js?file=preferences-Index.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/71e519379b23ab0c4a54d0aed927a3f3.js?file=preferences-Index.tml&#34;&gt;&lt;/script&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/71e519379b23ab0c4a54d0aed927a3f3.js?file=AppPortletModule.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;El resto son varios archivos descriptores necesarios entre los que está el típico &lt;em&gt;web.xml&lt;/em&gt; de las aplicaciones web Java y el descriptor específico de los &lt;em&gt;portlets&lt;/em&gt; &lt;em&gt;portlet.xml&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/71e519379b23ab0c4a54d0aed927a3f3.js?file=portlet.xml&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/71e519379b23ab0c4a54d0aed927a3f3.js?file=web.xml&#34;&gt;&lt;/script&gt;

&lt;p&gt;Con Apache Tapestry están a nuestra disposición todas las facilidades de un &lt;em&gt;framework&lt;/em&gt; de más alto nivel que la API de los &lt;em&gt;portlets&lt;/em&gt;, con la API de los &lt;em&gt;portlets&lt;/em&gt; accesible si es necesaria, altamente productivo y con el que reutilizaremos en otros &lt;em&gt;portlets&lt;/em&gt; o proyectos los componentes desarrollados con una librería de componentes.&lt;/p&gt;

&lt;p&gt;Construido el &lt;em&gt;portlet&lt;/em&gt; con una tarea de &lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle&lt;/a&gt; el &lt;em&gt;portlet&lt;/em&gt; se despliega copiando el archivo &lt;em&gt;war&lt;/em&gt; al directorio de despliegue de los &lt;em&gt;portlets&lt;/em&gt; de Apache Pluto, en &lt;em&gt;webapps&lt;/em&gt;. Una vez desplegado accediendo a la página de administración se configuran los &lt;em&gt;portlets&lt;/em&gt; que incluye cada página. El usuario y contraseña para iniciar sesión en Apache Pluto es &lt;em&gt;pluto&lt;/em&gt; para el usuario y &lt;em&gt;pluto&lt;/em&gt; para la contraseña.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/244/pluto-admin.png&#34; title=&#34;Página de administración de portlets de Apache Pluto&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/244/pluto-admin-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/244/pluto-login.png&#34; title=&#34;Inicio de sesión de Apache Pluto&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/244/pluto-login-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Páginas de administración y sesión de Apache Pluto&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Insertado el &lt;em&gt;portlet&lt;/em&gt; en una página y accediendo a ella el &lt;em&gt;portlet&lt;/em&gt; muestra el mensaje que emite y seleccionando la opción &lt;em&gt;edit&lt;/em&gt; acceder a la página de preferencias acceder a la página que muestra el formulario y permite cambiar el mensaje. Este es el resultado del &lt;em&gt;portlet&lt;/em&gt; desplegado en Apache Pluto.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/244/tapestry-portlet.png&#34; title=&#34;Porlet con Apache Tapestry en Apache Pluto&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/244/tapestry-portlet-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/244/tapestry-portlet-preferences.png&#34; title=&#34;Página de preferencias del portlet&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/244/tapestry-portlet-preferences-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

    &lt;figure&gt;
  
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/244/tapestry-portlet-name.png&#34; title=&#34;Portlet usando un dato almacenado en las preferencias&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/244/tapestry-portlet-name-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;Porlet con Apache Tapestry en Apache Pluto&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Para conocer más sobre los &lt;em&gt;portlets&lt;/em&gt; el libro &lt;a href=&#34;http://amzn.to/2tzpbjL&#34;&gt;Portlets in Action&lt;/a&gt; es una buena fuente de documentación.&lt;/p&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1935182544&amp;linkId=6d736075105602e7c318919a1c81609d&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Descargado y descomprimido el &lt;a href=&#34;https://portals.apache.org/pluto/download.html&#34;&gt;binario de Apache Pluto&lt;/a&gt; para inicia con el comando &lt;code&gt;startup.sh&lt;/code&gt;. Apache Pluto es en realidad un servidor &lt;a href=&#34;https://tomcat.apache.org/&#34;&gt;Apache Tomcat&lt;/a&gt; con las adiciones para proporcionarle la funcionalidad de portal en la dirección &lt;em&gt;http://localhost:8080/pluto&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/71e519379b23ab0c4a54d0aed927a3f3.js?file=build.gradle&#34;&gt;&lt;/script&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/TapestryPortlet&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./pluto-3.0.0/bin &amp;amp;&amp;amp; ./gradlew build&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2014/12/portada-PugInTapestry-thumb.png&#34; alt=&#34;Portada libro: PlugIn Tapestry&#34; title=&#34;Portada libro: PlugIn Tapestry&#34; style=&#34;float: left; margin-right: 1.5em;&#34;&gt;
    &lt;h3&gt;Libro PlugIn Tapestry&lt;/h3&gt;
    &lt;p&gt;Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este &lt;i&gt;framework&lt;/i&gt; en el formato que prefieras, &lt;a href=&#34;http://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/&#34;&gt;PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry&lt;/a&gt;, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.&lt;/p&gt;
    &lt;br style=&#34;clear: both;&#34;&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf&#34; class=&#34;btn btn-lg btn-success&#34;&gt;PDF&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.epub&#34; class=&#34;btn btn-lg btn-success&#34;&gt;EPUB&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.mobi&#34; class=&#34;btn btn-lg btn-success&#34;&gt;MOBI&lt;/a&gt;
        &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.zip&#34; class=&#34;btn btn-lg btn-success&#34;&gt;HTML&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&#34;buttons&#34;&gt;
        &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry&#34; class=&#34;btn btn-lg btn-success&#34;&gt;Código fuente ejemplos&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/got5/tapestry5-portlet&#34;&gt;Apache Tapestry Portlet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://got5.github.io/tapestry5-portlet/&#34;&gt;Documentación Apache Tapestry Portlet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="tapestry"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/07/introduccion-a-los-portales-y-ejemplo-de-portlet-con-liferay/</id>
        <title>Introducción a los portales y ejemplo de portlet con Liferay</title>        
        <updated>2017-07-08T23:00:00+02:00</updated>
        <published>2017-07-01T12:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/07/introduccion-a-los-portales-y-ejemplo-de-portlet-con-liferay/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Muchas organizaciones usan portales para mantener su presencia en internet. Los portales son herramientas muy versátiles que incluyen la gestión de contenidos y flujo de trabajo para publicarlo, foros, blog, &amp;hellip; Liferay es uno de los más conocidos que usa la plataforma Java. La unidad básica funcional de un portal es un &lt;em&gt;portlet&lt;/em&gt; que en ciertos aspectos son similares en otros diferentes a lo que son los &lt;em&gt;servlets&lt;/em&gt; en las aplicaciones web Java.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right&#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/liferay.png&#34; class=&#34;right&#34; width=&#34;400&#34; alt=&#34;Liferay&#34; title=&#34;Liferay&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Los portales son una especialización de un sitio web que presenta información diversa de una forma integrada y uniforme. Suelen aplicarse cuando una entidad tiene necesidades de presentar información según el usuarios autenticado, su rol, los usuarios necesitan colaborar o se necesita integrar información de múltiples fuentes. Son usados por entidades públicas como gobiernos, ayuntamientos y también por corporaciones de tamaño mediano y grande.&lt;/p&gt;

&lt;p&gt;Algunos de sus casos de uso son:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://web.liferay.com/es/products/what-is-a-portal/web-platform&#34;&gt;Plataforma web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://web.liferay.com/es/products/what-is-a-portal/enterprise-cms&#34;&gt;Sistema de gestión de contenidos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://web.liferay.com/es/products/what-is-a-portal/integration-platform&#34;&gt;Plataforma de integración&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://web.liferay.com/es/products/what-is-a-portal/collaboration-platform&#34;&gt;Plataforma de colaboración&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://web.liferay.com/es/products/what-is-a-portal/social-apps-platform&#34;&gt;Plataforma de aplicaciones sociales&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Uno de los servidores de portales más destacados y usados es &lt;a href=&#34;https://www.liferay.com/&#34;&gt;Liferay&lt;/a&gt; aunque no es el único siendo &lt;a href=&#34;https://portals.apache.org/pluto/&#34;&gt;Apache Pluto&lt;/a&gt; el servidor de referencia. En lo poco que los he probado Liferay comparado con Apache Pluto el primero tarda bastante más en iniciarse, se nota más lento y me ha dado problemas al usar el &lt;em&gt;framework&lt;/em&gt; &lt;a href=&#34;http://tapestry.apache.org&#34;&gt;Apache Tapestry&lt;/a&gt; para desarrollar un &lt;em&gt;portlet&lt;/em&gt;, sin embargo, Liferay incorpora más &lt;a href=&#34;https://es.wikipedia.org/wiki/Portlet&#34;&gt;&lt;em&gt;portlets&lt;/em&gt;&lt;/a&gt; con multitud de funcionalidades, es más usado y solicitado en ofertas de trabajo. Tanto Liferay como Apache Pluto implementan la &lt;a href=&#34;https://jcp.org/aboutJava/communityprocess/edr/jsr362/index2.html&#34;&gt;especificación de los &lt;em&gt;portlets&lt;/em&gt;&lt;/a&gt; de Java que son la pieza básica funcional de un portal.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/243/inicio.png&#34; title=&#34;Página inicial de Liferay&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/243/inicio-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Liferay es el contenedor de &lt;em&gt;portlets&lt;/em&gt; y proporciona un entorno de ejecución similar a lo que los contenedores de &lt;em&gt;servlets&lt;/em&gt; como &lt;a href=&#34;https://tomcat.apache.org/&#34;&gt;Tomcat&lt;/a&gt; proporcionan para los &lt;em&gt;servlets&lt;/em&gt;. Las similitudes y diferencias entre un &lt;em&gt;servlet&lt;/em&gt; y un &lt;em&gt;portlet&lt;/em&gt; son las siguientes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Los &lt;em&gt;portlets&lt;/em&gt; son gestionados por un contenedor.&lt;/li&gt;
&lt;li&gt;Su ciclo de vida está gestionado por el contenedor.&lt;/li&gt;
&lt;li&gt;Generan contenido dinámico.&lt;/li&gt;
&lt;li&gt;Interactúan con el cliente mediante peticiones y respuestas.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Y se diferencia en que:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Los &lt;em&gt;portlets&lt;/em&gt; generan únicamente un fragmento de la página web.&lt;/li&gt;
&lt;li&gt;No están asociados directamente a una URL.&lt;/li&gt;
&lt;li&gt;No pueden generar contenido arbitrario, si se solicita text/html los &lt;em&gt;portlets&lt;/em&gt; deben generar text/html.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;El contenedor de &lt;em&gt;portlets&lt;/em&gt; proporciona funcionalidades como:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Almacenamiento persistente para las preferencias.&lt;/li&gt;
&lt;li&gt;Procesamiento de solicitudes.&lt;/li&gt;
&lt;li&gt;Modos de los &lt;em&gt;portlets&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Estado de la ventana o fragmento.&lt;/li&gt;
&lt;li&gt;Información de usuario,&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://web.liferay.com/es/community/wiki/-/wiki/Main/Liferay+Portlets&#34;&gt;Liferay incluye más de 60 &lt;em&gt;portlets&lt;/em&gt;&lt;/a&gt; listos para usar que cumplen las funciones de &lt;abbr title=&#34;Content Management System&#34;&gt;CMS&lt;/abbr&gt;, foros, blogs, agregador de blogs, wiki, calendario, encuestas, anuncios, herramientas sociales, de comercio electrónico, integración de contenido de sistemas externos, geolocalización, tiempo, administración, gestión de flujo de trabajo y &lt;a href=&#34;https://web.liferay.com/marketplace&#34;&gt;otros muchos más ofrecidos en el marketplace&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Desde la &lt;a href=&#34;https://www.liferay.com/es/downloads&#34;&gt;página de descargas&lt;/a&gt; se puede obtener la edición para la comunidad de Liferay además de otros productos eligiendo la versión deseada y en la &lt;a href=&#34;https://dev.liferay.com/es/home&#34;&gt;red para desarrolladores&lt;/a&gt; obtener documentación y material de referencia. Una vez descargado el archivo de la distribución de Liferay y descomprimido se inicia con el comando ubicado en &lt;em&gt;tomcat-8.0.32/bin/startup.sh&lt;/em&gt;. En el archivo &lt;em&gt;tomcat-8.0.32logs/catalina.out&lt;/em&gt; se emiten las trazas y mensajes del servidor. Iniciado Liferay se presenta una página de configuración, se han de aceptar los términos y condiciones e iniciar sesión con el usuario creado en la primera página de configuración.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/243/configuracion.png&#34; title=&#34;Configuración básica de Liferay&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/243/configuracion-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Para añadir un &lt;em&gt;portlet&lt;/em&gt; propio a Liferay hay que acceder al &lt;em&gt;Panel de control &amp;gt; Aplicaciones &amp;gt; Gestor de aplicaciones&lt;/em&gt; y pulsar la opción cargar ubicada en la parte superior derecha de la página. En la salida del servidor aparecerán varias trazas relativas al despliegue del &lt;em&gt;portlet&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/243/gestor-de-aplicaciones.png&#34; title=&#34;Gestor de aplicaciones&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/243/gestor-de-aplicaciones-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/243/instalar-aplicacion.png&#34; title=&#34;Instalar aplicación&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/243/instalar-aplicacion-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Los &lt;em&gt;portlets&lt;/em&gt; se distribuyen por lo general como archivos de aplicaciones web &lt;em&gt;.war&lt;/em&gt; con varios descriptores adicionales con información que usa Liferay para el despliegue del &lt;em&gt;portlet&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;En el siguiente ejemplo comentaré cómo crear un &lt;em&gt;portlet&lt;/em&gt; Hola Mundo sin ayuda de ningún &lt;em&gt;framework&lt;/em&gt; como &lt;a href=&#34;https://spring.io/&#34;&gt;Spring&lt;/a&gt; o Apache Tapestry aunque Liferay proporciona ayuda y documentación para desarrollarlos con &lt;a href=&#34;https://dev.liferay.com/es/develop/tutorials/-/knowledge_base/7-0/liferay-mvc-portlet&#34;&gt;Liferay MVC Portlet&lt;/a&gt; o &lt;a href=&#34;https://dev.liferay.com/es/develop/tutorials/-/knowledge_base/7-0/spring-mvc&#34;&gt;Spring MVC&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;El archivo descriptor principal es &lt;em&gt;portlet.xml&lt;/em&gt; donde se describen los &lt;em&gt;portlets&lt;/em&gt; de la aplicación indicando por ejemplo su nombre, la clase que lo implementa o los modos que soporta, otros archivos descriptores son &lt;em&gt;web.xml&lt;/em&gt;, &lt;em&gt;liferay-portlet.xml&lt;/em&gt; y &lt;em&gt;liferay-display.xml&lt;/em&gt; con unas propiedades exclusivas de Liferay indicando el icono y la categoría en la que ubicar el &lt;em&gt;portlet&lt;/em&gt; en la paleta de &lt;em&gt;portlets&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/0549b3b333adf38fc3be5a2ba6cfee45.js?file=portlet.xml&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/0549b3b333adf38fc3be5a2ba6cfee45.js?file=web.xml&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/0549b3b333adf38fc3be5a2ba6cfee45.js?file=liferay-portlet.xml&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/0549b3b333adf38fc3be5a2ba6cfee45.js?file=liferay-display.xml&#34;&gt;&lt;/script&gt;

&lt;p&gt;Un &lt;em&gt;portlet&lt;/em&gt; es una clase Java que extiende de &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/GenericPortlet.html&#34;&gt;GenericPortlet&lt;/a&gt;. En el caso del ejemplo es muy sencillo ya que solo emite un mensaje usando una preferencia de configuración que Liferay se encarga de persistir, tiene un modo de edición y procesa una acción para cambiar el valor de una preferencia que se utiliza al emitir el mensaje.&lt;/p&gt;

&lt;p&gt;Los &lt;em&gt;portlets&lt;/em&gt; con sus diferencias funcionales con los &lt;em&gt;servlets&lt;/em&gt; tienen muchas similitudes y una API con clases equivalentes a los &lt;em&gt;servlets&lt;/em&gt;. Así la clase principal de la que hay que heredar para crear un portlet es GenericPortlet o implementar la interfaz &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/Portlet.html&#34;&gt;Portlet&lt;/a&gt;. Las peticiones en los &lt;em&gt;portlets&lt;/em&gt; siguen una serie de fases que se van ejecutando en el siguiente orden &lt;em&gt;ActionPhase&lt;/em&gt;, &lt;em&gt;EventPhase&lt;/em&gt;, &lt;em&gt;HeaderPhase&lt;/em&gt; y &lt;em&gt;RenderPhase&lt;/em&gt;. Para los recursos como imágenes o documentos hay una fase específica &lt;em&gt;ResourcePhase&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/243/portlets-phase-model.png&#34; title=&#34;Fases del ciclo de vida de una petición de un portlet&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/243/portlets-phase-model-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/243/portlet-lifecycle-methods.png&#34; title=&#34;Métodos de ciclo de vida de un portlet&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/243/portlet-lifecycle-methods-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Fases y métodos del ciclo de vida de un portlet&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Para cada una de estas fases en la API de los &lt;em&gt;portlets&lt;/em&gt; hay un método específico que son &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/GenericPortlet.html#processAction(javax.portlet.ActionRequest,%20javax.portlet.ActionResponse)&#34;&gt;processAction&lt;/a&gt;, &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/GenericPortlet.html#processEvent(javax.portlet.EventRequest,%20javax.portlet.EventResponse)&#34;&gt;procesEvent&lt;/a&gt;, &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/GenericPortlet.html#renderHeaders(javax.portlet.HeaderRequest,%20javax.portlet.HeaderResponse)&#34;&gt;renderHeaders&lt;/a&gt; y &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/GenericPortlet.html#render(javax.portlet.RenderRequest,%20javax.portlet.RenderResponse)&#34;&gt;render&lt;/a&gt;. Los &lt;em&gt;portlets&lt;/em&gt; poseen modos que se visualizan con los métodos &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/GenericPortlet.html#doEdit(javax.portlet.RenderRequest,%20javax.portlet.RenderResponse)&#34;&gt;doEdit&lt;/a&gt;, &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/GenericPortlet.html#doHelp(javax.portlet.RenderRequest,%20javax.portlet.RenderResponse)&#34;&gt;doHelp&lt;/a&gt; y &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/GenericPortlet.html#doView(javax.portlet.RenderRequest,%20javax.portlet.RenderResponse)&#34;&gt;doView&lt;/a&gt; o el correspondiente anotado con &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/RenderMode.html&#34;&gt;@RenderMode&lt;/a&gt;. Cada uno de esos métodos para cada una de las fases reciben dos parámetros uno que representa a la petición que heredan de &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/PortletRequest.html&#34;&gt;PortletRequest&lt;/a&gt; y son &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/ActionRequest.html&#34;&gt;ActionRequest&lt;/a&gt;, &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/ClientDataRequest.html&#34;&gt;ClientDataRequest&lt;/a&gt;, &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/EventRequest.html&#34;&gt;EventRequest&lt;/a&gt;, &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/HeaderRequest.html&#34;&gt;HeaderRequest&lt;/a&gt;, &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/RenderRequest.html&#34;&gt;RenderRequest&lt;/a&gt; y &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/ResourceRequest.html&#34;&gt;ResourceRequest&lt;/a&gt;. Los objetos que representan a las respuestas heredan de &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/PortletResponse.html&#34;&gt;PortletResponse&lt;/a&gt; y son &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/ActionResponse.html&#34;&gt;ActionResponse&lt;/a&gt;, &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/EventResponse.html&#34;&gt;EventResponse&lt;/a&gt;, &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/HeaderResponse.html&#34;&gt;HeaderResponse&lt;/a&gt;, &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/MimeResponse.html&#34;&gt;MimeResponse&lt;/a&gt;, &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/RenderResponse.html&#34;&gt;RenderResponse&lt;/a&gt;, &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/ResourceResponse.html&#34;&gt;ResourceResponse&lt;/a&gt; y &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/StateAwareResponse.html&#34;&gt;StateAwareResponse&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;La interfaz &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/PortletPreferences.html&#34;&gt;PorletPreferences&lt;/a&gt; obtenida con el método &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/PortletRequest.html#getPreferences()&#34;&gt;getPreferences()&lt;/a&gt; de una clase que herede de &lt;em&gt;PortletRequest&lt;/em&gt; también es importante ya que con ella el &lt;em&gt;portlet&lt;/em&gt; es capaz de persistir incluso entre reinicios del servidor los datos relativos a su funcionamiento que desee aunque esto no sustituye a la utilización de una base de datos como &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt; o &lt;a href=&#34;https://www.mongodb.com/&#34;&gt;MongoDB&lt;/a&gt;. Los &lt;em&gt;portlets&lt;/em&gt; también tienen el equivalente de filtros de los &lt;em&gt;servlets&lt;/em&gt; con la clase &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/filter/PortletFilter.html&#34;&gt;PortletFilter&lt;/a&gt; y el equivalente de sesión con la clase &lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/javax/portlet/PortletSession.html&#34;&gt;PortletSession&lt;/a&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/0549b3b333adf38fc3be5a2ba6cfee45.js?file=HolaMundoPortlet.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;Usando como herramienta de construcción del proyecto &lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle&lt;/a&gt; el archivo &lt;em&gt;.war&lt;/em&gt; a desplegar el Liferay se genera con la tarea &lt;em&gt;build&lt;/em&gt; en el directorio &lt;em&gt;build/libs/HolaMundoPortlet-0.1.war&lt;/em&gt;. Esta archivo hay que desplegarlo en Liferay para posteriormente incluirlo en alguna página, se visualice el contenido que genera y se pueda interactuar con él.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/243/anadir-portlet.png&#34; title=&#34;Añadir portlet&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/243/anadir-portlet-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/243/inicio-hola-mundo-portlet.png&#34; title=&#34;Portlet HolaMundo&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/243/inicio-hola-mundo-portlet-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/243/preferencias.png&#34; title=&#34;Preferencias del portlet&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/243/preferencias-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/243/preferencias-usuario.png&#34; title=&#34;Portlet HolaMundo con preferencias&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/243/preferencias-usuario-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Desarrollar un &lt;em&gt;portlet&lt;/em&gt; con su API directamente es una tarea costosa si la funcionalidad o complejidad del &lt;em&gt;portlet&lt;/em&gt; es mucha. Al igual que en Java no se suele utilizar la API de los &lt;em&gt;servlets&lt;/em&gt; directamente, aunque es la API subyacente, y se suele utilizar alguno de los muchos &lt;em&gt;frameworks&lt;/em&gt; disponibles para los &lt;em&gt;portlets&lt;/em&gt; también hay varios &lt;em&gt;frameworks&lt;/em&gt; entre los que elegir. En el artículo &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/07/portlets-con-el-framework-apache-tapestry-y-apache-pluto/&#34;&gt;&lt;em&gt;Portlets&lt;/em&gt; con el framework Apache Tapestry y Apache Pluto&lt;/a&gt; muestro un ejemplo usando un &lt;em&gt;framework&lt;/em&gt; de alto nivel, orientado a componentes y altamente productivo.&lt;/p&gt;

&lt;p&gt;Aunque el libro &lt;a href=&#34;http://amzn.to/2sc1tWN&#34;&gt;Liferay in Action&lt;/a&gt; o &lt;a href=&#34;http://amzn.to/2tzpbjL&#34;&gt;Portlets in Action&lt;/a&gt; no están actualizados a la última versión sirven para conocer los conceptos básicos de su funcionamiento, explican la teoría e incluyen ejemplos de código de como crear un &lt;em&gt;portlet&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1935182544&amp;linkId=6d736075105602e7c318919a1c81609d&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=193518282X&amp;linkId=a4fdbe9a2a0c68685cfc8119f253125b&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/HolaMundoPortlet&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew build&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Web_portal&#34;&gt;Web portal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://es.wikipedia.org/wiki/Portlet&#34;&gt;Portlet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://web.liferay.com/es/products/what-is-a-portal/web-platform&#34;&gt;¿Qué es un Portal?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jcp.org/aboutJava/communityprocess/edr/jsr362/index2.html&#34;&gt;Portlet Specification 3.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://portals.apache.org/pluto/portlet-3.0-apidocs/&#34;&gt;Portlets 3.0 API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/06/hemeroteca-11/</id>
        <title>Hemeroteca #11</title>        
        <updated>2017-06-27T21:00:00+02:00</updated>
        <published>2017-06-24T10:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/06/hemeroteca-11/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;p&gt;Desde hace ya tiempo escribir y publicar en el blog es una de las cosas que realmente me gustan y me motivan a pesar de que el blog me requiere mucho tiempo de mi tiempo personal, cada artículo me exige entre 5 y 10 horas de dedicación durante el fin de semana y en mi tiempo libre. Es satisfactorio ver que cada semana y cada mes el número de visitas aumentan a un ritmo rozando los dos dígitos y que también se nota en los &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/donacion/&#34;&gt;ingresos por publicidad de AdSense que en parte dono&lt;/a&gt; a alguno de los proyectos de software libre que usó o me parecen interesantes de apoyarles económicamente aunque sea pequeña.&lt;/p&gt;

&lt;p&gt;Aún no he llegado al punto de plantearme seriamente abandonar el blog y recuperar mi tiempo para leer, ver películas que ahora me descargo pero pocas veo, andar en bicicleta, pasear u otras cosas, a veces pienso que le dedico mucho tiempo al blog, antes escribía un artículo a la semana, ahora estoy publicando muchas dos artículos faltándome más tiempo para editar y publicar los artículos que para redactarlos. La fe de poder de usar en un trabajo muchas de las herramientas de escribo, que es uno de mis motivaciones de tener el blog, me mantiene escribiendo aunque la realidad es que llevo ya 3 lustros trabajando y en prácticamente la totalidad de proyectos la tecnología estaba ya decidida e impuesta.&lt;/p&gt;

&lt;p&gt;El número de visitas ha aumentado notablemente de unas 9K páginas vistas en enero de 2016 a unas 30K en enero de 2017 y ahora a finales de junio unas 60K. Solamente en estos seis primeros meses ya he duplicado el tráfico mayoritariamente proveniente del buscador Google. Los ingresos por AdSense también han aumentado notablemente de 15€ pasando a 50€ mensuales con los que ahora cada dos meses recibo una transferencia de Google en mi cuenta corriente lo que empieza a ser una cantidad respetable aunque no compense por ello solamente la dedicación que requiere.&lt;/p&gt;

&lt;p&gt;Más del 90% del tráfico que recibo proviene del buscador Google y el resto de tráfico directo o de referencia. Solo unos 5 artículos son los que reciben la mayor parte de las visitas y que intento aprovechar para que los usuarios accedan a otros artículos relacionados. El aumento de visitas se debe a que con el paso del tiempo habré posicionado mejor algunos artículos en Google y en menor medida a los nuevos que he publicado. A Google creo que le gustan los sitios que publican nuevo contenido con asiduidad y regularmente en primera instancia y en medida similar si es de calidad. De enero de 2014 a enero de 2016 el crecimiento parece plano pero también fue constante aunque simplemente se ve enmascarado por el de los últimos meses.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/242/analytics.png&#34; title=&#34;Analytics&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/242/analytics-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/242/adsense.png&#34; title=&#34;AdSense&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/242/adsense-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Evolución visitas e ingresos&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Analizando los ingresos y visitas de mi blog y divagando cual sería el tráfico que debería generar para vivir únicamente blog si con 60K páginas vistas obtengo 50€ en ingresos al mes, debería multiplicar por ¿30, 40? el tráfico de este momento para vivir del blog, pero siendo más modesto multiplicar por 5 o 10 ya serían unos ingresos muy notables y algo que parece alcanzable aunque no sea fácilmente, ¿cuantas visitas mensuales son esas para una web? ¿3,6M de páginas vistas al mes? ¿300K o 600K siendo más modesto?. Quizá si publicase en inglés la audiencia sería mayor, aún no se cual es el tráfico que poseen otras páginas hispanas personales de temática tecnológica, software libre o programación más conocidos para saber cual es el límite de visitas alcanzable en este nicho de temática ya que los blogs que sigo en pocos he visto esta misma exhivición impúdica de datos que incluyo aquí (si como blogger te sientes aludido ya tienes tema para un artículo ;). Medios como &lt;a href=&#34;https://www.xataka.com/&#34;&gt;Xataka&lt;/a&gt; o &lt;a href=&#34;https://www.genbeta.com/&#34;&gt;Genbeta&lt;/a&gt; por citar algunos tecnológicos muy conocidos profesionales, empresariales o de grupos editoriales con las vistas que tienen deben generar suficiente tráfico para que sus ingresos solo en publicidad costeen los gastos de los redactores, servidores, viajes, paguen algunos sueldos, etc.&lt;/p&gt;

&lt;p&gt;Cambiando de tema y yendo a la hemeroteca en la lista de artículos que he publicado en estos seis meses están los siguientes, en total 40 (incluido este) nuevos artículos únicos y fabricados artesanalmente a mano. Este semestre he hecho dos donaciones de 60€ y publicados otros tantos artículos comentando a que proyectos.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/01/articulo-3-de-yo-apoyo-al-software-libre/&#34;&gt;Artículo #3 de Yo apoyo al software libre&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/articulo-4-de-yo-apoyo-al-software-libre/&#34;&gt;Artículo #4 de Yo apoyo al software libre&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Este semestre he publicado una nueva serie sobre electrónica aprovechando que compre un kit con varios elementos electrónicos con los que jugar para la &lt;a href=&#34;https://www.raspberrypi.org/&#34;&gt;Raspberry Pi&lt;/a&gt; 3 que he usado en la 1, se ha compuesto de un total de 10 artículos y aún podría escribir alguno más pero lo dejaré para otro momento si recupero las ganas de cacharrear con el hardware otra vez.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/02/desempaquetado-del-kit-de-iniciacion-a-la-electronica-para-la-raspberry-pi/&#34;&gt;Desempaquetado del kit de iniciación a la electrónica para la Raspberry Pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-hello-world-con-java-en-la-raspberry-pi/&#34;&gt;Ejemplo Hello World con Java en la Raspberry Pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-encender-y-apagar-diodo-led-con-la-raspberry-pi-en-java/&#34;&gt;Ejemplo encender y apagar diodo LED con la Raspberry Pi en Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/03/controlar-un-display-lcd-1602-para-mostrar-texto-con-la-raspberry-pi-y-java/&#34;&gt;Controlar un display LCD 1602 para mostrar texto con la Raspberry Pi y Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-de-jni-usar-codigo-en-c-desde-java/&#34;&gt;Ejemplo de JNI, usar código en C desde Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/03/obtener-la-temperatura-y-humedad-con-el-sensor-dht11-la-raspberry-pi-c-y-java/&#34;&gt;Obtener la temperatura y humedad con el sensor DHT11, la Raspberry Pi, C y Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/04/como-usar-un-diodo-led-un-pulsador-y-un-zumbador-con-la-raspberry-pi-y-java/&#34;&gt;Cómo usar un diodo LED, un pulsador y un zumbador con la Raspberry Pi y Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/04/ejemplo-sensor-de-golpes-y-detector-movimiento-en-la-raspberry-pi-con-java/&#34;&gt;Ejemplo sensor de golpes y detector de movimiento en la Raspberry Pi con Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/controlar-un-servomotor-con-la-raspberry-pi-y-java/&#34;&gt;Controlar un servomotor con la Raspberry Pi y Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/luces-navidenas-con-la-raspberry-pi-y-java/&#34;&gt;Luces navideñas con la Raspberry Pi y Java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La otra serie de varios artículos publicados durante otras tantas semanas ha sido sobre &lt;a href=&#34;https://docs.docker.com/swarm/&#34;&gt;Docker Swarm&lt;/a&gt; continuando y completando un poco más la serie sobre &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; para crear &lt;em&gt;clusters&lt;/em&gt; de nodos con la tecnología de la se se está hablando mucho y está transformando el estado del arte para el despliegue, ejecución y distribución de servicios.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/03/introduccion-y-ejemplo-de-cluster-de-contenedores-con-docker-swarm/&#34;&gt;Introducción y ejemplo de cluster de contenedores con Docker Swarm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/04/iniciar-un-stack-de-servicios-en-un-cluster-de-docker-swarm/&#34;&gt;Iniciar un stack de servicios en un cluster de Docker Swarm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/04/escalar-y-actualizar-un-servicio-de-un-cluster-de-docker-swarm/&#34;&gt;Escalar y actualizar un servicio de un cluster de Docker Swarm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/04/contenedores-en-docker-swarm-con-volumenes-de-datos-persistentes-usando-rex-ray-y-virtualbox/&#34;&gt;Contenedores en Docker Swarm con volúmenes de datos persistentes usando REX-Ray y VirtualBox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/04/informacion-sensible-en-contenedores-con-docker-secrets/&#34;&gt;Información sensible en los contenedores con Docker Secrets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/04/imagenes-de-docker-con-alpine-linux/&#34;&gt;Imágenes de Docker con Alpine Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Entre otros artículos que he publicado está un &lt;em&gt;script&lt;/em&gt; para instalar &lt;a href=&#34;https://www.archlinux.org/&#34;&gt;Arch Linux&lt;/a&gt; de forma desatendida, automatizada y personalizable. Dado que Arch Linux no posee un instalador y hay que introducir los comandos directamente en la terminal para realizar la instalación después de leer una buena cantidad de documentación de la estupenda &lt;a href=&#34;https://wiki.archlinux.org/&#34;&gt;wiki de Arch Linux&lt;/a&gt;, este &lt;em&gt;script&lt;/em&gt; sirve para instalar Arch Linux de forma sencilla o como consulta de los comandos a ejecutar paso a paso para instalar esta distribución.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/01/script-de-instalacion-de-arch-linux-desatendido-automatizado-y-personalizable/&#34;&gt;Script de instalación de Arch Linux desatendido, automatizado y personalizable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;También he publicado algún que otro artículo de opinión de dos noticias relevantes que se han producido en este periodo de tiempo, como son el ataque del &lt;em&gt;ransomware&lt;/em&gt; WannaCry y que afectó a algunas empresas y organizaciones y relacionado con este tema me preguntaba si las distribuciones GNU/Linux son más seguras que Windows. También daba mi opinión sobre el el anuncio de Shuttleworth de abandonar la convergencia con el servidor gráfico Mir y el entorno de escritorio Unity. Y un último sobre la diferencia de trato para bien de &lt;a href=&#34;https://www.pepephone.com/&#34;&gt;Pepephone&lt;/a&gt; con lo que es habitual en otras empresas de telecomunicaciones para mal.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/01/distribuciones-gnu-linux-mas-seguras-que-windows/&#34;&gt;Distribuciones GNU/Linux, ¿más seguras que Windows?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/sobre-el-anuncio-de-shuttleworth-de-abandonar-unity-y-mir-y-volver-a-gnome-en-ubuntu/&#34;&gt;Sobre el anuncio de Shuttleworth de abandonar Unity y Mir y volver a GNOME en Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/sobre-el-ataque-de-ransomware-que-ha-sufrido-telefonica-y-otras-empresas/&#34;&gt;Sobre el ataque de ransomware que ha sufrido Telefonica y otras empresas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/06/asi-trata-pepephone-a-sus-clientes/&#34;&gt;Así trata Pepephone a sus clientes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dos artículos para usuarios sin muchos conocimientos de como instalar &lt;a href=&#34;https://www.microsoft.com/es-es/windows/&#34;&gt;Windows&lt;/a&gt; o la distribución &lt;a href=&#34;https://www.ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt; de &lt;a href=&#34;https://www.gnu.org/&#34;&gt;GNU&lt;/a&gt;/&lt;a href=&#34;https://www.linux.com/&#34;&gt;Linux&lt;/a&gt;. Explicando paso a paso y detalladamente con capturas de pantalla cuales son los pasos para realizar la instalación desde cero.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/descargar-e-instalar-windows-10-paso-a-paso-desde-cero/&#34;&gt;Descargar e instalar Windows 10 paso a paso desde cero&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/descargar-e-instalar-la-distribucion-ubuntu-de-gnu-linux-paso-a-paso-desde-cero/&#34;&gt;Descargar e instalar la distribución Ubuntu de GNU/Linux paso a paso desde cero&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Un par de artículos patrocinados de los cuales uno ha sido otra forma de ingreso.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/02/cursos-de-formacion-de-keepcoding/&#34;&gt;Cursos de formación de KeepCoding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/02/servidores-cloud-vps-de-cloudingio-para-hospedar-blogs-y-paginas-web/&#34;&gt;Servidores Cloud VPS de Clouding.io para hospedar blogs y páginas web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;También he publicado un par de artículos en inglés traducción de otros que publique en español como experimento para comprobar que tal se indexan en Google y si alguno de ellos atrae visitas a mi blog.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/04/windows-10-and-office-2016-as-easy-to-use-without-license-as-always/&#34;&gt;Windows 10 and Office 2016 as easy to use without license as always&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/04/3-office-alternative-options-to-microsoft-office/&#34;&gt;3 office alternative options to Microsoft Office&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Habiendo publicado dos series con una buena cantidad de artículos este semestre he publicado pocos artículos de programación. A destacar de estos últimos ha sido el resumen como en años anteriores de la conferencia &lt;a href=&#34;http://bilbostack.com/&#34;&gt;BilboStack&lt;/a&gt; celebrada en febrero de las presentaciones a las que asistí. Varios artículos sobre diferentes tipos de bases de datos relacionales, de documentos y de clave valor representadas por &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt;, &lt;a href=&#34;https://www.mongodb.com/&#34;&gt;MongoDB&lt;/a&gt; y &lt;a href=&#34;https://redis.io/&#34;&gt;Redis&lt;/a&gt;. También como realizar autenticación mutua entre cliente y servidor con certificados ya sea con el programa &lt;em&gt;curl&lt;/em&gt;, una aplicación en la plataforma Java o con un navegador web.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/01/registro-y-descubrimiento-de-servicios-con-spring-cloud-y-consul/&#34;&gt;Registro y descubrimiento de servicios con Spring Cloud y Consul&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/02/conferencia-bilbostack-2017/&#34;&gt;Conferencia BilboStack 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/02/como-crear-un-servicio-de-systemd-para-una-aplicacion-con-spring-boot/&#34;&gt;Cómo crear un servicio de systemd para una aplicación con Spring Boot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/02/ejemplo-de-rabbitmq-con-java-para-enviar-y-recibir-mensajes/&#34;&gt;Ejemplo de RabbitMQ con Java para enviar y recibir mensajes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-relacional-postgresql/&#34;&gt;Introducción a la base de datos relacional PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-nosql-mongodb/&#34;&gt;Introducción a la base de datos NoSQL MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/06/usar-la-base-de-datos-nosql-mongodb-con-java/&#34;&gt;Usar la base de datos NoSQL MongoDB con Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/06/introduccion-a-la-base-de-datos-nosql-redis/&#34;&gt;Introducción a la base de datos NoSQL Redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/06/autenticacion-mutua-de-cliente-y-servidor-con-certificados/&#34;&gt;Autenticación mutua de cliente y servidor con certificados&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para acabar publique un artículo de un cargador de pilas recargables, un paquete de pilas de la marca blanca de Amazon y un reloj con un pequeño análisis y múltiples fotos.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/03/desempaquetado-de-cargador-de-pilas-recargables-pilas-recargables-aa-y-reloj-despertador/&#34;&gt;Desempaquetado de cargador de pilas recargables, pilas recargables AA y reloj despertador&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Que disfrutéis leyendo algunos de los artículos que publiqué y aprovechar para suscribiros con vuestro lector de &lt;em&gt;feeds&lt;/em&gt; preferido a Blog Bitix para no perderos ninguno de los que publique en el siguiente semestre que posiblemente verse bastante sobre Java.&lt;/p&gt;



        </content>
        
            
                <category term="blog"/>
            
                <category term="blog-stack"/>
            
                <category term="hemeroteca"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="tapestry"/>
            
                <category term="gnu-linux"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/06/autenticacion-mutua-de-cliente-y-servidor-con-certificados/</id>
        <title>Autenticación mutua de cliente y servidor con certificados</title>        
        <updated>2017-06-18T23:30:00+02:00</updated>
        <published>2017-06-17T02:45:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/06/autenticacion-mutua-de-cliente-y-servidor-con-certificados/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/openssl.svg&#34; class=&#34;right&#34; width=&#34;400&#34; alt=&#34;OpenSSL&#34; title=&#34;OpenSSL&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Los certificados no solo sirven para autenticar a un servidor o acceder solo a aquellos en los que confiamos. El servidor también puede autenticar a los clientes mediante un certificado como alternativa a usar un usuario y contraseña ya sea una autenticación &lt;em&gt;BASIC&lt;/em&gt; o un formulario personalizado. Al igual que en el cliente usa el certificado de la autoridad de certificación en la que confía para validar el que presenta el servidor, el servidor puede requerir que el cliente también proporcione un certificado que el servidor valida según las autoridades de certificación en las que confía, en ambos casos el servidor o cliente usan su clave privada para iniciar la conexión segura con el &lt;em&gt;handsake&lt;/em&gt; del &lt;a href=&#34;https://es.wikipedia.org/wiki/Transport_Layer_Security&#34;&gt;protocolo TLS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Para el ejemplo usaré un servidor web &lt;a href=&#34;https://nginx.org/&#34;&gt;nginx&lt;/a&gt; ejecutado como un contenedor de &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; configurado de tal manera que requiere autenticación para el cliente con certificados.&lt;/p&gt;

&lt;p&gt;Inicialmente deberemos generar tres parejas de claves privadas y públicas, una para nuestra propia autoridad de certificación, una clave para el servidor y otra para el cliente. Al mismo tiempo generaré otras tres parejas de claves privadas y públicas para comprobar que cuando se proporciona un certificado incorrecto la autenticación falla.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/16c98598bc1a2e63509f9c70960419b3.js?file=openssl-genrsa.sh&#34;&gt;&lt;/script&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/16c98598bc1a2e63509f9c70960419b3.js?file=ca.crt&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/16c98598bc1a2e63509f9c70960419b3.js?file=ca.key&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/16c98598bc1a2e63509f9c70960419b3.js?file=ca.pub&#34;&gt;&lt;/script&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/16c98598bc1a2e63509f9c70960419b3.js?file=openssl-genrsa-unknown.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;El siguiente paso es generar los certificados y firmar con la clave y certificado de la autoridad de certificado los certificados del servidor y cliente. Como paso previo a que la autoridad de certificación emita los certificados del servidor y cliente hay que generar una petición de firma de certificado, los archivos &lt;em&gt;.csr&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/16c98598bc1a2e63509f9c70960419b3.js?file=openssl-req.sh&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/16c98598bc1a2e63509f9c70960419b3.js?file=openssl-req-unknown.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Con la misma herramienta de &lt;a href=&#34;https://www.openssl.org/&#34;&gt;OpenSSL&lt;/a&gt; es posible comprobar si un certificado es válido para una autoridad de certificación en la que se confía, para ello se usa el certificado raiz de la autoridad.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/16c98598bc1a2e63509f9c70960419b3.js?file=openssl-verify.sh&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/16c98598bc1a2e63509f9c70960419b3.js?file=openssl-verify-unknown.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Para hacer que el servidor nginx requiera autenticación mediante certificados para el cliente hay que añadir un poco de configuración mediante las directivas &lt;em&gt;ssl&lt;/em&gt; donde se indica el certificado del servidor, la clave privada del servidor, el certificado de la autoridad de certificación contra la que se validarán los certificados de los clientes y finalmente la directiva que establece que se ha de verificar a los clientes mediante certificados.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/16c98598bc1a2e63509f9c70960419b3.js?file=nginx.conf&#34;&gt;&lt;/script&gt;

&lt;p&gt;Con el siguiente archivo descriptor de &lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;Docker Compose&lt;/a&gt; y comando se inicia el servidor web nginx.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/16c98598bc1a2e63509f9c70960419b3.js?file=docker-compose.sh&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/16c98598bc1a2e63509f9c70960419b3.js?file=docker-compose.yml&#34;&gt;&lt;/script&gt;

&lt;p&gt;Iniciado el servidor web ya se pueden realizar peticiones y el servidor y el cliente se autenticarán mutuamente. El servidor devolverá el código HTML de la página de bienvenida por defecto con las cabeceras del protocolo HTTP después de realizar el &lt;em&gt;handsake&lt;/em&gt; donde se valida el certificado del servidor.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/16c98598bc1a2e63509f9c70960419b3.js?file=curl.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Si se intenta realizar una petición sin certificado de cliente o con un certificado de cliente en el que no confié el servidor (que no esté firmado por la autoridad de certificación en la que confía) se devolverá un código de estado 400 que indica que la petición se ha rechazado. También el cliente advertirá si la autoridad de certificación en la que confía no valida el certificado del servidor con un error 400 y título &lt;em&gt;400 The SSL certificate error&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/16c98598bc1a2e63509f9c70960419b3.js?file=curl-unknown.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;El siguiente &lt;em&gt;script&lt;/em&gt; escrito en lenguaje &lt;a href=&#34;http://www.groovy-lang.org/&#34;&gt;Groovy&lt;/a&gt; muestra como desde un programa para la plataforma Java se realiza autenticación mutua y que error da cuando alguno de los certificados es inválido ya sea el del cliente o el del servidor. Generando previamente los &lt;em&gt;keystores&lt;/em&gt; de la autoridad de certificado y del cliente introduciendo como clave en el ejemplo &lt;em&gt;password&lt;/em&gt; cuando se solicita.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/16c98598bc1a2e63509f9c70960419b3.js?file=keytool.sh&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/16c98598bc1a2e63509f9c70960419b3.js?file=MutualCertAuth.groovy&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/16c98598bc1a2e63509f9c70960419b3.js?file=groovy.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;En caso de que al usar un &lt;em&gt;keystore&lt;/em&gt; con un certificado de una autoridad que no valida el certificado del servidor se producirán un error, también cuando el certificado del cliente no sea válido para el servidor.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/16c98598bc1a2e63509f9c70960419b3.js?file=groovy-unknown.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Lo anterior es usando la herramienta &lt;em&gt;curl&lt;/em&gt; o un un programa en la plataforma Java, en el caso de querer realizar autenticación mutua con un navegador web como &lt;a href=&#34;https://www.mozilla.org/es-ES/firefox/new/&#34;&gt;Firefox&lt;/a&gt; hay que instalar el certificado del cliente y si es necesario el certificado de la autoridad de certificación para que el candado indicativo de la seguridad del protocolo HTTPS se muestre en verde y no indique ningún problema de seguridad en la autenticación del servidor. En Firefox los certificados se añaden en el menú &lt;em&gt;Preferencias &amp;gt; Avanzado &amp;gt; Ver certficados&lt;/em&gt;. En la pestaña &lt;em&gt;Sus certificados&lt;/em&gt; hay que importar el certificado del cliente en formato &lt;em&gt;PKCS12&lt;/em&gt; y en la pestaña &lt;em&gt;Autoridades&lt;/em&gt; el certificado de la autoridad que haya firmado el certificado del servidor, con el botón &lt;em&gt;Importar&lt;/em&gt; se selecciona el archivo &lt;em&gt;crt&lt;/em&gt; de la autoridad. Al introducir la URL y realizar la petición Firefox solicita mediante un diálogo seleccionar el certificado a usar para realizar la autenticación en el servidor.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/241/firefox-bad-request.png&#34; title=&#34;Autenticación mutua fallida&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/241/firefox-bad-request-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/241/firefox-mutual-authorized.png&#34; title=&#34;Autenticación mutua correcta&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/241/firefox-mutual-authorized-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/241/firefox-server-cert.png&#34; title=&#34;Certificado del servidor validado por la CA&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/241/firefox-server-cert-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/241/firefox-certs.png&#34; title=&#34;Certificados de cliente&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/241/firefox-certs-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/241/firefox-cas.png&#34; title=&#34;Certificados de la autoridades de certificación&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/241/firefox-cas-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/241/firefox-ca.png&#34; title=&#34;Añadir certificado de CA&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/241/firefox-ca-thumb.png&#34;/&gt;&lt;/a&gt;
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/241/firefox-select-cert.png&#34; title=&#34;Selección de certificado de cliente&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/241/firefox-select-cert-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Autenticación mutua de cliente y servidor con el navegador web Firefox&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/MutualCertAuth&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;docker-compose up &amp;amp;&amp;amp; groovy MutualCertAuth.groovy&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/docker/&#34;&gt;Serie de artículos sobre Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2015/04/guardar-contrasenas-usando-salted-password-hashing-y-otras-formas-correctas/&#34;&gt;Guardar contraseñas usando «Salted Password Hashing» y otras formas correctas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="programacion"/>
            
                <category term="seguridad"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/06/introduccion-a-la-base-de-datos-nosql-redis/</id>
        <title>Introducción a la base de datos NoSQL Redis</title>        
        <updated>2017-06-11T12:00:00+02:00</updated>
        <published>2017-06-11T12:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/06/introduccion-a-la-base-de-datos-nosql-redis/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Redis es una de las bases de datos NoSQL en este caso de tipo clave-valor. Los valores pueden ser de diferentes tipos y tiene una amplia colección de operaciones disponibles para usar según el tipo de datos asociado a la clave.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/redis.svg&#34; class=&#34;right&#34; width=&#34;200&#34; alt=&#34;Redis&#34; title=&#34;Redis&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://redis.io/&#34;&gt;Redis&lt;/a&gt; es una de las bases de datos para almacenar información de los conocidas como &lt;a href=&#34;https://es.wikipedia.org/wiki/NoSQL&#34;&gt;NoSQL&lt;/a&gt;. Almacena los datos en memoria por lo que es muy rápido y es usada como base de datos, como cache o &lt;em&gt;broker&lt;/em&gt; de mensajes. Los datos no se almacenan en tablas como en los sistemas relacionales tradiciones &lt;a href=&#34;https://en.wikipedia.org/wiki/Relational_database_management_system&#34;&gt;&lt;abbr title=&#34;Relational Database Management System&#34;&gt;RDBMS&lt;/abbr&gt;&lt;/a&gt; como &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt; o &lt;a href=&#34;https://www.mysql.com/&#34;&gt;MySQL&lt;/a&gt; sino en estructuras de datos como cadenas, &lt;em&gt;hashes&lt;/em&gt;, listas, conjuntos, conjuntos ordenado con rangos, &lt;em&gt;bitmaps&lt;/em&gt;, &lt;em&gt;hyperloglogs&lt;/em&gt; e índices geoespaciales. Incorpora replicación, &lt;em&gt;scripting&lt;/em&gt; con LUA, desalojo &lt;abbr title=&#34;Least Recently Used&#34;&gt;LRU&lt;/abbr&gt;, transacciones, diferentes niveles de persistencia en disco y alta disponibilidad con &lt;a href=&#34;https://redis.io/topics/sentinel&#34;&gt;Redis Sentinel&lt;/a&gt; y paticionamiento con &lt;a href=&#34;https://redis.io/topics/cluster-tutorial&#34;&gt;Redis Cluster&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;El punto más crítico en el rendimiento en una aplicación suele estar en la base de datos relacional, dado que han de garantizar las propiedades ACID y almacenan grandes cantidades de datos en disco son lentas (comparativamente) además de presentar dificultades para escalar horizontalmente. Redis almacena los datos en memoria por lo que es significativamente más rápida que una base de datos relacional aunque con la limitación de no poder almacenar las grandes cantidades de datos medidos hoy en día en terabytes o TiB (1024 GiB) que podría almacenar una base de datos relacional. Para la necesidad de acceder datos de forma rápida, de cachear datos a los que acceder rápido, datos a los que se acceden frecuentemente, datos precalculados, hay grandes cantidades de escrituras o necesidad de escalar Redis es una opción a tener en cuenta.&lt;/p&gt;

&lt;p&gt;Redis es un sistema de datos clave-valor en el que cada clave tiene asociado un tipo de datos y unos datos que almacena. Según el tipo de datos de la clave se pueden realizar diferentes &lt;a href=&#34;https://redis.io/commands&#34;&gt;operaciones o comandos de consulta&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://redis.io/commands#string&#34;&gt;Operaciones con cadenas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://redis.io/commands#set&#34;&gt;Operaciones con sets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://redis.io/commands#sorted_set&#34;&gt;Operaciones con sorted sets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://redis.io/commands#list&#34;&gt;Operaciones con lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://redis.io/commands#hash&#34;&gt;Operaciones con hashes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://redis.io/commands#generic&#34;&gt;Operaciones genéricas con keys&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Usando &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; se puede iniciar una instancia de Redis con un archivo descriptor del contenedor en formato &lt;em&gt;yml&lt;/em&gt; y el comando &lt;code&gt;docker-compose up&lt;/code&gt;. Redis al igual que otras bases de datos posee un &lt;em&gt;shell&lt;/em&gt; de linea de comandos, &lt;em&gt;redis-cli&lt;/em&gt;. Iniciada la instancia del contenedor y el servicio de Redis se puede iniciar una sesión de &lt;em&gt;sh&lt;/em&gt; y con ella el &lt;em&gt;shell&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/01c52ee107f41dc4c13b84c5c28ab612.js?file=docker-compose.sh&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/01c52ee107f41dc4c13b84c5c28ab612.js?file=docker-compose.yml&#34;&gt;&lt;/script&gt;

&lt;p&gt;Hay multitud de &lt;a href=&#34;https://redis.io/clients&#34;&gt;clientes para los lenguajes de programación&lt;/a&gt; más populares y otros menos usados, en Java uno de los clientes más conocidos es &lt;a href=&#34;https://github.com/xetorthio/jedis&#34;&gt;Jedis&lt;/a&gt;. En el siguiente ejemplo un cliente Java se conecta a la instancia de Redis y lanza los varios comandos para almacenar cadenas, un &lt;em&gt;set&lt;/em&gt;, &lt;em&gt;set&lt;/em&gt; ordenados, lista, &lt;em&gt;hash&lt;/em&gt; y algunas operaciones sobre claves. Este ejemplo desde Java realiza las mismas operaciones que las realizadas en el &lt;em&gt;shell&lt;/em&gt; de Redis anterior.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/01c52ee107f41dc4c13b84c5c28ab612.js?file=Main.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/01c52ee107f41dc4c13b84c5c28ab612.js?file=build.gradle&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/01c52ee107f41dc4c13b84c5c28ab612.js?file=System.out&#34;&gt;&lt;/script&gt;

&lt;p&gt;Cada comando de Redis tiene una complejidad de tiempo ejecución, para obtener el mejor rendimiento hay que analizar los datos para almacenarlos en la estructura de datos adecuada de las que ofrece Redis junto con los comandos que son utilizados y su complejidad indicada en la documentación del comando en &lt;a href=&#34;https://en.wikipedia.org/wiki/Big_O_notation&#34;&gt;notación Big O&lt;/a&gt;. Redis solo es uno de los sistemas NoSQL, hay otros conocidos con &lt;a href=&#34;https://www.mongodb.com/&#34;&gt;MongoDB&lt;/a&gt; orientado a documentos o &lt;a href=&#34;http://cassandra.apache.org/&#34;&gt;Cassandra&lt;/a&gt; híbrido entre clave-valor y tabular.&lt;/p&gt;

&lt;p&gt;Para un conocimiento mucho más detallado de las posibilidades de esta base de datos el libro &lt;a href=&#34;http://amzn.to/2s9CYfJ&#34;&gt;Mastering Redis&lt;/a&gt; o &lt;a href=&#34;http://amzn.to/2rio3vH&#34;&gt;Redis in Action&lt;/a&gt; son un buen inicio.&lt;/p&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
  &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1783988185&amp;linkId=8459459236559fee49442452db7fb5b2&#34;&gt;&lt;/iframe&gt;
  &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1617290858&amp;linkId=3d85e30c0781f28d90d25591d5183d0d&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/HolaMundoRedis&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;docker-compose up &amp;amp;&amp;amp; ./gradlew run&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://redis.io/documentation&#34;&gt;Documentación Redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-relacional-postgresql/&#34;&gt;Introducción a la base de datos relacional PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-nosql-mongodb/&#34;&gt;Introducción a la base de datos NoSQL MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/06/usar-la-base-de-datos-nosql-mongodb-con-java/&#34;&gt;Usar la base de datos NoSQL MongoDB con Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/docker/&#34;&gt;Serie de artículos sobre Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/06/usar-la-base-de-datos-nosql-mongodb-con-java/</id>
        <title>Usar la base de datos NoSQL MongoDB con Java</title>        
        <updated>2017-06-04T13:00:00+02:00</updated>
        <published>2017-06-04T13:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/06/usar-la-base-de-datos-nosql-mongodb-con-java/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/mongodb.svg&#34; class=&#34;right&#34; width=&#34;400&#34; alt=&#34;MongoDB&#34; title=&#34;MongoDB&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right&#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;En un artículo anterior hacía una pequeña &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-nosql-mongodb/&#34;&gt;introducción a la base de datos NoSQL MongoDB&lt;/a&gt; comentando sus características, como empezar a usarla con &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; y como lanzar algunos comandos para crear bases de datos y colecciones junto las operaciones básicas de inserción, actualización, eliminación y búsquedas con consultas desde la &lt;em&gt;shell&lt;/em&gt; que ofrece &lt;a href=&#34;https://www.mongodb.com/&#34;&gt;MongoDB&lt;/a&gt; para esta base de datos que guarda documentos.&lt;/p&gt;

&lt;p&gt;La &lt;em&gt;shell&lt;/em&gt; sirve para hacer estas consultas pero el caso de uso principal es usarlo desde una aplicación con alguno de los &lt;a href=&#34;https://docs.mongodb.com/ecosystem/drivers/&#34;&gt;lenguajes de programación para los que se proporciona un controlador&lt;/a&gt;. MongoDB se puede usar desde cualquiera de los lenguajes de programación más populares entre ellos Java. En este artículo muestro con un ejemplo como realizar las operaciones que utilizaba desde la &lt;em&gt;shell&lt;/em&gt; de MongoDB pero desde una aplicación Java.&lt;/p&gt;

&lt;p&gt;Para el ejemplo uso una aplicación Java con &lt;a href=&#34;http://projects.spring.io/spring-boot/&#34;&gt;Spring Boot&lt;/a&gt; en la que hay que incluir la dependencia &lt;em&gt;org.springframework.boot:spring-boot-starter-data-mongodb&lt;/em&gt; que proporciona el acceso a esta base de datos. Para comunicación con el servidor de MongoDB hay que crear una instancia del cliente de la base de datos, una instancia de la clase &lt;a href=&#34;https://api.mongodb.com/java/current/com/mongodb/MongoClient.html&#34;&gt;MongoClient&lt;/a&gt; para lo que simplemente necesitamos el &lt;em&gt;host&lt;/em&gt; y puerto en la que está arrancado el servidor. En el caso del ejemplo &lt;em&gt;localhost&lt;/em&gt; y el puerto de MongoDB que por defecto es &lt;em&gt;27017&lt;/em&gt;. Al usar Spring defino un nuevo servicio en el contenedor de dependencias y la inyecto en la clase de la aplicación para hacer uso de ella, dado lo simple que es el ejemplo en el mismo archivo de código fuente.&lt;/p&gt;

&lt;p&gt;Los documentos en MongoDB están en formato JSON, como Java no ofrece de una sintaxis sencilla de literales de listas y mapas para el uso de documentos JSON hay que usar algunas clases de la API de MongoDB para la construcción de los documentos, para las búsquedas en las que indicaremos filtros usaremos la clase &lt;a href=&#34;https://api.mongodb.com/java/current/com/mongodb/client/model/Filters.html&#34;&gt;Filters&lt;/a&gt;, &lt;a href=&#34;https://api.mongodb.com/java/current/com/mongodb/client/model/Updates.html&#34;&gt;Updates&lt;/a&gt; para las actualizaciones y para la construcción de documentos de datos y actualizaciones &lt;a href=&#34;https://api.mongodb.com/java/current/org/bson/Document.html&#34;&gt;Document&lt;/a&gt;. Con la instancia de la clase cliente que da acceso a la base de datos MongoDB desde Java se listan las bases de datos, colecciones y lanzan los comandos.&lt;/p&gt;

&lt;p&gt;Con la referencia a una colección se realizan las operaciones de inserción de un documento, actualización del documento completo o de una parte, eliminación de un documento y búsqueda de documentos con una consulta.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/9c814d5b0e24a5b371de64d9e4f647f1.js?file=Main.java&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/9c814d5b0e24a5b371de64d9e4f647f1.js?file=build.gradle&#34;&gt;&lt;/script&gt;

&lt;p&gt;La instancia del servidor de MongDB la inicio usando Docker con un archivo de &lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;Docker Compose&lt;/a&gt; y el comando &lt;code&gt;docker-compose up&lt;/code&gt;. En la  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/docker/&#34;&gt;serie de artículos sobre Docker&lt;/a&gt; que escribí puedes aprender como empezar a usar Docker y adquirir un conocimiento hasta un nivel intermedio.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/9c814d5b0e24a5b371de64d9e4f647f1.js?file=docker-compose.yml&#34;&gt;&lt;/script&gt;

&lt;p&gt;El resultado en la terimnal de ejecutar el ejemplo con el comando &lt;code&gt;gradlew run&lt;/code&gt; es el siguiente donde se muestran las bases de datos, la colección &lt;em&gt;users&lt;/em&gt; creada en el ejemplo, los usuarios de la colección y una búsqueda de un usuario, el resultado de actualizar la propiedad de un documento y finalmente el número de documentos en la colección.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/9c814d5b0e24a5b371de64d9e4f647f1.js?file=System.out&#34;&gt;&lt;/script&gt;

&lt;p&gt;Spring ofrece en su API mediante el proyecto &lt;a href=&#34;https://projects.spring.io/spring-data-mongodb/&#34;&gt;Spring Data MongoDB&lt;/a&gt; algunas clases adicionales para facilitar el acceso y obtención de datos de MongoDB. Entre estas clases están &lt;a href=&#34;https://docs.spring.io/spring-data/data-mongo/docs/current/api/org/springframework/data/mongodb/core/MongoTemplate.html&#34;&gt;MongoTemplate&lt;/a&gt;, &lt;a href=&#34;https://docs.spring.io/spring-data/data-mongo/docs/current/api/org/springframework/data/mongodb/core/MongoOperations.html&#34;&gt;MongoOperations&lt;/a&gt; y &lt;a href=&#34;https://docs.spring.io/spring-data/data-mongo/docs/current/api/org/springframework/data/mongodb/repository/MongoRepository.html&#34;&gt;MongoRepository&lt;/a&gt; cuyo uso puede consultarse en su &lt;a href=&#34;https://docs.spring.io/spring-data/data-mongo/docs/current/reference/html/&#34;&gt;manual de referencia&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;En el libro &lt;a href=&#34;http://amzn.to/2qvYqqU&#34;&gt;MongDB in Action&lt;/a&gt; comentan más detalladamente y de forma más completa las opciones que se pueden utilizar en el lenguaje de consulta, muchas de las opciones son equivalentes a las que son conocidas del lenguaje SQL de las bases de datos relacionales.&lt;/p&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1617291609&amp;linkId=53e36564344401d0a3e0f29a4cef1968&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/HolaMundoMongoDB&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;docker-compose up &amp;amp;&amp;amp; ./gradlew run&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/&#34;&gt;Documentación MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-relacional-postgresql/&#34;&gt;Introducción a la base de datos relacional PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-nosql-mongodb/&#34;&gt;Introducción a la base de datos NoSQL MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/06/introduccion-a-la-base-de-datos-nosql-redis/&#34;&gt;Introducción a la base de datos NoSQL Redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/docker/&#34;&gt;Serie de artículos sobre Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-nosql-mongodb/</id>
        <title>Introducción a la base de datos NoSQL MongoDB</title>        
        <updated>2017-06-04T12:30:00+02:00</updated>
        <published>2017-05-28T12:30:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-nosql-mongodb/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;En unos pocos años las bases de datos NoSQL se han dado a conocer ampliamente. Resuelven algunas problemáticas para las que las bases de datos relacionales más longevas no proporcionan una solución totalmente satisfactoria como el escalado horizontal y un modelo de datos normalizado en varias tablas, filas y columnas predefinidas y significativamente diferente del modelo de datos usados por las aplicaciones. La base de datos NoSQL MongoDB que almacena documentos se adecua mejor a cierto tipo de requerimientos.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/mongodb.svg&#34; class=&#34;right&#34; width=&#34;400&#34; alt=&#34;MongoDB&#34; title=&#34;MongoDB&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Los sistemas de información empleados tradicionalmente en las aplicaciones son las bases de datos relacionales como &lt;a href=&#34;https://www.mysql.com/&#34;&gt;MySQL&lt;/a&gt;, &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt; u otras comerciales. Las bases de datos relacionales con sus propiedades &lt;abbr title=&#34;Atomicity, Consistency, Isolation, Durability&#34;&gt;&lt;a href=&#34;https://es.wikipedia.org/wiki/ACID&#34;&gt;ACID&lt;/a&gt;&lt;/abbr&gt; seguirán usándose pero desde hace unos años están surgiendo y empleándose para algunos casos otro tipo de &lt;a href=&#34;https://es.wikipedia.org/wiki/NoSQL&#34;&gt;bases de datos conocidas como NoSQL&lt;/a&gt;. Dentro de las bases de datos NoSQL hay varios tipos: clave-valor, de documentos, grafos, &amp;hellip; Dentro de la categoría de bases de datos NoSQL orientadas a almacenar documentos una de las más destacadas es &lt;a href=&#34;https://www.mongodb.com/&#34;&gt;MongoDB&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Al igual que las bases de datos relacionales MongoDB posee un &lt;em&gt;shell&lt;/em&gt; JavaScript con el que lanzar todas las operaciones anteriores que junto con &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; la experimentación de todo lo anterior será una tarea no demasiado complicada. Bastará descargar la &lt;a href=&#34;https://hub.docker.com/_/mongo/&#34;&gt;imagen de MongoDB para Docker&lt;/a&gt;, iniciar un contenedor, iniciar una &lt;em&gt;shell bash&lt;/em&gt; en el contenedor y la &lt;em&gt;shell&lt;/em&gt; de MongoDB desde la que lanzar las consultas. Siguendo la &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/docker/&#34;&gt;seríe de artículos sobre Docker&lt;/a&gt; en unas pocas horas puedes usarlo.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/1347cb475ad47d14f1941e76567b007a.js?file=docker-compose.yml&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/1347cb475ad47d14f1941e76567b007a.js?file=docker-compose.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;La base de datos MongoDB al igual que muchas NoSQL no soporta completamente las propiedades ACID de las bases de datos relacionales, no soporta transacciones aunque sí garantiza que las operaciones individuales son atómicas, pero a cambio proporciona otras propiedades que para algunas necesidades podemos considerar más adecuadas como mayor escalabilidad horizontal, alta disponibilidad, réplicas y &lt;em&gt;shards&lt;/em&gt; para distribuir los datos entre varias instancias. MongoDB guarda la información en documentos con formato JSON.&lt;/p&gt;

&lt;p&gt;En vez de tablas, filas y columnas los términos en MongoDB son colecciones de documentos, los documentos son la unidad mínima de información almacenable y propiedades en esos documentos. Una propiedad interesante de los documentos es que estos no tiene porque tener todos las mismas propiedades, aunque se recomienda que las propiedades sean siempre del mismo tipo. Los documentos hacen menos necesarios y complejos los &lt;abbr title=&#34;Object-Relational mapping&#34;&gt;&lt;a href=&#34;https://es.wikipedia.org/wiki/Mapeo_objeto-relacional&#34;&gt;ORM&lt;/a&gt;&lt;/abbr&gt; para convertir del modelo relacional usado en las bases de datos al modelo de objetos de la aplicación.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/1347cb475ad47d14f1941e76567b007a.js?file=documents.json&#34;&gt;&lt;/script&gt;

&lt;p&gt;Se pueden almacenar los documentos anteriores en la misma colección de artículos aunque ambos no tengan las mismas propiedades, en una base de datos relacional sería más complicado y en el caso de que los datos fuesen desconocidos en el momento de definir el modelo obligaría a usar el &lt;a href=&#34;https://en.wikipedia.org/wiki/Entity%E2%80%93attribute%E2%80%93value_model&#34;&gt;modelo entity-atribute-value&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;La información que en una base de datos relacional está en varias tablas y es necesario realizar varias consultas SQL para obtenerla en MongoDB está en un mismo documento siendo más sencilla de recuperar con la posibilidad de no estar tan normalizada y sin necesidad de hacer &lt;em&gt;joins&lt;/em&gt; entre varias tablas. Para guardar los documentos anteriores de ejemplo en una base de datos relacional se necesitan varias tablas, una para los artículos y otras para los comentarios, etiquetas y adicionales para las relaciones N a M.&lt;/p&gt;

&lt;p&gt;Algunas bases de datos NoSQL no necesitan del potente lenguaje de consulta SQL de las bases de datos relacionales pero MongoDB proporciona su propio lenguaje de consulta diferente a SQL pero con muchas funcionalidades similares: proyecciones, agrupaciones, filtrado, agregación, ordenación, funciones lógicas, aritméticas, para fechas, para cadenas además de operaciones para realizar inserciones, actualizaciones de un documento completo o campos individuales y eliminaciones. Para que las búsquedas y filtrados tenga buen rendimiento en colecciones de documentos grandes también se pueden crear índices.&lt;/p&gt;

&lt;p&gt;Estas son las &lt;a href=&#34;https://en.wikipedia.org/wiki/Create,_read,_update_and_delete&#34;&gt;operaciones CRUD&lt;/a&gt; ejecutadas desde la &lt;em&gt;shell&lt;/em&gt; de MongoDB en una colección de artículos.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/1347cb475ad47d14f1941e76567b007a.js?file=insert.json&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/1347cb475ad47d14f1941e76567b007a.js?file=find.json&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/1347cb475ad47d14f1941e76567b007a.js?file=update.json&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/1347cb475ad47d14f1941e76567b007a.js?file=delete.json&#34;&gt;&lt;/script&gt;

&lt;p&gt;MongoDB proporciona controladores para acceder a la base de datos desde los lenguejes de programación más populares como muestro en el artículo &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/06/usar-la-base-de-datos-nosql-mongodb-con-java/&#34;&gt;Usar la base de datos NoSQL MongoDB con Java&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;El libro &lt;a href=&#34;http://amzn.to/2qvYqqU&#34;&gt;MongoDB in Action&lt;/a&gt; es un buen material de referencia para dominar esta base de datos NoSQL con consejos prácticos de como guardar la información y como administrar la base de datos para replicar los datos en un &lt;em&gt;cluster&lt;/em&gt;, escalar y otros temas administrativos como crear copias de seguridad, rendimiento, seguridad o monitorización.&lt;/p&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1617291609&amp;linkId=53e36564344401d0a3e0f29a4cef1968&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-relacional-postgresql/&#34;&gt;La base de datos PostgreSQL&lt;/a&gt; es una de las mejores opciones en el ámbito de las bases de datos relacionales y el potente lenguaje SQL, las propiedades ACID o el PL/pgSQL entre otras funcionalidades hará que siga siendo una de las mejores opciones para almacenar de forma persistente la preciosa información. En los casos que la escalabilidad o la estructuración de la información en documentos se un factor determinante MongoDB es una buena opción. Ambas opciones no son excluyentes, según el caso estos dos sistemas de información se podrán combinar para obtener lo mejor de cada uno de ellos.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/&#34;&gt;Documentación MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-relacional-postgresql/&#34;&gt;Introducción a la base de datos relacional PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/06/usar-la-base-de-datos-nosql-mongodb-con-java/&#34;&gt;Usar la base de datos NoSQL MongoDB con Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/06/introduccion-a-la-base-de-datos-nosql-redis/&#34;&gt;Introducción a la base de datos NoSQL Redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/docker/&#34;&gt;Serie de artículos sobre Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-relacional-postgresql/</id>
        <title>Introducción a la base de datos relacional PostgreSQL</title>        
        <updated>2017-05-28T12:00:00+02:00</updated>
        <published>2017-05-27T12:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-relacional-postgresql/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;De todas las funcionalidades que tiene SQL muchos desarrolladores solo usamos un pequeño conjunto de las posibilidades del lenguaje. Algunas bases de datos no implementan muchas posibilidades del lenguaje SQL y no son usables en esos sistemas, PostgreSQL es una de las bases de datos relacionales que mejor soporta el estándar ANSI-SQL. Conociendo sus posibilidades podremos implementar funcionalidades de forma más sencilla o con mejor rendimiento.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/postgresql.svg&#34; class=&#34;right&#34; width=&#34;200&#34; alt=&#34;PostgreSQL&#34; title=&#34;PostgreSQL&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Aún con el reciente auge de las bases de datos NoSQL las bases de datos relacionales siguen siendo la opción usada mayoritariamente para persistir los datos de una aplicación. El potente &lt;a href=&#34;https://en.wikipedia.org/wiki/SQL&#34;&gt;lenguaje SQL&lt;/a&gt; permite obtener, modificar, insertar y eliminar datos de forma declarativa. Una característica deseada de las bases de datos relacionales es la de mantener con transacciones la integridad referencial y consistencia de los datos en todo momento que las bases de datos NoSQL no ofrecen aunque estas últimas a cambio ofrecen mejores opciones para escalar. Por otro lado los datos ya sean en una base de datos relacional o NoSQL seguirán un esquema aunque en este último caso no se exija, las bases de datos relacionales al exigir que los datos sigan un esquema evitará inconsistencias y los tipos de los datos serán los definidos en la tabla de datos en las que se guarden.&lt;/p&gt;

&lt;p&gt;De las bases de datos relacionales más utilizadas que tienen una licencia de software libre están &lt;a href=&#34;https://www.mysql.com/&#34;&gt;MySQL&lt;/a&gt;, &lt;a href=&#34;https://mariadb.org/&#34;&gt;MariaDB&lt;/a&gt; y &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt;, con licencia privativa y comerciales están &lt;a href=&#34;https://www.microsoft.com/en-us/sql-server/sql-server-2016&#34;&gt;Microsoft SQL Server&lt;/a&gt;, &lt;a href=&#34;https://www.oracle.com/database/index.html&#34;&gt;Oracle&lt;/a&gt; y &lt;a href=&#34;https://www.ibm.com/analytics/us/en/technology/db2/&#34;&gt;DB2&lt;/a&gt; siendo su coste significativo en algunos casos solo alcanzable por grandes organizaciones. PostgreSQL con su licencia de software libre es una de las bases de datos más avanzadas soportando muchas de las opciones definidas en el estándar del lenguaje SQL.&lt;/p&gt;

&lt;p&gt;Muchos desarrolladores conocemos las opciones básicas del lenguaje SQL, las sentencias &lt;em&gt;insert&lt;/em&gt;, &lt;em&gt;update&lt;/em&gt;, &lt;em&gt;delete&lt;/em&gt; y &lt;em&gt;select&lt;/em&gt;, sin embargo las últimas versiones del lenguaje SQL añade muchas posibilidades que quizá desconozcamos. PostgreSQL por ejemplo soporta inserciones de múltiples filas en una misma sentencia, actualización o inserción con la sentencia &lt;em&gt;upsert&lt;/em&gt;, &lt;em&gt;window functions&lt;/em&gt;, &lt;em&gt;common table expressions&lt;/em&gt; o consultas recursivas. PostgreSQL además tiene un sistema de tipos avanzado pudiendo definir tipos de datos personalizados y funciones sobre esos tipos asi como herencia que son motivos por los cuales se autodenomina una base de datos &lt;em&gt;object-relational&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Veamos algunos ejemplos de estas características del lenguaje SQL y que PostgreSQL soporta siendo una de las bases de datos relacionales más &lt;em&gt;ANSI-SQL compliant&lt;/em&gt;. Para los casos demostrativos de las sentencias SQL usaré una base de datos de ejemplo con unas pocas tablas y datos sobre ciudades, países, población y lenguajes obtenida de &lt;a href=&#34;http://pgfoundry.org/projects/dbsamples/&#34;&gt;PgFoundry Sample Databases&lt;/a&gt;, hay varias en concreto usaré la base de datos &lt;em&gt;world&lt;/em&gt;. En la página de &lt;a href=&#34;https://wiki.postgresql.org/wiki/Sample_Databases&#34;&gt;bases de datos ejemplo para PostgreSQL&lt;/a&gt; hay otras.&lt;/p&gt;

&lt;p&gt;Para una fácil instalación de una instancia de la base de datos PostgreSQL usaré &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; con la que una vez terminados los ejemplos se puede eliminar sin dejar ningún rastro. Si aún no has usado Docker puedes leer la &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/docker/&#34;&gt;serie de artículos sobre Docker&lt;/a&gt; que he escrito.&lt;/p&gt;

&lt;h3 id=&#34;instalación-postgresql-con-docker&#34;&gt;Instalación PostgreSQL con Docker&lt;/h3&gt;

&lt;p&gt;Una vez instalado Docker e iniciado su servicio y con el comando &lt;code&gt;docker-compose&lt;/code&gt; y el archivo &lt;em&gt;docker-compose.yml&lt;/em&gt; que contiene la definición del contenedor lo iniciamos con el comando &lt;code&gt;docker-compose up&lt;/code&gt;. El comando &lt;code&gt;docker ps&lt;/code&gt; lista los contenedores en ejecución y con el comando &lt;code&gt;docker exec&lt;/code&gt; iniciamos un proceso bash en el contenedor indicado con su identificativo.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/1429fa08e7a3c7c6b52beb92a4069112.js?file=docker-compose.yml&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/1429fa08e7a3c7c6b52beb92a4069112.js?file=docker-compose.sh&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;comandos-básicos-del-shell-psql&#34;&gt;Comandos básicos del &lt;em&gt;shell&lt;/em&gt; psql&lt;/h3&gt;

&lt;p&gt;El &lt;em&gt;shell&lt;/em&gt; de psql usa varios comandos precedidos por una contrabarra para interpretar algunos comandos muy útiles como listar las bases de datos, cambiar de base de datos de trabajo, listar las tablas de una base de datos, mostrar la definición de una tabla para saber sus campos y tipos o salir del &lt;em&gt;shell&lt;/em&gt;. Los siguientes son solo unos pocos de los disponibles.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;\l&lt;/em&gt;: lista las bases de datos de la instancia de PostgreSQL.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;\connect [database]&lt;/em&gt;: cambia de base de datos actual de trabajo.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;\dt&lt;/em&gt;: lista las tablas de la base de datos actual de trabajo.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;\d+ [table]&lt;/em&gt;: muestra la definición de una tabla de la base de datos actual de trabajo.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;em&gt;\q&lt;/em&gt;: sale del intérprete de comandos del &lt;em&gt;shell&lt;/em&gt; de PostgreSQL.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/app-psql.html&#34;&gt;psql &lt;em&gt;shell&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;importación-base-de-datos-de-ejemplo&#34;&gt;Importación base de datos de ejemplo&lt;/h3&gt;

&lt;p&gt;Antes de lanzar sentencias SQL hay que crear una base de datos con varias tablas y datos, en este caso usando una base de datos de ejemplo que se descarga con el comando &lt;code&gt;wget&lt;/code&gt;, se descomprime, se crea un nuevo esquema y se importan las tablas y datos, finalmente se listas las definiciones de las tablas.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/1429fa08e7a3c7c6b52beb92a4069112.js?file=database-world.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Para probar que la base de datos se ha importado correctamente la siguiente sentencia SQL lista el número de ciudades por país ordenados alfabéticamente o por número de ciudades descendentemente.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/1429fa08e7a3c7c6b52beb92a4069112.js?file=sample-world.sql&#34;&gt;&lt;/script&gt;

&lt;p&gt;Para algunas sentencias usaré una base de datos un poco más sencilla que con una tabla para almacenar empresas.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/1429fa08e7a3c7c6b52beb92a4069112.js?file=database-companies.sh&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;inserción-múltiple&#34;&gt;Inserción múltiple&lt;/h3&gt;

&lt;p&gt;Si insertamos muchos datos en una misma tabla podemos insertarlos en una única sentencia en vez de múltiples para un mejor rendimiento, evitando enviar al servidor mútiples sentencias individuales.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/1429fa08e7a3c7c6b52beb92a4069112.js?file=insert-multiple.sql&#34;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/dml-insert.html&#34;&gt;Inserting Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;upsert&#34;&gt;UPSERT&lt;/h3&gt;

&lt;p&gt;En algún caso quizá tengamos la necesidad de hacer un &lt;em&gt;insert&lt;/em&gt; y si el registro ya existe hacer un &lt;em&gt;update&lt;/em&gt;. Usando la expresión &lt;em&gt;ON CONFLICT UPDATE&lt;/em&gt; conocida como &lt;em&gt;UPSERT&lt;/em&gt; podemos hacer esta operación que nos evitará hacerlo de forma programática en la aplicación.&lt;/p&gt;

&lt;p&gt;En el ejemplo, se hace una &lt;em&gt;insert&lt;/em&gt; de la empresa &lt;em&gt;Canonical&lt;/em&gt;, en el segundo caso como esta empresa ya está creada y hay una restricción en el nombre para que sea único se realiza un &lt;em&gt;update&lt;/em&gt; y se actualiza su número de empleados pero no se inserta un nuevo registro duplicado.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/1429fa08e7a3c7c6b52beb92a4069112.js?file=upsert.sql&#34;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.postgresql.org/wiki/UPSERT&#34;&gt;UPSERT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;common-table-expressions&#34;&gt;&lt;em&gt;Common table expressions&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Las cláusula &lt;em&gt;WITH&lt;/em&gt; que define las &lt;em&gt;common table expressions&lt;/em&gt; o &lt;em&gt;CTE&lt;/em&gt; proporcionan una forma de escribir sentencias auxiliares para su uso en una sentencia más grande. Cada sentencia auxiliar de una cláusula  &lt;em&gt;WITH&lt;/em&gt; puede ser un &lt;em&gt;SELECT&lt;/em&gt;, &lt;em&gt;INSERT&lt;/em&gt;, &lt;em&gt;UPDATE&lt;/em&gt; o &lt;em&gt;DELETE&lt;/em&gt; y la sentencia primaria asociada a la cláusula &lt;em&gt;WITH&lt;/em&gt; también puede ser un &lt;em&gt;SELECT&lt;/em&gt;, &lt;em&gt;INSERT&lt;/em&gt;, &lt;em&gt;UPDATE&lt;/em&gt; o &lt;em&gt;DELETE&lt;/em&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/queries-with.html&#34;&gt;WITH Queries (Common Table Expressions)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;window-functions&#34;&gt;Window functions&lt;/h3&gt;

&lt;p&gt;Las &lt;em&gt;window functions&lt;/em&gt; realizan cálculos sobre un conjunto de datos que están relacionados de alguna forma con la fila actual. Al contrario que las funciones de agregación el cálculo de las &lt;em&gt;window functions&lt;/em&gt; no causan que las filas se agrupen en una única fila manteniéndose como filas separadas.&lt;/p&gt;

&lt;p&gt;Usando la base de datos &lt;em&gt;world&lt;/em&gt; que contienen ciudades y países con sus poblaciones con la siguiente consulta SQL se obtienen las tres ciudades más pobladas de Alemania, España, Francia e Italia con su porcentaje respecto al total del país. En este caso Berlín es la ciudad más poblada de Alemania con aproximadamente el 12% de la población de ese país. En este caso además de usar &lt;em&gt;windows functions&lt;/em&gt; se usa una &lt;em&gt;Common Table Expressions&lt;/em&gt; con la cláusula &lt;em&gt;WITH&lt;/em&gt;.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/1429fa08e7a3c7c6b52beb92a4069112.js?file=window-functions.sql&#34;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/tutorial-window.html&#34;&gt;Window Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/sql-expressions.html#SYNTAX-WINDOW-FUNCTIONS&#34;&gt;Window Function Calls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/functions-window.html&#34;&gt;Window Functions Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/queries-table-expressions.html#QUERIES-WINDOW&#34;&gt;Window Function Processing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;consultas-recursivas&#34;&gt;Consultas recursivas&lt;/h3&gt;

&lt;p&gt;El modificador &lt;em&gt;RECURSIVE&lt;/em&gt; cambia la sentencia &lt;em&gt;WITH&lt;/em&gt; de una conveniencia sintáctica en una funcionalidad que proporciona algo que no sería posible con el SQL que soporta algunas otras bases de datos. Usando &lt;em&gt;RECURSIVE&lt;/em&gt;, una cláusula &lt;em&gt;WITH&lt;/em&gt; puede referenciar su propia salida. Con esta cláusula las relaciones jerárquicas pueden implementarse sin usar &lt;a href=&#34;https://stackoverflow.com/questions/4048151/what-are-the-options-for-storing-hierarchical-data-in-a-relational-database&#34;&gt;otras soluciones más complejas&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/queries-with.html&#34;&gt;WITH Queries (Common Table Expressions)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;tipo-array-enumerado&#34;&gt;Tipo array, enumerado&lt;/h3&gt;

&lt;p&gt;Con la ayuda de los arrays podemos definir una columna con un conjunto de valores que en casos simples nos evitarán crear una tabla con una relación 1 a N. Además, con las funciones asociadas a los arrays podemos definir una columna con un conjunto de valores cuyos valores no se repitan o si la lista es un conjunto limitados de valores con un enumerado.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/arrays.html&#34;&gt;Arrays&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/functions-array.html&#34;&gt;Array Functions and Operators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/datatype.html&#34;&gt;Data Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/datatype-enum.html&#34;&gt;Enumerated Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/rangetypes.html&#34;&gt;Range Types&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;tipo-personalizado&#34;&gt;Tipo personalizado&lt;/h3&gt;

&lt;p&gt;En PostgresSQL se pueden definir nuevos tipos de datos así como nuevas funciones sobre estos tipos de datos. Una vez definidos las columnas de las tablas pueden hacer uso de ellos. Pueden ser:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Compuestos: están formados por una lista de nombres de atributos y tipos.&lt;/li&gt;
&lt;li&gt;Enumerados: son una lista de una o más etiquetas.&lt;/li&gt;
&lt;li&gt;Rangos&lt;/li&gt;
&lt;li&gt;Base&lt;/li&gt;
&lt;li&gt;Arrays: las columnas de una tabla se pueden definir como un array multidimensional de longitud variable. Se pueden crear arrays de cualquier de los tipos incorporados por defecto y de los tipos base, enumerados y compuestos.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Creando tipos de datos personalizados se evita crear en las tablas varios campos  de tipos básicos individuales pero relacionados y estos tipos se pueden reutilizar en la definición de varias tablas.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/1429fa08e7a3c7c6b52beb92a4069112.js?file=custom-types.sql&#34;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/datatype-money.html&#34;&gt;Monetary Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/sql-createtype.html&#34;&gt;CREATE TYPE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/sql-createfunction.html&#34;&gt;CREATE FUNCTION&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/xfunc-sql.html&#34;&gt;Query Language (SQL) Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/arrays.html&#34;&gt;Arrays&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;índices&#34;&gt;Índices&lt;/h3&gt;

&lt;p&gt;Los índices cuando son utilizados son una forma que mejora enormemente el rendimiento de una consulta. Permiten buscar y obtener filas específicas mucho más rápido que sin un usar un índice.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/indexes.html&#34;&gt;Indexes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;índice-parcial&#34;&gt;Índice parcial&lt;/h3&gt;

&lt;p&gt;Un índice parcial es un índice construido sobre un subconjunto de una tabla, el subconjunto es definido por una expresión condicional. El índice contiene entradas solo para las filas de la tabla que satisfacen el predicado.&lt;/p&gt;

&lt;p&gt;La motivación de los índices parciales es evitar indexar valores comunes. Dado que una búsqueda para un valor común no usará el índice de todas maneras no hay necesidad de mantener esas filas en el índice. Esto reduce el tamaño del índice que hará más rápidas aquellas consultas que lo usen así como las actualizaciones de la tabla ya que no será necesario actualizarlo en todos los casos.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/indexes-partial.html&#34;&gt;Partial Indexes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;índices-multicolumna&#34;&gt;Índices multicolumna&lt;/h3&gt;

&lt;p&gt;Un índice puede ser definido sobre más de una columna de una tabla. Son apropiados cuando hay consultas con predicados por las dos columnas del índice.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/indexes-multicolumn.html&#34;&gt;Multicolumn Indexes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;restricciones-constraints&#34;&gt;Restricciones, &lt;em&gt;Constraints&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Los tipos de datos son una forma de limitar los tipos de datos que pueden ser almacenados en una tabla. Para muchas aplicaciones las restricciones que proporcionan son demasiado simples. Por ejemplo, una columna que contenga el precio de un producto debería aceptar solo valores positivos. Pero no hay un tipo de datos que acepte solo números positivos. Otro problema es que quizá deseemos restringir el dato de una columna respecto a otras columnas o filas. Por ejemplo, en una tabla que contenga información de un producto el número del producto debería ser único.&lt;/p&gt;

&lt;p&gt;SQL permite definir restricciones en columnas y tablas proporcionando el control sobre los datos que deseamos. Si se intentan almacenar datos en una columna que viola una restricción se lanza un error.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/1429fa08e7a3c7c6b52beb92a4069112.js?file=constraints.sql&#34;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/ddl-constraints.html&#34;&gt;Constraints&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;tipos-de-tablas&#34;&gt;Tipos de tablas&lt;/h3&gt;

&lt;p&gt;Si se especifica en la creación de la tabla &lt;em&gt;TEMPORARY&lt;/em&gt; o &lt;em&gt;TEMP&lt;/em&gt; esta es creada con una tabla temporal que es eliminada al final de la sesión u opcionalmente al finalizar la transacción actual. Si se especifica &lt;em&gt;UNLOGGED&lt;/em&gt; es creada como no trazable haciendo que los datos escritos en la tabla no sean escritos en el &lt;em&gt;write-ahead log&lt;/em&gt; que lo hace considerablemente más rápido que las tablas ordinarias. Sin embargo, no son seguras ante fallos.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/sql-createtable.html&#34;&gt;CREATE TABLE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;pl-pgsql&#34;&gt;PL/pgSQL&lt;/h3&gt;

&lt;p&gt;PostgreSQL al igual que otras bases de datos ofrece un lenguaje procedural que puede ser usado para crear procedimientos de funciones o &lt;em&gt;triggers&lt;/em&gt;, añadir estructuras de control al lenguaje SQL, realizar cálculos complejos, hereda todos los tipos de usuario, funciones y operadores, puede ser definido como de confianza por el servidor y es fácil de usar. El lenguaje sql es fácil de aprender y es común a las bases de datos relacionales pero cada sentencia SQL debe ser ejecutada individualmente por el servidor. Esto significa que la aplicación cliente debe enviar cada sentencia al servidor, esperar a que sea procesada, recibir y procesar los resultados, realizar algún cálculo y entonces enviar más sentencias al servidor. Todo esto incurre en comunicación entre procesos y de red si el cliente está en una máquina diferente del servidor de base de datos.&lt;/p&gt;

&lt;p&gt;Con PL/pgSQL se puede crear un bloque de computación y una serie de sentencias SQL dentro del servidor de base de datos, tiendo el poder de un lenguaje procedural y la facilidad de SQL pero con un considerable ahorro de comunicación entre cliente y servidor. Las ventajas son evitar viajes entre el servidor y el cliente, resultados inmediatos que no son necesarios convertir y transferir entre el cliente y servidor y múltiples pasos de procesado de las sentencias son evitados. Todo esto resulta en algunos casos un incremento de rendimiento considerable comparado con una aplicación que no usa procedimientos almacenados.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/plpgsql.html&#34;&gt;PL/pgSQL - SQL Procedural Language&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;otras&#34;&gt;Otras&lt;/h3&gt;

&lt;p&gt;Otros elementos que soporta la base de datos PostgreSQL en el lenguaje SQL son &lt;em&gt;Grouping Sets&lt;/em&gt;, &lt;em&gt;ROLLUP&lt;/em&gt;, &lt;em&gt;CUBE&lt;/em&gt;, &lt;a href=&#34;https://www.postgresql.org/docs/current/static/functions-srf.html&#34;&gt;Set Returning Functions&lt;/a&gt;, &lt;a href=&#34;https://www.postgresql.org/docs/current/static/tablefunc.html&#34;&gt;tablefunc&lt;/a&gt;, &lt;a href=&#34;https://www.postgresql.org/docs/current/static/textsearch.html&#34;&gt;búsquedas a texto completo&lt;/a&gt; que para casos sencillos no hace falta recurrir a soluciones más especializadas como &lt;a href=&#34;https://www.elastic.co/products/elasticsearch/&#34;&gt;Elasticsearch&lt;/a&gt;, selección y bloqueo de filas con la &lt;a href=&#34;https://www.postgresql.org/docs/current/static/sql-select.html#SQL-FOR-UPDATE-SHARE&#34;&gt;clásula &lt;em&gt;FOR UPDATE&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://www.postgresql.org/docs/current/static/sql-createview.html&#34;&gt;vistas&lt;/a&gt; y &lt;a href=&#34;https://www.postgresql.org/docs/current/static/sql-creatematerializedview.html&#34;&gt;vistas materializadas&lt;/a&gt; entre seguro otras muchas cosas de las que me olvido o desconozco.&lt;/p&gt;

&lt;p&gt;Por todas estas características se considera a PostgreSQL una de las bases de datos relacionales más avanzadas existentes. Hay mucha literatura sobre las bases de datos relacionales desde el lenguage SQL en general, libros específicos sobre PostgreSQL o como evitar errores diseño al estructurar la información en tablas y columnas.&lt;/p&gt;

&lt;div class=&#34;media-amazon&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=988840668X&amp;linkId=9ba19b63e64c7454bc8051f394643d06&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1783989181&amp;linkId=debb8456d091330663a1c10f654fd5b8&#34;&gt;&lt;/iframe&gt;
    &lt;iframe style=&#34;width:120px;height:240px;&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; src=&#34;//rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1934356557&amp;linkId=2f3d39f7290758074e90a66beda9e253&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;En caso de optar por una base de datos NoSQL para persistir la información &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-nosql-mongodb/&#34;&gt;la base de datos NoSQL MongoDB&lt;/a&gt; permite guardar los datos en forma de documentos y conseguir la escalabilidad que las bases de datos relacionales con sus propiedades ACID es difícil.&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/static/index.html&#34;&gt;Documentación PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-nosql-mongodb/&#34;&gt;Introducción a la base de datos NoSQL MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/06/usar-la-base-de-datos-nosql-mongodb-con-java/&#34;&gt;Usar la base de datos NoSQL MongoDB con Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/06/introduccion-a-la-base-de-datos-nosql-redis/&#34;&gt;Introducción a la base de datos NoSQL Redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/docker/&#34;&gt;Serie de artículos sobre Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/05/luces-navidenas-con-la-raspberry-pi-y-java/</id>
        <title>Luces navideñas con la Raspberry Pi y Java</title>        
        <updated>2017-05-14T11:00:00+02:00</updated>
        <published>2017-05-14T11:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/05/luces-navidenas-con-la-raspberry-pi-y-java/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;Con diferentes sensores y dispositivos de salida de electrónica se pueden realizar proyectos muy interesantes. En el siguiente usaré múltiples diodos LED que se encenderán y apagarán de forma aleatoria cada cierto tiempo. El resultado será muy vistoso y lo utilizaré cuando lleguen las fechas como luces navideñas.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/raspberrypi.svg&#34; class=&#34;right&#34; width=&#34;200&#34; alt=&#34;Raspberry Pi&#34; title=&#34;Raspberry Pi&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right&#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Como muestra de lo que se puede hacer con la Raspberry Pi usando los pines GPIO haré un ejemplo que consistirá en múltiples diodos LED de diferentes colores enciendan y apaguen simulando una especie de luces navideñas. Como yo tengo la Raspbperry Pi 1 B con 26 pines de los cuales solo 17 son GPIO podré usar hasta 17 diodos LED, aunque solo usaré 15. En el &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/02/desempaquetado-del-kit-de-iniciacion-a-la-electronica-para-la-raspberry-pi/&#34;&gt;kit de iniciación a la electrónica para la Raspberry Pi&lt;/a&gt; viene incluidos 24 diodos LED de diferentes colores 6 blancos, 6 rojos, 6 amarillos y 6 verdes, también es necesario una resistencia por cada diodo de unos 200 ohmios de los cuales en el &lt;em&gt;kit&lt;/em&gt; se incluyen 20 de este valor.&lt;/p&gt;

&lt;p&gt;Aunque con muchos más LED el ejemplo no es más complicado que el ejemplo que ya mostré de &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-encender-y-apagar-diodo-led-con-la-raspberry-pi-en-java/&#34;&gt;encender y apagar un diodo LED&lt;/a&gt;. Usaré diodos de diferentes colores y dispuestos de forma aleatoria para darle un aspecto desordenado, para darle un aspecto más caótico los LEDs se encenderán y apagarán de forma aleatoria. Usaré el lenguaje de programación Java y la librería de alto nivel &lt;a href=&#34;http://rtd.diozero.com/en/latest/&#34;&gt;diozero&lt;/a&gt; para controlar el encendido y apagado de los diodos.&lt;/p&gt;

&lt;p&gt;Esta es la foto del cableado usando múltiples cables macho-macho para conectar los pines con el polo positivo de los diodos pasando por la resistencia y también múltiples cables para conectar el polo negativo del diodo con tierra. Usando una placa &lt;em&gt;breadboard&lt;/em&gt; para realizar las conexiones sin soldadura y una placa de extensión wiringPi para conectar la Raspberry Pi con la placa &lt;em&gt;breadboard&lt;/em&gt; con un cable de 26 pines en mi caso por el modelo que tengo de RPi este es el aspecto de cableado.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/233/arbol-navidad-01.jpg&#34; title=&#34;Cableado de las luces LED del árbol de navidad&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/233/arbol-navidad-01-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/233/arbol-navidad-02.jpg&#34; title=&#34;Cableado de las luces LED del árbol de navidad&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/233/arbol-navidad-02-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/233/arbol-navidad-03.jpg&#34; title=&#34;Cableado de las luces LED del árbol de navidad&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/233/arbol-navidad-03-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/233/arbol-navidad-04.jpg&#34; title=&#34;Cableado de las luces LED del árbol de navidad&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/233/arbol-navidad-04-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/233/arbol-navidad-05.jpg&#34; title=&#34;Cableado de las luces LED del árbol de navidad&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/233/arbol-navidad-05-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Cableado de las luces LED del árbol de navidad&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Cada cierto tiempo los diodos cambian de estado, algunos se encenderán, otros se apagarán y otros seguirán en el estado que estaban. Para ello generaré un booleano aleatorio para cada uno de los diodos que determinará si debe estar encendido o apagado. Este es el programa Java junto con la parte relevante del archivo &lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle&lt;/a&gt; para compilar y construir el ejemplo y el comando que uso para ejecutarlo.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/86d81809da0ad791e41a8f821a58ea62.js?file=ChristmasTree.java%20&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/86d81809da0ad791e41a8f821a58ea62.js?file=build.gradle&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;//gist.github.com/picodotdev/86d81809da0ad791e41a8f821a58ea62.js?file=execute.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Esta aplicación para la Raspberry Pi queda bastante vistosa y no es muy complicado de realizar a pesar del del lío de cables que resulta. Este es un vídeo de su funcionamiento.&lt;/p&gt;

&lt;div class=&#34;media media-video&#34; style=&#34;text-align: center;&#34;&gt;
  &lt;iframe width=&#34;640&#34; height=&#34;360&#34; src=&#34;https://www.youtube.com/embed/F2BChbcyr5g&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/JavaRasberriPi&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew executeChristmasTree&lt;/code&gt;.
&lt;/p&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/05/controlar-un-servomotor-con-la-raspberry-pi-y-java/</id>
        <title>Controlar un servomotor con la Raspberry Pi y Java</title>        
        <updated>2017-05-13T11:40:00+02:00</updated>
        <published>2017-05-07T11:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/05/controlar-un-servomotor-con-la-raspberry-pi-y-java/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/raspberrypi.svg&#34; class=&#34;right&#34; width=&#34;200&#34; alt=&#34;Raspberry Pi&#34; title=&#34;Raspberry Pi&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right&#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Otro de los elementos que incluye el &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/02/desempaquetado-del-kit-de-iniciacion-a-la-electronica-para-la-raspberry-pi/&#34;&gt;kit de iniciación a la Raspberry Pi&lt;/a&gt; es un &lt;a href=&#34;https://es.wikipedia.org/wiki/Servomotor&#34;&gt;servomotor&lt;/a&gt;, en concreto uno del modelo SG90. En la &lt;a href=&#34;http://akizukidenshi.com/download/ds/towerpro/SG90_a.pdf&#34;&gt;especificación del servomotor SG90&lt;/a&gt; está detallado cual es el código de colores de los cables. Rojo para la corriente de 5V, marrón para tierra y naranja para el &lt;em&gt;pin&lt;/em&gt; &lt;abbr title=&#34;Pulse Width Modulated&#34;&gt;PWM&lt;/abbr&gt; con el que se controlará el servo motor, el diodo led es simplemente para saber que cuando se enciende el programa Java se ha iniciado. La Raspberry Pi tiene algunos pines con soporte hardware para realizar PWM.&lt;/p&gt;

&lt;p&gt;Un servomotor es un elemento distinto de un motor, un motor usa dos cables uno para mover el motor hacia adelante y otro cable para mover el motor hacia atrás. Los servomotores además de utilizar un único cable para controlarlo su funcionalidad es distinta usándose para posicionar el motor en un determinado ángulo que en el caso del SG90 tiene un ángulo de funcionamiento de 180º. Además el servomotor es más complejo, como se explica en el siguiente artículo de título &lt;a href=&#34;http://handyboard.com/hb/faq/hardware-faqs/dc-vs-servo/&#34;&gt;¿Cual es la diferencia entre un motor DC y servo motor?&lt;/a&gt; el servomotor se compone de varios elementos empaquetados como una pieza. Se compone de un motor DC normal, una unidad de reducción, un sensor de posicionamiento y un circuito de control.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/230/servomotor.jpg&#34; title=&#34;Servomotor&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/230/servomotor-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/230/cableado.jpg&#34; title=&#34;Cableado en la breadboard&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/230/cableado-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Servomotor y cableado&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;La función del servomotor es recibir la señal de control y aplicar corriente al motor hasta que que esté en la posición indicada por la señal. Un servomotor no rota libremente sino que como he comentado en el caso del SG90 tiene un ángulo de funcionamiento de entre 0º y 180º. La señal de control es un pulso de anchura modulada o PWM.&lt;/p&gt;

&lt;p&gt;Usando la librería &lt;a href=&#34;http://rtd.diozero.com/en/latest/&#34;&gt;Diozero&lt;/a&gt; es sencillo controlar un servomotor a través de la clase &lt;a href=&#34;http://static.javadoc.io/com.diozero/diozero-core/0.9/com/diozero/sandpit/Servo.html&#34;&gt;Servo&lt;/a&gt;. El constructor recibe tres datos el &lt;em&gt;pin&lt;/em&gt; de la Raspberry Pi que controlará el servomotor, según la nomenclatura Broadcom que usa la librería Diozero, la frecuencia del pulso PWD que sirve para controlar la velocidad de rotación y finalmente la posición inicial a establecer. Con el método &lt;a href=&#34;http://static.javadoc.io/com.diozero/diozero-core/0.9/com/diozero/sandpit/Servo.html#getPulseWidthMs--&#34;&gt;pulseWidthMs&lt;/a&gt; y un rango de un valor &lt;em&gt;float&lt;/em&gt; entre 0.6 y 2.4 controlaremos la posición o ángulo del servomotor.&lt;/p&gt;

&lt;p&gt;El siguiente programa Java cambia en un bucle la posición del servo desde la posición mínima a la máxima. En él he utilizado el &lt;em&gt;pin&lt;/em&gt; 18 que en la Raspberry Pi 1 soporta PWD, en las versiones 2 y 3 podríamos haber usado los &lt;em&gt;pines&lt;/em&gt; 18 o 19.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/92cd41d20e45e50a7657e219789c0e81.js?file=Servomotor.java&#34;&gt;&lt;/script&gt;

&lt;div class=&#34;media media-video&#34; style=&#34;text-align: center;&#34;&gt;
  &lt;iframe width=&#34;640&#34; height=&#34;360&#34; src=&#34;https://www.youtube.com/embed/g8RsvZ26Cqg&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Aunque he conseguido hacer funcionar el servomotor con este programa no ha sido exento de problemas. Y es que cuando el programa finaliza la Raspberry Pi se me bloquea o se pierde la conectividad de red. No se si por algún &lt;em&gt;bug&lt;/em&gt; en la librería Diozero o alguna incompatibilidad con la Raspberry Pi 1 B, quizá en otro modelo de la Raspberry Pi no dé los problemas que a mi me da.&lt;/p&gt;

&lt;p&gt;En otros artículos de la serie puedes consultar cómo usar otros &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/02/desempaquetado-del-kit-de-iniciacion-a-la-electronica-para-la-raspberry-pi/&#34;&gt;elementos de kit con Java y la Raspberry Pi&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/JavaRaspberryPi&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew executeServomotor&lt;/code&gt;.
&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://akizukidenshi.com/download/ds/towerpro/SG90_a.pdf&#34;&gt;Especificación SG90 servomotor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://es.wikipedia.org/wiki/Servomotor&#34;&gt;Servomotor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/04/ejemplo-sensor-de-golpes-y-detector-de-movimiento-en-la-raspberry-pi-con-java/</id>
        <title>Ejemplo sensor de golpes y detector de movimiento en la Raspberry Pi con Java</title>        
        <updated>2017-04-13T11:00:00+02:00</updated>
        <published>2017-04-13T11:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/04/ejemplo-sensor-de-golpes-y-detector-de-movimiento-en-la-raspberry-pi-con-java/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/raspberrypi.svg&#34; class=&#34;right&#34; width=&#34;200&#34; alt=&#34;Raspberry Pi&#34; title=&#34;Raspberry Pi&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right&#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Otro par de sensores que incluye el &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/02/desempaquetado-del-kit-de-iniciacion-a-la-electronica-para-la-raspberry-pi/&#34;&gt;kit de introducción a la electrónica para la Raspberry Pi&lt;/a&gt; son un sensor de golpes o &lt;em&gt;tilt&lt;/em&gt; y un detector de movimiento. El funcionamiento de ambos es muy similar, utilizando un &lt;em&gt;pin&lt;/em&gt; &lt;abbr title=&#34;General Purpose Input Output&#34;&gt;GPIO&lt;/abbr&gt; como entrada se recibe si el sensor de golpes está activo o si el detector de movimiento ha detectado movimiento. El sensor de golpes es una bolita de mercurio encerrada en una ampolla de cristal. Como el mercurio a temperatura ambiente su estado es líquido puede moverse y como es un metal puede conducir la electricidad cuando está en una determinada posición entre dos filamentos.&lt;/p&gt;

&lt;p&gt;El sensor de golpes necesita de tres cables uno para la corriente de 3.3V, otro para tierra y finalmente otro que se conecta como entrada a un &lt;em&gt;pin&lt;/em&gt; GPIO. Usando varios cables hembra-hembra y macho-macho hacemos las conexiones entre el sensor y la placa de pruebas sin soldadura o &lt;em&gt;breadboard&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/224/sensores-1.jpg&#34; title=&#34;Sensor de golpes y detector de movimiento&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/224/sensores-1-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/224/sensores-2.jpg&#34; title=&#34;Sensor de golpes y detector de movimiento&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/224/sensores-2-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Sensor de golpes y detector de movimiento&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Usando la librería &lt;a href=&#34;http://rtd.diozero.com/en/latest/&#34;&gt;diozero&lt;/a&gt; para controlar los &lt;em&gt;pines&lt;/em&gt; GPIO desde un programa implementado con Java detectamos si el sensor está activo o no según la posición de la bolita de mercurio. El ejemplo consiste en &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-encender-y-apagar-diodo-led-con-la-raspberry-pi-en-java/&#34;&gt;encender un diodo LED&lt;/a&gt; que ya mostré en un artículo anterior de esta &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/series/electronica/&#34;&gt;serie sobre electrónica&lt;/a&gt; cuando el sensor &lt;em&gt;tilt&lt;/em&gt; esté activo. Usaré el &lt;em&gt;pin&lt;/em&gt; 18 para el diodo LED y el &lt;em&gt;pin&lt;/em&gt; 21 para el sensor según la nomenclatura de Broadcom. Los &lt;em&gt;pines&lt;/em&gt; serían el 12 según la nomenclatura del &lt;em&gt;header&lt;/em&gt; y 1 según la nomenclatura de wiringPi para el diodo LED y 13 y 2 para el sensor &lt;em&gt;tilt&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/224/cableado-tilt.jpg&#34; title=&#34;Cableado sensor de golpes&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/224/cableado-tilt-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Cableado sensor de golpes&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/ec8532262fcc92e4862a2cd4c294b073.js?file=Tilt.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;En el siguiente vídeo se aprecia como cuando al cambiar de posición del sensor de movimiento se mueve la bolita de mercurio y el diodo LED de ejemplo se enciende y apaga.&lt;/p&gt;

&lt;div class=&#34;media media-video&#34; style=&#34;text-align: center;&#34;&gt;
  &lt;iframe width=&#34;640&#34; height=&#34;360&#34; src=&#34;https://www.youtube.com/embed/7Rkou-pJWFY&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;El detector de movimiento en teoría es similar en funcionamiento al &lt;em&gt;tilt&lt;/em&gt; y la librería diozero proporciona la clase &lt;a href=&#34;http://static.javadoc.io/com.diozero/diozero-core/0.9/com/diozero/sandpit/MotionSensor.html&#34;&gt;MotionSensor&lt;/a&gt; para hacer más sencillo su uso. Digo en teoría porque no he conseguido hacerlo funcionar y he revisado varias veces las conexiones mostradas en otros ejemplos incluido el &lt;a href=&#34;http://osoyoo.com/2016/07/14/motionsensor-pi/&#34;&gt;ejemplo de osoyoo&lt;/a&gt;, no se si es porque me falta algo más que debo tener en cuenta y que no conozco o el sensor no funciona viniendome estropeado. Cuando el sensor detecta movimiento cambia el voltaje de su &lt;em&gt;pin&lt;/em&gt; GPIO de datos. Los otros dos &lt;em&gt;pines&lt;/em&gt; que utiliza son uno para el voltaje de 5V y el de tierra.&lt;/p&gt;

&lt;p&gt;El programa Java para el sensor de movimiento es similar al sensor &lt;em&gt;tilt&lt;/em&gt; e igualmente encendería o apagaría un diodo LED cuando detecta movimiento.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/224/cableado-motion.jpg&#34; title=&#34;Cableado sensor de movimiento&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/224/cableado-motion-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  
  &lt;figcaption&gt;Cableado sensor de movimiento&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/ec8532262fcc92e4862a2cd4c294b073.js?file=Motion.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;Ambos ejemplos pueden usarse con los siguientes comandos cambiando la dirección IP de la Raspberry Pi y el directorio de la misma a donde se suben los ejemplos.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/ec8532262fcc92e4862a2cd4c294b073.js?file=execute.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;El siguiente artículo de la sería será sobre cómo usar un &lt;em&gt;servo motor&lt;/em&gt; que es diferente de un motor que gira constantemente.&lt;/p&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/JavaRaspberryPi&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;.
&lt;/p&gt;

&lt;div class=&#34;reference&#34;&gt;
    Referencia:&lt;br&gt;
    &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://pimylifeup.com/raspberry-pi-motion-sensor/&#34;&gt;Raspberry Pi Motion Sensor using a PIR Sensor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.meccanismocomplesso.org/en/pir-motion-detector/&#34;&gt;PIR motion detector – a sensor for Arduino and Raspberry Pi (1st part)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/04/como-usar-un-diodo-led-un-pulsador-y-un-zumbador-con-la-raspberry-pi-y-java/</id>
        <title>Cómo usar un diodo LED, un pulsador y un zumbador con la Raspberry Pi y Java</title>        
        <updated>2017-04-09T12:00:00+02:00</updated>
        <published>2017-04-09T12:00:00+02:00</published>
        <link rel="alternate" href="https://picodotdev.github.io/blog-bitix/2017/04/como-usar-un-diodo-led-un-pulsador-y-un-zumbador-con-la-raspberry-pi-y-java/"/>
        <author><name>pico.dev</name></author>
        <content type="html">
        
          &lt;p&gt;&lt;strong&gt;El &lt;em&gt;kit&lt;/em&gt; de electrónica para la Raspberry Pi incluye varios dispositivos controlables con lo &lt;em&gt;pines&lt;/em&gt; GPIO. En el caso de este ejemplo usaré un diodo LED, un zumbador y un pulsador para crear un ejemplo en el que el diodo LED se enciendan y el zumbador emita un sonido cuando el pulsador se active.&lt;/strong&gt;&lt;/p&gt;
        
        &lt;div class=&#34;logotypes&#34; style=&#34;float: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/raspberrypi.svg&#34; class=&#34;right&#34; width=&#34;200&#34; alt=&#34;Raspberry Pi&#34; title=&#34;Raspberry Pi&#34;/&gt;
&lt;/div&gt;

&lt;div class=&#34;logotypes&#34; style=&#34;float: right; clear: right;&#34;&gt;
    &lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/logotipos/java.svg&#34; class=&#34;right&#34; width=&#34;200&#34; alt=&#34;Java&#34; title=&#34;Java&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;En artículos anteriores ya he comentado &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-encender-y-apagar-diodo-led-con-la-raspberry-pi-en-java/&#34;&gt;como hacer parpadear un diodo LED&lt;/a&gt;, &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/03/controlar-un-display-lcd-1602-para-mostrar-texto-con-la-raspberry-pi-y-java/&#34;&gt;como usar un display LCD de 16 columnas y 2 filas&lt;/a&gt; y &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/03/obtener-la-temperatura-y-humedad-con-el-sensor-dht11-la-raspberry-pi-c-y-java/&#34;&gt;como obtener la temperatura y humedad de un sensor DHT11&lt;/a&gt;, todo estos ejemplo usando varios elementos de &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2017/02/desempaquetado-del-kit-de-iniciacion-a-la-electronica-para-la-raspberry-pi/&#34;&gt;kit de iniciación a la electrónica para la Raspberry Pi 3&lt;/a&gt;. En este artículo en el que mostraré cómo usar un LED, un pulsador y un zumbador es mucho más sencillo que los casos del &lt;em&gt;display&lt;/em&gt; LCD de 16 filas y 2 columnas y del sensor DHT11. Vistos los ejemplos de artículos anteriores lo más difícil de este es hacer el conexionado con los cables. Para controlar los pines usaré la librería &lt;a href=&#34;http://rtd.diozero.com/en/latest/&#34;&gt;diozero&lt;/a&gt; que proporciona clases de alto nivel para cada uno de estos elementos para que desde código Java sea bastante sencillo controlarlos.&lt;/p&gt;

&lt;p&gt;El ejemplo consistirá en que cuando se presione el pulsador se encienda el diodo LED y el zumbador se active emitiendo un zumbido audible. Cada uno de estos elementos requiere usar un &lt;em&gt;pin&lt;/em&gt; &lt;abbr title=&#34;General Purpose Input Output&#34;&gt;GPIO&lt;/abbr&gt; de los 17 que hay disponibles en la Raspberry Pi 1 que es el modelo que tengo yo o de los 26 &lt;em&gt;pines&lt;/em&gt; que poseen versiones posteriores de la Raspberry Pi como la B+, 2 y 3.&lt;/p&gt;

&lt;p&gt;Este sería el esquema de conexionado de los elementos. El diodo LED tiene una polaridad de modo que la patita larga que es la parte positiva se conectará al &lt;em&gt;pin&lt;/em&gt; GPIO 1 según la nomenclatura de wiringPi o el 18 según la de Broadcom con una resistencia de 200 ohmios entre el &lt;em&gt;pin&lt;/em&gt; GIPO y la patita de diodo para que la intensidad que atraviesa el diodo sea menor y no se desgaste. El zumbador también tiene una polaridad que en el caso del &lt;em&gt;kit&lt;/em&gt; que he usado viene serigrafiado y con una etiqueta, la parte positiva se conectará a otro &lt;em&gt;pin&lt;/em&gt; GPIO y usaré el &lt;em&gt;pin&lt;/em&gt; GPIO 2. Para que el pulsador haga contacto bien en la placa de conexiones para hacer pruebas sin soldadura hay que presionar sin forzar pero hasta que quede bien encadado y sin fijo, usaré el &lt;em&gt;pin&lt;/em&gt; GPIO 3.&lt;/p&gt;

&lt;p&gt;Para el pulsador usaré el método &lt;em&gt;PULL UP&lt;/em&gt; (el otro es &lt;em&gt;PULL DOWN&lt;/em&gt;) donde conectaré una patita del pulsador a tierra y la adyacente al &lt;em&gt;pin&lt;/em&gt; GPIO, en &lt;a href=&#34;https://grantwinney.com/using-pullup-and-pulldown-resistors-on-the-raspberry-pi/&#34;&gt;algunas páginas&lt;/a&gt; se explica haciendo uso de resistencias, sin embargo, el uso de resistencias en la Raspberry Pi no es necesario ya que los &lt;em&gt;pines&lt;/em&gt; ya &lt;a href=&#34;https://projects.drogon.net/raspberry-pi/wiringpi/special-pin-functions/&#34;&gt;las tienen incorporadas internamente&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/221/cableado.jpg&#34; title=&#34;cableado en la breadboard&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/221/cableado-thumb.jpg&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/221/esquema-cableado.png&#34; title=&#34;Esquema del cableado&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/221/esquema-cableado-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Esquema del cableado&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;La librería diozeo para identificar los pines usa la nomenclatura de Broadcom, otras son las nomenclaturas del &lt;em&gt;header&lt;/em&gt; o de wiringPi. Hay que tener en cuenta la nomenclatura que se use ya que el número del &lt;em&gt;pin&lt;/em&gt; variará en cada una de ellas, también hay que tener en cuenta la versión de la Raspberry Pi ya que hay pequeñas variaciones según la versión. Por ejemplo, según la tabla de referencia siguiente, para la Raspberry Pi 1 y según la nomenclatura de Brodacom el &lt;em&gt;pin&lt;/em&gt; GPIO 18 corresponde al número 12 de &lt;em&gt;header&lt;/em&gt;, el GPIO 21 al número 13 y el GPIO 22 al número 15. Según la nomenclatura de wiringPi el GPIO 1 corresponde al número 1, el GPIO 2 al número 2 y el GPIO 3 al número 3.&lt;/p&gt;

&lt;div class=&#34;media&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/221/raspberrypi1b-header-rev1.png&#34; title=&#34;Header de pines Raspberry Pi 1 B&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/221/raspberrypi1b-header-rev1-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/221/raspberrypi3b-header.png&#34; title=&#34;Header de pines Raspberry Pi 3 B&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/221/raspberrypi3b-header-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Header de pines Raspberry Pi 1 B y Raspberry Pi 3 B, nomenclatura wiringPi&lt;/figcaption&gt;
&lt;/figure&gt;

    &lt;figure&gt;
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/221/raspberrypi1b-header-rev1-broadcom.png&#34; title=&#34;Header de pines Raspberry Pi 1 B&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/221/raspberrypi1b-header-rev1-broadcom-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/221/raspberrypi3b-header-broadcom.png&#34; title=&#34;Header de pines Raspberry Pi 3 B&#34; data-gallery&gt;&lt;img src=&#34;https://picodotdev.github.io/blog-bitix/assets/images/posts/2017/221/raspberrypi3b-header-broadcom-thumb.png&#34;/&gt;&lt;/a&gt;
  
  
  &lt;figcaption&gt;Headers de pines Raspberry Pi 1 B y Raspberry Pi 3 B, nomenclatura Broadcom&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Usando la librería diozero el código Java para realizar el ejemplo no necesita excesiva explicación. Es posible hacer uso de las &lt;a href=&#34;https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/&#34;&gt;funciones lambdas que incorporó el lenguaje Java en la versión de Java 8&lt;/a&gt; y con la sentencia &lt;em&gt;try-with-resources&lt;/em&gt; del lenguaje los elementos se finalizará correctamente en caso de producirse alguna excepción, por ejemplo apagando el diodo en caso de que estuviese encendido o apagando el zumbador en su caso.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/picodotdev/0d5bb399bc7a20b903ee54ec41dee8e1.js?file=LedButtonBuzzer.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;Este es un pequeño vídeo en el que muestro su funcionamiento.&lt;/p&gt;

&lt;div class=&#34;media media-video&#34; style=&#34;text-align: center;&#34;&gt;
  &lt;iframe width=&#34;640&#34; height=&#34;360&#34; src=&#34;https://www.youtube.com/embed/jaqMi53pjf0&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;
    El &lt;a href=&#34;https://github.com/picodotdev/blog-ejemplos/tree/master/JavaRaspberryPi&#34;&gt;código fuente completo del ejemplo&lt;/a&gt; puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; y probarlo en tu equipo ejecutando el comando &lt;code&gt;./gradlew executeLedButtonBuzzer&lt;/code&gt;.
&lt;/p&gt;



        </content>
        
            
                <category term="blog-stack"/>
            
                <category term="gnu-linux"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="planeta-linux"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
</feed>